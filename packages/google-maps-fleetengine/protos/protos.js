// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._googlemaps_fleetengine_protos || ($protobuf.roots._googlemaps_fleetengine_protos = {});
    
    $root.maps = (function() {
    
        /**
         * Namespace maps.
         * @exports maps
         * @namespace
         */
        var maps = {};
    
        maps.fleetengine = (function() {
    
            /**
             * Namespace fleetengine.
             * @memberof maps
             * @namespace
             */
            var fleetengine = {};
    
            fleetengine.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof maps.fleetengine
                 * @namespace
                 */
                var v1 = {};
    
                v1.TerminalPointId = (function() {
    
                    /**
                     * Properties of a TerminalPointId.
                     * @memberof maps.fleetengine.v1
                     * @interface ITerminalPointId
                     * @property {string|null} [placeId] TerminalPointId placeId
                     * @property {string|null} [generatedId] TerminalPointId generatedId
                     * @property {string|null} [value] TerminalPointId value
                     */
    
                    /**
                     * Constructs a new TerminalPointId.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a TerminalPointId.
                     * @implements ITerminalPointId
                     * @constructor
                     * @param {maps.fleetengine.v1.ITerminalPointId=} [properties] Properties to set
                     */
                    function TerminalPointId(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TerminalPointId placeId.
                     * @member {string|null|undefined} placeId
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @instance
                     */
                    TerminalPointId.prototype.placeId = null;
    
                    /**
                     * TerminalPointId generatedId.
                     * @member {string|null|undefined} generatedId
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @instance
                     */
                    TerminalPointId.prototype.generatedId = null;
    
                    /**
                     * TerminalPointId value.
                     * @member {string} value
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @instance
                     */
                    TerminalPointId.prototype.value = "";
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * TerminalPointId Id.
                     * @member {"placeId"|"generatedId"|undefined} Id
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @instance
                     */
                    Object.defineProperty(TerminalPointId.prototype, "Id", {
                        get: $util.oneOfGetter($oneOfFields = ["placeId", "generatedId"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new TerminalPointId instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalPointId=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.TerminalPointId} TerminalPointId instance
                     */
                    TerminalPointId.create = function create(properties) {
                        return new TerminalPointId(properties);
                    };
    
                    /**
                     * Encodes the specified TerminalPointId message. Does not implicitly {@link maps.fleetengine.v1.TerminalPointId.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalPointId} message TerminalPointId message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TerminalPointId.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.placeId != null && Object.hasOwnProperty.call(message, "placeId"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.placeId);
                        if (message.generatedId != null && Object.hasOwnProperty.call(message, "generatedId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.generatedId);
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.value);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TerminalPointId message, length delimited. Does not implicitly {@link maps.fleetengine.v1.TerminalPointId.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalPointId} message TerminalPointId message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TerminalPointId.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TerminalPointId message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.TerminalPointId} TerminalPointId
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TerminalPointId.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.TerminalPointId();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.placeId = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.generatedId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.value = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TerminalPointId message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.TerminalPointId} TerminalPointId
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TerminalPointId.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TerminalPointId message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TerminalPointId.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.placeId != null && message.hasOwnProperty("placeId")) {
                            properties.Id = 1;
                            if (!$util.isString(message.placeId))
                                return "placeId: string expected";
                        }
                        if (message.generatedId != null && message.hasOwnProperty("generatedId")) {
                            if (properties.Id === 1)
                                return "Id: multiple values";
                            properties.Id = 1;
                            if (!$util.isString(message.generatedId))
                                return "generatedId: string expected";
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a TerminalPointId message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.TerminalPointId} TerminalPointId
                     */
                    TerminalPointId.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.TerminalPointId)
                            return object;
                        var message = new $root.maps.fleetengine.v1.TerminalPointId();
                        if (object.placeId != null)
                            message.placeId = String(object.placeId);
                        if (object.generatedId != null)
                            message.generatedId = String(object.generatedId);
                        if (object.value != null)
                            message.value = String(object.value);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TerminalPointId message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {maps.fleetengine.v1.TerminalPointId} message TerminalPointId
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TerminalPointId.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.value = "";
                        if (message.placeId != null && message.hasOwnProperty("placeId")) {
                            object.placeId = message.placeId;
                            if (options.oneofs)
                                object.Id = "placeId";
                        }
                        if (message.generatedId != null && message.hasOwnProperty("generatedId")) {
                            object.generatedId = message.generatedId;
                            if (options.oneofs)
                                object.Id = "generatedId";
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        return object;
                    };
    
                    /**
                     * Converts this TerminalPointId to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TerminalPointId.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TerminalPointId
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.TerminalPointId
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TerminalPointId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.TerminalPointId";
                    };
    
                    return TerminalPointId;
                })();
    
                v1.TerminalLocation = (function() {
    
                    /**
                     * Properties of a TerminalLocation.
                     * @memberof maps.fleetengine.v1
                     * @interface ITerminalLocation
                     * @property {google.type.ILatLng|null} [point] TerminalLocation point
                     * @property {maps.fleetengine.v1.ITerminalPointId|null} [terminalPointId] TerminalLocation terminalPointId
                     * @property {string|null} [accessPointId] TerminalLocation accessPointId
                     * @property {string|null} [tripId] TerminalLocation tripId
                     * @property {maps.fleetengine.v1.WaypointType|null} [terminalLocationType] TerminalLocation terminalLocationType
                     */
    
                    /**
                     * Constructs a new TerminalLocation.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a TerminalLocation.
                     * @implements ITerminalLocation
                     * @constructor
                     * @param {maps.fleetengine.v1.ITerminalLocation=} [properties] Properties to set
                     */
                    function TerminalLocation(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TerminalLocation point.
                     * @member {google.type.ILatLng|null|undefined} point
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     */
                    TerminalLocation.prototype.point = null;
    
                    /**
                     * TerminalLocation terminalPointId.
                     * @member {maps.fleetengine.v1.ITerminalPointId|null|undefined} terminalPointId
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     */
                    TerminalLocation.prototype.terminalPointId = null;
    
                    /**
                     * TerminalLocation accessPointId.
                     * @member {string} accessPointId
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     */
                    TerminalLocation.prototype.accessPointId = "";
    
                    /**
                     * TerminalLocation tripId.
                     * @member {string} tripId
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     */
                    TerminalLocation.prototype.tripId = "";
    
                    /**
                     * TerminalLocation terminalLocationType.
                     * @member {maps.fleetengine.v1.WaypointType} terminalLocationType
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     */
                    TerminalLocation.prototype.terminalLocationType = 0;
    
                    /**
                     * Creates a new TerminalLocation instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalLocation=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.TerminalLocation} TerminalLocation instance
                     */
                    TerminalLocation.create = function create(properties) {
                        return new TerminalLocation(properties);
                    };
    
                    /**
                     * Encodes the specified TerminalLocation message. Does not implicitly {@link maps.fleetengine.v1.TerminalLocation.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalLocation} message TerminalLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TerminalLocation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.point != null && Object.hasOwnProperty.call(message, "point"))
                            $root.google.type.LatLng.encode(message.point, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.terminalPointId != null && Object.hasOwnProperty.call(message, "terminalPointId"))
                            $root.maps.fleetengine.v1.TerminalPointId.encode(message.terminalPointId, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.accessPointId != null && Object.hasOwnProperty.call(message, "accessPointId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.accessPointId);
                        if (message.tripId != null && Object.hasOwnProperty.call(message, "tripId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.tripId);
                        if (message.terminalLocationType != null && Object.hasOwnProperty.call(message, "terminalLocationType"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.terminalLocationType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TerminalLocation message, length delimited. Does not implicitly {@link maps.fleetengine.v1.TerminalLocation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {maps.fleetengine.v1.ITerminalLocation} message TerminalLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TerminalLocation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TerminalLocation message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.TerminalLocation} TerminalLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TerminalLocation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.TerminalLocation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.point = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.terminalPointId = $root.maps.fleetengine.v1.TerminalPointId.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.accessPointId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.tripId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.terminalLocationType = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TerminalLocation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.TerminalLocation} TerminalLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TerminalLocation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TerminalLocation message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TerminalLocation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.point != null && message.hasOwnProperty("point")) {
                            var error = $root.google.type.LatLng.verify(message.point);
                            if (error)
                                return "point." + error;
                        }
                        if (message.terminalPointId != null && message.hasOwnProperty("terminalPointId")) {
                            var error = $root.maps.fleetengine.v1.TerminalPointId.verify(message.terminalPointId);
                            if (error)
                                return "terminalPointId." + error;
                        }
                        if (message.accessPointId != null && message.hasOwnProperty("accessPointId"))
                            if (!$util.isString(message.accessPointId))
                                return "accessPointId: string expected";
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            if (!$util.isString(message.tripId))
                                return "tripId: string expected";
                        if (message.terminalLocationType != null && message.hasOwnProperty("terminalLocationType"))
                            switch (message.terminalLocationType) {
                            default:
                                return "terminalLocationType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a TerminalLocation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.TerminalLocation} TerminalLocation
                     */
                    TerminalLocation.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.TerminalLocation)
                            return object;
                        var message = new $root.maps.fleetengine.v1.TerminalLocation();
                        if (object.point != null) {
                            if (typeof object.point !== "object")
                                throw TypeError(".maps.fleetengine.v1.TerminalLocation.point: object expected");
                            message.point = $root.google.type.LatLng.fromObject(object.point);
                        }
                        if (object.terminalPointId != null) {
                            if (typeof object.terminalPointId !== "object")
                                throw TypeError(".maps.fleetengine.v1.TerminalLocation.terminalPointId: object expected");
                            message.terminalPointId = $root.maps.fleetengine.v1.TerminalPointId.fromObject(object.terminalPointId);
                        }
                        if (object.accessPointId != null)
                            message.accessPointId = String(object.accessPointId);
                        if (object.tripId != null)
                            message.tripId = String(object.tripId);
                        switch (object.terminalLocationType) {
                        default:
                            if (typeof object.terminalLocationType === "number") {
                                message.terminalLocationType = object.terminalLocationType;
                                break;
                            }
                            break;
                        case "UNKNOWN_WAYPOINT_TYPE":
                        case 0:
                            message.terminalLocationType = 0;
                            break;
                        case "PICKUP_WAYPOINT_TYPE":
                        case 1:
                            message.terminalLocationType = 1;
                            break;
                        case "DROP_OFF_WAYPOINT_TYPE":
                        case 2:
                            message.terminalLocationType = 2;
                            break;
                        case "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE":
                        case 3:
                            message.terminalLocationType = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TerminalLocation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {maps.fleetengine.v1.TerminalLocation} message TerminalLocation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TerminalLocation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.point = null;
                            object.terminalPointId = null;
                            object.accessPointId = "";
                            object.tripId = "";
                            object.terminalLocationType = options.enums === String ? "UNKNOWN_WAYPOINT_TYPE" : 0;
                        }
                        if (message.point != null && message.hasOwnProperty("point"))
                            object.point = $root.google.type.LatLng.toObject(message.point, options);
                        if (message.terminalPointId != null && message.hasOwnProperty("terminalPointId"))
                            object.terminalPointId = $root.maps.fleetengine.v1.TerminalPointId.toObject(message.terminalPointId, options);
                        if (message.accessPointId != null && message.hasOwnProperty("accessPointId"))
                            object.accessPointId = message.accessPointId;
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            object.tripId = message.tripId;
                        if (message.terminalLocationType != null && message.hasOwnProperty("terminalLocationType"))
                            object.terminalLocationType = options.enums === String ? $root.maps.fleetengine.v1.WaypointType[message.terminalLocationType] === undefined ? message.terminalLocationType : $root.maps.fleetengine.v1.WaypointType[message.terminalLocationType] : message.terminalLocationType;
                        return object;
                    };
    
                    /**
                     * Converts this TerminalLocation to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TerminalLocation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TerminalLocation
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.TerminalLocation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TerminalLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.TerminalLocation";
                    };
    
                    return TerminalLocation;
                })();
    
                v1.TripWaypoint = (function() {
    
                    /**
                     * Properties of a TripWaypoint.
                     * @memberof maps.fleetengine.v1
                     * @interface ITripWaypoint
                     * @property {maps.fleetengine.v1.ITerminalLocation|null} [location] TripWaypoint location
                     * @property {string|null} [tripId] TripWaypoint tripId
                     * @property {maps.fleetengine.v1.WaypointType|null} [waypointType] TripWaypoint waypointType
                     * @property {Array.<google.type.ILatLng>|null} [pathToWaypoint] TripWaypoint pathToWaypoint
                     * @property {string|null} [encodedPathToWaypoint] TripWaypoint encodedPathToWaypoint
                     * @property {maps.fleetengine.v1.IConsumableTrafficPolyline|null} [trafficToWaypoint] TripWaypoint trafficToWaypoint
                     * @property {google.protobuf.IInt32Value|null} [distanceMeters] TripWaypoint distanceMeters
                     * @property {google.protobuf.ITimestamp|null} [eta] TripWaypoint eta
                     * @property {google.protobuf.IDuration|null} [duration] TripWaypoint duration
                     */
    
                    /**
                     * Constructs a new TripWaypoint.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a TripWaypoint.
                     * @implements ITripWaypoint
                     * @constructor
                     * @param {maps.fleetengine.v1.ITripWaypoint=} [properties] Properties to set
                     */
                    function TripWaypoint(properties) {
                        this.pathToWaypoint = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TripWaypoint location.
                     * @member {maps.fleetengine.v1.ITerminalLocation|null|undefined} location
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.location = null;
    
                    /**
                     * TripWaypoint tripId.
                     * @member {string} tripId
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.tripId = "";
    
                    /**
                     * TripWaypoint waypointType.
                     * @member {maps.fleetengine.v1.WaypointType} waypointType
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.waypointType = 0;
    
                    /**
                     * TripWaypoint pathToWaypoint.
                     * @member {Array.<google.type.ILatLng>} pathToWaypoint
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.pathToWaypoint = $util.emptyArray;
    
                    /**
                     * TripWaypoint encodedPathToWaypoint.
                     * @member {string} encodedPathToWaypoint
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.encodedPathToWaypoint = "";
    
                    /**
                     * TripWaypoint trafficToWaypoint.
                     * @member {maps.fleetengine.v1.IConsumableTrafficPolyline|null|undefined} trafficToWaypoint
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.trafficToWaypoint = null;
    
                    /**
                     * TripWaypoint distanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} distanceMeters
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.distanceMeters = null;
    
                    /**
                     * TripWaypoint eta.
                     * @member {google.protobuf.ITimestamp|null|undefined} eta
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.eta = null;
    
                    /**
                     * TripWaypoint duration.
                     * @member {google.protobuf.IDuration|null|undefined} duration
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     */
                    TripWaypoint.prototype.duration = null;
    
                    /**
                     * Creates a new TripWaypoint instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {maps.fleetengine.v1.ITripWaypoint=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.TripWaypoint} TripWaypoint instance
                     */
                    TripWaypoint.create = function create(properties) {
                        return new TripWaypoint(properties);
                    };
    
                    /**
                     * Encodes the specified TripWaypoint message. Does not implicitly {@link maps.fleetengine.v1.TripWaypoint.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {maps.fleetengine.v1.ITripWaypoint} message TripWaypoint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TripWaypoint.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                            $root.maps.fleetengine.v1.TerminalLocation.encode(message.location, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.tripId != null && Object.hasOwnProperty.call(message, "tripId"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.tripId);
                        if (message.waypointType != null && Object.hasOwnProperty.call(message, "waypointType"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.waypointType);
                        if (message.pathToWaypoint != null && message.pathToWaypoint.length)
                            for (var i = 0; i < message.pathToWaypoint.length; ++i)
                                $root.google.type.LatLng.encode(message.pathToWaypoint[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.encodedPathToWaypoint != null && Object.hasOwnProperty.call(message, "encodedPathToWaypoint"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.encodedPathToWaypoint);
                        if (message.distanceMeters != null && Object.hasOwnProperty.call(message, "distanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.distanceMeters, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.eta != null && Object.hasOwnProperty.call(message, "eta"))
                            $root.google.protobuf.Timestamp.encode(message.eta, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                            $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.trafficToWaypoint != null && Object.hasOwnProperty.call(message, "trafficToWaypoint"))
                            $root.maps.fleetengine.v1.ConsumableTrafficPolyline.encode(message.trafficToWaypoint, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TripWaypoint message, length delimited. Does not implicitly {@link maps.fleetengine.v1.TripWaypoint.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {maps.fleetengine.v1.ITripWaypoint} message TripWaypoint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TripWaypoint.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TripWaypoint message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.TripWaypoint} TripWaypoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TripWaypoint.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.TripWaypoint();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.location = $root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.tripId = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.waypointType = reader.int32();
                                    break;
                                }
                            case 4: {
                                    if (!(message.pathToWaypoint && message.pathToWaypoint.length))
                                        message.pathToWaypoint = [];
                                    message.pathToWaypoint.push($root.google.type.LatLng.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 5: {
                                    message.encodedPathToWaypoint = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.trafficToWaypoint = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.distanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.eta = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TripWaypoint message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.TripWaypoint} TripWaypoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TripWaypoint.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TripWaypoint message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TripWaypoint.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.location != null && message.hasOwnProperty("location")) {
                            var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.location);
                            if (error)
                                return "location." + error;
                        }
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            if (!$util.isString(message.tripId))
                                return "tripId: string expected";
                        if (message.waypointType != null && message.hasOwnProperty("waypointType"))
                            switch (message.waypointType) {
                            default:
                                return "waypointType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.pathToWaypoint != null && message.hasOwnProperty("pathToWaypoint")) {
                            if (!Array.isArray(message.pathToWaypoint))
                                return "pathToWaypoint: array expected";
                            for (var i = 0; i < message.pathToWaypoint.length; ++i) {
                                var error = $root.google.type.LatLng.verify(message.pathToWaypoint[i]);
                                if (error)
                                    return "pathToWaypoint." + error;
                            }
                        }
                        if (message.encodedPathToWaypoint != null && message.hasOwnProperty("encodedPathToWaypoint"))
                            if (!$util.isString(message.encodedPathToWaypoint))
                                return "encodedPathToWaypoint: string expected";
                        if (message.trafficToWaypoint != null && message.hasOwnProperty("trafficToWaypoint")) {
                            var error = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.verify(message.trafficToWaypoint);
                            if (error)
                                return "trafficToWaypoint." + error;
                        }
                        if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.distanceMeters);
                            if (error)
                                return "distanceMeters." + error;
                        }
                        if (message.eta != null && message.hasOwnProperty("eta")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.eta);
                            if (error)
                                return "eta." + error;
                        }
                        if (message.duration != null && message.hasOwnProperty("duration")) {
                            var error = $root.google.protobuf.Duration.verify(message.duration);
                            if (error)
                                return "duration." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TripWaypoint message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.TripWaypoint} TripWaypoint
                     */
                    TripWaypoint.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.TripWaypoint)
                            return object;
                        var message = new $root.maps.fleetengine.v1.TripWaypoint();
                        if (object.location != null) {
                            if (typeof object.location !== "object")
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.location: object expected");
                            message.location = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.location);
                        }
                        if (object.tripId != null)
                            message.tripId = String(object.tripId);
                        switch (object.waypointType) {
                        default:
                            if (typeof object.waypointType === "number") {
                                message.waypointType = object.waypointType;
                                break;
                            }
                            break;
                        case "UNKNOWN_WAYPOINT_TYPE":
                        case 0:
                            message.waypointType = 0;
                            break;
                        case "PICKUP_WAYPOINT_TYPE":
                        case 1:
                            message.waypointType = 1;
                            break;
                        case "DROP_OFF_WAYPOINT_TYPE":
                        case 2:
                            message.waypointType = 2;
                            break;
                        case "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE":
                        case 3:
                            message.waypointType = 3;
                            break;
                        }
                        if (object.pathToWaypoint) {
                            if (!Array.isArray(object.pathToWaypoint))
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.pathToWaypoint: array expected");
                            message.pathToWaypoint = [];
                            for (var i = 0; i < object.pathToWaypoint.length; ++i) {
                                if (typeof object.pathToWaypoint[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.TripWaypoint.pathToWaypoint: object expected");
                                message.pathToWaypoint[i] = $root.google.type.LatLng.fromObject(object.pathToWaypoint[i]);
                            }
                        }
                        if (object.encodedPathToWaypoint != null)
                            message.encodedPathToWaypoint = String(object.encodedPathToWaypoint);
                        if (object.trafficToWaypoint != null) {
                            if (typeof object.trafficToWaypoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.trafficToWaypoint: object expected");
                            message.trafficToWaypoint = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.fromObject(object.trafficToWaypoint);
                        }
                        if (object.distanceMeters != null) {
                            if (typeof object.distanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.distanceMeters: object expected");
                            message.distanceMeters = $root.google.protobuf.Int32Value.fromObject(object.distanceMeters);
                        }
                        if (object.eta != null) {
                            if (typeof object.eta !== "object")
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.eta: object expected");
                            message.eta = $root.google.protobuf.Timestamp.fromObject(object.eta);
                        }
                        if (object.duration != null) {
                            if (typeof object.duration !== "object")
                                throw TypeError(".maps.fleetengine.v1.TripWaypoint.duration: object expected");
                            message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TripWaypoint message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {maps.fleetengine.v1.TripWaypoint} message TripWaypoint
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TripWaypoint.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.pathToWaypoint = [];
                        if (options.defaults) {
                            object.location = null;
                            object.tripId = "";
                            object.waypointType = options.enums === String ? "UNKNOWN_WAYPOINT_TYPE" : 0;
                            object.encodedPathToWaypoint = "";
                            object.distanceMeters = null;
                            object.eta = null;
                            object.duration = null;
                            object.trafficToWaypoint = null;
                        }
                        if (message.location != null && message.hasOwnProperty("location"))
                            object.location = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.location, options);
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            object.tripId = message.tripId;
                        if (message.waypointType != null && message.hasOwnProperty("waypointType"))
                            object.waypointType = options.enums === String ? $root.maps.fleetengine.v1.WaypointType[message.waypointType] === undefined ? message.waypointType : $root.maps.fleetengine.v1.WaypointType[message.waypointType] : message.waypointType;
                        if (message.pathToWaypoint && message.pathToWaypoint.length) {
                            object.pathToWaypoint = [];
                            for (var j = 0; j < message.pathToWaypoint.length; ++j)
                                object.pathToWaypoint[j] = $root.google.type.LatLng.toObject(message.pathToWaypoint[j], options);
                        }
                        if (message.encodedPathToWaypoint != null && message.hasOwnProperty("encodedPathToWaypoint"))
                            object.encodedPathToWaypoint = message.encodedPathToWaypoint;
                        if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                            object.distanceMeters = $root.google.protobuf.Int32Value.toObject(message.distanceMeters, options);
                        if (message.eta != null && message.hasOwnProperty("eta"))
                            object.eta = $root.google.protobuf.Timestamp.toObject(message.eta, options);
                        if (message.duration != null && message.hasOwnProperty("duration"))
                            object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                        if (message.trafficToWaypoint != null && message.hasOwnProperty("trafficToWaypoint"))
                            object.trafficToWaypoint = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.toObject(message.trafficToWaypoint, options);
                        return object;
                    };
    
                    /**
                     * Converts this TripWaypoint to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TripWaypoint.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TripWaypoint
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.TripWaypoint
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TripWaypoint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.TripWaypoint";
                    };
    
                    return TripWaypoint;
                })();
    
                /**
                 * TripType enum.
                 * @name maps.fleetengine.v1.TripType
                 * @enum {number}
                 * @property {number} UNKNOWN_TRIP_TYPE=0 UNKNOWN_TRIP_TYPE value
                 * @property {number} SHARED=1 SHARED value
                 * @property {number} EXCLUSIVE=2 EXCLUSIVE value
                 */
                v1.TripType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_TRIP_TYPE"] = 0;
                    values[valuesById[1] = "SHARED"] = 1;
                    values[valuesById[2] = "EXCLUSIVE"] = 2;
                    return values;
                })();
    
                /**
                 * WaypointType enum.
                 * @name maps.fleetengine.v1.WaypointType
                 * @enum {number}
                 * @property {number} UNKNOWN_WAYPOINT_TYPE=0 UNKNOWN_WAYPOINT_TYPE value
                 * @property {number} PICKUP_WAYPOINT_TYPE=1 PICKUP_WAYPOINT_TYPE value
                 * @property {number} DROP_OFF_WAYPOINT_TYPE=2 DROP_OFF_WAYPOINT_TYPE value
                 * @property {number} INTERMEDIATE_DESTINATION_WAYPOINT_TYPE=3 INTERMEDIATE_DESTINATION_WAYPOINT_TYPE value
                 */
                v1.WaypointType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_WAYPOINT_TYPE"] = 0;
                    values[valuesById[1] = "PICKUP_WAYPOINT_TYPE"] = 1;
                    values[valuesById[2] = "DROP_OFF_WAYPOINT_TYPE"] = 2;
                    values[valuesById[3] = "INTERMEDIATE_DESTINATION_WAYPOINT_TYPE"] = 3;
                    return values;
                })();
    
                /**
                 * PolylineFormatType enum.
                 * @name maps.fleetengine.v1.PolylineFormatType
                 * @enum {number}
                 * @property {number} UNKNOWN_FORMAT_TYPE=0 UNKNOWN_FORMAT_TYPE value
                 * @property {number} LAT_LNG_LIST_TYPE=1 LAT_LNG_LIST_TYPE value
                 * @property {number} ENCODED_POLYLINE_TYPE=2 ENCODED_POLYLINE_TYPE value
                 */
                v1.PolylineFormatType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_FORMAT_TYPE"] = 0;
                    values[valuesById[1] = "LAT_LNG_LIST_TYPE"] = 1;
                    values[valuesById[2] = "ENCODED_POLYLINE_TYPE"] = 2;
                    return values;
                })();
    
                /**
                 * NavigationStatus enum.
                 * @name maps.fleetengine.v1.NavigationStatus
                 * @enum {number}
                 * @property {number} UNKNOWN_NAVIGATION_STATUS=0 UNKNOWN_NAVIGATION_STATUS value
                 * @property {number} NO_GUIDANCE=1 NO_GUIDANCE value
                 * @property {number} ENROUTE_TO_DESTINATION=2 ENROUTE_TO_DESTINATION value
                 * @property {number} OFF_ROUTE=3 OFF_ROUTE value
                 * @property {number} ARRIVED_AT_DESTINATION=4 ARRIVED_AT_DESTINATION value
                 */
                v1.NavigationStatus = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_NAVIGATION_STATUS"] = 0;
                    values[valuesById[1] = "NO_GUIDANCE"] = 1;
                    values[valuesById[2] = "ENROUTE_TO_DESTINATION"] = 2;
                    values[valuesById[3] = "OFF_ROUTE"] = 3;
                    values[valuesById[4] = "ARRIVED_AT_DESTINATION"] = 4;
                    return values;
                })();
    
                v1.VehicleAttribute = (function() {
    
                    /**
                     * Properties of a VehicleAttribute.
                     * @memberof maps.fleetengine.v1
                     * @interface IVehicleAttribute
                     * @property {string|null} [key] VehicleAttribute key
                     * @property {string|null} [value] VehicleAttribute value
                     * @property {string|null} [stringValue] VehicleAttribute stringValue
                     * @property {boolean|null} [boolValue] VehicleAttribute boolValue
                     * @property {number|null} [numberValue] VehicleAttribute numberValue
                     */
    
                    /**
                     * Constructs a new VehicleAttribute.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VehicleAttribute.
                     * @implements IVehicleAttribute
                     * @constructor
                     * @param {maps.fleetengine.v1.IVehicleAttribute=} [properties] Properties to set
                     */
                    function VehicleAttribute(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VehicleAttribute key.
                     * @member {string} key
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    VehicleAttribute.prototype.key = "";
    
                    /**
                     * VehicleAttribute value.
                     * @member {string} value
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    VehicleAttribute.prototype.value = "";
    
                    /**
                     * VehicleAttribute stringValue.
                     * @member {string|null|undefined} stringValue
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    VehicleAttribute.prototype.stringValue = null;
    
                    /**
                     * VehicleAttribute boolValue.
                     * @member {boolean|null|undefined} boolValue
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    VehicleAttribute.prototype.boolValue = null;
    
                    /**
                     * VehicleAttribute numberValue.
                     * @member {number|null|undefined} numberValue
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    VehicleAttribute.prototype.numberValue = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * VehicleAttribute vehicleAttributeValue.
                     * @member {"stringValue"|"boolValue"|"numberValue"|undefined} vehicleAttributeValue
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     */
                    Object.defineProperty(VehicleAttribute.prototype, "vehicleAttributeValue", {
                        get: $util.oneOfGetter($oneOfFields = ["stringValue", "boolValue", "numberValue"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new VehicleAttribute instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttribute=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.VehicleAttribute} VehicleAttribute instance
                     */
                    VehicleAttribute.create = function create(properties) {
                        return new VehicleAttribute(properties);
                    };
    
                    /**
                     * Encodes the specified VehicleAttribute message. Does not implicitly {@link maps.fleetengine.v1.VehicleAttribute.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttribute} message VehicleAttribute message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleAttribute.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                        if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                        if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                        if (message.numberValue != null && Object.hasOwnProperty.call(message, "numberValue"))
                            writer.uint32(/* id 5, wireType 1 =*/41).double(message.numberValue);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VehicleAttribute message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VehicleAttribute.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttribute} message VehicleAttribute message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleAttribute.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VehicleAttribute message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.VehicleAttribute} VehicleAttribute
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleAttribute.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VehicleAttribute();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.key = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.value = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.stringValue = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.boolValue = reader.bool();
                                    break;
                                }
                            case 5: {
                                    message.numberValue = reader.double();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VehicleAttribute message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.VehicleAttribute} VehicleAttribute
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleAttribute.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VehicleAttribute message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VehicleAttribute.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.key != null && message.hasOwnProperty("key"))
                            if (!$util.isString(message.key))
                                return "key: string expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            properties.vehicleAttributeValue = 1;
                            if (!$util.isString(message.stringValue))
                                return "stringValue: string expected";
                        }
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            if (properties.vehicleAttributeValue === 1)
                                return "vehicleAttributeValue: multiple values";
                            properties.vehicleAttributeValue = 1;
                            if (typeof message.boolValue !== "boolean")
                                return "boolValue: boolean expected";
                        }
                        if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                            if (properties.vehicleAttributeValue === 1)
                                return "vehicleAttributeValue: multiple values";
                            properties.vehicleAttributeValue = 1;
                            if (typeof message.numberValue !== "number")
                                return "numberValue: number expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a VehicleAttribute message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.VehicleAttribute} VehicleAttribute
                     */
                    VehicleAttribute.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.VehicleAttribute)
                            return object;
                        var message = new $root.maps.fleetengine.v1.VehicleAttribute();
                        if (object.key != null)
                            message.key = String(object.key);
                        if (object.value != null)
                            message.value = String(object.value);
                        if (object.stringValue != null)
                            message.stringValue = String(object.stringValue);
                        if (object.boolValue != null)
                            message.boolValue = Boolean(object.boolValue);
                        if (object.numberValue != null)
                            message.numberValue = Number(object.numberValue);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VehicleAttribute message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {maps.fleetengine.v1.VehicleAttribute} message VehicleAttribute
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VehicleAttribute.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.key = "";
                            object.value = "";
                        }
                        if (message.key != null && message.hasOwnProperty("key"))
                            object.key = message.key;
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                            object.stringValue = message.stringValue;
                            if (options.oneofs)
                                object.vehicleAttributeValue = "stringValue";
                        }
                        if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                            object.boolValue = message.boolValue;
                            if (options.oneofs)
                                object.vehicleAttributeValue = "boolValue";
                        }
                        if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                            object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                            if (options.oneofs)
                                object.vehicleAttributeValue = "numberValue";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this VehicleAttribute to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VehicleAttribute.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VehicleAttribute
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.VehicleAttribute
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VehicleAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.VehicleAttribute";
                    };
    
                    return VehicleAttribute;
                })();
    
                v1.VehicleLocation = (function() {
    
                    /**
                     * Properties of a VehicleLocation.
                     * @memberof maps.fleetengine.v1
                     * @interface IVehicleLocation
                     * @property {google.type.ILatLng|null} [location] VehicleLocation location
                     * @property {google.protobuf.IDoubleValue|null} [horizontalAccuracy] VehicleLocation horizontalAccuracy
                     * @property {google.protobuf.IDoubleValue|null} [latlngAccuracy] VehicleLocation latlngAccuracy
                     * @property {google.protobuf.IInt32Value|null} [heading] VehicleLocation heading
                     * @property {google.protobuf.IDoubleValue|null} [bearingAccuracy] VehicleLocation bearingAccuracy
                     * @property {google.protobuf.IDoubleValue|null} [headingAccuracy] VehicleLocation headingAccuracy
                     * @property {google.protobuf.IDoubleValue|null} [altitude] VehicleLocation altitude
                     * @property {google.protobuf.IDoubleValue|null} [verticalAccuracy] VehicleLocation verticalAccuracy
                     * @property {google.protobuf.IDoubleValue|null} [altitudeAccuracy] VehicleLocation altitudeAccuracy
                     * @property {google.protobuf.IInt32Value|null} [speedKmph] VehicleLocation speedKmph
                     * @property {google.protobuf.IDoubleValue|null} [speed] VehicleLocation speed
                     * @property {google.protobuf.IDoubleValue|null} [speedAccuracy] VehicleLocation speedAccuracy
                     * @property {google.protobuf.ITimestamp|null} [updateTime] VehicleLocation updateTime
                     * @property {google.protobuf.ITimestamp|null} [serverTime] VehicleLocation serverTime
                     * @property {maps.fleetengine.v1.LocationSensor|null} [locationSensor] VehicleLocation locationSensor
                     * @property {google.protobuf.IBoolValue|null} [isRoadSnapped] VehicleLocation isRoadSnapped
                     * @property {google.protobuf.IBoolValue|null} [isGpsSensorEnabled] VehicleLocation isGpsSensorEnabled
                     * @property {google.protobuf.IInt32Value|null} [timeSinceUpdate] VehicleLocation timeSinceUpdate
                     * @property {google.protobuf.IInt32Value|null} [numStaleUpdates] VehicleLocation numStaleUpdates
                     * @property {google.type.ILatLng|null} [rawLocation] VehicleLocation rawLocation
                     * @property {google.protobuf.ITimestamp|null} [rawLocationTime] VehicleLocation rawLocationTime
                     * @property {maps.fleetengine.v1.LocationSensor|null} [rawLocationSensor] VehicleLocation rawLocationSensor
                     * @property {google.protobuf.IDoubleValue|null} [rawLocationAccuracy] VehicleLocation rawLocationAccuracy
                     * @property {google.type.ILatLng|null} [supplementalLocation] VehicleLocation supplementalLocation
                     * @property {google.protobuf.ITimestamp|null} [supplementalLocationTime] VehicleLocation supplementalLocationTime
                     * @property {maps.fleetengine.v1.LocationSensor|null} [supplementalLocationSensor] VehicleLocation supplementalLocationSensor
                     * @property {google.protobuf.IDoubleValue|null} [supplementalLocationAccuracy] VehicleLocation supplementalLocationAccuracy
                     * @property {boolean|null} [roadSnapped] VehicleLocation roadSnapped
                     */
    
                    /**
                     * Constructs a new VehicleLocation.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VehicleLocation.
                     * @implements IVehicleLocation
                     * @constructor
                     * @param {maps.fleetengine.v1.IVehicleLocation=} [properties] Properties to set
                     */
                    function VehicleLocation(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VehicleLocation location.
                     * @member {google.type.ILatLng|null|undefined} location
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.location = null;
    
                    /**
                     * VehicleLocation horizontalAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} horizontalAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.horizontalAccuracy = null;
    
                    /**
                     * VehicleLocation latlngAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} latlngAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.latlngAccuracy = null;
    
                    /**
                     * VehicleLocation heading.
                     * @member {google.protobuf.IInt32Value|null|undefined} heading
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.heading = null;
    
                    /**
                     * VehicleLocation bearingAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} bearingAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.bearingAccuracy = null;
    
                    /**
                     * VehicleLocation headingAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} headingAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.headingAccuracy = null;
    
                    /**
                     * VehicleLocation altitude.
                     * @member {google.protobuf.IDoubleValue|null|undefined} altitude
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.altitude = null;
    
                    /**
                     * VehicleLocation verticalAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} verticalAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.verticalAccuracy = null;
    
                    /**
                     * VehicleLocation altitudeAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} altitudeAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.altitudeAccuracy = null;
    
                    /**
                     * VehicleLocation speedKmph.
                     * @member {google.protobuf.IInt32Value|null|undefined} speedKmph
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.speedKmph = null;
    
                    /**
                     * VehicleLocation speed.
                     * @member {google.protobuf.IDoubleValue|null|undefined} speed
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.speed = null;
    
                    /**
                     * VehicleLocation speedAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} speedAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.speedAccuracy = null;
    
                    /**
                     * VehicleLocation updateTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.updateTime = null;
    
                    /**
                     * VehicleLocation serverTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} serverTime
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.serverTime = null;
    
                    /**
                     * VehicleLocation locationSensor.
                     * @member {maps.fleetengine.v1.LocationSensor} locationSensor
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.locationSensor = 0;
    
                    /**
                     * VehicleLocation isRoadSnapped.
                     * @member {google.protobuf.IBoolValue|null|undefined} isRoadSnapped
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.isRoadSnapped = null;
    
                    /**
                     * VehicleLocation isGpsSensorEnabled.
                     * @member {google.protobuf.IBoolValue|null|undefined} isGpsSensorEnabled
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.isGpsSensorEnabled = null;
    
                    /**
                     * VehicleLocation timeSinceUpdate.
                     * @member {google.protobuf.IInt32Value|null|undefined} timeSinceUpdate
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.timeSinceUpdate = null;
    
                    /**
                     * VehicleLocation numStaleUpdates.
                     * @member {google.protobuf.IInt32Value|null|undefined} numStaleUpdates
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.numStaleUpdates = null;
    
                    /**
                     * VehicleLocation rawLocation.
                     * @member {google.type.ILatLng|null|undefined} rawLocation
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.rawLocation = null;
    
                    /**
                     * VehicleLocation rawLocationTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} rawLocationTime
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.rawLocationTime = null;
    
                    /**
                     * VehicleLocation rawLocationSensor.
                     * @member {maps.fleetengine.v1.LocationSensor} rawLocationSensor
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.rawLocationSensor = 0;
    
                    /**
                     * VehicleLocation rawLocationAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} rawLocationAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.rawLocationAccuracy = null;
    
                    /**
                     * VehicleLocation supplementalLocation.
                     * @member {google.type.ILatLng|null|undefined} supplementalLocation
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.supplementalLocation = null;
    
                    /**
                     * VehicleLocation supplementalLocationTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} supplementalLocationTime
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.supplementalLocationTime = null;
    
                    /**
                     * VehicleLocation supplementalLocationSensor.
                     * @member {maps.fleetengine.v1.LocationSensor} supplementalLocationSensor
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.supplementalLocationSensor = 0;
    
                    /**
                     * VehicleLocation supplementalLocationAccuracy.
                     * @member {google.protobuf.IDoubleValue|null|undefined} supplementalLocationAccuracy
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.supplementalLocationAccuracy = null;
    
                    /**
                     * VehicleLocation roadSnapped.
                     * @member {boolean} roadSnapped
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     */
                    VehicleLocation.prototype.roadSnapped = false;
    
                    /**
                     * Creates a new VehicleLocation instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleLocation=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.VehicleLocation} VehicleLocation instance
                     */
                    VehicleLocation.create = function create(properties) {
                        return new VehicleLocation(properties);
                    };
    
                    /**
                     * Encodes the specified VehicleLocation message. Does not implicitly {@link maps.fleetengine.v1.VehicleLocation.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleLocation} message VehicleLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleLocation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                            $root.google.type.LatLng.encode(message.location, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.heading != null && Object.hasOwnProperty.call(message, "heading"))
                            $root.google.protobuf.Int32Value.encode(message.heading, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.speedKmph != null && Object.hasOwnProperty.call(message, "speedKmph"))
                            $root.google.protobuf.Int32Value.encode(message.speedKmph, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                            $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.altitude != null && Object.hasOwnProperty.call(message, "altitude"))
                            $root.google.protobuf.DoubleValue.encode(message.altitude, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.speed != null && Object.hasOwnProperty.call(message, "speed"))
                            $root.google.protobuf.DoubleValue.encode(message.speed, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.speedAccuracy != null && Object.hasOwnProperty.call(message, "speedAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.speedAccuracy, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.horizontalAccuracy != null && Object.hasOwnProperty.call(message, "horizontalAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.horizontalAccuracy, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.verticalAccuracy != null && Object.hasOwnProperty.call(message, "verticalAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.verticalAccuracy, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.bearingAccuracy != null && Object.hasOwnProperty.call(message, "bearingAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.bearingAccuracy, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.locationSensor != null && Object.hasOwnProperty.call(message, "locationSensor"))
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.locationSensor);
                        if (message.isGpsSensorEnabled != null && Object.hasOwnProperty.call(message, "isGpsSensorEnabled"))
                            $root.google.protobuf.BoolValue.encode(message.isGpsSensorEnabled, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.serverTime != null && Object.hasOwnProperty.call(message, "serverTime"))
                            $root.google.protobuf.Timestamp.encode(message.serverTime, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.timeSinceUpdate != null && Object.hasOwnProperty.call(message, "timeSinceUpdate"))
                            $root.google.protobuf.Int32Value.encode(message.timeSinceUpdate, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.numStaleUpdates != null && Object.hasOwnProperty.call(message, "numStaleUpdates"))
                            $root.google.protobuf.Int32Value.encode(message.numStaleUpdates, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.rawLocation != null && Object.hasOwnProperty.call(message, "rawLocation"))
                            $root.google.type.LatLng.encode(message.rawLocation, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.rawLocationTime != null && Object.hasOwnProperty.call(message, "rawLocationTime"))
                            $root.google.protobuf.Timestamp.encode(message.rawLocationTime, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        if (message.supplementalLocation != null && Object.hasOwnProperty.call(message, "supplementalLocation"))
                            $root.google.type.LatLng.encode(message.supplementalLocation, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                        if (message.supplementalLocationTime != null && Object.hasOwnProperty.call(message, "supplementalLocationTime"))
                            $root.google.protobuf.Timestamp.encode(message.supplementalLocationTime, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.supplementalLocationSensor != null && Object.hasOwnProperty.call(message, "supplementalLocationSensor"))
                            writer.uint32(/* id 20, wireType 0 =*/160).int32(message.supplementalLocationSensor);
                        if (message.supplementalLocationAccuracy != null && Object.hasOwnProperty.call(message, "supplementalLocationAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.supplementalLocationAccuracy, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                        if (message.latlngAccuracy != null && Object.hasOwnProperty.call(message, "latlngAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.latlngAccuracy, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.headingAccuracy != null && Object.hasOwnProperty.call(message, "headingAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.headingAccuracy, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                        if (message.altitudeAccuracy != null && Object.hasOwnProperty.call(message, "altitudeAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.altitudeAccuracy, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                        if (message.rawLocationAccuracy != null && Object.hasOwnProperty.call(message, "rawLocationAccuracy"))
                            $root.google.protobuf.DoubleValue.encode(message.rawLocationAccuracy, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                        if (message.roadSnapped != null && Object.hasOwnProperty.call(message, "roadSnapped"))
                            writer.uint32(/* id 26, wireType 0 =*/208).bool(message.roadSnapped);
                        if (message.isRoadSnapped != null && Object.hasOwnProperty.call(message, "isRoadSnapped"))
                            $root.google.protobuf.BoolValue.encode(message.isRoadSnapped, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                        if (message.rawLocationSensor != null && Object.hasOwnProperty.call(message, "rawLocationSensor"))
                            writer.uint32(/* id 28, wireType 0 =*/224).int32(message.rawLocationSensor);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VehicleLocation message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VehicleLocation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleLocation} message VehicleLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleLocation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VehicleLocation message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.VehicleLocation} VehicleLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleLocation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VehicleLocation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.location = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.horizontalAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.latlngAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.heading = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.bearingAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.headingAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.altitude = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    message.verticalAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 24: {
                                    message.altitudeAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.speedKmph = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.speed = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.speedAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    message.serverTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.locationSensor = reader.int32();
                                    break;
                                }
                            case 27: {
                                    message.isRoadSnapped = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 12: {
                                    message.isGpsSensorEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    message.timeSinceUpdate = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.numStaleUpdates = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.rawLocation = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 17: {
                                    message.rawLocationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 28: {
                                    message.rawLocationSensor = reader.int32();
                                    break;
                                }
                            case 25: {
                                    message.rawLocationAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 18: {
                                    message.supplementalLocation = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.supplementalLocationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 20: {
                                    message.supplementalLocationSensor = reader.int32();
                                    break;
                                }
                            case 21: {
                                    message.supplementalLocationAccuracy = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 26: {
                                    message.roadSnapped = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VehicleLocation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.VehicleLocation} VehicleLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleLocation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VehicleLocation message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VehicleLocation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.location != null && message.hasOwnProperty("location")) {
                            var error = $root.google.type.LatLng.verify(message.location);
                            if (error)
                                return "location." + error;
                        }
                        if (message.horizontalAccuracy != null && message.hasOwnProperty("horizontalAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.horizontalAccuracy);
                            if (error)
                                return "horizontalAccuracy." + error;
                        }
                        if (message.latlngAccuracy != null && message.hasOwnProperty("latlngAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.latlngAccuracy);
                            if (error)
                                return "latlngAccuracy." + error;
                        }
                        if (message.heading != null && message.hasOwnProperty("heading")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.heading);
                            if (error)
                                return "heading." + error;
                        }
                        if (message.bearingAccuracy != null && message.hasOwnProperty("bearingAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.bearingAccuracy);
                            if (error)
                                return "bearingAccuracy." + error;
                        }
                        if (message.headingAccuracy != null && message.hasOwnProperty("headingAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.headingAccuracy);
                            if (error)
                                return "headingAccuracy." + error;
                        }
                        if (message.altitude != null && message.hasOwnProperty("altitude")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.altitude);
                            if (error)
                                return "altitude." + error;
                        }
                        if (message.verticalAccuracy != null && message.hasOwnProperty("verticalAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.verticalAccuracy);
                            if (error)
                                return "verticalAccuracy." + error;
                        }
                        if (message.altitudeAccuracy != null && message.hasOwnProperty("altitudeAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.altitudeAccuracy);
                            if (error)
                                return "altitudeAccuracy." + error;
                        }
                        if (message.speedKmph != null && message.hasOwnProperty("speedKmph")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.speedKmph);
                            if (error)
                                return "speedKmph." + error;
                        }
                        if (message.speed != null && message.hasOwnProperty("speed")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.speed);
                            if (error)
                                return "speed." + error;
                        }
                        if (message.speedAccuracy != null && message.hasOwnProperty("speedAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.speedAccuracy);
                            if (error)
                                return "speedAccuracy." + error;
                        }
                        if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                            if (error)
                                return "updateTime." + error;
                        }
                        if (message.serverTime != null && message.hasOwnProperty("serverTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.serverTime);
                            if (error)
                                return "serverTime." + error;
                        }
                        if (message.locationSensor != null && message.hasOwnProperty("locationSensor"))
                            switch (message.locationSensor) {
                            default:
                                return "locationSensor: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 100:
                            case 200:
                                break;
                            }
                        if (message.isRoadSnapped != null && message.hasOwnProperty("isRoadSnapped")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.isRoadSnapped);
                            if (error)
                                return "isRoadSnapped." + error;
                        }
                        if (message.isGpsSensorEnabled != null && message.hasOwnProperty("isGpsSensorEnabled")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.isGpsSensorEnabled);
                            if (error)
                                return "isGpsSensorEnabled." + error;
                        }
                        if (message.timeSinceUpdate != null && message.hasOwnProperty("timeSinceUpdate")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.timeSinceUpdate);
                            if (error)
                                return "timeSinceUpdate." + error;
                        }
                        if (message.numStaleUpdates != null && message.hasOwnProperty("numStaleUpdates")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.numStaleUpdates);
                            if (error)
                                return "numStaleUpdates." + error;
                        }
                        if (message.rawLocation != null && message.hasOwnProperty("rawLocation")) {
                            var error = $root.google.type.LatLng.verify(message.rawLocation);
                            if (error)
                                return "rawLocation." + error;
                        }
                        if (message.rawLocationTime != null && message.hasOwnProperty("rawLocationTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.rawLocationTime);
                            if (error)
                                return "rawLocationTime." + error;
                        }
                        if (message.rawLocationSensor != null && message.hasOwnProperty("rawLocationSensor"))
                            switch (message.rawLocationSensor) {
                            default:
                                return "rawLocationSensor: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 100:
                            case 200:
                                break;
                            }
                        if (message.rawLocationAccuracy != null && message.hasOwnProperty("rawLocationAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.rawLocationAccuracy);
                            if (error)
                                return "rawLocationAccuracy." + error;
                        }
                        if (message.supplementalLocation != null && message.hasOwnProperty("supplementalLocation")) {
                            var error = $root.google.type.LatLng.verify(message.supplementalLocation);
                            if (error)
                                return "supplementalLocation." + error;
                        }
                        if (message.supplementalLocationTime != null && message.hasOwnProperty("supplementalLocationTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.supplementalLocationTime);
                            if (error)
                                return "supplementalLocationTime." + error;
                        }
                        if (message.supplementalLocationSensor != null && message.hasOwnProperty("supplementalLocationSensor"))
                            switch (message.supplementalLocationSensor) {
                            default:
                                return "supplementalLocationSensor: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 100:
                            case 200:
                                break;
                            }
                        if (message.supplementalLocationAccuracy != null && message.hasOwnProperty("supplementalLocationAccuracy")) {
                            var error = $root.google.protobuf.DoubleValue.verify(message.supplementalLocationAccuracy);
                            if (error)
                                return "supplementalLocationAccuracy." + error;
                        }
                        if (message.roadSnapped != null && message.hasOwnProperty("roadSnapped"))
                            if (typeof message.roadSnapped !== "boolean")
                                return "roadSnapped: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a VehicleLocation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.VehicleLocation} VehicleLocation
                     */
                    VehicleLocation.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.VehicleLocation)
                            return object;
                        var message = new $root.maps.fleetengine.v1.VehicleLocation();
                        if (object.location != null) {
                            if (typeof object.location !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.location: object expected");
                            message.location = $root.google.type.LatLng.fromObject(object.location);
                        }
                        if (object.horizontalAccuracy != null) {
                            if (typeof object.horizontalAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.horizontalAccuracy: object expected");
                            message.horizontalAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.horizontalAccuracy);
                        }
                        if (object.latlngAccuracy != null) {
                            if (typeof object.latlngAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.latlngAccuracy: object expected");
                            message.latlngAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.latlngAccuracy);
                        }
                        if (object.heading != null) {
                            if (typeof object.heading !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.heading: object expected");
                            message.heading = $root.google.protobuf.Int32Value.fromObject(object.heading);
                        }
                        if (object.bearingAccuracy != null) {
                            if (typeof object.bearingAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.bearingAccuracy: object expected");
                            message.bearingAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.bearingAccuracy);
                        }
                        if (object.headingAccuracy != null) {
                            if (typeof object.headingAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.headingAccuracy: object expected");
                            message.headingAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.headingAccuracy);
                        }
                        if (object.altitude != null) {
                            if (typeof object.altitude !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.altitude: object expected");
                            message.altitude = $root.google.protobuf.DoubleValue.fromObject(object.altitude);
                        }
                        if (object.verticalAccuracy != null) {
                            if (typeof object.verticalAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.verticalAccuracy: object expected");
                            message.verticalAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.verticalAccuracy);
                        }
                        if (object.altitudeAccuracy != null) {
                            if (typeof object.altitudeAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.altitudeAccuracy: object expected");
                            message.altitudeAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.altitudeAccuracy);
                        }
                        if (object.speedKmph != null) {
                            if (typeof object.speedKmph !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.speedKmph: object expected");
                            message.speedKmph = $root.google.protobuf.Int32Value.fromObject(object.speedKmph);
                        }
                        if (object.speed != null) {
                            if (typeof object.speed !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.speed: object expected");
                            message.speed = $root.google.protobuf.DoubleValue.fromObject(object.speed);
                        }
                        if (object.speedAccuracy != null) {
                            if (typeof object.speedAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.speedAccuracy: object expected");
                            message.speedAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.speedAccuracy);
                        }
                        if (object.updateTime != null) {
                            if (typeof object.updateTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.updateTime: object expected");
                            message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                        }
                        if (object.serverTime != null) {
                            if (typeof object.serverTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.serverTime: object expected");
                            message.serverTime = $root.google.protobuf.Timestamp.fromObject(object.serverTime);
                        }
                        switch (object.locationSensor) {
                        default:
                            if (typeof object.locationSensor === "number") {
                                message.locationSensor = object.locationSensor;
                                break;
                            }
                            break;
                        case "UNKNOWN_SENSOR":
                        case 0:
                            message.locationSensor = 0;
                            break;
                        case "GPS":
                        case 1:
                            message.locationSensor = 1;
                            break;
                        case "NETWORK":
                        case 2:
                            message.locationSensor = 2;
                            break;
                        case "PASSIVE":
                        case 3:
                            message.locationSensor = 3;
                            break;
                        case "ROAD_SNAPPED_LOCATION_PROVIDER":
                        case 4:
                            message.locationSensor = 4;
                            break;
                        case "CUSTOMER_SUPPLIED_LOCATION":
                        case 5:
                            message.locationSensor = 5;
                            break;
                        case "FLEET_ENGINE_LOCATION":
                        case 6:
                            message.locationSensor = 6;
                            break;
                        case "FUSED_LOCATION_PROVIDER":
                        case 100:
                            message.locationSensor = 100;
                            break;
                        case "CORE_LOCATION":
                        case 200:
                            message.locationSensor = 200;
                            break;
                        }
                        if (object.isRoadSnapped != null) {
                            if (typeof object.isRoadSnapped !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.isRoadSnapped: object expected");
                            message.isRoadSnapped = $root.google.protobuf.BoolValue.fromObject(object.isRoadSnapped);
                        }
                        if (object.isGpsSensorEnabled != null) {
                            if (typeof object.isGpsSensorEnabled !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.isGpsSensorEnabled: object expected");
                            message.isGpsSensorEnabled = $root.google.protobuf.BoolValue.fromObject(object.isGpsSensorEnabled);
                        }
                        if (object.timeSinceUpdate != null) {
                            if (typeof object.timeSinceUpdate !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.timeSinceUpdate: object expected");
                            message.timeSinceUpdate = $root.google.protobuf.Int32Value.fromObject(object.timeSinceUpdate);
                        }
                        if (object.numStaleUpdates != null) {
                            if (typeof object.numStaleUpdates !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.numStaleUpdates: object expected");
                            message.numStaleUpdates = $root.google.protobuf.Int32Value.fromObject(object.numStaleUpdates);
                        }
                        if (object.rawLocation != null) {
                            if (typeof object.rawLocation !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.rawLocation: object expected");
                            message.rawLocation = $root.google.type.LatLng.fromObject(object.rawLocation);
                        }
                        if (object.rawLocationTime != null) {
                            if (typeof object.rawLocationTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.rawLocationTime: object expected");
                            message.rawLocationTime = $root.google.protobuf.Timestamp.fromObject(object.rawLocationTime);
                        }
                        switch (object.rawLocationSensor) {
                        default:
                            if (typeof object.rawLocationSensor === "number") {
                                message.rawLocationSensor = object.rawLocationSensor;
                                break;
                            }
                            break;
                        case "UNKNOWN_SENSOR":
                        case 0:
                            message.rawLocationSensor = 0;
                            break;
                        case "GPS":
                        case 1:
                            message.rawLocationSensor = 1;
                            break;
                        case "NETWORK":
                        case 2:
                            message.rawLocationSensor = 2;
                            break;
                        case "PASSIVE":
                        case 3:
                            message.rawLocationSensor = 3;
                            break;
                        case "ROAD_SNAPPED_LOCATION_PROVIDER":
                        case 4:
                            message.rawLocationSensor = 4;
                            break;
                        case "CUSTOMER_SUPPLIED_LOCATION":
                        case 5:
                            message.rawLocationSensor = 5;
                            break;
                        case "FLEET_ENGINE_LOCATION":
                        case 6:
                            message.rawLocationSensor = 6;
                            break;
                        case "FUSED_LOCATION_PROVIDER":
                        case 100:
                            message.rawLocationSensor = 100;
                            break;
                        case "CORE_LOCATION":
                        case 200:
                            message.rawLocationSensor = 200;
                            break;
                        }
                        if (object.rawLocationAccuracy != null) {
                            if (typeof object.rawLocationAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.rawLocationAccuracy: object expected");
                            message.rawLocationAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.rawLocationAccuracy);
                        }
                        if (object.supplementalLocation != null) {
                            if (typeof object.supplementalLocation !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.supplementalLocation: object expected");
                            message.supplementalLocation = $root.google.type.LatLng.fromObject(object.supplementalLocation);
                        }
                        if (object.supplementalLocationTime != null) {
                            if (typeof object.supplementalLocationTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.supplementalLocationTime: object expected");
                            message.supplementalLocationTime = $root.google.protobuf.Timestamp.fromObject(object.supplementalLocationTime);
                        }
                        switch (object.supplementalLocationSensor) {
                        default:
                            if (typeof object.supplementalLocationSensor === "number") {
                                message.supplementalLocationSensor = object.supplementalLocationSensor;
                                break;
                            }
                            break;
                        case "UNKNOWN_SENSOR":
                        case 0:
                            message.supplementalLocationSensor = 0;
                            break;
                        case "GPS":
                        case 1:
                            message.supplementalLocationSensor = 1;
                            break;
                        case "NETWORK":
                        case 2:
                            message.supplementalLocationSensor = 2;
                            break;
                        case "PASSIVE":
                        case 3:
                            message.supplementalLocationSensor = 3;
                            break;
                        case "ROAD_SNAPPED_LOCATION_PROVIDER":
                        case 4:
                            message.supplementalLocationSensor = 4;
                            break;
                        case "CUSTOMER_SUPPLIED_LOCATION":
                        case 5:
                            message.supplementalLocationSensor = 5;
                            break;
                        case "FLEET_ENGINE_LOCATION":
                        case 6:
                            message.supplementalLocationSensor = 6;
                            break;
                        case "FUSED_LOCATION_PROVIDER":
                        case 100:
                            message.supplementalLocationSensor = 100;
                            break;
                        case "CORE_LOCATION":
                        case 200:
                            message.supplementalLocationSensor = 200;
                            break;
                        }
                        if (object.supplementalLocationAccuracy != null) {
                            if (typeof object.supplementalLocationAccuracy !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleLocation.supplementalLocationAccuracy: object expected");
                            message.supplementalLocationAccuracy = $root.google.protobuf.DoubleValue.fromObject(object.supplementalLocationAccuracy);
                        }
                        if (object.roadSnapped != null)
                            message.roadSnapped = Boolean(object.roadSnapped);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VehicleLocation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {maps.fleetengine.v1.VehicleLocation} message VehicleLocation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VehicleLocation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.location = null;
                            object.heading = null;
                            object.speedKmph = null;
                            object.updateTime = null;
                            object.altitude = null;
                            object.speed = null;
                            object.speedAccuracy = null;
                            object.horizontalAccuracy = null;
                            object.verticalAccuracy = null;
                            object.bearingAccuracy = null;
                            object.locationSensor = options.enums === String ? "UNKNOWN_SENSOR" : 0;
                            object.isGpsSensorEnabled = null;
                            object.serverTime = null;
                            object.timeSinceUpdate = null;
                            object.numStaleUpdates = null;
                            object.rawLocation = null;
                            object.rawLocationTime = null;
                            object.supplementalLocation = null;
                            object.supplementalLocationTime = null;
                            object.supplementalLocationSensor = options.enums === String ? "UNKNOWN_SENSOR" : 0;
                            object.supplementalLocationAccuracy = null;
                            object.latlngAccuracy = null;
                            object.headingAccuracy = null;
                            object.altitudeAccuracy = null;
                            object.rawLocationAccuracy = null;
                            object.roadSnapped = false;
                            object.isRoadSnapped = null;
                            object.rawLocationSensor = options.enums === String ? "UNKNOWN_SENSOR" : 0;
                        }
                        if (message.location != null && message.hasOwnProperty("location"))
                            object.location = $root.google.type.LatLng.toObject(message.location, options);
                        if (message.heading != null && message.hasOwnProperty("heading"))
                            object.heading = $root.google.protobuf.Int32Value.toObject(message.heading, options);
                        if (message.speedKmph != null && message.hasOwnProperty("speedKmph"))
                            object.speedKmph = $root.google.protobuf.Int32Value.toObject(message.speedKmph, options);
                        if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                            object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                        if (message.altitude != null && message.hasOwnProperty("altitude"))
                            object.altitude = $root.google.protobuf.DoubleValue.toObject(message.altitude, options);
                        if (message.speed != null && message.hasOwnProperty("speed"))
                            object.speed = $root.google.protobuf.DoubleValue.toObject(message.speed, options);
                        if (message.speedAccuracy != null && message.hasOwnProperty("speedAccuracy"))
                            object.speedAccuracy = $root.google.protobuf.DoubleValue.toObject(message.speedAccuracy, options);
                        if (message.horizontalAccuracy != null && message.hasOwnProperty("horizontalAccuracy"))
                            object.horizontalAccuracy = $root.google.protobuf.DoubleValue.toObject(message.horizontalAccuracy, options);
                        if (message.verticalAccuracy != null && message.hasOwnProperty("verticalAccuracy"))
                            object.verticalAccuracy = $root.google.protobuf.DoubleValue.toObject(message.verticalAccuracy, options);
                        if (message.bearingAccuracy != null && message.hasOwnProperty("bearingAccuracy"))
                            object.bearingAccuracy = $root.google.protobuf.DoubleValue.toObject(message.bearingAccuracy, options);
                        if (message.locationSensor != null && message.hasOwnProperty("locationSensor"))
                            object.locationSensor = options.enums === String ? $root.maps.fleetengine.v1.LocationSensor[message.locationSensor] === undefined ? message.locationSensor : $root.maps.fleetengine.v1.LocationSensor[message.locationSensor] : message.locationSensor;
                        if (message.isGpsSensorEnabled != null && message.hasOwnProperty("isGpsSensorEnabled"))
                            object.isGpsSensorEnabled = $root.google.protobuf.BoolValue.toObject(message.isGpsSensorEnabled, options);
                        if (message.serverTime != null && message.hasOwnProperty("serverTime"))
                            object.serverTime = $root.google.protobuf.Timestamp.toObject(message.serverTime, options);
                        if (message.timeSinceUpdate != null && message.hasOwnProperty("timeSinceUpdate"))
                            object.timeSinceUpdate = $root.google.protobuf.Int32Value.toObject(message.timeSinceUpdate, options);
                        if (message.numStaleUpdates != null && message.hasOwnProperty("numStaleUpdates"))
                            object.numStaleUpdates = $root.google.protobuf.Int32Value.toObject(message.numStaleUpdates, options);
                        if (message.rawLocation != null && message.hasOwnProperty("rawLocation"))
                            object.rawLocation = $root.google.type.LatLng.toObject(message.rawLocation, options);
                        if (message.rawLocationTime != null && message.hasOwnProperty("rawLocationTime"))
                            object.rawLocationTime = $root.google.protobuf.Timestamp.toObject(message.rawLocationTime, options);
                        if (message.supplementalLocation != null && message.hasOwnProperty("supplementalLocation"))
                            object.supplementalLocation = $root.google.type.LatLng.toObject(message.supplementalLocation, options);
                        if (message.supplementalLocationTime != null && message.hasOwnProperty("supplementalLocationTime"))
                            object.supplementalLocationTime = $root.google.protobuf.Timestamp.toObject(message.supplementalLocationTime, options);
                        if (message.supplementalLocationSensor != null && message.hasOwnProperty("supplementalLocationSensor"))
                            object.supplementalLocationSensor = options.enums === String ? $root.maps.fleetengine.v1.LocationSensor[message.supplementalLocationSensor] === undefined ? message.supplementalLocationSensor : $root.maps.fleetengine.v1.LocationSensor[message.supplementalLocationSensor] : message.supplementalLocationSensor;
                        if (message.supplementalLocationAccuracy != null && message.hasOwnProperty("supplementalLocationAccuracy"))
                            object.supplementalLocationAccuracy = $root.google.protobuf.DoubleValue.toObject(message.supplementalLocationAccuracy, options);
                        if (message.latlngAccuracy != null && message.hasOwnProperty("latlngAccuracy"))
                            object.latlngAccuracy = $root.google.protobuf.DoubleValue.toObject(message.latlngAccuracy, options);
                        if (message.headingAccuracy != null && message.hasOwnProperty("headingAccuracy"))
                            object.headingAccuracy = $root.google.protobuf.DoubleValue.toObject(message.headingAccuracy, options);
                        if (message.altitudeAccuracy != null && message.hasOwnProperty("altitudeAccuracy"))
                            object.altitudeAccuracy = $root.google.protobuf.DoubleValue.toObject(message.altitudeAccuracy, options);
                        if (message.rawLocationAccuracy != null && message.hasOwnProperty("rawLocationAccuracy"))
                            object.rawLocationAccuracy = $root.google.protobuf.DoubleValue.toObject(message.rawLocationAccuracy, options);
                        if (message.roadSnapped != null && message.hasOwnProperty("roadSnapped"))
                            object.roadSnapped = message.roadSnapped;
                        if (message.isRoadSnapped != null && message.hasOwnProperty("isRoadSnapped"))
                            object.isRoadSnapped = $root.google.protobuf.BoolValue.toObject(message.isRoadSnapped, options);
                        if (message.rawLocationSensor != null && message.hasOwnProperty("rawLocationSensor"))
                            object.rawLocationSensor = options.enums === String ? $root.maps.fleetengine.v1.LocationSensor[message.rawLocationSensor] === undefined ? message.rawLocationSensor : $root.maps.fleetengine.v1.LocationSensor[message.rawLocationSensor] : message.rawLocationSensor;
                        return object;
                    };
    
                    /**
                     * Converts this VehicleLocation to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VehicleLocation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VehicleLocation
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.VehicleLocation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VehicleLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.VehicleLocation";
                    };
    
                    return VehicleLocation;
                })();
    
                /**
                 * LocationSensor enum.
                 * @name maps.fleetengine.v1.LocationSensor
                 * @enum {number}
                 * @property {number} UNKNOWN_SENSOR=0 UNKNOWN_SENSOR value
                 * @property {number} GPS=1 GPS value
                 * @property {number} NETWORK=2 NETWORK value
                 * @property {number} PASSIVE=3 PASSIVE value
                 * @property {number} ROAD_SNAPPED_LOCATION_PROVIDER=4 ROAD_SNAPPED_LOCATION_PROVIDER value
                 * @property {number} CUSTOMER_SUPPLIED_LOCATION=5 CUSTOMER_SUPPLIED_LOCATION value
                 * @property {number} FLEET_ENGINE_LOCATION=6 FLEET_ENGINE_LOCATION value
                 * @property {number} FUSED_LOCATION_PROVIDER=100 FUSED_LOCATION_PROVIDER value
                 * @property {number} CORE_LOCATION=200 CORE_LOCATION value
                 */
                v1.LocationSensor = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_SENSOR"] = 0;
                    values[valuesById[1] = "GPS"] = 1;
                    values[valuesById[2] = "NETWORK"] = 2;
                    values[valuesById[3] = "PASSIVE"] = 3;
                    values[valuesById[4] = "ROAD_SNAPPED_LOCATION_PROVIDER"] = 4;
                    values[valuesById[5] = "CUSTOMER_SUPPLIED_LOCATION"] = 5;
                    values[valuesById[6] = "FLEET_ENGINE_LOCATION"] = 6;
                    values[valuesById[100] = "FUSED_LOCATION_PROVIDER"] = 100;
                    values[valuesById[200] = "CORE_LOCATION"] = 200;
                    return values;
                })();
    
                v1.SpeedReadingInterval = (function() {
    
                    /**
                     * Properties of a SpeedReadingInterval.
                     * @memberof maps.fleetengine.v1
                     * @interface ISpeedReadingInterval
                     * @property {number|null} [startPolylinePointIndex] SpeedReadingInterval startPolylinePointIndex
                     * @property {number|null} [endPolylinePointIndex] SpeedReadingInterval endPolylinePointIndex
                     * @property {maps.fleetengine.v1.SpeedReadingInterval.Speed|null} [speed] SpeedReadingInterval speed
                     */
    
                    /**
                     * Constructs a new SpeedReadingInterval.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a SpeedReadingInterval.
                     * @implements ISpeedReadingInterval
                     * @constructor
                     * @param {maps.fleetengine.v1.ISpeedReadingInterval=} [properties] Properties to set
                     */
                    function SpeedReadingInterval(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SpeedReadingInterval startPolylinePointIndex.
                     * @member {number} startPolylinePointIndex
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @instance
                     */
                    SpeedReadingInterval.prototype.startPolylinePointIndex = 0;
    
                    /**
                     * SpeedReadingInterval endPolylinePointIndex.
                     * @member {number} endPolylinePointIndex
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @instance
                     */
                    SpeedReadingInterval.prototype.endPolylinePointIndex = 0;
    
                    /**
                     * SpeedReadingInterval speed.
                     * @member {maps.fleetengine.v1.SpeedReadingInterval.Speed} speed
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @instance
                     */
                    SpeedReadingInterval.prototype.speed = 0;
    
                    /**
                     * Creates a new SpeedReadingInterval instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {maps.fleetengine.v1.ISpeedReadingInterval=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.SpeedReadingInterval} SpeedReadingInterval instance
                     */
                    SpeedReadingInterval.create = function create(properties) {
                        return new SpeedReadingInterval(properties);
                    };
    
                    /**
                     * Encodes the specified SpeedReadingInterval message. Does not implicitly {@link maps.fleetengine.v1.SpeedReadingInterval.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {maps.fleetengine.v1.ISpeedReadingInterval} message SpeedReadingInterval message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SpeedReadingInterval.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.startPolylinePointIndex != null && Object.hasOwnProperty.call(message, "startPolylinePointIndex"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startPolylinePointIndex);
                        if (message.endPolylinePointIndex != null && Object.hasOwnProperty.call(message, "endPolylinePointIndex"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endPolylinePointIndex);
                        if (message.speed != null && Object.hasOwnProperty.call(message, "speed"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.speed);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SpeedReadingInterval message, length delimited. Does not implicitly {@link maps.fleetengine.v1.SpeedReadingInterval.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {maps.fleetengine.v1.ISpeedReadingInterval} message SpeedReadingInterval message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SpeedReadingInterval.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SpeedReadingInterval message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.SpeedReadingInterval} SpeedReadingInterval
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SpeedReadingInterval.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.SpeedReadingInterval();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.startPolylinePointIndex = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.endPolylinePointIndex = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.speed = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SpeedReadingInterval message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.SpeedReadingInterval} SpeedReadingInterval
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SpeedReadingInterval.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SpeedReadingInterval message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SpeedReadingInterval.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.startPolylinePointIndex != null && message.hasOwnProperty("startPolylinePointIndex"))
                            if (!$util.isInteger(message.startPolylinePointIndex))
                                return "startPolylinePointIndex: integer expected";
                        if (message.endPolylinePointIndex != null && message.hasOwnProperty("endPolylinePointIndex"))
                            if (!$util.isInteger(message.endPolylinePointIndex))
                                return "endPolylinePointIndex: integer expected";
                        if (message.speed != null && message.hasOwnProperty("speed"))
                            switch (message.speed) {
                            default:
                                return "speed: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a SpeedReadingInterval message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.SpeedReadingInterval} SpeedReadingInterval
                     */
                    SpeedReadingInterval.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.SpeedReadingInterval)
                            return object;
                        var message = new $root.maps.fleetengine.v1.SpeedReadingInterval();
                        if (object.startPolylinePointIndex != null)
                            message.startPolylinePointIndex = object.startPolylinePointIndex | 0;
                        if (object.endPolylinePointIndex != null)
                            message.endPolylinePointIndex = object.endPolylinePointIndex | 0;
                        switch (object.speed) {
                        default:
                            if (typeof object.speed === "number") {
                                message.speed = object.speed;
                                break;
                            }
                            break;
                        case "SPEED_UNSPECIFIED":
                        case 0:
                            message.speed = 0;
                            break;
                        case "NORMAL":
                        case 1:
                            message.speed = 1;
                            break;
                        case "SLOW":
                        case 2:
                            message.speed = 2;
                            break;
                        case "TRAFFIC_JAM":
                        case 3:
                            message.speed = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SpeedReadingInterval message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {maps.fleetengine.v1.SpeedReadingInterval} message SpeedReadingInterval
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SpeedReadingInterval.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.startPolylinePointIndex = 0;
                            object.endPolylinePointIndex = 0;
                            object.speed = options.enums === String ? "SPEED_UNSPECIFIED" : 0;
                        }
                        if (message.startPolylinePointIndex != null && message.hasOwnProperty("startPolylinePointIndex"))
                            object.startPolylinePointIndex = message.startPolylinePointIndex;
                        if (message.endPolylinePointIndex != null && message.hasOwnProperty("endPolylinePointIndex"))
                            object.endPolylinePointIndex = message.endPolylinePointIndex;
                        if (message.speed != null && message.hasOwnProperty("speed"))
                            object.speed = options.enums === String ? $root.maps.fleetengine.v1.SpeedReadingInterval.Speed[message.speed] === undefined ? message.speed : $root.maps.fleetengine.v1.SpeedReadingInterval.Speed[message.speed] : message.speed;
                        return object;
                    };
    
                    /**
                     * Converts this SpeedReadingInterval to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SpeedReadingInterval.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SpeedReadingInterval
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.SpeedReadingInterval
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SpeedReadingInterval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.SpeedReadingInterval";
                    };
    
                    /**
                     * Speed enum.
                     * @name maps.fleetengine.v1.SpeedReadingInterval.Speed
                     * @enum {number}
                     * @property {number} SPEED_UNSPECIFIED=0 SPEED_UNSPECIFIED value
                     * @property {number} NORMAL=1 NORMAL value
                     * @property {number} SLOW=2 SLOW value
                     * @property {number} TRAFFIC_JAM=3 TRAFFIC_JAM value
                     */
                    SpeedReadingInterval.Speed = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SPEED_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NORMAL"] = 1;
                        values[valuesById[2] = "SLOW"] = 2;
                        values[valuesById[3] = "TRAFFIC_JAM"] = 3;
                        return values;
                    })();
    
                    return SpeedReadingInterval;
                })();
    
                v1.ConsumableTrafficPolyline = (function() {
    
                    /**
                     * Properties of a ConsumableTrafficPolyline.
                     * @memberof maps.fleetengine.v1
                     * @interface IConsumableTrafficPolyline
                     * @property {Array.<maps.fleetengine.v1.ISpeedReadingInterval>|null} [speedReadingInterval] ConsumableTrafficPolyline speedReadingInterval
                     * @property {string|null} [encodedPathToWaypoint] ConsumableTrafficPolyline encodedPathToWaypoint
                     */
    
                    /**
                     * Constructs a new ConsumableTrafficPolyline.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a ConsumableTrafficPolyline.
                     * @implements IConsumableTrafficPolyline
                     * @constructor
                     * @param {maps.fleetengine.v1.IConsumableTrafficPolyline=} [properties] Properties to set
                     */
                    function ConsumableTrafficPolyline(properties) {
                        this.speedReadingInterval = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ConsumableTrafficPolyline speedReadingInterval.
                     * @member {Array.<maps.fleetengine.v1.ISpeedReadingInterval>} speedReadingInterval
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @instance
                     */
                    ConsumableTrafficPolyline.prototype.speedReadingInterval = $util.emptyArray;
    
                    /**
                     * ConsumableTrafficPolyline encodedPathToWaypoint.
                     * @member {string} encodedPathToWaypoint
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @instance
                     */
                    ConsumableTrafficPolyline.prototype.encodedPathToWaypoint = "";
    
                    /**
                     * Creates a new ConsumableTrafficPolyline instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {maps.fleetengine.v1.IConsumableTrafficPolyline=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.ConsumableTrafficPolyline} ConsumableTrafficPolyline instance
                     */
                    ConsumableTrafficPolyline.create = function create(properties) {
                        return new ConsumableTrafficPolyline(properties);
                    };
    
                    /**
                     * Encodes the specified ConsumableTrafficPolyline message. Does not implicitly {@link maps.fleetengine.v1.ConsumableTrafficPolyline.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {maps.fleetengine.v1.IConsumableTrafficPolyline} message ConsumableTrafficPolyline message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConsumableTrafficPolyline.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.speedReadingInterval != null && message.speedReadingInterval.length)
                            for (var i = 0; i < message.speedReadingInterval.length; ++i)
                                $root.maps.fleetengine.v1.SpeedReadingInterval.encode(message.speedReadingInterval[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.encodedPathToWaypoint != null && Object.hasOwnProperty.call(message, "encodedPathToWaypoint"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.encodedPathToWaypoint);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ConsumableTrafficPolyline message, length delimited. Does not implicitly {@link maps.fleetengine.v1.ConsumableTrafficPolyline.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {maps.fleetengine.v1.IConsumableTrafficPolyline} message ConsumableTrafficPolyline message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConsumableTrafficPolyline.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ConsumableTrafficPolyline message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.ConsumableTrafficPolyline} ConsumableTrafficPolyline
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConsumableTrafficPolyline.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.ConsumableTrafficPolyline();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.speedReadingInterval && message.speedReadingInterval.length))
                                        message.speedReadingInterval = [];
                                    message.speedReadingInterval.push($root.maps.fleetengine.v1.SpeedReadingInterval.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.encodedPathToWaypoint = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ConsumableTrafficPolyline message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.ConsumableTrafficPolyline} ConsumableTrafficPolyline
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConsumableTrafficPolyline.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ConsumableTrafficPolyline message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ConsumableTrafficPolyline.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.speedReadingInterval != null && message.hasOwnProperty("speedReadingInterval")) {
                            if (!Array.isArray(message.speedReadingInterval))
                                return "speedReadingInterval: array expected";
                            for (var i = 0; i < message.speedReadingInterval.length; ++i) {
                                var error = $root.maps.fleetengine.v1.SpeedReadingInterval.verify(message.speedReadingInterval[i]);
                                if (error)
                                    return "speedReadingInterval." + error;
                            }
                        }
                        if (message.encodedPathToWaypoint != null && message.hasOwnProperty("encodedPathToWaypoint"))
                            if (!$util.isString(message.encodedPathToWaypoint))
                                return "encodedPathToWaypoint: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ConsumableTrafficPolyline message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.ConsumableTrafficPolyline} ConsumableTrafficPolyline
                     */
                    ConsumableTrafficPolyline.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.ConsumableTrafficPolyline)
                            return object;
                        var message = new $root.maps.fleetengine.v1.ConsumableTrafficPolyline();
                        if (object.speedReadingInterval) {
                            if (!Array.isArray(object.speedReadingInterval))
                                throw TypeError(".maps.fleetengine.v1.ConsumableTrafficPolyline.speedReadingInterval: array expected");
                            message.speedReadingInterval = [];
                            for (var i = 0; i < object.speedReadingInterval.length; ++i) {
                                if (typeof object.speedReadingInterval[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.ConsumableTrafficPolyline.speedReadingInterval: object expected");
                                message.speedReadingInterval[i] = $root.maps.fleetengine.v1.SpeedReadingInterval.fromObject(object.speedReadingInterval[i]);
                            }
                        }
                        if (object.encodedPathToWaypoint != null)
                            message.encodedPathToWaypoint = String(object.encodedPathToWaypoint);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ConsumableTrafficPolyline message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {maps.fleetengine.v1.ConsumableTrafficPolyline} message ConsumableTrafficPolyline
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ConsumableTrafficPolyline.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.speedReadingInterval = [];
                        if (options.defaults)
                            object.encodedPathToWaypoint = "";
                        if (message.speedReadingInterval && message.speedReadingInterval.length) {
                            object.speedReadingInterval = [];
                            for (var j = 0; j < message.speedReadingInterval.length; ++j)
                                object.speedReadingInterval[j] = $root.maps.fleetengine.v1.SpeedReadingInterval.toObject(message.speedReadingInterval[j], options);
                        }
                        if (message.encodedPathToWaypoint != null && message.hasOwnProperty("encodedPathToWaypoint"))
                            object.encodedPathToWaypoint = message.encodedPathToWaypoint;
                        return object;
                    };
    
                    /**
                     * Converts this ConsumableTrafficPolyline to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ConsumableTrafficPolyline.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ConsumableTrafficPolyline
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.ConsumableTrafficPolyline
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ConsumableTrafficPolyline.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.ConsumableTrafficPolyline";
                    };
    
                    return ConsumableTrafficPolyline;
                })();
    
                v1.RequestHeader = (function() {
    
                    /**
                     * Properties of a RequestHeader.
                     * @memberof maps.fleetengine.v1
                     * @interface IRequestHeader
                     * @property {string|null} [languageCode] RequestHeader languageCode
                     * @property {string|null} [regionCode] RequestHeader regionCode
                     * @property {string|null} [sdkVersion] RequestHeader sdkVersion
                     * @property {string|null} [osVersion] RequestHeader osVersion
                     * @property {string|null} [deviceModel] RequestHeader deviceModel
                     * @property {maps.fleetengine.v1.RequestHeader.SdkType|null} [sdkType] RequestHeader sdkType
                     * @property {string|null} [mapsSdkVersion] RequestHeader mapsSdkVersion
                     * @property {string|null} [navSdkVersion] RequestHeader navSdkVersion
                     * @property {maps.fleetengine.v1.RequestHeader.Platform|null} [platform] RequestHeader platform
                     * @property {string|null} [manufacturer] RequestHeader manufacturer
                     * @property {number|null} [androidApiLevel] RequestHeader androidApiLevel
                     * @property {string|null} [traceId] RequestHeader traceId
                     */
    
                    /**
                     * Constructs a new RequestHeader.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a RequestHeader.
                     * @implements IRequestHeader
                     * @constructor
                     * @param {maps.fleetengine.v1.IRequestHeader=} [properties] Properties to set
                     */
                    function RequestHeader(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * RequestHeader languageCode.
                     * @member {string} languageCode
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.languageCode = "";
    
                    /**
                     * RequestHeader regionCode.
                     * @member {string} regionCode
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.regionCode = "";
    
                    /**
                     * RequestHeader sdkVersion.
                     * @member {string} sdkVersion
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.sdkVersion = "";
    
                    /**
                     * RequestHeader osVersion.
                     * @member {string} osVersion
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.osVersion = "";
    
                    /**
                     * RequestHeader deviceModel.
                     * @member {string} deviceModel
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.deviceModel = "";
    
                    /**
                     * RequestHeader sdkType.
                     * @member {maps.fleetengine.v1.RequestHeader.SdkType} sdkType
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.sdkType = 0;
    
                    /**
                     * RequestHeader mapsSdkVersion.
                     * @member {string} mapsSdkVersion
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.mapsSdkVersion = "";
    
                    /**
                     * RequestHeader navSdkVersion.
                     * @member {string} navSdkVersion
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.navSdkVersion = "";
    
                    /**
                     * RequestHeader platform.
                     * @member {maps.fleetengine.v1.RequestHeader.Platform} platform
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.platform = 0;
    
                    /**
                     * RequestHeader manufacturer.
                     * @member {string} manufacturer
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.manufacturer = "";
    
                    /**
                     * RequestHeader androidApiLevel.
                     * @member {number} androidApiLevel
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.androidApiLevel = 0;
    
                    /**
                     * RequestHeader traceId.
                     * @member {string} traceId
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     */
                    RequestHeader.prototype.traceId = "";
    
                    /**
                     * Creates a new RequestHeader instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {maps.fleetengine.v1.IRequestHeader=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.RequestHeader} RequestHeader instance
                     */
                    RequestHeader.create = function create(properties) {
                        return new RequestHeader(properties);
                    };
    
                    /**
                     * Encodes the specified RequestHeader message. Does not implicitly {@link maps.fleetengine.v1.RequestHeader.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {maps.fleetengine.v1.IRequestHeader} message RequestHeader message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RequestHeader.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageCode);
                        if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                        if (message.sdkVersion != null && Object.hasOwnProperty.call(message, "sdkVersion"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sdkVersion);
                        if (message.osVersion != null && Object.hasOwnProperty.call(message, "osVersion"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.osVersion);
                        if (message.deviceModel != null && Object.hasOwnProperty.call(message, "deviceModel"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.deviceModel);
                        if (message.sdkType != null && Object.hasOwnProperty.call(message, "sdkType"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.sdkType);
                        if (message.mapsSdkVersion != null && Object.hasOwnProperty.call(message, "mapsSdkVersion"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.mapsSdkVersion);
                        if (message.navSdkVersion != null && Object.hasOwnProperty.call(message, "navSdkVersion"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.navSdkVersion);
                        if (message.platform != null && Object.hasOwnProperty.call(message, "platform"))
                            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.platform);
                        if (message.manufacturer != null && Object.hasOwnProperty.call(message, "manufacturer"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.manufacturer);
                        if (message.androidApiLevel != null && Object.hasOwnProperty.call(message, "androidApiLevel"))
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.androidApiLevel);
                        if (message.traceId != null && Object.hasOwnProperty.call(message, "traceId"))
                            writer.uint32(/* id 12, wireType 2 =*/98).string(message.traceId);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified RequestHeader message, length delimited. Does not implicitly {@link maps.fleetengine.v1.RequestHeader.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {maps.fleetengine.v1.IRequestHeader} message RequestHeader message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RequestHeader.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a RequestHeader message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.RequestHeader} RequestHeader
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RequestHeader.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.RequestHeader();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.languageCode = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.regionCode = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.sdkVersion = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.osVersion = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.deviceModel = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.sdkType = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.mapsSdkVersion = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.navSdkVersion = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.platform = reader.int32();
                                    break;
                                }
                            case 10: {
                                    message.manufacturer = reader.string();
                                    break;
                                }
                            case 11: {
                                    message.androidApiLevel = reader.int32();
                                    break;
                                }
                            case 12: {
                                    message.traceId = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a RequestHeader message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.RequestHeader} RequestHeader
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RequestHeader.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a RequestHeader message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    RequestHeader.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                            if (!$util.isString(message.languageCode))
                                return "languageCode: string expected";
                        if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                            if (!$util.isString(message.regionCode))
                                return "regionCode: string expected";
                        if (message.sdkVersion != null && message.hasOwnProperty("sdkVersion"))
                            if (!$util.isString(message.sdkVersion))
                                return "sdkVersion: string expected";
                        if (message.osVersion != null && message.hasOwnProperty("osVersion"))
                            if (!$util.isString(message.osVersion))
                                return "osVersion: string expected";
                        if (message.deviceModel != null && message.hasOwnProperty("deviceModel"))
                            if (!$util.isString(message.deviceModel))
                                return "deviceModel: string expected";
                        if (message.sdkType != null && message.hasOwnProperty("sdkType"))
                            switch (message.sdkType) {
                            default:
                                return "sdkType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.mapsSdkVersion != null && message.hasOwnProperty("mapsSdkVersion"))
                            if (!$util.isString(message.mapsSdkVersion))
                                return "mapsSdkVersion: string expected";
                        if (message.navSdkVersion != null && message.hasOwnProperty("navSdkVersion"))
                            if (!$util.isString(message.navSdkVersion))
                                return "navSdkVersion: string expected";
                        if (message.platform != null && message.hasOwnProperty("platform"))
                            switch (message.platform) {
                            default:
                                return "platform: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.manufacturer != null && message.hasOwnProperty("manufacturer"))
                            if (!$util.isString(message.manufacturer))
                                return "manufacturer: string expected";
                        if (message.androidApiLevel != null && message.hasOwnProperty("androidApiLevel"))
                            if (!$util.isInteger(message.androidApiLevel))
                                return "androidApiLevel: integer expected";
                        if (message.traceId != null && message.hasOwnProperty("traceId"))
                            if (!$util.isString(message.traceId))
                                return "traceId: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a RequestHeader message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.RequestHeader} RequestHeader
                     */
                    RequestHeader.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.RequestHeader)
                            return object;
                        var message = new $root.maps.fleetengine.v1.RequestHeader();
                        if (object.languageCode != null)
                            message.languageCode = String(object.languageCode);
                        if (object.regionCode != null)
                            message.regionCode = String(object.regionCode);
                        if (object.sdkVersion != null)
                            message.sdkVersion = String(object.sdkVersion);
                        if (object.osVersion != null)
                            message.osVersion = String(object.osVersion);
                        if (object.deviceModel != null)
                            message.deviceModel = String(object.deviceModel);
                        switch (object.sdkType) {
                        default:
                            if (typeof object.sdkType === "number") {
                                message.sdkType = object.sdkType;
                                break;
                            }
                            break;
                        case "SDK_TYPE_UNSPECIFIED":
                        case 0:
                            message.sdkType = 0;
                            break;
                        case "CONSUMER":
                        case 1:
                            message.sdkType = 1;
                            break;
                        case "DRIVER":
                        case 2:
                            message.sdkType = 2;
                            break;
                        case "JAVASCRIPT":
                        case 3:
                            message.sdkType = 3;
                            break;
                        }
                        if (object.mapsSdkVersion != null)
                            message.mapsSdkVersion = String(object.mapsSdkVersion);
                        if (object.navSdkVersion != null)
                            message.navSdkVersion = String(object.navSdkVersion);
                        switch (object.platform) {
                        default:
                            if (typeof object.platform === "number") {
                                message.platform = object.platform;
                                break;
                            }
                            break;
                        case "PLATFORM_UNSPECIFIED":
                        case 0:
                            message.platform = 0;
                            break;
                        case "ANDROID":
                        case 1:
                            message.platform = 1;
                            break;
                        case "IOS":
                        case 2:
                            message.platform = 2;
                            break;
                        case "WEB":
                        case 3:
                            message.platform = 3;
                            break;
                        }
                        if (object.manufacturer != null)
                            message.manufacturer = String(object.manufacturer);
                        if (object.androidApiLevel != null)
                            message.androidApiLevel = object.androidApiLevel | 0;
                        if (object.traceId != null)
                            message.traceId = String(object.traceId);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a RequestHeader message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {maps.fleetengine.v1.RequestHeader} message RequestHeader
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    RequestHeader.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.languageCode = "";
                            object.regionCode = "";
                            object.sdkVersion = "";
                            object.osVersion = "";
                            object.deviceModel = "";
                            object.sdkType = options.enums === String ? "SDK_TYPE_UNSPECIFIED" : 0;
                            object.mapsSdkVersion = "";
                            object.navSdkVersion = "";
                            object.platform = options.enums === String ? "PLATFORM_UNSPECIFIED" : 0;
                            object.manufacturer = "";
                            object.androidApiLevel = 0;
                            object.traceId = "";
                        }
                        if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                            object.languageCode = message.languageCode;
                        if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                            object.regionCode = message.regionCode;
                        if (message.sdkVersion != null && message.hasOwnProperty("sdkVersion"))
                            object.sdkVersion = message.sdkVersion;
                        if (message.osVersion != null && message.hasOwnProperty("osVersion"))
                            object.osVersion = message.osVersion;
                        if (message.deviceModel != null && message.hasOwnProperty("deviceModel"))
                            object.deviceModel = message.deviceModel;
                        if (message.sdkType != null && message.hasOwnProperty("sdkType"))
                            object.sdkType = options.enums === String ? $root.maps.fleetengine.v1.RequestHeader.SdkType[message.sdkType] === undefined ? message.sdkType : $root.maps.fleetengine.v1.RequestHeader.SdkType[message.sdkType] : message.sdkType;
                        if (message.mapsSdkVersion != null && message.hasOwnProperty("mapsSdkVersion"))
                            object.mapsSdkVersion = message.mapsSdkVersion;
                        if (message.navSdkVersion != null && message.hasOwnProperty("navSdkVersion"))
                            object.navSdkVersion = message.navSdkVersion;
                        if (message.platform != null && message.hasOwnProperty("platform"))
                            object.platform = options.enums === String ? $root.maps.fleetengine.v1.RequestHeader.Platform[message.platform] === undefined ? message.platform : $root.maps.fleetengine.v1.RequestHeader.Platform[message.platform] : message.platform;
                        if (message.manufacturer != null && message.hasOwnProperty("manufacturer"))
                            object.manufacturer = message.manufacturer;
                        if (message.androidApiLevel != null && message.hasOwnProperty("androidApiLevel"))
                            object.androidApiLevel = message.androidApiLevel;
                        if (message.traceId != null && message.hasOwnProperty("traceId"))
                            object.traceId = message.traceId;
                        return object;
                    };
    
                    /**
                     * Converts this RequestHeader to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    RequestHeader.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for RequestHeader
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.RequestHeader
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    RequestHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.RequestHeader";
                    };
    
                    /**
                     * SdkType enum.
                     * @name maps.fleetengine.v1.RequestHeader.SdkType
                     * @enum {number}
                     * @property {number} SDK_TYPE_UNSPECIFIED=0 SDK_TYPE_UNSPECIFIED value
                     * @property {number} CONSUMER=1 CONSUMER value
                     * @property {number} DRIVER=2 DRIVER value
                     * @property {number} JAVASCRIPT=3 JAVASCRIPT value
                     */
                    RequestHeader.SdkType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SDK_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CONSUMER"] = 1;
                        values[valuesById[2] = "DRIVER"] = 2;
                        values[valuesById[3] = "JAVASCRIPT"] = 3;
                        return values;
                    })();
    
                    /**
                     * Platform enum.
                     * @name maps.fleetengine.v1.RequestHeader.Platform
                     * @enum {number}
                     * @property {number} PLATFORM_UNSPECIFIED=0 PLATFORM_UNSPECIFIED value
                     * @property {number} ANDROID=1 ANDROID value
                     * @property {number} IOS=2 IOS value
                     * @property {number} WEB=3 WEB value
                     */
                    RequestHeader.Platform = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PLATFORM_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ANDROID"] = 1;
                        values[valuesById[2] = "IOS"] = 2;
                        values[valuesById[3] = "WEB"] = 3;
                        return values;
                    })();
    
                    return RequestHeader;
                })();
    
                v1.TripService = (function() {
    
                    /**
                     * Constructs a new TripService service.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a TripService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function TripService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (TripService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = TripService;
    
                    /**
                     * Creates new TripService service using the specified rpc implementation.
                     * @function create
                     * @memberof maps.fleetengine.v1.TripService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {TripService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    TripService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.TripService|createTrip}.
                     * @memberof maps.fleetengine.v1.TripService
                     * @typedef CreateTripCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Trip} [response] Trip
                     */
    
                    /**
                     * Calls CreateTrip.
                     * @function createTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.ICreateTripRequest} request CreateTripRequest message or plain object
                     * @param {maps.fleetengine.v1.TripService.CreateTripCallback} callback Node-style callback called with the error, if any, and Trip
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(TripService.prototype.createTrip = function createTrip(request, callback) {
                        return this.rpcCall(createTrip, $root.maps.fleetengine.v1.CreateTripRequest, $root.maps.fleetengine.v1.Trip, request, callback);
                    }, "name", { value: "CreateTrip" });
    
                    /**
                     * Calls CreateTrip.
                     * @function createTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.ICreateTripRequest} request CreateTripRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Trip>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.TripService|getTrip}.
                     * @memberof maps.fleetengine.v1.TripService
                     * @typedef GetTripCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Trip} [response] Trip
                     */
    
                    /**
                     * Calls GetTrip.
                     * @function getTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IGetTripRequest} request GetTripRequest message or plain object
                     * @param {maps.fleetengine.v1.TripService.GetTripCallback} callback Node-style callback called with the error, if any, and Trip
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(TripService.prototype.getTrip = function getTrip(request, callback) {
                        return this.rpcCall(getTrip, $root.maps.fleetengine.v1.GetTripRequest, $root.maps.fleetengine.v1.Trip, request, callback);
                    }, "name", { value: "GetTrip" });
    
                    /**
                     * Calls GetTrip.
                     * @function getTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IGetTripRequest} request GetTripRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Trip>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.TripService|reportBillableTrip}.
                     * @memberof maps.fleetengine.v1.TripService
                     * @typedef ReportBillableTripCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls ReportBillableTrip.
                     * @function reportBillableTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest} request ReportBillableTripRequest message or plain object
                     * @param {maps.fleetengine.v1.TripService.ReportBillableTripCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(TripService.prototype.reportBillableTrip = function reportBillableTrip(request, callback) {
                        return this.rpcCall(reportBillableTrip, $root.maps.fleetengine.v1.ReportBillableTripRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "ReportBillableTrip" });
    
                    /**
                     * Calls ReportBillableTrip.
                     * @function reportBillableTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest} request ReportBillableTripRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.TripService|searchTrips}.
                     * @memberof maps.fleetengine.v1.TripService
                     * @typedef SearchTripsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.SearchTripsResponse} [response] SearchTripsResponse
                     */
    
                    /**
                     * Calls SearchTrips.
                     * @function searchTrips
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.ISearchTripsRequest} request SearchTripsRequest message or plain object
                     * @param {maps.fleetengine.v1.TripService.SearchTripsCallback} callback Node-style callback called with the error, if any, and SearchTripsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(TripService.prototype.searchTrips = function searchTrips(request, callback) {
                        return this.rpcCall(searchTrips, $root.maps.fleetengine.v1.SearchTripsRequest, $root.maps.fleetengine.v1.SearchTripsResponse, request, callback);
                    }, "name", { value: "SearchTrips" });
    
                    /**
                     * Calls SearchTrips.
                     * @function searchTrips
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.ISearchTripsRequest} request SearchTripsRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.SearchTripsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.TripService|updateTrip}.
                     * @memberof maps.fleetengine.v1.TripService
                     * @typedef UpdateTripCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Trip} [response] Trip
                     */
    
                    /**
                     * Calls UpdateTrip.
                     * @function updateTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateTripRequest} request UpdateTripRequest message or plain object
                     * @param {maps.fleetengine.v1.TripService.UpdateTripCallback} callback Node-style callback called with the error, if any, and Trip
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(TripService.prototype.updateTrip = function updateTrip(request, callback) {
                        return this.rpcCall(updateTrip, $root.maps.fleetengine.v1.UpdateTripRequest, $root.maps.fleetengine.v1.Trip, request, callback);
                    }, "name", { value: "UpdateTrip" });
    
                    /**
                     * Calls UpdateTrip.
                     * @function updateTrip
                     * @memberof maps.fleetengine.v1.TripService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateTripRequest} request UpdateTripRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Trip>} Promise
                     * @variation 2
                     */
    
                    return TripService;
                })();
    
                v1.CreateTripRequest = (function() {
    
                    /**
                     * Properties of a CreateTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface ICreateTripRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] CreateTripRequest header
                     * @property {string|null} [parent] CreateTripRequest parent
                     * @property {string|null} [tripId] CreateTripRequest tripId
                     * @property {maps.fleetengine.v1.ITrip|null} [trip] CreateTripRequest trip
                     */
    
                    /**
                     * Constructs a new CreateTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a CreateTripRequest.
                     * @implements ICreateTripRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.ICreateTripRequest=} [properties] Properties to set
                     */
                    function CreateTripRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateTripRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @instance
                     */
                    CreateTripRequest.prototype.header = null;
    
                    /**
                     * CreateTripRequest parent.
                     * @member {string} parent
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @instance
                     */
                    CreateTripRequest.prototype.parent = "";
    
                    /**
                     * CreateTripRequest tripId.
                     * @member {string} tripId
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @instance
                     */
                    CreateTripRequest.prototype.tripId = "";
    
                    /**
                     * CreateTripRequest trip.
                     * @member {maps.fleetengine.v1.ITrip|null|undefined} trip
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @instance
                     */
                    CreateTripRequest.prototype.trip = null;
    
                    /**
                     * Creates a new CreateTripRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateTripRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.CreateTripRequest} CreateTripRequest instance
                     */
                    CreateTripRequest.create = function create(properties) {
                        return new CreateTripRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateTripRequest message. Does not implicitly {@link maps.fleetengine.v1.CreateTripRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateTripRequest} message CreateTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTripRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.parent);
                        if (message.trip != null && Object.hasOwnProperty.call(message, "trip"))
                            $root.maps.fleetengine.v1.Trip.encode(message.trip, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.tripId != null && Object.hasOwnProperty.call(message, "tripId"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.tripId);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateTripRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.CreateTripRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateTripRequest} message CreateTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateTripRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateTripRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.CreateTripRequest} CreateTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTripRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.CreateTripRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.tripId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trip = $root.maps.fleetengine.v1.Trip.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateTripRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.CreateTripRequest} CreateTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateTripRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateTripRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateTripRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            if (!$util.isString(message.tripId))
                                return "tripId: string expected";
                        if (message.trip != null && message.hasOwnProperty("trip")) {
                            var error = $root.maps.fleetengine.v1.Trip.verify(message.trip);
                            if (error)
                                return "trip." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateTripRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.CreateTripRequest} CreateTripRequest
                     */
                    CreateTripRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.CreateTripRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.CreateTripRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.CreateTripRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.tripId != null)
                            message.tripId = String(object.tripId);
                        if (object.trip != null) {
                            if (typeof object.trip !== "object")
                                throw TypeError(".maps.fleetengine.v1.CreateTripRequest.trip: object expected");
                            message.trip = $root.maps.fleetengine.v1.Trip.fromObject(object.trip);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateTripRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.CreateTripRequest} message CreateTripRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateTripRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.parent = "";
                            object.trip = null;
                            object.tripId = "";
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.trip != null && message.hasOwnProperty("trip"))
                            object.trip = $root.maps.fleetengine.v1.Trip.toObject(message.trip, options);
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            object.tripId = message.tripId;
                        return object;
                    };
    
                    /**
                     * Converts this CreateTripRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateTripRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateTripRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.CreateTripRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateTripRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.CreateTripRequest";
                    };
    
                    return CreateTripRequest;
                })();
    
                v1.GetTripRequest = (function() {
    
                    /**
                     * Properties of a GetTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IGetTripRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] GetTripRequest header
                     * @property {string|null} [name] GetTripRequest name
                     * @property {maps.fleetengine.v1.TripView|null} [view] GetTripRequest view
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentVersion] GetTripRequest currentRouteSegmentVersion
                     * @property {google.protobuf.ITimestamp|null} [remainingWaypointsVersion] GetTripRequest remainingWaypointsVersion
                     * @property {maps.fleetengine.v1.PolylineFormatType|null} [routeFormatType] GetTripRequest routeFormatType
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentTrafficVersion] GetTripRequest currentRouteSegmentTrafficVersion
                     * @property {google.protobuf.ITimestamp|null} [remainingWaypointsRouteVersion] GetTripRequest remainingWaypointsRouteVersion
                     */
    
                    /**
                     * Constructs a new GetTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a GetTripRequest.
                     * @implements IGetTripRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IGetTripRequest=} [properties] Properties to set
                     */
                    function GetTripRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetTripRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.header = null;
    
                    /**
                     * GetTripRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.name = "";
    
                    /**
                     * GetTripRequest view.
                     * @member {maps.fleetengine.v1.TripView} view
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.view = 0;
    
                    /**
                     * GetTripRequest currentRouteSegmentVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentVersion
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.currentRouteSegmentVersion = null;
    
                    /**
                     * GetTripRequest remainingWaypointsVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} remainingWaypointsVersion
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.remainingWaypointsVersion = null;
    
                    /**
                     * GetTripRequest routeFormatType.
                     * @member {maps.fleetengine.v1.PolylineFormatType} routeFormatType
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.routeFormatType = 0;
    
                    /**
                     * GetTripRequest currentRouteSegmentTrafficVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentTrafficVersion
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.currentRouteSegmentTrafficVersion = null;
    
                    /**
                     * GetTripRequest remainingWaypointsRouteVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} remainingWaypointsRouteVersion
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     */
                    GetTripRequest.prototype.remainingWaypointsRouteVersion = null;
    
                    /**
                     * Creates a new GetTripRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetTripRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.GetTripRequest} GetTripRequest instance
                     */
                    GetTripRequest.create = function create(properties) {
                        return new GetTripRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetTripRequest message. Does not implicitly {@link maps.fleetengine.v1.GetTripRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetTripRequest} message GetTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetTripRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.currentRouteSegmentVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentVersion, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.remainingWaypointsVersion != null && Object.hasOwnProperty.call(message, "remainingWaypointsVersion"))
                            $root.google.protobuf.Timestamp.encode(message.remainingWaypointsVersion, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.routeFormatType != null && Object.hasOwnProperty.call(message, "routeFormatType"))
                            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.routeFormatType);
                        if (message.currentRouteSegmentTrafficVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentTrafficVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentTrafficVersion, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.remainingWaypointsRouteVersion != null && Object.hasOwnProperty.call(message, "remainingWaypointsRouteVersion"))
                            $root.google.protobuf.Timestamp.encode(message.remainingWaypointsRouteVersion, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.view);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetTripRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.GetTripRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetTripRequest} message GetTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetTripRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetTripRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.GetTripRequest} GetTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetTripRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.GetTripRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 11: {
                                    message.view = reader.int32();
                                    break;
                                }
                            case 6: {
                                    message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.remainingWaypointsVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.routeFormatType = reader.int32();
                                    break;
                                }
                            case 9: {
                                    message.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetTripRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.GetTripRequest} GetTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetTripRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetTripRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetTripRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.view != null && message.hasOwnProperty("view"))
                            switch (message.view) {
                            default:
                                return "view: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentVersion);
                            if (error)
                                return "currentRouteSegmentVersion." + error;
                        }
                        if (message.remainingWaypointsVersion != null && message.hasOwnProperty("remainingWaypointsVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.remainingWaypointsVersion);
                            if (error)
                                return "remainingWaypointsVersion." + error;
                        }
                        if (message.routeFormatType != null && message.hasOwnProperty("routeFormatType"))
                            switch (message.routeFormatType) {
                            default:
                                return "routeFormatType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.currentRouteSegmentTrafficVersion != null && message.hasOwnProperty("currentRouteSegmentTrafficVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentTrafficVersion);
                            if (error)
                                return "currentRouteSegmentTrafficVersion." + error;
                        }
                        if (message.remainingWaypointsRouteVersion != null && message.hasOwnProperty("remainingWaypointsRouteVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.remainingWaypointsRouteVersion);
                            if (error)
                                return "remainingWaypointsRouteVersion." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetTripRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.GetTripRequest} GetTripRequest
                     */
                    GetTripRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.GetTripRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.GetTripRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetTripRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        switch (object.view) {
                        default:
                            if (typeof object.view === "number") {
                                message.view = object.view;
                                break;
                            }
                            break;
                        case "TRIP_VIEW_UNSPECIFIED":
                        case 0:
                            message.view = 0;
                            break;
                        case "SDK":
                        case 1:
                            message.view = 1;
                            break;
                        case "JOURNEY_SHARING_V1S":
                        case 2:
                            message.view = 2;
                            break;
                        }
                        if (object.currentRouteSegmentVersion != null) {
                            if (typeof object.currentRouteSegmentVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetTripRequest.currentRouteSegmentVersion: object expected");
                            message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentVersion);
                        }
                        if (object.remainingWaypointsVersion != null) {
                            if (typeof object.remainingWaypointsVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetTripRequest.remainingWaypointsVersion: object expected");
                            message.remainingWaypointsVersion = $root.google.protobuf.Timestamp.fromObject(object.remainingWaypointsVersion);
                        }
                        switch (object.routeFormatType) {
                        default:
                            if (typeof object.routeFormatType === "number") {
                                message.routeFormatType = object.routeFormatType;
                                break;
                            }
                            break;
                        case "UNKNOWN_FORMAT_TYPE":
                        case 0:
                            message.routeFormatType = 0;
                            break;
                        case "LAT_LNG_LIST_TYPE":
                        case 1:
                            message.routeFormatType = 1;
                            break;
                        case "ENCODED_POLYLINE_TYPE":
                        case 2:
                            message.routeFormatType = 2;
                            break;
                        }
                        if (object.currentRouteSegmentTrafficVersion != null) {
                            if (typeof object.currentRouteSegmentTrafficVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetTripRequest.currentRouteSegmentTrafficVersion: object expected");
                            message.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentTrafficVersion);
                        }
                        if (object.remainingWaypointsRouteVersion != null) {
                            if (typeof object.remainingWaypointsRouteVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetTripRequest.remainingWaypointsRouteVersion: object expected");
                            message.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.fromObject(object.remainingWaypointsRouteVersion);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetTripRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.GetTripRequest} message GetTripRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetTripRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.name = "";
                            object.currentRouteSegmentVersion = null;
                            object.remainingWaypointsVersion = null;
                            object.routeFormatType = options.enums === String ? "UNKNOWN_FORMAT_TYPE" : 0;
                            object.currentRouteSegmentTrafficVersion = null;
                            object.remainingWaypointsRouteVersion = null;
                            object.view = options.enums === String ? "TRIP_VIEW_UNSPECIFIED" : 0;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion"))
                            object.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentVersion, options);
                        if (message.remainingWaypointsVersion != null && message.hasOwnProperty("remainingWaypointsVersion"))
                            object.remainingWaypointsVersion = $root.google.protobuf.Timestamp.toObject(message.remainingWaypointsVersion, options);
                        if (message.routeFormatType != null && message.hasOwnProperty("routeFormatType"))
                            object.routeFormatType = options.enums === String ? $root.maps.fleetengine.v1.PolylineFormatType[message.routeFormatType] === undefined ? message.routeFormatType : $root.maps.fleetengine.v1.PolylineFormatType[message.routeFormatType] : message.routeFormatType;
                        if (message.currentRouteSegmentTrafficVersion != null && message.hasOwnProperty("currentRouteSegmentTrafficVersion"))
                            object.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentTrafficVersion, options);
                        if (message.remainingWaypointsRouteVersion != null && message.hasOwnProperty("remainingWaypointsRouteVersion"))
                            object.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.toObject(message.remainingWaypointsRouteVersion, options);
                        if (message.view != null && message.hasOwnProperty("view"))
                            object.view = options.enums === String ? $root.maps.fleetengine.v1.TripView[message.view] === undefined ? message.view : $root.maps.fleetengine.v1.TripView[message.view] : message.view;
                        return object;
                    };
    
                    /**
                     * Converts this GetTripRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetTripRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetTripRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.GetTripRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetTripRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.GetTripRequest";
                    };
    
                    return GetTripRequest;
                })();
    
                v1.ReportBillableTripRequest = (function() {
    
                    /**
                     * Properties of a ReportBillableTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IReportBillableTripRequest
                     * @property {string|null} [name] ReportBillableTripRequest name
                     * @property {string|null} [countryCode] ReportBillableTripRequest countryCode
                     * @property {maps.fleetengine.v1.BillingPlatformIdentifier|null} [platform] ReportBillableTripRequest platform
                     * @property {Array.<string>|null} [relatedIds] ReportBillableTripRequest relatedIds
                     * @property {maps.fleetengine.v1.ReportBillableTripRequest.SolutionType|null} [solutionType] ReportBillableTripRequest solutionType
                     */
    
                    /**
                     * Constructs a new ReportBillableTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a ReportBillableTripRequest.
                     * @implements IReportBillableTripRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest=} [properties] Properties to set
                     */
                    function ReportBillableTripRequest(properties) {
                        this.relatedIds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReportBillableTripRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     */
                    ReportBillableTripRequest.prototype.name = "";
    
                    /**
                     * ReportBillableTripRequest countryCode.
                     * @member {string} countryCode
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     */
                    ReportBillableTripRequest.prototype.countryCode = "";
    
                    /**
                     * ReportBillableTripRequest platform.
                     * @member {maps.fleetengine.v1.BillingPlatformIdentifier} platform
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     */
                    ReportBillableTripRequest.prototype.platform = 0;
    
                    /**
                     * ReportBillableTripRequest relatedIds.
                     * @member {Array.<string>} relatedIds
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     */
                    ReportBillableTripRequest.prototype.relatedIds = $util.emptyArray;
    
                    /**
                     * ReportBillableTripRequest solutionType.
                     * @member {maps.fleetengine.v1.ReportBillableTripRequest.SolutionType} solutionType
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     */
                    ReportBillableTripRequest.prototype.solutionType = 0;
    
                    /**
                     * Creates a new ReportBillableTripRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.ReportBillableTripRequest} ReportBillableTripRequest instance
                     */
                    ReportBillableTripRequest.create = function create(properties) {
                        return new ReportBillableTripRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ReportBillableTripRequest message. Does not implicitly {@link maps.fleetengine.v1.ReportBillableTripRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest} message ReportBillableTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReportBillableTripRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                        if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.countryCode);
                        if (message.platform != null && Object.hasOwnProperty.call(message, "platform"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.platform);
                        if (message.relatedIds != null && message.relatedIds.length)
                            for (var i = 0; i < message.relatedIds.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.relatedIds[i]);
                        if (message.solutionType != null && Object.hasOwnProperty.call(message, "solutionType"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.solutionType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReportBillableTripRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.ReportBillableTripRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IReportBillableTripRequest} message ReportBillableTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReportBillableTripRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReportBillableTripRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.ReportBillableTripRequest} ReportBillableTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReportBillableTripRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.ReportBillableTripRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.countryCode = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.platform = reader.int32();
                                    break;
                                }
                            case 6: {
                                    if (!(message.relatedIds && message.relatedIds.length))
                                        message.relatedIds = [];
                                    message.relatedIds.push(reader.string());
                                    break;
                                }
                            case 7: {
                                    message.solutionType = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReportBillableTripRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.ReportBillableTripRequest} ReportBillableTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReportBillableTripRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReportBillableTripRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReportBillableTripRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                            if (!$util.isString(message.countryCode))
                                return "countryCode: string expected";
                        if (message.platform != null && message.hasOwnProperty("platform"))
                            switch (message.platform) {
                            default:
                                return "platform: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.relatedIds != null && message.hasOwnProperty("relatedIds")) {
                            if (!Array.isArray(message.relatedIds))
                                return "relatedIds: array expected";
                            for (var i = 0; i < message.relatedIds.length; ++i)
                                if (!$util.isString(message.relatedIds[i]))
                                    return "relatedIds: string[] expected";
                        }
                        if (message.solutionType != null && message.hasOwnProperty("solutionType"))
                            switch (message.solutionType) {
                            default:
                                return "solutionType: enum value expected";
                            case 0:
                            case 1:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a ReportBillableTripRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.ReportBillableTripRequest} ReportBillableTripRequest
                     */
                    ReportBillableTripRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.ReportBillableTripRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.ReportBillableTripRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.countryCode != null)
                            message.countryCode = String(object.countryCode);
                        switch (object.platform) {
                        default:
                            if (typeof object.platform === "number") {
                                message.platform = object.platform;
                                break;
                            }
                            break;
                        case "BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED":
                        case 0:
                            message.platform = 0;
                            break;
                        case "SERVER":
                        case 1:
                            message.platform = 1;
                            break;
                        case "WEB":
                        case 2:
                            message.platform = 2;
                            break;
                        case "ANDROID":
                        case 3:
                            message.platform = 3;
                            break;
                        case "IOS":
                        case 4:
                            message.platform = 4;
                            break;
                        case "OTHERS":
                        case 5:
                            message.platform = 5;
                            break;
                        }
                        if (object.relatedIds) {
                            if (!Array.isArray(object.relatedIds))
                                throw TypeError(".maps.fleetengine.v1.ReportBillableTripRequest.relatedIds: array expected");
                            message.relatedIds = [];
                            for (var i = 0; i < object.relatedIds.length; ++i)
                                message.relatedIds[i] = String(object.relatedIds[i]);
                        }
                        switch (object.solutionType) {
                        default:
                            if (typeof object.solutionType === "number") {
                                message.solutionType = object.solutionType;
                                break;
                            }
                            break;
                        case "SOLUTION_TYPE_UNSPECIFIED":
                        case 0:
                            message.solutionType = 0;
                            break;
                        case "ON_DEMAND_RIDESHARING_AND_DELIVERIES":
                        case 1:
                            message.solutionType = 1;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReportBillableTripRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.ReportBillableTripRequest} message ReportBillableTripRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReportBillableTripRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.relatedIds = [];
                        if (options.defaults) {
                            object.name = "";
                            object.countryCode = "";
                            object.platform = options.enums === String ? "BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED" : 0;
                            object.solutionType = options.enums === String ? "SOLUTION_TYPE_UNSPECIFIED" : 0;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                            object.countryCode = message.countryCode;
                        if (message.platform != null && message.hasOwnProperty("platform"))
                            object.platform = options.enums === String ? $root.maps.fleetengine.v1.BillingPlatformIdentifier[message.platform] === undefined ? message.platform : $root.maps.fleetengine.v1.BillingPlatformIdentifier[message.platform] : message.platform;
                        if (message.relatedIds && message.relatedIds.length) {
                            object.relatedIds = [];
                            for (var j = 0; j < message.relatedIds.length; ++j)
                                object.relatedIds[j] = message.relatedIds[j];
                        }
                        if (message.solutionType != null && message.hasOwnProperty("solutionType"))
                            object.solutionType = options.enums === String ? $root.maps.fleetengine.v1.ReportBillableTripRequest.SolutionType[message.solutionType] === undefined ? message.solutionType : $root.maps.fleetengine.v1.ReportBillableTripRequest.SolutionType[message.solutionType] : message.solutionType;
                        return object;
                    };
    
                    /**
                     * Converts this ReportBillableTripRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReportBillableTripRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReportBillableTripRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.ReportBillableTripRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReportBillableTripRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.ReportBillableTripRequest";
                    };
    
                    /**
                     * SolutionType enum.
                     * @name maps.fleetengine.v1.ReportBillableTripRequest.SolutionType
                     * @enum {number}
                     * @property {number} SOLUTION_TYPE_UNSPECIFIED=0 SOLUTION_TYPE_UNSPECIFIED value
                     * @property {number} ON_DEMAND_RIDESHARING_AND_DELIVERIES=1 ON_DEMAND_RIDESHARING_AND_DELIVERIES value
                     */
                    ReportBillableTripRequest.SolutionType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SOLUTION_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ON_DEMAND_RIDESHARING_AND_DELIVERIES"] = 1;
                        return values;
                    })();
    
                    return ReportBillableTripRequest;
                })();
    
                v1.UpdateTripRequest = (function() {
    
                    /**
                     * Properties of an UpdateTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IUpdateTripRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] UpdateTripRequest header
                     * @property {string|null} [name] UpdateTripRequest name
                     * @property {maps.fleetengine.v1.ITrip|null} [trip] UpdateTripRequest trip
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateTripRequest updateMask
                     */
    
                    /**
                     * Constructs a new UpdateTripRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents an UpdateTripRequest.
                     * @implements IUpdateTripRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IUpdateTripRequest=} [properties] Properties to set
                     */
                    function UpdateTripRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateTripRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @instance
                     */
                    UpdateTripRequest.prototype.header = null;
    
                    /**
                     * UpdateTripRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @instance
                     */
                    UpdateTripRequest.prototype.name = "";
    
                    /**
                     * UpdateTripRequest trip.
                     * @member {maps.fleetengine.v1.ITrip|null|undefined} trip
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @instance
                     */
                    UpdateTripRequest.prototype.trip = null;
    
                    /**
                     * UpdateTripRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @instance
                     */
                    UpdateTripRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new UpdateTripRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateTripRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.UpdateTripRequest} UpdateTripRequest instance
                     */
                    UpdateTripRequest.create = function create(properties) {
                        return new UpdateTripRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateTripRequest message. Does not implicitly {@link maps.fleetengine.v1.UpdateTripRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateTripRequest} message UpdateTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateTripRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.trip != null && Object.hasOwnProperty.call(message, "trip"))
                            $root.maps.fleetengine.v1.Trip.encode(message.trip, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateTripRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.UpdateTripRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateTripRequest} message UpdateTripRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateTripRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateTripRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.UpdateTripRequest} UpdateTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateTripRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.UpdateTripRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trip = $root.maps.fleetengine.v1.Trip.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateTripRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.UpdateTripRequest} UpdateTripRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateTripRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateTripRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateTripRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.trip != null && message.hasOwnProperty("trip")) {
                            var error = $root.maps.fleetengine.v1.Trip.verify(message.trip);
                            if (error)
                                return "trip." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateTripRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.UpdateTripRequest} UpdateTripRequest
                     */
                    UpdateTripRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.UpdateTripRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.UpdateTripRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateTripRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.trip != null) {
                            if (typeof object.trip !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateTripRequest.trip: object expected");
                            message.trip = $root.maps.fleetengine.v1.Trip.fromObject(object.trip);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateTripRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateTripRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {maps.fleetengine.v1.UpdateTripRequest} message UpdateTripRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateTripRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.name = "";
                            object.trip = null;
                            object.updateMask = null;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.trip != null && message.hasOwnProperty("trip"))
                            object.trip = $root.maps.fleetengine.v1.Trip.toObject(message.trip, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateTripRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateTripRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateTripRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.UpdateTripRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateTripRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.UpdateTripRequest";
                    };
    
                    return UpdateTripRequest;
                })();
    
                v1.SearchTripsRequest = (function() {
    
                    /**
                     * Properties of a SearchTripsRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface ISearchTripsRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] SearchTripsRequest header
                     * @property {string|null} [parent] SearchTripsRequest parent
                     * @property {string|null} [vehicleId] SearchTripsRequest vehicleId
                     * @property {boolean|null} [activeTripsOnly] SearchTripsRequest activeTripsOnly
                     * @property {number|null} [pageSize] SearchTripsRequest pageSize
                     * @property {string|null} [pageToken] SearchTripsRequest pageToken
                     * @property {google.protobuf.IDuration|null} [minimumStaleness] SearchTripsRequest minimumStaleness
                     */
    
                    /**
                     * Constructs a new SearchTripsRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a SearchTripsRequest.
                     * @implements ISearchTripsRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.ISearchTripsRequest=} [properties] Properties to set
                     */
                    function SearchTripsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SearchTripsRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.header = null;
    
                    /**
                     * SearchTripsRequest parent.
                     * @member {string} parent
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.parent = "";
    
                    /**
                     * SearchTripsRequest vehicleId.
                     * @member {string} vehicleId
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.vehicleId = "";
    
                    /**
                     * SearchTripsRequest activeTripsOnly.
                     * @member {boolean} activeTripsOnly
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.activeTripsOnly = false;
    
                    /**
                     * SearchTripsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.pageSize = 0;
    
                    /**
                     * SearchTripsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.pageToken = "";
    
                    /**
                     * SearchTripsRequest minimumStaleness.
                     * @member {google.protobuf.IDuration|null|undefined} minimumStaleness
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     */
                    SearchTripsRequest.prototype.minimumStaleness = null;
    
                    /**
                     * Creates a new SearchTripsRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.SearchTripsRequest} SearchTripsRequest instance
                     */
                    SearchTripsRequest.create = function create(properties) {
                        return new SearchTripsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SearchTripsRequest message. Does not implicitly {@link maps.fleetengine.v1.SearchTripsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsRequest} message SearchTripsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchTripsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.parent);
                        if (message.vehicleId != null && Object.hasOwnProperty.call(message, "vehicleId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.vehicleId);
                        if (message.activeTripsOnly != null && Object.hasOwnProperty.call(message, "activeTripsOnly"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.activeTripsOnly);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.pageToken);
                        if (message.minimumStaleness != null && Object.hasOwnProperty.call(message, "minimumStaleness"))
                            $root.google.protobuf.Duration.encode(message.minimumStaleness, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SearchTripsRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.SearchTripsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsRequest} message SearchTripsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchTripsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SearchTripsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.SearchTripsRequest} SearchTripsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchTripsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.SearchTripsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.vehicleId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.activeTripsOnly = reader.bool();
                                    break;
                                }
                            case 6: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.minimumStaleness = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SearchTripsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.SearchTripsRequest} SearchTripsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchTripsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SearchTripsRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SearchTripsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            if (!$util.isString(message.vehicleId))
                                return "vehicleId: string expected";
                        if (message.activeTripsOnly != null && message.hasOwnProperty("activeTripsOnly"))
                            if (typeof message.activeTripsOnly !== "boolean")
                                return "activeTripsOnly: boolean expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        if (message.minimumStaleness != null && message.hasOwnProperty("minimumStaleness")) {
                            var error = $root.google.protobuf.Duration.verify(message.minimumStaleness);
                            if (error)
                                return "minimumStaleness." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a SearchTripsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.SearchTripsRequest} SearchTripsRequest
                     */
                    SearchTripsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.SearchTripsRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.SearchTripsRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchTripsRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.vehicleId != null)
                            message.vehicleId = String(object.vehicleId);
                        if (object.activeTripsOnly != null)
                            message.activeTripsOnly = Boolean(object.activeTripsOnly);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        if (object.minimumStaleness != null) {
                            if (typeof object.minimumStaleness !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchTripsRequest.minimumStaleness: object expected");
                            message.minimumStaleness = $root.google.protobuf.Duration.fromObject(object.minimumStaleness);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SearchTripsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {maps.fleetengine.v1.SearchTripsRequest} message SearchTripsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SearchTripsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.parent = "";
                            object.vehicleId = "";
                            object.activeTripsOnly = false;
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.minimumStaleness = null;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            object.vehicleId = message.vehicleId;
                        if (message.activeTripsOnly != null && message.hasOwnProperty("activeTripsOnly"))
                            object.activeTripsOnly = message.activeTripsOnly;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.minimumStaleness != null && message.hasOwnProperty("minimumStaleness"))
                            object.minimumStaleness = $root.google.protobuf.Duration.toObject(message.minimumStaleness, options);
                        return object;
                    };
    
                    /**
                     * Converts this SearchTripsRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SearchTripsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SearchTripsRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.SearchTripsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SearchTripsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.SearchTripsRequest";
                    };
    
                    return SearchTripsRequest;
                })();
    
                v1.SearchTripsResponse = (function() {
    
                    /**
                     * Properties of a SearchTripsResponse.
                     * @memberof maps.fleetengine.v1
                     * @interface ISearchTripsResponse
                     * @property {Array.<maps.fleetengine.v1.ITrip>|null} [trips] SearchTripsResponse trips
                     * @property {string|null} [nextPageToken] SearchTripsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new SearchTripsResponse.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a SearchTripsResponse.
                     * @implements ISearchTripsResponse
                     * @constructor
                     * @param {maps.fleetengine.v1.ISearchTripsResponse=} [properties] Properties to set
                     */
                    function SearchTripsResponse(properties) {
                        this.trips = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SearchTripsResponse trips.
                     * @member {Array.<maps.fleetengine.v1.ITrip>} trips
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @instance
                     */
                    SearchTripsResponse.prototype.trips = $util.emptyArray;
    
                    /**
                     * SearchTripsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @instance
                     */
                    SearchTripsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new SearchTripsResponse instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsResponse=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.SearchTripsResponse} SearchTripsResponse instance
                     */
                    SearchTripsResponse.create = function create(properties) {
                        return new SearchTripsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified SearchTripsResponse message. Does not implicitly {@link maps.fleetengine.v1.SearchTripsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsResponse} message SearchTripsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchTripsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.trips != null && message.trips.length)
                            for (var i = 0; i < message.trips.length; ++i)
                                $root.maps.fleetengine.v1.Trip.encode(message.trips[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SearchTripsResponse message, length delimited. Does not implicitly {@link maps.fleetengine.v1.SearchTripsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchTripsResponse} message SearchTripsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchTripsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SearchTripsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.SearchTripsResponse} SearchTripsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchTripsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.SearchTripsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.trips && message.trips.length))
                                        message.trips = [];
                                    message.trips.push($root.maps.fleetengine.v1.Trip.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SearchTripsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.SearchTripsResponse} SearchTripsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchTripsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SearchTripsResponse message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SearchTripsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.trips != null && message.hasOwnProperty("trips")) {
                            if (!Array.isArray(message.trips))
                                return "trips: array expected";
                            for (var i = 0; i < message.trips.length; ++i) {
                                var error = $root.maps.fleetengine.v1.Trip.verify(message.trips[i]);
                                if (error)
                                    return "trips." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SearchTripsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.SearchTripsResponse} SearchTripsResponse
                     */
                    SearchTripsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.SearchTripsResponse)
                            return object;
                        var message = new $root.maps.fleetengine.v1.SearchTripsResponse();
                        if (object.trips) {
                            if (!Array.isArray(object.trips))
                                throw TypeError(".maps.fleetengine.v1.SearchTripsResponse.trips: array expected");
                            message.trips = [];
                            for (var i = 0; i < object.trips.length; ++i) {
                                if (typeof object.trips[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchTripsResponse.trips: object expected");
                                message.trips[i] = $root.maps.fleetengine.v1.Trip.fromObject(object.trips[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SearchTripsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {maps.fleetengine.v1.SearchTripsResponse} message SearchTripsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SearchTripsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.trips = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.trips && message.trips.length) {
                            object.trips = [];
                            for (var j = 0; j < message.trips.length; ++j)
                                object.trips[j] = $root.maps.fleetengine.v1.Trip.toObject(message.trips[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this SearchTripsResponse to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SearchTripsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SearchTripsResponse
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.SearchTripsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SearchTripsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.SearchTripsResponse";
                    };
    
                    return SearchTripsResponse;
                })();
    
                v1.Trip = (function() {
    
                    /**
                     * Properties of a Trip.
                     * @memberof maps.fleetengine.v1
                     * @interface ITrip
                     * @property {string|null} [name] Trip name
                     * @property {string|null} [vehicleId] Trip vehicleId
                     * @property {maps.fleetengine.v1.TripStatus|null} [tripStatus] Trip tripStatus
                     * @property {maps.fleetengine.v1.TripType|null} [tripType] Trip tripType
                     * @property {maps.fleetengine.v1.ITerminalLocation|null} [pickupPoint] Trip pickupPoint
                     * @property {maps.fleetengine.v1.IStopLocation|null} [actualPickupPoint] Trip actualPickupPoint
                     * @property {maps.fleetengine.v1.IStopLocation|null} [actualPickupArrivalPoint] Trip actualPickupArrivalPoint
                     * @property {google.protobuf.ITimestamp|null} [pickupTime] Trip pickupTime
                     * @property {Array.<maps.fleetengine.v1.ITerminalLocation>|null} [intermediateDestinations] Trip intermediateDestinations
                     * @property {google.protobuf.ITimestamp|null} [intermediateDestinationsVersion] Trip intermediateDestinationsVersion
                     * @property {number|null} [intermediateDestinationIndex] Trip intermediateDestinationIndex
                     * @property {Array.<maps.fleetengine.v1.IStopLocation>|null} [actualIntermediateDestinationArrivalPoints] Trip actualIntermediateDestinationArrivalPoints
                     * @property {Array.<maps.fleetengine.v1.IStopLocation>|null} [actualIntermediateDestinations] Trip actualIntermediateDestinations
                     * @property {maps.fleetengine.v1.ITerminalLocation|null} [dropoffPoint] Trip dropoffPoint
                     * @property {maps.fleetengine.v1.IStopLocation|null} [actualDropoffPoint] Trip actualDropoffPoint
                     * @property {google.protobuf.ITimestamp|null} [dropoffTime] Trip dropoffTime
                     * @property {Array.<maps.fleetengine.v1.ITripWaypoint>|null} [remainingWaypoints] Trip remainingWaypoints
                     * @property {Array.<maps.fleetengine.v1.ITripWaypoint>|null} [vehicleWaypoints] Trip vehicleWaypoints
                     * @property {Array.<google.type.ILatLng>|null} [route] Trip route
                     * @property {string|null} [currentRouteSegment] Trip currentRouteSegment
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentVersion] Trip currentRouteSegmentVersion
                     * @property {maps.fleetengine.v1.IConsumableTrafficPolyline|null} [currentRouteSegmentTraffic] Trip currentRouteSegmentTraffic
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentTrafficVersion] Trip currentRouteSegmentTrafficVersion
                     * @property {maps.fleetengine.v1.ITripWaypoint|null} [currentRouteSegmentEndPoint] Trip currentRouteSegmentEndPoint
                     * @property {google.protobuf.IInt32Value|null} [remainingDistanceMeters] Trip remainingDistanceMeters
                     * @property {google.protobuf.ITimestamp|null} [etaToFirstWaypoint] Trip etaToFirstWaypoint
                     * @property {google.protobuf.IDuration|null} [remainingTimeToFirstWaypoint] Trip remainingTimeToFirstWaypoint
                     * @property {google.protobuf.ITimestamp|null} [remainingWaypointsVersion] Trip remainingWaypointsVersion
                     * @property {google.protobuf.ITimestamp|null} [remainingWaypointsRouteVersion] Trip remainingWaypointsRouteVersion
                     * @property {number|null} [numberOfPassengers] Trip numberOfPassengers
                     * @property {maps.fleetengine.v1.IVehicleLocation|null} [lastLocation] Trip lastLocation
                     * @property {boolean|null} [lastLocationSnappable] Trip lastLocationSnappable
                     * @property {maps.fleetengine.v1.TripView|null} [view] Trip view
                     */
    
                    /**
                     * Constructs a new Trip.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a Trip.
                     * @implements ITrip
                     * @constructor
                     * @param {maps.fleetengine.v1.ITrip=} [properties] Properties to set
                     */
                    function Trip(properties) {
                        this.intermediateDestinations = [];
                        this.actualIntermediateDestinationArrivalPoints = [];
                        this.actualIntermediateDestinations = [];
                        this.remainingWaypoints = [];
                        this.vehicleWaypoints = [];
                        this.route = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Trip name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.name = "";
    
                    /**
                     * Trip vehicleId.
                     * @member {string} vehicleId
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.vehicleId = "";
    
                    /**
                     * Trip tripStatus.
                     * @member {maps.fleetengine.v1.TripStatus} tripStatus
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.tripStatus = 0;
    
                    /**
                     * Trip tripType.
                     * @member {maps.fleetengine.v1.TripType} tripType
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.tripType = 0;
    
                    /**
                     * Trip pickupPoint.
                     * @member {maps.fleetengine.v1.ITerminalLocation|null|undefined} pickupPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.pickupPoint = null;
    
                    /**
                     * Trip actualPickupPoint.
                     * @member {maps.fleetengine.v1.IStopLocation|null|undefined} actualPickupPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.actualPickupPoint = null;
    
                    /**
                     * Trip actualPickupArrivalPoint.
                     * @member {maps.fleetengine.v1.IStopLocation|null|undefined} actualPickupArrivalPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.actualPickupArrivalPoint = null;
    
                    /**
                     * Trip pickupTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} pickupTime
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.pickupTime = null;
    
                    /**
                     * Trip intermediateDestinations.
                     * @member {Array.<maps.fleetengine.v1.ITerminalLocation>} intermediateDestinations
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.intermediateDestinations = $util.emptyArray;
    
                    /**
                     * Trip intermediateDestinationsVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} intermediateDestinationsVersion
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.intermediateDestinationsVersion = null;
    
                    /**
                     * Trip intermediateDestinationIndex.
                     * @member {number} intermediateDestinationIndex
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.intermediateDestinationIndex = 0;
    
                    /**
                     * Trip actualIntermediateDestinationArrivalPoints.
                     * @member {Array.<maps.fleetengine.v1.IStopLocation>} actualIntermediateDestinationArrivalPoints
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.actualIntermediateDestinationArrivalPoints = $util.emptyArray;
    
                    /**
                     * Trip actualIntermediateDestinations.
                     * @member {Array.<maps.fleetengine.v1.IStopLocation>} actualIntermediateDestinations
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.actualIntermediateDestinations = $util.emptyArray;
    
                    /**
                     * Trip dropoffPoint.
                     * @member {maps.fleetengine.v1.ITerminalLocation|null|undefined} dropoffPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.dropoffPoint = null;
    
                    /**
                     * Trip actualDropoffPoint.
                     * @member {maps.fleetengine.v1.IStopLocation|null|undefined} actualDropoffPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.actualDropoffPoint = null;
    
                    /**
                     * Trip dropoffTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} dropoffTime
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.dropoffTime = null;
    
                    /**
                     * Trip remainingWaypoints.
                     * @member {Array.<maps.fleetengine.v1.ITripWaypoint>} remainingWaypoints
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.remainingWaypoints = $util.emptyArray;
    
                    /**
                     * Trip vehicleWaypoints.
                     * @member {Array.<maps.fleetengine.v1.ITripWaypoint>} vehicleWaypoints
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.vehicleWaypoints = $util.emptyArray;
    
                    /**
                     * Trip route.
                     * @member {Array.<google.type.ILatLng>} route
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.route = $util.emptyArray;
    
                    /**
                     * Trip currentRouteSegment.
                     * @member {string} currentRouteSegment
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.currentRouteSegment = "";
    
                    /**
                     * Trip currentRouteSegmentVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentVersion
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.currentRouteSegmentVersion = null;
    
                    /**
                     * Trip currentRouteSegmentTraffic.
                     * @member {maps.fleetengine.v1.IConsumableTrafficPolyline|null|undefined} currentRouteSegmentTraffic
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.currentRouteSegmentTraffic = null;
    
                    /**
                     * Trip currentRouteSegmentTrafficVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentTrafficVersion
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.currentRouteSegmentTrafficVersion = null;
    
                    /**
                     * Trip currentRouteSegmentEndPoint.
                     * @member {maps.fleetengine.v1.ITripWaypoint|null|undefined} currentRouteSegmentEndPoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.currentRouteSegmentEndPoint = null;
    
                    /**
                     * Trip remainingDistanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} remainingDistanceMeters
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.remainingDistanceMeters = null;
    
                    /**
                     * Trip etaToFirstWaypoint.
                     * @member {google.protobuf.ITimestamp|null|undefined} etaToFirstWaypoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.etaToFirstWaypoint = null;
    
                    /**
                     * Trip remainingTimeToFirstWaypoint.
                     * @member {google.protobuf.IDuration|null|undefined} remainingTimeToFirstWaypoint
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.remainingTimeToFirstWaypoint = null;
    
                    /**
                     * Trip remainingWaypointsVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} remainingWaypointsVersion
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.remainingWaypointsVersion = null;
    
                    /**
                     * Trip remainingWaypointsRouteVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} remainingWaypointsRouteVersion
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.remainingWaypointsRouteVersion = null;
    
                    /**
                     * Trip numberOfPassengers.
                     * @member {number} numberOfPassengers
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.numberOfPassengers = 0;
    
                    /**
                     * Trip lastLocation.
                     * @member {maps.fleetengine.v1.IVehicleLocation|null|undefined} lastLocation
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.lastLocation = null;
    
                    /**
                     * Trip lastLocationSnappable.
                     * @member {boolean} lastLocationSnappable
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.lastLocationSnappable = false;
    
                    /**
                     * Trip view.
                     * @member {maps.fleetengine.v1.TripView} view
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     */
                    Trip.prototype.view = 0;
    
                    /**
                     * Creates a new Trip instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {maps.fleetengine.v1.ITrip=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.Trip} Trip instance
                     */
                    Trip.create = function create(properties) {
                        return new Trip(properties);
                    };
    
                    /**
                     * Encodes the specified Trip message. Does not implicitly {@link maps.fleetengine.v1.Trip.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {maps.fleetengine.v1.ITrip} message Trip message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Trip.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.vehicleId != null && Object.hasOwnProperty.call(message, "vehicleId"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.vehicleId);
                        if (message.tripStatus != null && Object.hasOwnProperty.call(message, "tripStatus"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.tripStatus);
                        if (message.tripType != null && Object.hasOwnProperty.call(message, "tripType"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.tripType);
                        if (message.pickupPoint != null && Object.hasOwnProperty.call(message, "pickupPoint"))
                            $root.maps.fleetengine.v1.TerminalLocation.encode(message.pickupPoint, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.pickupTime != null && Object.hasOwnProperty.call(message, "pickupTime"))
                            $root.google.protobuf.Timestamp.encode(message.pickupTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.dropoffPoint != null && Object.hasOwnProperty.call(message, "dropoffPoint"))
                            $root.maps.fleetengine.v1.TerminalLocation.encode(message.dropoffPoint, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.dropoffTime != null && Object.hasOwnProperty.call(message, "dropoffTime"))
                            $root.google.protobuf.Timestamp.encode(message.dropoffTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.route != null && message.route.length)
                            for (var i = 0; i < message.route.length; ++i)
                                $root.google.type.LatLng.encode(message.route[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.numberOfPassengers != null && Object.hasOwnProperty.call(message, "numberOfPassengers"))
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.numberOfPassengers);
                        if (message.lastLocation != null && Object.hasOwnProperty.call(message, "lastLocation"))
                            $root.maps.fleetengine.v1.VehicleLocation.encode(message.lastLocation, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.remainingDistanceMeters != null && Object.hasOwnProperty.call(message, "remainingDistanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.remainingDistanceMeters, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.etaToFirstWaypoint != null && Object.hasOwnProperty.call(message, "etaToFirstWaypoint"))
                            $root.google.protobuf.Timestamp.encode(message.etaToFirstWaypoint, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.intermediateDestinations != null && message.intermediateDestinations.length)
                            for (var i = 0; i < message.intermediateDestinations.length; ++i)
                                $root.maps.fleetengine.v1.TerminalLocation.encode(message.intermediateDestinations[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.intermediateDestinationIndex != null && Object.hasOwnProperty.call(message, "intermediateDestinationIndex"))
                            writer.uint32(/* id 15, wireType 0 =*/120).int32(message.intermediateDestinationIndex);
                        if (message.remainingWaypoints != null && message.remainingWaypoints.length)
                            for (var i = 0; i < message.remainingWaypoints.length; ++i)
                                $root.maps.fleetengine.v1.TripWaypoint.encode(message.remainingWaypoints[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.currentRouteSegmentVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentVersion, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        if (message.remainingWaypointsVersion != null && Object.hasOwnProperty.call(message, "remainingWaypointsVersion"))
                            $root.google.protobuf.Timestamp.encode(message.remainingWaypointsVersion, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.vehicleWaypoints != null && message.vehicleWaypoints.length)
                            for (var i = 0; i < message.vehicleWaypoints.length; ++i)
                                $root.maps.fleetengine.v1.TripWaypoint.encode(message.vehicleWaypoints[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                        if (message.currentRouteSegment != null && Object.hasOwnProperty.call(message, "currentRouteSegment"))
                            writer.uint32(/* id 21, wireType 2 =*/170).string(message.currentRouteSegment);
                        if (message.actualPickupPoint != null && Object.hasOwnProperty.call(message, "actualPickupPoint"))
                            $root.maps.fleetengine.v1.StopLocation.encode(message.actualPickupPoint, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.actualDropoffPoint != null && Object.hasOwnProperty.call(message, "actualDropoffPoint"))
                            $root.maps.fleetengine.v1.StopLocation.encode(message.actualDropoffPoint, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                        if (message.currentRouteSegmentEndPoint != null && Object.hasOwnProperty.call(message, "currentRouteSegmentEndPoint"))
                            $root.maps.fleetengine.v1.TripWaypoint.encode(message.currentRouteSegmentEndPoint, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                        if (message.intermediateDestinationsVersion != null && Object.hasOwnProperty.call(message, "intermediateDestinationsVersion"))
                            $root.google.protobuf.Timestamp.encode(message.intermediateDestinationsVersion, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                        if (message.lastLocationSnappable != null && Object.hasOwnProperty.call(message, "lastLocationSnappable"))
                            writer.uint32(/* id 26, wireType 0 =*/208).bool(message.lastLocationSnappable);
                        if (message.remainingTimeToFirstWaypoint != null && Object.hasOwnProperty.call(message, "remainingTimeToFirstWaypoint"))
                            $root.google.protobuf.Duration.encode(message.remainingTimeToFirstWaypoint, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                        if (message.currentRouteSegmentTraffic != null && Object.hasOwnProperty.call(message, "currentRouteSegmentTraffic"))
                            $root.maps.fleetengine.v1.ConsumableTrafficPolyline.encode(message.currentRouteSegmentTraffic, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                        if (message.remainingWaypointsRouteVersion != null && Object.hasOwnProperty.call(message, "remainingWaypointsRouteVersion"))
                            $root.google.protobuf.Timestamp.encode(message.remainingWaypointsRouteVersion, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                        if (message.currentRouteSegmentTrafficVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentTrafficVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentTrafficVersion, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                        if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                            writer.uint32(/* id 31, wireType 0 =*/248).int32(message.view);
                        if (message.actualPickupArrivalPoint != null && Object.hasOwnProperty.call(message, "actualPickupArrivalPoint"))
                            $root.maps.fleetengine.v1.StopLocation.encode(message.actualPickupArrivalPoint, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
                        if (message.actualIntermediateDestinationArrivalPoints != null && message.actualIntermediateDestinationArrivalPoints.length)
                            for (var i = 0; i < message.actualIntermediateDestinationArrivalPoints.length; ++i)
                                $root.maps.fleetengine.v1.StopLocation.encode(message.actualIntermediateDestinationArrivalPoints[i], writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();
                        if (message.actualIntermediateDestinations != null && message.actualIntermediateDestinations.length)
                            for (var i = 0; i < message.actualIntermediateDestinations.length; ++i)
                                $root.maps.fleetengine.v1.StopLocation.encode(message.actualIntermediateDestinations[i], writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Trip message, length delimited. Does not implicitly {@link maps.fleetengine.v1.Trip.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {maps.fleetengine.v1.ITrip} message Trip message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Trip.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Trip message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.Trip} Trip
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Trip.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.Trip();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.vehicleId = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.tripStatus = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.tripType = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.actualPickupPoint = $root.maps.fleetengine.v1.StopLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 32: {
                                    message.actualPickupArrivalPoint = $root.maps.fleetengine.v1.StopLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.pickupTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    if (!(message.intermediateDestinations && message.intermediateDestinations.length))
                                        message.intermediateDestinations = [];
                                    message.intermediateDestinations.push($root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 25: {
                                    message.intermediateDestinationsVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.intermediateDestinationIndex = reader.int32();
                                    break;
                                }
                            case 33: {
                                    if (!(message.actualIntermediateDestinationArrivalPoints && message.actualIntermediateDestinationArrivalPoints.length))
                                        message.actualIntermediateDestinationArrivalPoints = [];
                                    message.actualIntermediateDestinationArrivalPoints.push($root.maps.fleetengine.v1.StopLocation.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 34: {
                                    if (!(message.actualIntermediateDestinations && message.actualIntermediateDestinations.length))
                                        message.actualIntermediateDestinations = [];
                                    message.actualIntermediateDestinations.push($root.maps.fleetengine.v1.StopLocation.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 7: {
                                    message.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.actualDropoffPoint = $root.maps.fleetengine.v1.StopLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.dropoffTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    if (!(message.remainingWaypoints && message.remainingWaypoints.length))
                                        message.remainingWaypoints = [];
                                    message.remainingWaypoints.push($root.maps.fleetengine.v1.TripWaypoint.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 20: {
                                    if (!(message.vehicleWaypoints && message.vehicleWaypoints.length))
                                        message.vehicleWaypoints = [];
                                    message.vehicleWaypoints.push($root.maps.fleetengine.v1.TripWaypoint.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 9: {
                                    if (!(message.route && message.route.length))
                                        message.route = [];
                                    message.route.push($root.google.type.LatLng.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 21: {
                                    message.currentRouteSegment = reader.string();
                                    break;
                                }
                            case 17: {
                                    message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 28: {
                                    message.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.decode(reader, reader.uint32());
                                    break;
                                }
                            case 30: {
                                    message.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 24: {
                                    message.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.decode(reader, reader.uint32());
                                    break;
                                }
                            case 12: {
                                    message.remainingDistanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    message.etaToFirstWaypoint = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 27: {
                                    message.remainingTimeToFirstWaypoint = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.remainingWaypointsVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 29: {
                                    message.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.numberOfPassengers = reader.int32();
                                    break;
                                }
                            case 11: {
                                    message.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 26: {
                                    message.lastLocationSnappable = reader.bool();
                                    break;
                                }
                            case 31: {
                                    message.view = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Trip message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.Trip} Trip
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Trip.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Trip message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Trip.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            if (!$util.isString(message.vehicleId))
                                return "vehicleId: string expected";
                        if (message.tripStatus != null && message.hasOwnProperty("tripStatus"))
                            switch (message.tripStatus) {
                            default:
                                return "tripStatus: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 7:
                            case 8:
                            case 4:
                            case 5:
                            case 6:
                                break;
                            }
                        if (message.tripType != null && message.hasOwnProperty("tripType"))
                            switch (message.tripType) {
                            default:
                                return "tripType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.pickupPoint != null && message.hasOwnProperty("pickupPoint")) {
                            var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.pickupPoint);
                            if (error)
                                return "pickupPoint." + error;
                        }
                        if (message.actualPickupPoint != null && message.hasOwnProperty("actualPickupPoint")) {
                            var error = $root.maps.fleetengine.v1.StopLocation.verify(message.actualPickupPoint);
                            if (error)
                                return "actualPickupPoint." + error;
                        }
                        if (message.actualPickupArrivalPoint != null && message.hasOwnProperty("actualPickupArrivalPoint")) {
                            var error = $root.maps.fleetengine.v1.StopLocation.verify(message.actualPickupArrivalPoint);
                            if (error)
                                return "actualPickupArrivalPoint." + error;
                        }
                        if (message.pickupTime != null && message.hasOwnProperty("pickupTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.pickupTime);
                            if (error)
                                return "pickupTime." + error;
                        }
                        if (message.intermediateDestinations != null && message.hasOwnProperty("intermediateDestinations")) {
                            if (!Array.isArray(message.intermediateDestinations))
                                return "intermediateDestinations: array expected";
                            for (var i = 0; i < message.intermediateDestinations.length; ++i) {
                                var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.intermediateDestinations[i]);
                                if (error)
                                    return "intermediateDestinations." + error;
                            }
                        }
                        if (message.intermediateDestinationsVersion != null && message.hasOwnProperty("intermediateDestinationsVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.intermediateDestinationsVersion);
                            if (error)
                                return "intermediateDestinationsVersion." + error;
                        }
                        if (message.intermediateDestinationIndex != null && message.hasOwnProperty("intermediateDestinationIndex"))
                            if (!$util.isInteger(message.intermediateDestinationIndex))
                                return "intermediateDestinationIndex: integer expected";
                        if (message.actualIntermediateDestinationArrivalPoints != null && message.hasOwnProperty("actualIntermediateDestinationArrivalPoints")) {
                            if (!Array.isArray(message.actualIntermediateDestinationArrivalPoints))
                                return "actualIntermediateDestinationArrivalPoints: array expected";
                            for (var i = 0; i < message.actualIntermediateDestinationArrivalPoints.length; ++i) {
                                var error = $root.maps.fleetengine.v1.StopLocation.verify(message.actualIntermediateDestinationArrivalPoints[i]);
                                if (error)
                                    return "actualIntermediateDestinationArrivalPoints." + error;
                            }
                        }
                        if (message.actualIntermediateDestinations != null && message.hasOwnProperty("actualIntermediateDestinations")) {
                            if (!Array.isArray(message.actualIntermediateDestinations))
                                return "actualIntermediateDestinations: array expected";
                            for (var i = 0; i < message.actualIntermediateDestinations.length; ++i) {
                                var error = $root.maps.fleetengine.v1.StopLocation.verify(message.actualIntermediateDestinations[i]);
                                if (error)
                                    return "actualIntermediateDestinations." + error;
                            }
                        }
                        if (message.dropoffPoint != null && message.hasOwnProperty("dropoffPoint")) {
                            var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.dropoffPoint);
                            if (error)
                                return "dropoffPoint." + error;
                        }
                        if (message.actualDropoffPoint != null && message.hasOwnProperty("actualDropoffPoint")) {
                            var error = $root.maps.fleetengine.v1.StopLocation.verify(message.actualDropoffPoint);
                            if (error)
                                return "actualDropoffPoint." + error;
                        }
                        if (message.dropoffTime != null && message.hasOwnProperty("dropoffTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.dropoffTime);
                            if (error)
                                return "dropoffTime." + error;
                        }
                        if (message.remainingWaypoints != null && message.hasOwnProperty("remainingWaypoints")) {
                            if (!Array.isArray(message.remainingWaypoints))
                                return "remainingWaypoints: array expected";
                            for (var i = 0; i < message.remainingWaypoints.length; ++i) {
                                var error = $root.maps.fleetengine.v1.TripWaypoint.verify(message.remainingWaypoints[i]);
                                if (error)
                                    return "remainingWaypoints." + error;
                            }
                        }
                        if (message.vehicleWaypoints != null && message.hasOwnProperty("vehicleWaypoints")) {
                            if (!Array.isArray(message.vehicleWaypoints))
                                return "vehicleWaypoints: array expected";
                            for (var i = 0; i < message.vehicleWaypoints.length; ++i) {
                                var error = $root.maps.fleetengine.v1.TripWaypoint.verify(message.vehicleWaypoints[i]);
                                if (error)
                                    return "vehicleWaypoints." + error;
                            }
                        }
                        if (message.route != null && message.hasOwnProperty("route")) {
                            if (!Array.isArray(message.route))
                                return "route: array expected";
                            for (var i = 0; i < message.route.length; ++i) {
                                var error = $root.google.type.LatLng.verify(message.route[i]);
                                if (error)
                                    return "route." + error;
                            }
                        }
                        if (message.currentRouteSegment != null && message.hasOwnProperty("currentRouteSegment"))
                            if (!$util.isString(message.currentRouteSegment))
                                return "currentRouteSegment: string expected";
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentVersion);
                            if (error)
                                return "currentRouteSegmentVersion." + error;
                        }
                        if (message.currentRouteSegmentTraffic != null && message.hasOwnProperty("currentRouteSegmentTraffic")) {
                            var error = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.verify(message.currentRouteSegmentTraffic);
                            if (error)
                                return "currentRouteSegmentTraffic." + error;
                        }
                        if (message.currentRouteSegmentTrafficVersion != null && message.hasOwnProperty("currentRouteSegmentTrafficVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentTrafficVersion);
                            if (error)
                                return "currentRouteSegmentTrafficVersion." + error;
                        }
                        if (message.currentRouteSegmentEndPoint != null && message.hasOwnProperty("currentRouteSegmentEndPoint")) {
                            var error = $root.maps.fleetengine.v1.TripWaypoint.verify(message.currentRouteSegmentEndPoint);
                            if (error)
                                return "currentRouteSegmentEndPoint." + error;
                        }
                        if (message.remainingDistanceMeters != null && message.hasOwnProperty("remainingDistanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.remainingDistanceMeters);
                            if (error)
                                return "remainingDistanceMeters." + error;
                        }
                        if (message.etaToFirstWaypoint != null && message.hasOwnProperty("etaToFirstWaypoint")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.etaToFirstWaypoint);
                            if (error)
                                return "etaToFirstWaypoint." + error;
                        }
                        if (message.remainingTimeToFirstWaypoint != null && message.hasOwnProperty("remainingTimeToFirstWaypoint")) {
                            var error = $root.google.protobuf.Duration.verify(message.remainingTimeToFirstWaypoint);
                            if (error)
                                return "remainingTimeToFirstWaypoint." + error;
                        }
                        if (message.remainingWaypointsVersion != null && message.hasOwnProperty("remainingWaypointsVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.remainingWaypointsVersion);
                            if (error)
                                return "remainingWaypointsVersion." + error;
                        }
                        if (message.remainingWaypointsRouteVersion != null && message.hasOwnProperty("remainingWaypointsRouteVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.remainingWaypointsRouteVersion);
                            if (error)
                                return "remainingWaypointsRouteVersion." + error;
                        }
                        if (message.numberOfPassengers != null && message.hasOwnProperty("numberOfPassengers"))
                            if (!$util.isInteger(message.numberOfPassengers))
                                return "numberOfPassengers: integer expected";
                        if (message.lastLocation != null && message.hasOwnProperty("lastLocation")) {
                            var error = $root.maps.fleetengine.v1.VehicleLocation.verify(message.lastLocation);
                            if (error)
                                return "lastLocation." + error;
                        }
                        if (message.lastLocationSnappable != null && message.hasOwnProperty("lastLocationSnappable"))
                            if (typeof message.lastLocationSnappable !== "boolean")
                                return "lastLocationSnappable: boolean expected";
                        if (message.view != null && message.hasOwnProperty("view"))
                            switch (message.view) {
                            default:
                                return "view: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a Trip message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.Trip} Trip
                     */
                    Trip.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.Trip)
                            return object;
                        var message = new $root.maps.fleetengine.v1.Trip();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.vehicleId != null)
                            message.vehicleId = String(object.vehicleId);
                        switch (object.tripStatus) {
                        default:
                            if (typeof object.tripStatus === "number") {
                                message.tripStatus = object.tripStatus;
                                break;
                            }
                            break;
                        case "UNKNOWN_TRIP_STATUS":
                        case 0:
                            message.tripStatus = 0;
                            break;
                        case "NEW":
                        case 1:
                            message.tripStatus = 1;
                            break;
                        case "ENROUTE_TO_PICKUP":
                        case 2:
                            message.tripStatus = 2;
                            break;
                        case "ARRIVED_AT_PICKUP":
                        case 3:
                            message.tripStatus = 3;
                            break;
                        case "ARRIVED_AT_INTERMEDIATE_DESTINATION":
                        case 7:
                            message.tripStatus = 7;
                            break;
                        case "ENROUTE_TO_INTERMEDIATE_DESTINATION":
                        case 8:
                            message.tripStatus = 8;
                            break;
                        case "ENROUTE_TO_DROPOFF":
                        case 4:
                            message.tripStatus = 4;
                            break;
                        case "COMPLETE":
                        case 5:
                            message.tripStatus = 5;
                            break;
                        case "CANCELED":
                        case 6:
                            message.tripStatus = 6;
                            break;
                        }
                        switch (object.tripType) {
                        default:
                            if (typeof object.tripType === "number") {
                                message.tripType = object.tripType;
                                break;
                            }
                            break;
                        case "UNKNOWN_TRIP_TYPE":
                        case 0:
                            message.tripType = 0;
                            break;
                        case "SHARED":
                        case 1:
                            message.tripType = 1;
                            break;
                        case "EXCLUSIVE":
                        case 2:
                            message.tripType = 2;
                            break;
                        }
                        if (object.pickupPoint != null) {
                            if (typeof object.pickupPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.pickupPoint: object expected");
                            message.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.pickupPoint);
                        }
                        if (object.actualPickupPoint != null) {
                            if (typeof object.actualPickupPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.actualPickupPoint: object expected");
                            message.actualPickupPoint = $root.maps.fleetengine.v1.StopLocation.fromObject(object.actualPickupPoint);
                        }
                        if (object.actualPickupArrivalPoint != null) {
                            if (typeof object.actualPickupArrivalPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.actualPickupArrivalPoint: object expected");
                            message.actualPickupArrivalPoint = $root.maps.fleetengine.v1.StopLocation.fromObject(object.actualPickupArrivalPoint);
                        }
                        if (object.pickupTime != null) {
                            if (typeof object.pickupTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.pickupTime: object expected");
                            message.pickupTime = $root.google.protobuf.Timestamp.fromObject(object.pickupTime);
                        }
                        if (object.intermediateDestinations) {
                            if (!Array.isArray(object.intermediateDestinations))
                                throw TypeError(".maps.fleetengine.v1.Trip.intermediateDestinations: array expected");
                            message.intermediateDestinations = [];
                            for (var i = 0; i < object.intermediateDestinations.length; ++i) {
                                if (typeof object.intermediateDestinations[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.intermediateDestinations: object expected");
                                message.intermediateDestinations[i] = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.intermediateDestinations[i]);
                            }
                        }
                        if (object.intermediateDestinationsVersion != null) {
                            if (typeof object.intermediateDestinationsVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.intermediateDestinationsVersion: object expected");
                            message.intermediateDestinationsVersion = $root.google.protobuf.Timestamp.fromObject(object.intermediateDestinationsVersion);
                        }
                        if (object.intermediateDestinationIndex != null)
                            message.intermediateDestinationIndex = object.intermediateDestinationIndex | 0;
                        if (object.actualIntermediateDestinationArrivalPoints) {
                            if (!Array.isArray(object.actualIntermediateDestinationArrivalPoints))
                                throw TypeError(".maps.fleetengine.v1.Trip.actualIntermediateDestinationArrivalPoints: array expected");
                            message.actualIntermediateDestinationArrivalPoints = [];
                            for (var i = 0; i < object.actualIntermediateDestinationArrivalPoints.length; ++i) {
                                if (typeof object.actualIntermediateDestinationArrivalPoints[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.actualIntermediateDestinationArrivalPoints: object expected");
                                message.actualIntermediateDestinationArrivalPoints[i] = $root.maps.fleetengine.v1.StopLocation.fromObject(object.actualIntermediateDestinationArrivalPoints[i]);
                            }
                        }
                        if (object.actualIntermediateDestinations) {
                            if (!Array.isArray(object.actualIntermediateDestinations))
                                throw TypeError(".maps.fleetengine.v1.Trip.actualIntermediateDestinations: array expected");
                            message.actualIntermediateDestinations = [];
                            for (var i = 0; i < object.actualIntermediateDestinations.length; ++i) {
                                if (typeof object.actualIntermediateDestinations[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.actualIntermediateDestinations: object expected");
                                message.actualIntermediateDestinations[i] = $root.maps.fleetengine.v1.StopLocation.fromObject(object.actualIntermediateDestinations[i]);
                            }
                        }
                        if (object.dropoffPoint != null) {
                            if (typeof object.dropoffPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.dropoffPoint: object expected");
                            message.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.dropoffPoint);
                        }
                        if (object.actualDropoffPoint != null) {
                            if (typeof object.actualDropoffPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.actualDropoffPoint: object expected");
                            message.actualDropoffPoint = $root.maps.fleetengine.v1.StopLocation.fromObject(object.actualDropoffPoint);
                        }
                        if (object.dropoffTime != null) {
                            if (typeof object.dropoffTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.dropoffTime: object expected");
                            message.dropoffTime = $root.google.protobuf.Timestamp.fromObject(object.dropoffTime);
                        }
                        if (object.remainingWaypoints) {
                            if (!Array.isArray(object.remainingWaypoints))
                                throw TypeError(".maps.fleetengine.v1.Trip.remainingWaypoints: array expected");
                            message.remainingWaypoints = [];
                            for (var i = 0; i < object.remainingWaypoints.length; ++i) {
                                if (typeof object.remainingWaypoints[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.remainingWaypoints: object expected");
                                message.remainingWaypoints[i] = $root.maps.fleetengine.v1.TripWaypoint.fromObject(object.remainingWaypoints[i]);
                            }
                        }
                        if (object.vehicleWaypoints) {
                            if (!Array.isArray(object.vehicleWaypoints))
                                throw TypeError(".maps.fleetengine.v1.Trip.vehicleWaypoints: array expected");
                            message.vehicleWaypoints = [];
                            for (var i = 0; i < object.vehicleWaypoints.length; ++i) {
                                if (typeof object.vehicleWaypoints[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.vehicleWaypoints: object expected");
                                message.vehicleWaypoints[i] = $root.maps.fleetengine.v1.TripWaypoint.fromObject(object.vehicleWaypoints[i]);
                            }
                        }
                        if (object.route) {
                            if (!Array.isArray(object.route))
                                throw TypeError(".maps.fleetengine.v1.Trip.route: array expected");
                            message.route = [];
                            for (var i = 0; i < object.route.length; ++i) {
                                if (typeof object.route[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Trip.route: object expected");
                                message.route[i] = $root.google.type.LatLng.fromObject(object.route[i]);
                            }
                        }
                        if (object.currentRouteSegment != null)
                            message.currentRouteSegment = String(object.currentRouteSegment);
                        if (object.currentRouteSegmentVersion != null) {
                            if (typeof object.currentRouteSegmentVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.currentRouteSegmentVersion: object expected");
                            message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentVersion);
                        }
                        if (object.currentRouteSegmentTraffic != null) {
                            if (typeof object.currentRouteSegmentTraffic !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.currentRouteSegmentTraffic: object expected");
                            message.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.fromObject(object.currentRouteSegmentTraffic);
                        }
                        if (object.currentRouteSegmentTrafficVersion != null) {
                            if (typeof object.currentRouteSegmentTrafficVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.currentRouteSegmentTrafficVersion: object expected");
                            message.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentTrafficVersion);
                        }
                        if (object.currentRouteSegmentEndPoint != null) {
                            if (typeof object.currentRouteSegmentEndPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.currentRouteSegmentEndPoint: object expected");
                            message.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.fromObject(object.currentRouteSegmentEndPoint);
                        }
                        if (object.remainingDistanceMeters != null) {
                            if (typeof object.remainingDistanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.remainingDistanceMeters: object expected");
                            message.remainingDistanceMeters = $root.google.protobuf.Int32Value.fromObject(object.remainingDistanceMeters);
                        }
                        if (object.etaToFirstWaypoint != null) {
                            if (typeof object.etaToFirstWaypoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.etaToFirstWaypoint: object expected");
                            message.etaToFirstWaypoint = $root.google.protobuf.Timestamp.fromObject(object.etaToFirstWaypoint);
                        }
                        if (object.remainingTimeToFirstWaypoint != null) {
                            if (typeof object.remainingTimeToFirstWaypoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.remainingTimeToFirstWaypoint: object expected");
                            message.remainingTimeToFirstWaypoint = $root.google.protobuf.Duration.fromObject(object.remainingTimeToFirstWaypoint);
                        }
                        if (object.remainingWaypointsVersion != null) {
                            if (typeof object.remainingWaypointsVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.remainingWaypointsVersion: object expected");
                            message.remainingWaypointsVersion = $root.google.protobuf.Timestamp.fromObject(object.remainingWaypointsVersion);
                        }
                        if (object.remainingWaypointsRouteVersion != null) {
                            if (typeof object.remainingWaypointsRouteVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.remainingWaypointsRouteVersion: object expected");
                            message.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.fromObject(object.remainingWaypointsRouteVersion);
                        }
                        if (object.numberOfPassengers != null)
                            message.numberOfPassengers = object.numberOfPassengers | 0;
                        if (object.lastLocation != null) {
                            if (typeof object.lastLocation !== "object")
                                throw TypeError(".maps.fleetengine.v1.Trip.lastLocation: object expected");
                            message.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.fromObject(object.lastLocation);
                        }
                        if (object.lastLocationSnappable != null)
                            message.lastLocationSnappable = Boolean(object.lastLocationSnappable);
                        switch (object.view) {
                        default:
                            if (typeof object.view === "number") {
                                message.view = object.view;
                                break;
                            }
                            break;
                        case "TRIP_VIEW_UNSPECIFIED":
                        case 0:
                            message.view = 0;
                            break;
                        case "SDK":
                        case 1:
                            message.view = 1;
                            break;
                        case "JOURNEY_SHARING_V1S":
                        case 2:
                            message.view = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Trip message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {maps.fleetengine.v1.Trip} message Trip
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Trip.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.route = [];
                            object.intermediateDestinations = [];
                            object.remainingWaypoints = [];
                            object.vehicleWaypoints = [];
                            object.actualIntermediateDestinationArrivalPoints = [];
                            object.actualIntermediateDestinations = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.vehicleId = "";
                            object.tripStatus = options.enums === String ? "UNKNOWN_TRIP_STATUS" : 0;
                            object.tripType = options.enums === String ? "UNKNOWN_TRIP_TYPE" : 0;
                            object.pickupPoint = null;
                            object.pickupTime = null;
                            object.dropoffPoint = null;
                            object.dropoffTime = null;
                            object.numberOfPassengers = 0;
                            object.lastLocation = null;
                            object.remainingDistanceMeters = null;
                            object.etaToFirstWaypoint = null;
                            object.intermediateDestinationIndex = 0;
                            object.currentRouteSegmentVersion = null;
                            object.remainingWaypointsVersion = null;
                            object.currentRouteSegment = "";
                            object.actualPickupPoint = null;
                            object.actualDropoffPoint = null;
                            object.currentRouteSegmentEndPoint = null;
                            object.intermediateDestinationsVersion = null;
                            object.lastLocationSnappable = false;
                            object.remainingTimeToFirstWaypoint = null;
                            object.currentRouteSegmentTraffic = null;
                            object.remainingWaypointsRouteVersion = null;
                            object.currentRouteSegmentTrafficVersion = null;
                            object.view = options.enums === String ? "TRIP_VIEW_UNSPECIFIED" : 0;
                            object.actualPickupArrivalPoint = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            object.vehicleId = message.vehicleId;
                        if (message.tripStatus != null && message.hasOwnProperty("tripStatus"))
                            object.tripStatus = options.enums === String ? $root.maps.fleetengine.v1.TripStatus[message.tripStatus] === undefined ? message.tripStatus : $root.maps.fleetengine.v1.TripStatus[message.tripStatus] : message.tripStatus;
                        if (message.tripType != null && message.hasOwnProperty("tripType"))
                            object.tripType = options.enums === String ? $root.maps.fleetengine.v1.TripType[message.tripType] === undefined ? message.tripType : $root.maps.fleetengine.v1.TripType[message.tripType] : message.tripType;
                        if (message.pickupPoint != null && message.hasOwnProperty("pickupPoint"))
                            object.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.pickupPoint, options);
                        if (message.pickupTime != null && message.hasOwnProperty("pickupTime"))
                            object.pickupTime = $root.google.protobuf.Timestamp.toObject(message.pickupTime, options);
                        if (message.dropoffPoint != null && message.hasOwnProperty("dropoffPoint"))
                            object.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.dropoffPoint, options);
                        if (message.dropoffTime != null && message.hasOwnProperty("dropoffTime"))
                            object.dropoffTime = $root.google.protobuf.Timestamp.toObject(message.dropoffTime, options);
                        if (message.route && message.route.length) {
                            object.route = [];
                            for (var j = 0; j < message.route.length; ++j)
                                object.route[j] = $root.google.type.LatLng.toObject(message.route[j], options);
                        }
                        if (message.numberOfPassengers != null && message.hasOwnProperty("numberOfPassengers"))
                            object.numberOfPassengers = message.numberOfPassengers;
                        if (message.lastLocation != null && message.hasOwnProperty("lastLocation"))
                            object.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.toObject(message.lastLocation, options);
                        if (message.remainingDistanceMeters != null && message.hasOwnProperty("remainingDistanceMeters"))
                            object.remainingDistanceMeters = $root.google.protobuf.Int32Value.toObject(message.remainingDistanceMeters, options);
                        if (message.etaToFirstWaypoint != null && message.hasOwnProperty("etaToFirstWaypoint"))
                            object.etaToFirstWaypoint = $root.google.protobuf.Timestamp.toObject(message.etaToFirstWaypoint, options);
                        if (message.intermediateDestinations && message.intermediateDestinations.length) {
                            object.intermediateDestinations = [];
                            for (var j = 0; j < message.intermediateDestinations.length; ++j)
                                object.intermediateDestinations[j] = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.intermediateDestinations[j], options);
                        }
                        if (message.intermediateDestinationIndex != null && message.hasOwnProperty("intermediateDestinationIndex"))
                            object.intermediateDestinationIndex = message.intermediateDestinationIndex;
                        if (message.remainingWaypoints && message.remainingWaypoints.length) {
                            object.remainingWaypoints = [];
                            for (var j = 0; j < message.remainingWaypoints.length; ++j)
                                object.remainingWaypoints[j] = $root.maps.fleetengine.v1.TripWaypoint.toObject(message.remainingWaypoints[j], options);
                        }
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion"))
                            object.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentVersion, options);
                        if (message.remainingWaypointsVersion != null && message.hasOwnProperty("remainingWaypointsVersion"))
                            object.remainingWaypointsVersion = $root.google.protobuf.Timestamp.toObject(message.remainingWaypointsVersion, options);
                        if (message.vehicleWaypoints && message.vehicleWaypoints.length) {
                            object.vehicleWaypoints = [];
                            for (var j = 0; j < message.vehicleWaypoints.length; ++j)
                                object.vehicleWaypoints[j] = $root.maps.fleetengine.v1.TripWaypoint.toObject(message.vehicleWaypoints[j], options);
                        }
                        if (message.currentRouteSegment != null && message.hasOwnProperty("currentRouteSegment"))
                            object.currentRouteSegment = message.currentRouteSegment;
                        if (message.actualPickupPoint != null && message.hasOwnProperty("actualPickupPoint"))
                            object.actualPickupPoint = $root.maps.fleetengine.v1.StopLocation.toObject(message.actualPickupPoint, options);
                        if (message.actualDropoffPoint != null && message.hasOwnProperty("actualDropoffPoint"))
                            object.actualDropoffPoint = $root.maps.fleetengine.v1.StopLocation.toObject(message.actualDropoffPoint, options);
                        if (message.currentRouteSegmentEndPoint != null && message.hasOwnProperty("currentRouteSegmentEndPoint"))
                            object.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.toObject(message.currentRouteSegmentEndPoint, options);
                        if (message.intermediateDestinationsVersion != null && message.hasOwnProperty("intermediateDestinationsVersion"))
                            object.intermediateDestinationsVersion = $root.google.protobuf.Timestamp.toObject(message.intermediateDestinationsVersion, options);
                        if (message.lastLocationSnappable != null && message.hasOwnProperty("lastLocationSnappable"))
                            object.lastLocationSnappable = message.lastLocationSnappable;
                        if (message.remainingTimeToFirstWaypoint != null && message.hasOwnProperty("remainingTimeToFirstWaypoint"))
                            object.remainingTimeToFirstWaypoint = $root.google.protobuf.Duration.toObject(message.remainingTimeToFirstWaypoint, options);
                        if (message.currentRouteSegmentTraffic != null && message.hasOwnProperty("currentRouteSegmentTraffic"))
                            object.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.ConsumableTrafficPolyline.toObject(message.currentRouteSegmentTraffic, options);
                        if (message.remainingWaypointsRouteVersion != null && message.hasOwnProperty("remainingWaypointsRouteVersion"))
                            object.remainingWaypointsRouteVersion = $root.google.protobuf.Timestamp.toObject(message.remainingWaypointsRouteVersion, options);
                        if (message.currentRouteSegmentTrafficVersion != null && message.hasOwnProperty("currentRouteSegmentTrafficVersion"))
                            object.currentRouteSegmentTrafficVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentTrafficVersion, options);
                        if (message.view != null && message.hasOwnProperty("view"))
                            object.view = options.enums === String ? $root.maps.fleetengine.v1.TripView[message.view] === undefined ? message.view : $root.maps.fleetengine.v1.TripView[message.view] : message.view;
                        if (message.actualPickupArrivalPoint != null && message.hasOwnProperty("actualPickupArrivalPoint"))
                            object.actualPickupArrivalPoint = $root.maps.fleetengine.v1.StopLocation.toObject(message.actualPickupArrivalPoint, options);
                        if (message.actualIntermediateDestinationArrivalPoints && message.actualIntermediateDestinationArrivalPoints.length) {
                            object.actualIntermediateDestinationArrivalPoints = [];
                            for (var j = 0; j < message.actualIntermediateDestinationArrivalPoints.length; ++j)
                                object.actualIntermediateDestinationArrivalPoints[j] = $root.maps.fleetengine.v1.StopLocation.toObject(message.actualIntermediateDestinationArrivalPoints[j], options);
                        }
                        if (message.actualIntermediateDestinations && message.actualIntermediateDestinations.length) {
                            object.actualIntermediateDestinations = [];
                            for (var j = 0; j < message.actualIntermediateDestinations.length; ++j)
                                object.actualIntermediateDestinations[j] = $root.maps.fleetengine.v1.StopLocation.toObject(message.actualIntermediateDestinations[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Trip to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.Trip
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Trip.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Trip
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.Trip
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Trip.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.Trip";
                    };
    
                    return Trip;
                })();
    
                v1.StopLocation = (function() {
    
                    /**
                     * Properties of a StopLocation.
                     * @memberof maps.fleetengine.v1
                     * @interface IStopLocation
                     * @property {google.type.ILatLng|null} [point] StopLocation point
                     * @property {google.protobuf.ITimestamp|null} [timestamp] StopLocation timestamp
                     * @property {google.protobuf.ITimestamp|null} [stopTime] StopLocation stopTime
                     */
    
                    /**
                     * Constructs a new StopLocation.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a StopLocation.
                     * @implements IStopLocation
                     * @constructor
                     * @param {maps.fleetengine.v1.IStopLocation=} [properties] Properties to set
                     */
                    function StopLocation(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * StopLocation point.
                     * @member {google.type.ILatLng|null|undefined} point
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @instance
                     */
                    StopLocation.prototype.point = null;
    
                    /**
                     * StopLocation timestamp.
                     * @member {google.protobuf.ITimestamp|null|undefined} timestamp
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @instance
                     */
                    StopLocation.prototype.timestamp = null;
    
                    /**
                     * StopLocation stopTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} stopTime
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @instance
                     */
                    StopLocation.prototype.stopTime = null;
    
                    /**
                     * Creates a new StopLocation instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {maps.fleetengine.v1.IStopLocation=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.StopLocation} StopLocation instance
                     */
                    StopLocation.create = function create(properties) {
                        return new StopLocation(properties);
                    };
    
                    /**
                     * Encodes the specified StopLocation message. Does not implicitly {@link maps.fleetengine.v1.StopLocation.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {maps.fleetengine.v1.IStopLocation} message StopLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StopLocation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.point != null && Object.hasOwnProperty.call(message, "point"))
                            $root.google.type.LatLng.encode(message.point, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.timestamp != null && Object.hasOwnProperty.call(message, "timestamp"))
                            $root.google.protobuf.Timestamp.encode(message.timestamp, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.stopTime != null && Object.hasOwnProperty.call(message, "stopTime"))
                            $root.google.protobuf.Timestamp.encode(message.stopTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified StopLocation message, length delimited. Does not implicitly {@link maps.fleetengine.v1.StopLocation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {maps.fleetengine.v1.IStopLocation} message StopLocation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StopLocation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a StopLocation message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.StopLocation} StopLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StopLocation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.StopLocation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.point = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.timestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.stopTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a StopLocation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.StopLocation} StopLocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StopLocation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a StopLocation message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    StopLocation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.point != null && message.hasOwnProperty("point")) {
                            var error = $root.google.type.LatLng.verify(message.point);
                            if (error)
                                return "point." + error;
                        }
                        if (message.timestamp != null && message.hasOwnProperty("timestamp")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.timestamp);
                            if (error)
                                return "timestamp." + error;
                        }
                        if (message.stopTime != null && message.hasOwnProperty("stopTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.stopTime);
                            if (error)
                                return "stopTime." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a StopLocation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.StopLocation} StopLocation
                     */
                    StopLocation.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.StopLocation)
                            return object;
                        var message = new $root.maps.fleetengine.v1.StopLocation();
                        if (object.point != null) {
                            if (typeof object.point !== "object")
                                throw TypeError(".maps.fleetengine.v1.StopLocation.point: object expected");
                            message.point = $root.google.type.LatLng.fromObject(object.point);
                        }
                        if (object.timestamp != null) {
                            if (typeof object.timestamp !== "object")
                                throw TypeError(".maps.fleetengine.v1.StopLocation.timestamp: object expected");
                            message.timestamp = $root.google.protobuf.Timestamp.fromObject(object.timestamp);
                        }
                        if (object.stopTime != null) {
                            if (typeof object.stopTime !== "object")
                                throw TypeError(".maps.fleetengine.v1.StopLocation.stopTime: object expected");
                            message.stopTime = $root.google.protobuf.Timestamp.fromObject(object.stopTime);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a StopLocation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {maps.fleetengine.v1.StopLocation} message StopLocation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    StopLocation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.point = null;
                            object.timestamp = null;
                            object.stopTime = null;
                        }
                        if (message.point != null && message.hasOwnProperty("point"))
                            object.point = $root.google.type.LatLng.toObject(message.point, options);
                        if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                            object.timestamp = $root.google.protobuf.Timestamp.toObject(message.timestamp, options);
                        if (message.stopTime != null && message.hasOwnProperty("stopTime"))
                            object.stopTime = $root.google.protobuf.Timestamp.toObject(message.stopTime, options);
                        return object;
                    };
    
                    /**
                     * Converts this StopLocation to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    StopLocation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for StopLocation
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.StopLocation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    StopLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.StopLocation";
                    };
    
                    return StopLocation;
                })();
    
                /**
                 * TripStatus enum.
                 * @name maps.fleetengine.v1.TripStatus
                 * @enum {number}
                 * @property {number} UNKNOWN_TRIP_STATUS=0 UNKNOWN_TRIP_STATUS value
                 * @property {number} NEW=1 NEW value
                 * @property {number} ENROUTE_TO_PICKUP=2 ENROUTE_TO_PICKUP value
                 * @property {number} ARRIVED_AT_PICKUP=3 ARRIVED_AT_PICKUP value
                 * @property {number} ARRIVED_AT_INTERMEDIATE_DESTINATION=7 ARRIVED_AT_INTERMEDIATE_DESTINATION value
                 * @property {number} ENROUTE_TO_INTERMEDIATE_DESTINATION=8 ENROUTE_TO_INTERMEDIATE_DESTINATION value
                 * @property {number} ENROUTE_TO_DROPOFF=4 ENROUTE_TO_DROPOFF value
                 * @property {number} COMPLETE=5 COMPLETE value
                 * @property {number} CANCELED=6 CANCELED value
                 */
                v1.TripStatus = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_TRIP_STATUS"] = 0;
                    values[valuesById[1] = "NEW"] = 1;
                    values[valuesById[2] = "ENROUTE_TO_PICKUP"] = 2;
                    values[valuesById[3] = "ARRIVED_AT_PICKUP"] = 3;
                    values[valuesById[7] = "ARRIVED_AT_INTERMEDIATE_DESTINATION"] = 7;
                    values[valuesById[8] = "ENROUTE_TO_INTERMEDIATE_DESTINATION"] = 8;
                    values[valuesById[4] = "ENROUTE_TO_DROPOFF"] = 4;
                    values[valuesById[5] = "COMPLETE"] = 5;
                    values[valuesById[6] = "CANCELED"] = 6;
                    return values;
                })();
    
                /**
                 * BillingPlatformIdentifier enum.
                 * @name maps.fleetengine.v1.BillingPlatformIdentifier
                 * @enum {number}
                 * @property {number} BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED=0 BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED value
                 * @property {number} SERVER=1 SERVER value
                 * @property {number} WEB=2 WEB value
                 * @property {number} ANDROID=3 ANDROID value
                 * @property {number} IOS=4 IOS value
                 * @property {number} OTHERS=5 OTHERS value
                 */
                v1.BillingPlatformIdentifier = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "BILLING_PLATFORM_IDENTIFIER_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "SERVER"] = 1;
                    values[valuesById[2] = "WEB"] = 2;
                    values[valuesById[3] = "ANDROID"] = 3;
                    values[valuesById[4] = "IOS"] = 4;
                    values[valuesById[5] = "OTHERS"] = 5;
                    return values;
                })();
    
                /**
                 * TripView enum.
                 * @name maps.fleetengine.v1.TripView
                 * @enum {number}
                 * @property {number} TRIP_VIEW_UNSPECIFIED=0 TRIP_VIEW_UNSPECIFIED value
                 * @property {number} SDK=1 SDK value
                 * @property {number} JOURNEY_SHARING_V1S=2 JOURNEY_SHARING_V1S value
                 */
                v1.TripView = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TRIP_VIEW_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "SDK"] = 1;
                    values[valuesById[2] = "JOURNEY_SHARING_V1S"] = 2;
                    return values;
                })();
    
                v1.VehicleService = (function() {
    
                    /**
                     * Constructs a new VehicleService service.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VehicleService
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function VehicleService(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (VehicleService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = VehicleService;
    
                    /**
                     * Creates new VehicleService service using the specified rpc implementation.
                     * @function create
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {VehicleService} RPC service. Useful where requests and/or responses are streamed.
                     */
                    VehicleService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|createVehicle}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef CreateVehicleCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Vehicle} [response] Vehicle
                     */
    
                    /**
                     * Calls CreateVehicle.
                     * @function createVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest} request CreateVehicleRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.CreateVehicleCallback} callback Node-style callback called with the error, if any, and Vehicle
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.createVehicle = function createVehicle(request, callback) {
                        return this.rpcCall(createVehicle, $root.maps.fleetengine.v1.CreateVehicleRequest, $root.maps.fleetengine.v1.Vehicle, request, callback);
                    }, "name", { value: "CreateVehicle" });
    
                    /**
                     * Calls CreateVehicle.
                     * @function createVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest} request CreateVehicleRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Vehicle>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|getVehicle}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef GetVehicleCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Vehicle} [response] Vehicle
                     */
    
                    /**
                     * Calls GetVehicle.
                     * @function getVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IGetVehicleRequest} request GetVehicleRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.GetVehicleCallback} callback Node-style callback called with the error, if any, and Vehicle
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.getVehicle = function getVehicle(request, callback) {
                        return this.rpcCall(getVehicle, $root.maps.fleetengine.v1.GetVehicleRequest, $root.maps.fleetengine.v1.Vehicle, request, callback);
                    }, "name", { value: "GetVehicle" });
    
                    /**
                     * Calls GetVehicle.
                     * @function getVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IGetVehicleRequest} request GetVehicleRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Vehicle>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|updateVehicle}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef UpdateVehicleCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.Vehicle} [response] Vehicle
                     */
    
                    /**
                     * Calls UpdateVehicle.
                     * @function updateVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest} request UpdateVehicleRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.UpdateVehicleCallback} callback Node-style callback called with the error, if any, and Vehicle
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.updateVehicle = function updateVehicle(request, callback) {
                        return this.rpcCall(updateVehicle, $root.maps.fleetengine.v1.UpdateVehicleRequest, $root.maps.fleetengine.v1.Vehicle, request, callback);
                    }, "name", { value: "UpdateVehicle" });
    
                    /**
                     * Calls UpdateVehicle.
                     * @function updateVehicle
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest} request UpdateVehicleRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.Vehicle>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|updateVehicleAttributes}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef UpdateVehicleAttributesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.UpdateVehicleAttributesResponse} [response] UpdateVehicleAttributesResponse
                     */
    
                    /**
                     * Calls UpdateVehicleAttributes.
                     * @function updateVehicleAttributes
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest} request UpdateVehicleAttributesRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.UpdateVehicleAttributesCallback} callback Node-style callback called with the error, if any, and UpdateVehicleAttributesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.updateVehicleAttributes = function updateVehicleAttributes(request, callback) {
                        return this.rpcCall(updateVehicleAttributes, $root.maps.fleetengine.v1.UpdateVehicleAttributesRequest, $root.maps.fleetengine.v1.UpdateVehicleAttributesResponse, request, callback);
                    }, "name", { value: "UpdateVehicleAttributes" });
    
                    /**
                     * Calls UpdateVehicleAttributes.
                     * @function updateVehicleAttributes
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest} request UpdateVehicleAttributesRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.UpdateVehicleAttributesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|listVehicles}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef ListVehiclesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.ListVehiclesResponse} [response] ListVehiclesResponse
                     */
    
                    /**
                     * Calls ListVehicles.
                     * @function listVehicles
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IListVehiclesRequest} request ListVehiclesRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.ListVehiclesCallback} callback Node-style callback called with the error, if any, and ListVehiclesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.listVehicles = function listVehicles(request, callback) {
                        return this.rpcCall(listVehicles, $root.maps.fleetengine.v1.ListVehiclesRequest, $root.maps.fleetengine.v1.ListVehiclesResponse, request, callback);
                    }, "name", { value: "ListVehicles" });
    
                    /**
                     * Calls ListVehicles.
                     * @function listVehicles
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.IListVehiclesRequest} request ListVehiclesRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.ListVehiclesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link maps.fleetengine.v1.VehicleService|searchVehicles}.
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @typedef SearchVehiclesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {maps.fleetengine.v1.SearchVehiclesResponse} [response] SearchVehiclesResponse
                     */
    
                    /**
                     * Calls SearchVehicles.
                     * @function searchVehicles
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest} request SearchVehiclesRequest message or plain object
                     * @param {maps.fleetengine.v1.VehicleService.SearchVehiclesCallback} callback Node-style callback called with the error, if any, and SearchVehiclesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(VehicleService.prototype.searchVehicles = function searchVehicles(request, callback) {
                        return this.rpcCall(searchVehicles, $root.maps.fleetengine.v1.SearchVehiclesRequest, $root.maps.fleetengine.v1.SearchVehiclesResponse, request, callback);
                    }, "name", { value: "SearchVehicles" });
    
                    /**
                     * Calls SearchVehicles.
                     * @function searchVehicles
                     * @memberof maps.fleetengine.v1.VehicleService
                     * @instance
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest} request SearchVehiclesRequest message or plain object
                     * @returns {Promise<maps.fleetengine.v1.SearchVehiclesResponse>} Promise
                     * @variation 2
                     */
    
                    return VehicleService;
                })();
    
                v1.CreateVehicleRequest = (function() {
    
                    /**
                     * Properties of a CreateVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface ICreateVehicleRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] CreateVehicleRequest header
                     * @property {string|null} [parent] CreateVehicleRequest parent
                     * @property {string|null} [vehicleId] CreateVehicleRequest vehicleId
                     * @property {maps.fleetengine.v1.IVehicle|null} [vehicle] CreateVehicleRequest vehicle
                     */
    
                    /**
                     * Constructs a new CreateVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a CreateVehicleRequest.
                     * @implements ICreateVehicleRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest=} [properties] Properties to set
                     */
                    function CreateVehicleRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateVehicleRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @instance
                     */
                    CreateVehicleRequest.prototype.header = null;
    
                    /**
                     * CreateVehicleRequest parent.
                     * @member {string} parent
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @instance
                     */
                    CreateVehicleRequest.prototype.parent = "";
    
                    /**
                     * CreateVehicleRequest vehicleId.
                     * @member {string} vehicleId
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @instance
                     */
                    CreateVehicleRequest.prototype.vehicleId = "";
    
                    /**
                     * CreateVehicleRequest vehicle.
                     * @member {maps.fleetengine.v1.IVehicle|null|undefined} vehicle
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @instance
                     */
                    CreateVehicleRequest.prototype.vehicle = null;
    
                    /**
                     * Creates a new CreateVehicleRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.CreateVehicleRequest} CreateVehicleRequest instance
                     */
                    CreateVehicleRequest.create = function create(properties) {
                        return new CreateVehicleRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateVehicleRequest message. Does not implicitly {@link maps.fleetengine.v1.CreateVehicleRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest} message CreateVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateVehicleRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.parent);
                        if (message.vehicleId != null && Object.hasOwnProperty.call(message, "vehicleId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.vehicleId);
                        if (message.vehicle != null && Object.hasOwnProperty.call(message, "vehicle"))
                            $root.maps.fleetengine.v1.Vehicle.encode(message.vehicle, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateVehicleRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.CreateVehicleRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.ICreateVehicleRequest} message CreateVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateVehicleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateVehicleRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.CreateVehicleRequest} CreateVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateVehicleRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.CreateVehicleRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.vehicleId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.vehicle = $root.maps.fleetengine.v1.Vehicle.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateVehicleRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.CreateVehicleRequest} CreateVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateVehicleRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateVehicleRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateVehicleRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            if (!$util.isString(message.vehicleId))
                                return "vehicleId: string expected";
                        if (message.vehicle != null && message.hasOwnProperty("vehicle")) {
                            var error = $root.maps.fleetengine.v1.Vehicle.verify(message.vehicle);
                            if (error)
                                return "vehicle." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CreateVehicleRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.CreateVehicleRequest} CreateVehicleRequest
                     */
                    CreateVehicleRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.CreateVehicleRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.CreateVehicleRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.CreateVehicleRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.vehicleId != null)
                            message.vehicleId = String(object.vehicleId);
                        if (object.vehicle != null) {
                            if (typeof object.vehicle !== "object")
                                throw TypeError(".maps.fleetengine.v1.CreateVehicleRequest.vehicle: object expected");
                            message.vehicle = $root.maps.fleetengine.v1.Vehicle.fromObject(object.vehicle);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateVehicleRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.CreateVehicleRequest} message CreateVehicleRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateVehicleRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.parent = "";
                            object.vehicleId = "";
                            object.vehicle = null;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.vehicleId != null && message.hasOwnProperty("vehicleId"))
                            object.vehicleId = message.vehicleId;
                        if (message.vehicle != null && message.hasOwnProperty("vehicle"))
                            object.vehicle = $root.maps.fleetengine.v1.Vehicle.toObject(message.vehicle, options);
                        return object;
                    };
    
                    /**
                     * Converts this CreateVehicleRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateVehicleRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateVehicleRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.CreateVehicleRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateVehicleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.CreateVehicleRequest";
                    };
    
                    return CreateVehicleRequest;
                })();
    
                v1.GetVehicleRequest = (function() {
    
                    /**
                     * Properties of a GetVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IGetVehicleRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] GetVehicleRequest header
                     * @property {string|null} [name] GetVehicleRequest name
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentVersion] GetVehicleRequest currentRouteSegmentVersion
                     * @property {google.protobuf.ITimestamp|null} [waypointsVersion] GetVehicleRequest waypointsVersion
                     */
    
                    /**
                     * Constructs a new GetVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a GetVehicleRequest.
                     * @implements IGetVehicleRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IGetVehicleRequest=} [properties] Properties to set
                     */
                    function GetVehicleRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetVehicleRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @instance
                     */
                    GetVehicleRequest.prototype.header = null;
    
                    /**
                     * GetVehicleRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @instance
                     */
                    GetVehicleRequest.prototype.name = "";
    
                    /**
                     * GetVehicleRequest currentRouteSegmentVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentVersion
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @instance
                     */
                    GetVehicleRequest.prototype.currentRouteSegmentVersion = null;
    
                    /**
                     * GetVehicleRequest waypointsVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} waypointsVersion
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @instance
                     */
                    GetVehicleRequest.prototype.waypointsVersion = null;
    
                    /**
                     * Creates a new GetVehicleRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetVehicleRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.GetVehicleRequest} GetVehicleRequest instance
                     */
                    GetVehicleRequest.create = function create(properties) {
                        return new GetVehicleRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetVehicleRequest message. Does not implicitly {@link maps.fleetengine.v1.GetVehicleRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetVehicleRequest} message GetVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetVehicleRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.currentRouteSegmentVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentVersion, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.waypointsVersion != null && Object.hasOwnProperty.call(message, "waypointsVersion"))
                            $root.google.protobuf.Timestamp.encode(message.waypointsVersion, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetVehicleRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.GetVehicleRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IGetVehicleRequest} message GetVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetVehicleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetVehicleRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.GetVehicleRequest} GetVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetVehicleRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.GetVehicleRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.waypointsVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetVehicleRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.GetVehicleRequest} GetVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetVehicleRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetVehicleRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetVehicleRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentVersion);
                            if (error)
                                return "currentRouteSegmentVersion." + error;
                        }
                        if (message.waypointsVersion != null && message.hasOwnProperty("waypointsVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.waypointsVersion);
                            if (error)
                                return "waypointsVersion." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetVehicleRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.GetVehicleRequest} GetVehicleRequest
                     */
                    GetVehicleRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.GetVehicleRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.GetVehicleRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetVehicleRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.currentRouteSegmentVersion != null) {
                            if (typeof object.currentRouteSegmentVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetVehicleRequest.currentRouteSegmentVersion: object expected");
                            message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentVersion);
                        }
                        if (object.waypointsVersion != null) {
                            if (typeof object.waypointsVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.GetVehicleRequest.waypointsVersion: object expected");
                            message.waypointsVersion = $root.google.protobuf.Timestamp.fromObject(object.waypointsVersion);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetVehicleRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.GetVehicleRequest} message GetVehicleRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetVehicleRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.name = "";
                            object.currentRouteSegmentVersion = null;
                            object.waypointsVersion = null;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion"))
                            object.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentVersion, options);
                        if (message.waypointsVersion != null && message.hasOwnProperty("waypointsVersion"))
                            object.waypointsVersion = $root.google.protobuf.Timestamp.toObject(message.waypointsVersion, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetVehicleRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetVehicleRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetVehicleRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.GetVehicleRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetVehicleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.GetVehicleRequest";
                    };
    
                    return GetVehicleRequest;
                })();
    
                v1.UpdateVehicleRequest = (function() {
    
                    /**
                     * Properties of an UpdateVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IUpdateVehicleRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] UpdateVehicleRequest header
                     * @property {string|null} [name] UpdateVehicleRequest name
                     * @property {maps.fleetengine.v1.IVehicle|null} [vehicle] UpdateVehicleRequest vehicle
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateVehicleRequest updateMask
                     */
    
                    /**
                     * Constructs a new UpdateVehicleRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents an UpdateVehicleRequest.
                     * @implements IUpdateVehicleRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest=} [properties] Properties to set
                     */
                    function UpdateVehicleRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateVehicleRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @instance
                     */
                    UpdateVehicleRequest.prototype.header = null;
    
                    /**
                     * UpdateVehicleRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @instance
                     */
                    UpdateVehicleRequest.prototype.name = "";
    
                    /**
                     * UpdateVehicleRequest vehicle.
                     * @member {maps.fleetengine.v1.IVehicle|null|undefined} vehicle
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @instance
                     */
                    UpdateVehicleRequest.prototype.vehicle = null;
    
                    /**
                     * UpdateVehicleRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @instance
                     */
                    UpdateVehicleRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new UpdateVehicleRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.UpdateVehicleRequest} UpdateVehicleRequest instance
                     */
                    UpdateVehicleRequest.create = function create(properties) {
                        return new UpdateVehicleRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleRequest message. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest} message UpdateVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.vehicle != null && Object.hasOwnProperty.call(message, "vehicle"))
                            $root.maps.fleetengine.v1.Vehicle.encode(message.vehicle, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleRequest} message UpdateVehicleRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateVehicleRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.UpdateVehicleRequest} UpdateVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.UpdateVehicleRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.vehicle = $root.maps.fleetengine.v1.Vehicle.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateVehicleRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.UpdateVehicleRequest} UpdateVehicleRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateVehicleRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateVehicleRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.vehicle != null && message.hasOwnProperty("vehicle")) {
                            var error = $root.maps.fleetengine.v1.Vehicle.verify(message.vehicle);
                            if (error)
                                return "vehicle." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateVehicleRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.UpdateVehicleRequest} UpdateVehicleRequest
                     */
                    UpdateVehicleRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.UpdateVehicleRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.UpdateVehicleRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.vehicle != null) {
                            if (typeof object.vehicle !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleRequest.vehicle: object expected");
                            message.vehicle = $root.maps.fleetengine.v1.Vehicle.fromObject(object.vehicle);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateVehicleRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {maps.fleetengine.v1.UpdateVehicleRequest} message UpdateVehicleRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateVehicleRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.header = null;
                            object.name = "";
                            object.vehicle = null;
                            object.updateMask = null;
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.vehicle != null && message.hasOwnProperty("vehicle"))
                            object.vehicle = $root.maps.fleetengine.v1.Vehicle.toObject(message.vehicle, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateVehicleRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateVehicleRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateVehicleRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.UpdateVehicleRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateVehicleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.UpdateVehicleRequest";
                    };
    
                    return UpdateVehicleRequest;
                })();
    
                v1.UpdateVehicleAttributesRequest = (function() {
    
                    /**
                     * Properties of an UpdateVehicleAttributesRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IUpdateVehicleAttributesRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] UpdateVehicleAttributesRequest header
                     * @property {string|null} [name] UpdateVehicleAttributesRequest name
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttribute>|null} [attributes] UpdateVehicleAttributesRequest attributes
                     */
    
                    /**
                     * Constructs a new UpdateVehicleAttributesRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents an UpdateVehicleAttributesRequest.
                     * @implements IUpdateVehicleAttributesRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest=} [properties] Properties to set
                     */
                    function UpdateVehicleAttributesRequest(properties) {
                        this.attributes = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateVehicleAttributesRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @instance
                     */
                    UpdateVehicleAttributesRequest.prototype.header = null;
    
                    /**
                     * UpdateVehicleAttributesRequest name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @instance
                     */
                    UpdateVehicleAttributesRequest.prototype.name = "";
    
                    /**
                     * UpdateVehicleAttributesRequest attributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttribute>} attributes
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @instance
                     */
                    UpdateVehicleAttributesRequest.prototype.attributes = $util.emptyArray;
    
                    /**
                     * Creates a new UpdateVehicleAttributesRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesRequest} UpdateVehicleAttributesRequest instance
                     */
                    UpdateVehicleAttributesRequest.create = function create(properties) {
                        return new UpdateVehicleAttributesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleAttributesRequest message. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleAttributesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest} message UpdateVehicleAttributesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleAttributesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                        if (message.attributes != null && message.attributes.length)
                            for (var i = 0; i < message.attributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttribute.encode(message.attributes[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleAttributesRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleAttributesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesRequest} message UpdateVehicleAttributesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleAttributesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateVehicleAttributesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesRequest} UpdateVehicleAttributesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleAttributesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.UpdateVehicleAttributesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (!(message.attributes && message.attributes.length))
                                        message.attributes = [];
                                    message.attributes.push($root.maps.fleetengine.v1.VehicleAttribute.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateVehicleAttributesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesRequest} UpdateVehicleAttributesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleAttributesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateVehicleAttributesRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateVehicleAttributesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.attributes != null && message.hasOwnProperty("attributes")) {
                            if (!Array.isArray(message.attributes))
                                return "attributes: array expected";
                            for (var i = 0; i < message.attributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttribute.verify(message.attributes[i]);
                                if (error)
                                    return "attributes." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateVehicleAttributesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesRequest} UpdateVehicleAttributesRequest
                     */
                    UpdateVehicleAttributesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.UpdateVehicleAttributesRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.UpdateVehicleAttributesRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleAttributesRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.attributes) {
                            if (!Array.isArray(object.attributes))
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleAttributesRequest.attributes: array expected");
                            message.attributes = [];
                            for (var i = 0; i < object.attributes.length; ++i) {
                                if (typeof object.attributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.UpdateVehicleAttributesRequest.attributes: object expected");
                                message.attributes[i] = $root.maps.fleetengine.v1.VehicleAttribute.fromObject(object.attributes[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateVehicleAttributesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {maps.fleetengine.v1.UpdateVehicleAttributesRequest} message UpdateVehicleAttributesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateVehicleAttributesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.attributes = [];
                        if (options.defaults) {
                            object.header = null;
                            object.name = "";
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.attributes && message.attributes.length) {
                            object.attributes = [];
                            for (var j = 0; j < message.attributes.length; ++j)
                                object.attributes[j] = $root.maps.fleetengine.v1.VehicleAttribute.toObject(message.attributes[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this UpdateVehicleAttributesRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateVehicleAttributesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateVehicleAttributesRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateVehicleAttributesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.UpdateVehicleAttributesRequest";
                    };
    
                    return UpdateVehicleAttributesRequest;
                })();
    
                v1.UpdateVehicleAttributesResponse = (function() {
    
                    /**
                     * Properties of an UpdateVehicleAttributesResponse.
                     * @memberof maps.fleetengine.v1
                     * @interface IUpdateVehicleAttributesResponse
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttribute>|null} [attributes] UpdateVehicleAttributesResponse attributes
                     */
    
                    /**
                     * Constructs a new UpdateVehicleAttributesResponse.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents an UpdateVehicleAttributesResponse.
                     * @implements IUpdateVehicleAttributesResponse
                     * @constructor
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesResponse=} [properties] Properties to set
                     */
                    function UpdateVehicleAttributesResponse(properties) {
                        this.attributes = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateVehicleAttributesResponse attributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttribute>} attributes
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @instance
                     */
                    UpdateVehicleAttributesResponse.prototype.attributes = $util.emptyArray;
    
                    /**
                     * Creates a new UpdateVehicleAttributesResponse instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesResponse=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesResponse} UpdateVehicleAttributesResponse instance
                     */
                    UpdateVehicleAttributesResponse.create = function create(properties) {
                        return new UpdateVehicleAttributesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleAttributesResponse message. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleAttributesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesResponse} message UpdateVehicleAttributesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleAttributesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.attributes != null && message.attributes.length)
                            for (var i = 0; i < message.attributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttribute.encode(message.attributes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateVehicleAttributesResponse message, length delimited. Does not implicitly {@link maps.fleetengine.v1.UpdateVehicleAttributesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IUpdateVehicleAttributesResponse} message UpdateVehicleAttributesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateVehicleAttributesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateVehicleAttributesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesResponse} UpdateVehicleAttributesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleAttributesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.UpdateVehicleAttributesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.attributes && message.attributes.length))
                                        message.attributes = [];
                                    message.attributes.push($root.maps.fleetengine.v1.VehicleAttribute.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateVehicleAttributesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesResponse} UpdateVehicleAttributesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateVehicleAttributesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateVehicleAttributesResponse message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateVehicleAttributesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.attributes != null && message.hasOwnProperty("attributes")) {
                            if (!Array.isArray(message.attributes))
                                return "attributes: array expected";
                            for (var i = 0; i < message.attributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttribute.verify(message.attributes[i]);
                                if (error)
                                    return "attributes." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateVehicleAttributesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.UpdateVehicleAttributesResponse} UpdateVehicleAttributesResponse
                     */
                    UpdateVehicleAttributesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.UpdateVehicleAttributesResponse)
                            return object;
                        var message = new $root.maps.fleetengine.v1.UpdateVehicleAttributesResponse();
                        if (object.attributes) {
                            if (!Array.isArray(object.attributes))
                                throw TypeError(".maps.fleetengine.v1.UpdateVehicleAttributesResponse.attributes: array expected");
                            message.attributes = [];
                            for (var i = 0; i < object.attributes.length; ++i) {
                                if (typeof object.attributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.UpdateVehicleAttributesResponse.attributes: object expected");
                                message.attributes[i] = $root.maps.fleetengine.v1.VehicleAttribute.fromObject(object.attributes[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateVehicleAttributesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {maps.fleetengine.v1.UpdateVehicleAttributesResponse} message UpdateVehicleAttributesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateVehicleAttributesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.attributes = [];
                        if (message.attributes && message.attributes.length) {
                            object.attributes = [];
                            for (var j = 0; j < message.attributes.length; ++j)
                                object.attributes[j] = $root.maps.fleetengine.v1.VehicleAttribute.toObject(message.attributes[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this UpdateVehicleAttributesResponse to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateVehicleAttributesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateVehicleAttributesResponse
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.UpdateVehicleAttributesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateVehicleAttributesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.UpdateVehicleAttributesResponse";
                    };
    
                    return UpdateVehicleAttributesResponse;
                })();
    
                v1.SearchVehiclesRequest = (function() {
    
                    /**
                     * Properties of a SearchVehiclesRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface ISearchVehiclesRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] SearchVehiclesRequest header
                     * @property {string|null} [parent] SearchVehiclesRequest parent
                     * @property {maps.fleetengine.v1.ITerminalLocation|null} [pickupPoint] SearchVehiclesRequest pickupPoint
                     * @property {maps.fleetengine.v1.ITerminalLocation|null} [dropoffPoint] SearchVehiclesRequest dropoffPoint
                     * @property {number|null} [pickupRadiusMeters] SearchVehiclesRequest pickupRadiusMeters
                     * @property {number|null} [count] SearchVehiclesRequest count
                     * @property {number|null} [minimumCapacity] SearchVehiclesRequest minimumCapacity
                     * @property {Array.<maps.fleetengine.v1.TripType>|null} [tripTypes] SearchVehiclesRequest tripTypes
                     * @property {google.protobuf.IDuration|null} [maximumStaleness] SearchVehiclesRequest maximumStaleness
                     * @property {Array.<maps.fleetengine.v1.Vehicle.IVehicleType>|null} [vehicleTypes] SearchVehiclesRequest vehicleTypes
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttribute>|null} [requiredAttributes] SearchVehiclesRequest requiredAttributes
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttributeList>|null} [requiredOneOfAttributes] SearchVehiclesRequest requiredOneOfAttributes
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttributeList>|null} [requiredOneOfAttributeSets] SearchVehiclesRequest requiredOneOfAttributeSets
                     * @property {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder|null} [orderBy] SearchVehiclesRequest orderBy
                     * @property {boolean|null} [includeBackToBack] SearchVehiclesRequest includeBackToBack
                     * @property {string|null} [tripId] SearchVehiclesRequest tripId
                     * @property {maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent|null} [currentTripsPresent] SearchVehiclesRequest currentTripsPresent
                     * @property {string|null} [filter] SearchVehiclesRequest filter
                     */
    
                    /**
                     * Constructs a new SearchVehiclesRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a SearchVehiclesRequest.
                     * @implements ISearchVehiclesRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest=} [properties] Properties to set
                     */
                    function SearchVehiclesRequest(properties) {
                        this.tripTypes = [];
                        this.vehicleTypes = [];
                        this.requiredAttributes = [];
                        this.requiredOneOfAttributes = [];
                        this.requiredOneOfAttributeSets = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SearchVehiclesRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.header = null;
    
                    /**
                     * SearchVehiclesRequest parent.
                     * @member {string} parent
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.parent = "";
    
                    /**
                     * SearchVehiclesRequest pickupPoint.
                     * @member {maps.fleetengine.v1.ITerminalLocation|null|undefined} pickupPoint
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.pickupPoint = null;
    
                    /**
                     * SearchVehiclesRequest dropoffPoint.
                     * @member {maps.fleetengine.v1.ITerminalLocation|null|undefined} dropoffPoint
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.dropoffPoint = null;
    
                    /**
                     * SearchVehiclesRequest pickupRadiusMeters.
                     * @member {number} pickupRadiusMeters
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.pickupRadiusMeters = 0;
    
                    /**
                     * SearchVehiclesRequest count.
                     * @member {number} count
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.count = 0;
    
                    /**
                     * SearchVehiclesRequest minimumCapacity.
                     * @member {number} minimumCapacity
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.minimumCapacity = 0;
    
                    /**
                     * SearchVehiclesRequest tripTypes.
                     * @member {Array.<maps.fleetengine.v1.TripType>} tripTypes
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.tripTypes = $util.emptyArray;
    
                    /**
                     * SearchVehiclesRequest maximumStaleness.
                     * @member {google.protobuf.IDuration|null|undefined} maximumStaleness
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.maximumStaleness = null;
    
                    /**
                     * SearchVehiclesRequest vehicleTypes.
                     * @member {Array.<maps.fleetengine.v1.Vehicle.IVehicleType>} vehicleTypes
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.vehicleTypes = $util.emptyArray;
    
                    /**
                     * SearchVehiclesRequest requiredAttributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttribute>} requiredAttributes
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.requiredAttributes = $util.emptyArray;
    
                    /**
                     * SearchVehiclesRequest requiredOneOfAttributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttributeList>} requiredOneOfAttributes
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.requiredOneOfAttributes = $util.emptyArray;
    
                    /**
                     * SearchVehiclesRequest requiredOneOfAttributeSets.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttributeList>} requiredOneOfAttributeSets
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.requiredOneOfAttributeSets = $util.emptyArray;
    
                    /**
                     * SearchVehiclesRequest orderBy.
                     * @member {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder} orderBy
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.orderBy = 0;
    
                    /**
                     * SearchVehiclesRequest includeBackToBack.
                     * @member {boolean} includeBackToBack
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.includeBackToBack = false;
    
                    /**
                     * SearchVehiclesRequest tripId.
                     * @member {string} tripId
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.tripId = "";
    
                    /**
                     * SearchVehiclesRequest currentTripsPresent.
                     * @member {maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent} currentTripsPresent
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.currentTripsPresent = 0;
    
                    /**
                     * SearchVehiclesRequest filter.
                     * @member {string} filter
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     */
                    SearchVehiclesRequest.prototype.filter = "";
    
                    /**
                     * Creates a new SearchVehiclesRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.SearchVehiclesRequest} SearchVehiclesRequest instance
                     */
                    SearchVehiclesRequest.create = function create(properties) {
                        return new SearchVehiclesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SearchVehiclesRequest message. Does not implicitly {@link maps.fleetengine.v1.SearchVehiclesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest} message SearchVehiclesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchVehiclesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.parent);
                        if (message.pickupPoint != null && Object.hasOwnProperty.call(message, "pickupPoint"))
                            $root.maps.fleetengine.v1.TerminalLocation.encode(message.pickupPoint, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.dropoffPoint != null && Object.hasOwnProperty.call(message, "dropoffPoint"))
                            $root.maps.fleetengine.v1.TerminalLocation.encode(message.dropoffPoint, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.pickupRadiusMeters != null && Object.hasOwnProperty.call(message, "pickupRadiusMeters"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.pickupRadiusMeters);
                        if (message.count != null && Object.hasOwnProperty.call(message, "count"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.count);
                        if (message.minimumCapacity != null && Object.hasOwnProperty.call(message, "minimumCapacity"))
                            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.minimumCapacity);
                        if (message.tripTypes != null && message.tripTypes.length) {
                            writer.uint32(/* id 9, wireType 2 =*/74).fork();
                            for (var i = 0; i < message.tripTypes.length; ++i)
                                writer.int32(message.tripTypes[i]);
                            writer.ldelim();
                        }
                        if (message.maximumStaleness != null && Object.hasOwnProperty.call(message, "maximumStaleness"))
                            $root.google.protobuf.Duration.encode(message.maximumStaleness, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.requiredAttributes != null && message.requiredAttributes.length)
                            for (var i = 0; i < message.requiredAttributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttribute.encode(message.requiredAttributes[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                            writer.uint32(/* id 13, wireType 0 =*/104).int32(message.orderBy);
                        if (message.vehicleTypes != null && message.vehicleTypes.length)
                            for (var i = 0; i < message.vehicleTypes.length; ++i)
                                $root.maps.fleetengine.v1.Vehicle.VehicleType.encode(message.vehicleTypes[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.requiredOneOfAttributes != null && message.requiredOneOfAttributes.length)
                            for (var i = 0; i < message.requiredOneOfAttributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttributeList.encode(message.requiredOneOfAttributes[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.includeBackToBack != null && Object.hasOwnProperty.call(message, "includeBackToBack"))
                            writer.uint32(/* id 18, wireType 0 =*/144).bool(message.includeBackToBack);
                        if (message.tripId != null && Object.hasOwnProperty.call(message, "tripId"))
                            writer.uint32(/* id 19, wireType 2 =*/154).string(message.tripId);
                        if (message.requiredOneOfAttributeSets != null && message.requiredOneOfAttributeSets.length)
                            for (var i = 0; i < message.requiredOneOfAttributeSets.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttributeList.encode(message.requiredOneOfAttributeSets[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                        if (message.currentTripsPresent != null && Object.hasOwnProperty.call(message, "currentTripsPresent"))
                            writer.uint32(/* id 21, wireType 0 =*/168).int32(message.currentTripsPresent);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 22, wireType 2 =*/178).string(message.filter);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SearchVehiclesRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.SearchVehiclesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesRequest} message SearchVehiclesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchVehiclesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SearchVehiclesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.SearchVehiclesRequest} SearchVehiclesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchVehiclesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.SearchVehiclesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.pickupRadiusMeters = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.count = reader.int32();
                                    break;
                                }
                            case 8: {
                                    message.minimumCapacity = reader.int32();
                                    break;
                                }
                            case 9: {
                                    if (!(message.tripTypes && message.tripTypes.length))
                                        message.tripTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.tripTypes.push(reader.int32());
                                    } else
                                        message.tripTypes.push(reader.int32());
                                    break;
                                }
                            case 10: {
                                    message.maximumStaleness = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    if (!(message.vehicleTypes && message.vehicleTypes.length))
                                        message.vehicleTypes = [];
                                    message.vehicleTypes.push($root.maps.fleetengine.v1.Vehicle.VehicleType.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 12: {
                                    if (!(message.requiredAttributes && message.requiredAttributes.length))
                                        message.requiredAttributes = [];
                                    message.requiredAttributes.push($root.maps.fleetengine.v1.VehicleAttribute.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 15: {
                                    if (!(message.requiredOneOfAttributes && message.requiredOneOfAttributes.length))
                                        message.requiredOneOfAttributes = [];
                                    message.requiredOneOfAttributes.push($root.maps.fleetengine.v1.VehicleAttributeList.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 20: {
                                    if (!(message.requiredOneOfAttributeSets && message.requiredOneOfAttributeSets.length))
                                        message.requiredOneOfAttributeSets = [];
                                    message.requiredOneOfAttributeSets.push($root.maps.fleetengine.v1.VehicleAttributeList.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 13: {
                                    message.orderBy = reader.int32();
                                    break;
                                }
                            case 18: {
                                    message.includeBackToBack = reader.bool();
                                    break;
                                }
                            case 19: {
                                    message.tripId = reader.string();
                                    break;
                                }
                            case 21: {
                                    message.currentTripsPresent = reader.int32();
                                    break;
                                }
                            case 22: {
                                    message.filter = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SearchVehiclesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.SearchVehiclesRequest} SearchVehiclesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchVehiclesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SearchVehiclesRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SearchVehiclesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.pickupPoint != null && message.hasOwnProperty("pickupPoint")) {
                            var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.pickupPoint);
                            if (error)
                                return "pickupPoint." + error;
                        }
                        if (message.dropoffPoint != null && message.hasOwnProperty("dropoffPoint")) {
                            var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.dropoffPoint);
                            if (error)
                                return "dropoffPoint." + error;
                        }
                        if (message.pickupRadiusMeters != null && message.hasOwnProperty("pickupRadiusMeters"))
                            if (!$util.isInteger(message.pickupRadiusMeters))
                                return "pickupRadiusMeters: integer expected";
                        if (message.count != null && message.hasOwnProperty("count"))
                            if (!$util.isInteger(message.count))
                                return "count: integer expected";
                        if (message.minimumCapacity != null && message.hasOwnProperty("minimumCapacity"))
                            if (!$util.isInteger(message.minimumCapacity))
                                return "minimumCapacity: integer expected";
                        if (message.tripTypes != null && message.hasOwnProperty("tripTypes")) {
                            if (!Array.isArray(message.tripTypes))
                                return "tripTypes: array expected";
                            for (var i = 0; i < message.tripTypes.length; ++i)
                                switch (message.tripTypes[i]) {
                                default:
                                    return "tripTypes: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                        }
                        if (message.maximumStaleness != null && message.hasOwnProperty("maximumStaleness")) {
                            var error = $root.google.protobuf.Duration.verify(message.maximumStaleness);
                            if (error)
                                return "maximumStaleness." + error;
                        }
                        if (message.vehicleTypes != null && message.hasOwnProperty("vehicleTypes")) {
                            if (!Array.isArray(message.vehicleTypes))
                                return "vehicleTypes: array expected";
                            for (var i = 0; i < message.vehicleTypes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.Vehicle.VehicleType.verify(message.vehicleTypes[i]);
                                if (error)
                                    return "vehicleTypes." + error;
                            }
                        }
                        if (message.requiredAttributes != null && message.hasOwnProperty("requiredAttributes")) {
                            if (!Array.isArray(message.requiredAttributes))
                                return "requiredAttributes: array expected";
                            for (var i = 0; i < message.requiredAttributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttribute.verify(message.requiredAttributes[i]);
                                if (error)
                                    return "requiredAttributes." + error;
                            }
                        }
                        if (message.requiredOneOfAttributes != null && message.hasOwnProperty("requiredOneOfAttributes")) {
                            if (!Array.isArray(message.requiredOneOfAttributes))
                                return "requiredOneOfAttributes: array expected";
                            for (var i = 0; i < message.requiredOneOfAttributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttributeList.verify(message.requiredOneOfAttributes[i]);
                                if (error)
                                    return "requiredOneOfAttributes." + error;
                            }
                        }
                        if (message.requiredOneOfAttributeSets != null && message.hasOwnProperty("requiredOneOfAttributeSets")) {
                            if (!Array.isArray(message.requiredOneOfAttributeSets))
                                return "requiredOneOfAttributeSets: array expected";
                            for (var i = 0; i < message.requiredOneOfAttributeSets.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttributeList.verify(message.requiredOneOfAttributeSets[i]);
                                if (error)
                                    return "requiredOneOfAttributeSets." + error;
                            }
                        }
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            switch (message.orderBy) {
                            default:
                                return "orderBy: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.includeBackToBack != null && message.hasOwnProperty("includeBackToBack"))
                            if (typeof message.includeBackToBack !== "boolean")
                                return "includeBackToBack: boolean expected";
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            if (!$util.isString(message.tripId))
                                return "tripId: string expected";
                        if (message.currentTripsPresent != null && message.hasOwnProperty("currentTripsPresent"))
                            switch (message.currentTripsPresent) {
                            default:
                                return "currentTripsPresent: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SearchVehiclesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.SearchVehiclesRequest} SearchVehiclesRequest
                     */
                    SearchVehiclesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.SearchVehiclesRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.SearchVehiclesRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.pickupPoint != null) {
                            if (typeof object.pickupPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.pickupPoint: object expected");
                            message.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.pickupPoint);
                        }
                        if (object.dropoffPoint != null) {
                            if (typeof object.dropoffPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.dropoffPoint: object expected");
                            message.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.dropoffPoint);
                        }
                        if (object.pickupRadiusMeters != null)
                            message.pickupRadiusMeters = object.pickupRadiusMeters | 0;
                        if (object.count != null)
                            message.count = object.count | 0;
                        if (object.minimumCapacity != null)
                            message.minimumCapacity = object.minimumCapacity | 0;
                        if (object.tripTypes) {
                            if (!Array.isArray(object.tripTypes))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.tripTypes: array expected");
                            message.tripTypes = [];
                            for (var i = 0; i < object.tripTypes.length; ++i)
                                switch (object.tripTypes[i]) {
                                default:
                                    if (typeof object.tripTypes[i] === "number") {
                                        message.tripTypes[i] = object.tripTypes[i];
                                        break;
                                    }
                                case "UNKNOWN_TRIP_TYPE":
                                case 0:
                                    message.tripTypes[i] = 0;
                                    break;
                                case "SHARED":
                                case 1:
                                    message.tripTypes[i] = 1;
                                    break;
                                case "EXCLUSIVE":
                                case 2:
                                    message.tripTypes[i] = 2;
                                    break;
                                }
                        }
                        if (object.maximumStaleness != null) {
                            if (typeof object.maximumStaleness !== "object")
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.maximumStaleness: object expected");
                            message.maximumStaleness = $root.google.protobuf.Duration.fromObject(object.maximumStaleness);
                        }
                        if (object.vehicleTypes) {
                            if (!Array.isArray(object.vehicleTypes))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.vehicleTypes: array expected");
                            message.vehicleTypes = [];
                            for (var i = 0; i < object.vehicleTypes.length; ++i) {
                                if (typeof object.vehicleTypes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.vehicleTypes: object expected");
                                message.vehicleTypes[i] = $root.maps.fleetengine.v1.Vehicle.VehicleType.fromObject(object.vehicleTypes[i]);
                            }
                        }
                        if (object.requiredAttributes) {
                            if (!Array.isArray(object.requiredAttributes))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredAttributes: array expected");
                            message.requiredAttributes = [];
                            for (var i = 0; i < object.requiredAttributes.length; ++i) {
                                if (typeof object.requiredAttributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredAttributes: object expected");
                                message.requiredAttributes[i] = $root.maps.fleetengine.v1.VehicleAttribute.fromObject(object.requiredAttributes[i]);
                            }
                        }
                        if (object.requiredOneOfAttributes) {
                            if (!Array.isArray(object.requiredOneOfAttributes))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredOneOfAttributes: array expected");
                            message.requiredOneOfAttributes = [];
                            for (var i = 0; i < object.requiredOneOfAttributes.length; ++i) {
                                if (typeof object.requiredOneOfAttributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredOneOfAttributes: object expected");
                                message.requiredOneOfAttributes[i] = $root.maps.fleetengine.v1.VehicleAttributeList.fromObject(object.requiredOneOfAttributes[i]);
                            }
                        }
                        if (object.requiredOneOfAttributeSets) {
                            if (!Array.isArray(object.requiredOneOfAttributeSets))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredOneOfAttributeSets: array expected");
                            message.requiredOneOfAttributeSets = [];
                            for (var i = 0; i < object.requiredOneOfAttributeSets.length; ++i) {
                                if (typeof object.requiredOneOfAttributeSets[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchVehiclesRequest.requiredOneOfAttributeSets: object expected");
                                message.requiredOneOfAttributeSets[i] = $root.maps.fleetengine.v1.VehicleAttributeList.fromObject(object.requiredOneOfAttributeSets[i]);
                            }
                        }
                        switch (object.orderBy) {
                        default:
                            if (typeof object.orderBy === "number") {
                                message.orderBy = object.orderBy;
                                break;
                            }
                            break;
                        case "UNKNOWN_VEHICLE_MATCH_ORDER":
                        case 0:
                            message.orderBy = 0;
                            break;
                        case "PICKUP_POINT_ETA":
                        case 1:
                            message.orderBy = 1;
                            break;
                        case "PICKUP_POINT_DISTANCE":
                        case 2:
                            message.orderBy = 2;
                            break;
                        case "DROPOFF_POINT_ETA":
                        case 3:
                            message.orderBy = 3;
                            break;
                        case "PICKUP_POINT_STRAIGHT_DISTANCE":
                        case 4:
                            message.orderBy = 4;
                            break;
                        case "COST":
                        case 5:
                            message.orderBy = 5;
                            break;
                        }
                        if (object.includeBackToBack != null)
                            message.includeBackToBack = Boolean(object.includeBackToBack);
                        if (object.tripId != null)
                            message.tripId = String(object.tripId);
                        switch (object.currentTripsPresent) {
                        default:
                            if (typeof object.currentTripsPresent === "number") {
                                message.currentTripsPresent = object.currentTripsPresent;
                                break;
                            }
                            break;
                        case "CURRENT_TRIPS_PRESENT_UNSPECIFIED":
                        case 0:
                            message.currentTripsPresent = 0;
                            break;
                        case "NONE":
                        case 1:
                            message.currentTripsPresent = 1;
                            break;
                        case "ANY":
                        case 2:
                            message.currentTripsPresent = 2;
                            break;
                        }
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SearchVehiclesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.SearchVehiclesRequest} message SearchVehiclesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SearchVehiclesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.tripTypes = [];
                            object.requiredAttributes = [];
                            object.vehicleTypes = [];
                            object.requiredOneOfAttributes = [];
                            object.requiredOneOfAttributeSets = [];
                        }
                        if (options.defaults) {
                            object.header = null;
                            object.parent = "";
                            object.pickupPoint = null;
                            object.dropoffPoint = null;
                            object.pickupRadiusMeters = 0;
                            object.count = 0;
                            object.minimumCapacity = 0;
                            object.maximumStaleness = null;
                            object.orderBy = options.enums === String ? "UNKNOWN_VEHICLE_MATCH_ORDER" : 0;
                            object.includeBackToBack = false;
                            object.tripId = "";
                            object.currentTripsPresent = options.enums === String ? "CURRENT_TRIPS_PRESENT_UNSPECIFIED" : 0;
                            object.filter = "";
                        }
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.pickupPoint != null && message.hasOwnProperty("pickupPoint"))
                            object.pickupPoint = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.pickupPoint, options);
                        if (message.dropoffPoint != null && message.hasOwnProperty("dropoffPoint"))
                            object.dropoffPoint = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.dropoffPoint, options);
                        if (message.pickupRadiusMeters != null && message.hasOwnProperty("pickupRadiusMeters"))
                            object.pickupRadiusMeters = message.pickupRadiusMeters;
                        if (message.count != null && message.hasOwnProperty("count"))
                            object.count = message.count;
                        if (message.minimumCapacity != null && message.hasOwnProperty("minimumCapacity"))
                            object.minimumCapacity = message.minimumCapacity;
                        if (message.tripTypes && message.tripTypes.length) {
                            object.tripTypes = [];
                            for (var j = 0; j < message.tripTypes.length; ++j)
                                object.tripTypes[j] = options.enums === String ? $root.maps.fleetengine.v1.TripType[message.tripTypes[j]] === undefined ? message.tripTypes[j] : $root.maps.fleetengine.v1.TripType[message.tripTypes[j]] : message.tripTypes[j];
                        }
                        if (message.maximumStaleness != null && message.hasOwnProperty("maximumStaleness"))
                            object.maximumStaleness = $root.google.protobuf.Duration.toObject(message.maximumStaleness, options);
                        if (message.requiredAttributes && message.requiredAttributes.length) {
                            object.requiredAttributes = [];
                            for (var j = 0; j < message.requiredAttributes.length; ++j)
                                object.requiredAttributes[j] = $root.maps.fleetengine.v1.VehicleAttribute.toObject(message.requiredAttributes[j], options);
                        }
                        if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                            object.orderBy = options.enums === String ? $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.orderBy] === undefined ? message.orderBy : $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.orderBy] : message.orderBy;
                        if (message.vehicleTypes && message.vehicleTypes.length) {
                            object.vehicleTypes = [];
                            for (var j = 0; j < message.vehicleTypes.length; ++j)
                                object.vehicleTypes[j] = $root.maps.fleetengine.v1.Vehicle.VehicleType.toObject(message.vehicleTypes[j], options);
                        }
                        if (message.requiredOneOfAttributes && message.requiredOneOfAttributes.length) {
                            object.requiredOneOfAttributes = [];
                            for (var j = 0; j < message.requiredOneOfAttributes.length; ++j)
                                object.requiredOneOfAttributes[j] = $root.maps.fleetengine.v1.VehicleAttributeList.toObject(message.requiredOneOfAttributes[j], options);
                        }
                        if (message.includeBackToBack != null && message.hasOwnProperty("includeBackToBack"))
                            object.includeBackToBack = message.includeBackToBack;
                        if (message.tripId != null && message.hasOwnProperty("tripId"))
                            object.tripId = message.tripId;
                        if (message.requiredOneOfAttributeSets && message.requiredOneOfAttributeSets.length) {
                            object.requiredOneOfAttributeSets = [];
                            for (var j = 0; j < message.requiredOneOfAttributeSets.length; ++j)
                                object.requiredOneOfAttributeSets[j] = $root.maps.fleetengine.v1.VehicleAttributeList.toObject(message.requiredOneOfAttributeSets[j], options);
                        }
                        if (message.currentTripsPresent != null && message.hasOwnProperty("currentTripsPresent"))
                            object.currentTripsPresent = options.enums === String ? $root.maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent[message.currentTripsPresent] === undefined ? message.currentTripsPresent : $root.maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent[message.currentTripsPresent] : message.currentTripsPresent;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        return object;
                    };
    
                    /**
                     * Converts this SearchVehiclesRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SearchVehiclesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SearchVehiclesRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.SearchVehiclesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SearchVehiclesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.SearchVehiclesRequest";
                    };
    
                    /**
                     * VehicleMatchOrder enum.
                     * @name maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
                     * @enum {number}
                     * @property {number} UNKNOWN_VEHICLE_MATCH_ORDER=0 UNKNOWN_VEHICLE_MATCH_ORDER value
                     * @property {number} PICKUP_POINT_ETA=1 PICKUP_POINT_ETA value
                     * @property {number} PICKUP_POINT_DISTANCE=2 PICKUP_POINT_DISTANCE value
                     * @property {number} DROPOFF_POINT_ETA=3 DROPOFF_POINT_ETA value
                     * @property {number} PICKUP_POINT_STRAIGHT_DISTANCE=4 PICKUP_POINT_STRAIGHT_DISTANCE value
                     * @property {number} COST=5 COST value
                     */
                    SearchVehiclesRequest.VehicleMatchOrder = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN_VEHICLE_MATCH_ORDER"] = 0;
                        values[valuesById[1] = "PICKUP_POINT_ETA"] = 1;
                        values[valuesById[2] = "PICKUP_POINT_DISTANCE"] = 2;
                        values[valuesById[3] = "DROPOFF_POINT_ETA"] = 3;
                        values[valuesById[4] = "PICKUP_POINT_STRAIGHT_DISTANCE"] = 4;
                        values[valuesById[5] = "COST"] = 5;
                        return values;
                    })();
    
                    /**
                     * CurrentTripsPresent enum.
                     * @name maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent
                     * @enum {number}
                     * @property {number} CURRENT_TRIPS_PRESENT_UNSPECIFIED=0 CURRENT_TRIPS_PRESENT_UNSPECIFIED value
                     * @property {number} NONE=1 NONE value
                     * @property {number} ANY=2 ANY value
                     */
                    SearchVehiclesRequest.CurrentTripsPresent = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CURRENT_TRIPS_PRESENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NONE"] = 1;
                        values[valuesById[2] = "ANY"] = 2;
                        return values;
                    })();
    
                    return SearchVehiclesRequest;
                })();
    
                v1.SearchVehiclesResponse = (function() {
    
                    /**
                     * Properties of a SearchVehiclesResponse.
                     * @memberof maps.fleetengine.v1
                     * @interface ISearchVehiclesResponse
                     * @property {Array.<maps.fleetengine.v1.IVehicleMatch>|null} [matches] SearchVehiclesResponse matches
                     */
    
                    /**
                     * Constructs a new SearchVehiclesResponse.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a SearchVehiclesResponse.
                     * @implements ISearchVehiclesResponse
                     * @constructor
                     * @param {maps.fleetengine.v1.ISearchVehiclesResponse=} [properties] Properties to set
                     */
                    function SearchVehiclesResponse(properties) {
                        this.matches = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SearchVehiclesResponse matches.
                     * @member {Array.<maps.fleetengine.v1.IVehicleMatch>} matches
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @instance
                     */
                    SearchVehiclesResponse.prototype.matches = $util.emptyArray;
    
                    /**
                     * Creates a new SearchVehiclesResponse instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesResponse=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.SearchVehiclesResponse} SearchVehiclesResponse instance
                     */
                    SearchVehiclesResponse.create = function create(properties) {
                        return new SearchVehiclesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified SearchVehiclesResponse message. Does not implicitly {@link maps.fleetengine.v1.SearchVehiclesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesResponse} message SearchVehiclesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchVehiclesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.matches != null && message.matches.length)
                            for (var i = 0; i < message.matches.length; ++i)
                                $root.maps.fleetengine.v1.VehicleMatch.encode(message.matches[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SearchVehiclesResponse message, length delimited. Does not implicitly {@link maps.fleetengine.v1.SearchVehiclesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.ISearchVehiclesResponse} message SearchVehiclesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SearchVehiclesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SearchVehiclesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.SearchVehiclesResponse} SearchVehiclesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchVehiclesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.SearchVehiclesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.matches && message.matches.length))
                                        message.matches = [];
                                    message.matches.push($root.maps.fleetengine.v1.VehicleMatch.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SearchVehiclesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.SearchVehiclesResponse} SearchVehiclesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SearchVehiclesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SearchVehiclesResponse message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SearchVehiclesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.matches != null && message.hasOwnProperty("matches")) {
                            if (!Array.isArray(message.matches))
                                return "matches: array expected";
                            for (var i = 0; i < message.matches.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleMatch.verify(message.matches[i]);
                                if (error)
                                    return "matches." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a SearchVehiclesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.SearchVehiclesResponse} SearchVehiclesResponse
                     */
                    SearchVehiclesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.SearchVehiclesResponse)
                            return object;
                        var message = new $root.maps.fleetengine.v1.SearchVehiclesResponse();
                        if (object.matches) {
                            if (!Array.isArray(object.matches))
                                throw TypeError(".maps.fleetengine.v1.SearchVehiclesResponse.matches: array expected");
                            message.matches = [];
                            for (var i = 0; i < object.matches.length; ++i) {
                                if (typeof object.matches[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.SearchVehiclesResponse.matches: object expected");
                                message.matches[i] = $root.maps.fleetengine.v1.VehicleMatch.fromObject(object.matches[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SearchVehiclesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.SearchVehiclesResponse} message SearchVehiclesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SearchVehiclesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.matches = [];
                        if (message.matches && message.matches.length) {
                            object.matches = [];
                            for (var j = 0; j < message.matches.length; ++j)
                                object.matches[j] = $root.maps.fleetengine.v1.VehicleMatch.toObject(message.matches[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this SearchVehiclesResponse to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SearchVehiclesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SearchVehiclesResponse
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.SearchVehiclesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SearchVehiclesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.SearchVehiclesResponse";
                    };
    
                    return SearchVehiclesResponse;
                })();
    
                v1.ListVehiclesRequest = (function() {
    
                    /**
                     * Properties of a ListVehiclesRequest.
                     * @memberof maps.fleetengine.v1
                     * @interface IListVehiclesRequest
                     * @property {maps.fleetengine.v1.IRequestHeader|null} [header] ListVehiclesRequest header
                     * @property {string|null} [parent] ListVehiclesRequest parent
                     * @property {number|null} [pageSize] ListVehiclesRequest pageSize
                     * @property {string|null} [pageToken] ListVehiclesRequest pageToken
                     * @property {google.protobuf.IInt32Value|null} [minimumCapacity] ListVehiclesRequest minimumCapacity
                     * @property {Array.<maps.fleetengine.v1.TripType>|null} [tripTypes] ListVehiclesRequest tripTypes
                     * @property {google.protobuf.IDuration|null} [maximumStaleness] ListVehiclesRequest maximumStaleness
                     * @property {Array.<maps.fleetengine.v1.Vehicle.VehicleType.Category>|null} [vehicleTypeCategories] ListVehiclesRequest vehicleTypeCategories
                     * @property {Array.<string>|null} [requiredAttributes] ListVehiclesRequest requiredAttributes
                     * @property {Array.<string>|null} [requiredOneOfAttributes] ListVehiclesRequest requiredOneOfAttributes
                     * @property {Array.<string>|null} [requiredOneOfAttributeSets] ListVehiclesRequest requiredOneOfAttributeSets
                     * @property {maps.fleetengine.v1.VehicleState|null} [vehicleState] ListVehiclesRequest vehicleState
                     * @property {boolean|null} [onTripOnly] ListVehiclesRequest onTripOnly
                     * @property {string|null} [filter] ListVehiclesRequest filter
                     * @property {google.geo.type.IViewport|null} [viewport] ListVehiclesRequest viewport
                     */
    
                    /**
                     * Constructs a new ListVehiclesRequest.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a ListVehiclesRequest.
                     * @implements IListVehiclesRequest
                     * @constructor
                     * @param {maps.fleetengine.v1.IListVehiclesRequest=} [properties] Properties to set
                     */
                    function ListVehiclesRequest(properties) {
                        this.tripTypes = [];
                        this.vehicleTypeCategories = [];
                        this.requiredAttributes = [];
                        this.requiredOneOfAttributes = [];
                        this.requiredOneOfAttributeSets = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListVehiclesRequest header.
                     * @member {maps.fleetengine.v1.IRequestHeader|null|undefined} header
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.header = null;
    
                    /**
                     * ListVehiclesRequest parent.
                     * @member {string} parent
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.parent = "";
    
                    /**
                     * ListVehiclesRequest pageSize.
                     * @member {number} pageSize
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.pageSize = 0;
    
                    /**
                     * ListVehiclesRequest pageToken.
                     * @member {string} pageToken
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.pageToken = "";
    
                    /**
                     * ListVehiclesRequest minimumCapacity.
                     * @member {google.protobuf.IInt32Value|null|undefined} minimumCapacity
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.minimumCapacity = null;
    
                    /**
                     * ListVehiclesRequest tripTypes.
                     * @member {Array.<maps.fleetengine.v1.TripType>} tripTypes
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.tripTypes = $util.emptyArray;
    
                    /**
                     * ListVehiclesRequest maximumStaleness.
                     * @member {google.protobuf.IDuration|null|undefined} maximumStaleness
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.maximumStaleness = null;
    
                    /**
                     * ListVehiclesRequest vehicleTypeCategories.
                     * @member {Array.<maps.fleetengine.v1.Vehicle.VehicleType.Category>} vehicleTypeCategories
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.vehicleTypeCategories = $util.emptyArray;
    
                    /**
                     * ListVehiclesRequest requiredAttributes.
                     * @member {Array.<string>} requiredAttributes
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.requiredAttributes = $util.emptyArray;
    
                    /**
                     * ListVehiclesRequest requiredOneOfAttributes.
                     * @member {Array.<string>} requiredOneOfAttributes
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.requiredOneOfAttributes = $util.emptyArray;
    
                    /**
                     * ListVehiclesRequest requiredOneOfAttributeSets.
                     * @member {Array.<string>} requiredOneOfAttributeSets
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.requiredOneOfAttributeSets = $util.emptyArray;
    
                    /**
                     * ListVehiclesRequest vehicleState.
                     * @member {maps.fleetengine.v1.VehicleState} vehicleState
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.vehicleState = 0;
    
                    /**
                     * ListVehiclesRequest onTripOnly.
                     * @member {boolean} onTripOnly
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.onTripOnly = false;
    
                    /**
                     * ListVehiclesRequest filter.
                     * @member {string} filter
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.filter = "";
    
                    /**
                     * ListVehiclesRequest viewport.
                     * @member {google.geo.type.IViewport|null|undefined} viewport
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     */
                    ListVehiclesRequest.prototype.viewport = null;
    
                    /**
                     * Creates a new ListVehiclesRequest instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesRequest=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.ListVehiclesRequest} ListVehiclesRequest instance
                     */
                    ListVehiclesRequest.create = function create(properties) {
                        return new ListVehiclesRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListVehiclesRequest message. Does not implicitly {@link maps.fleetengine.v1.ListVehiclesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesRequest} message ListVehiclesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListVehiclesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        if (message.minimumCapacity != null && Object.hasOwnProperty.call(message, "minimumCapacity"))
                            $root.google.protobuf.Int32Value.encode(message.minimumCapacity, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.tripTypes != null && message.tripTypes.length) {
                            writer.uint32(/* id 7, wireType 2 =*/58).fork();
                            for (var i = 0; i < message.tripTypes.length; ++i)
                                writer.int32(message.tripTypes[i]);
                            writer.ldelim();
                        }
                        if (message.maximumStaleness != null && Object.hasOwnProperty.call(message, "maximumStaleness"))
                            $root.google.protobuf.Duration.encode(message.maximumStaleness, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.vehicleTypeCategories != null && message.vehicleTypeCategories.length) {
                            writer.uint32(/* id 9, wireType 2 =*/74).fork();
                            for (var i = 0; i < message.vehicleTypeCategories.length; ++i)
                                writer.int32(message.vehicleTypeCategories[i]);
                            writer.ldelim();
                        }
                        if (message.requiredAttributes != null && message.requiredAttributes.length)
                            for (var i = 0; i < message.requiredAttributes.length; ++i)
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.requiredAttributes[i]);
                        if (message.vehicleState != null && Object.hasOwnProperty.call(message, "vehicleState"))
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.vehicleState);
                        if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                            $root.maps.fleetengine.v1.RequestHeader.encode(message.header, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.requiredOneOfAttributes != null && message.requiredOneOfAttributes.length)
                            for (var i = 0; i < message.requiredOneOfAttributes.length; ++i)
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.requiredOneOfAttributes[i]);
                        if (message.onTripOnly != null && Object.hasOwnProperty.call(message, "onTripOnly"))
                            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.onTripOnly);
                        if (message.requiredOneOfAttributeSets != null && message.requiredOneOfAttributeSets.length)
                            for (var i = 0; i < message.requiredOneOfAttributeSets.length; ++i)
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.requiredOneOfAttributeSets[i]);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 16, wireType 2 =*/130).string(message.filter);
                        if (message.viewport != null && Object.hasOwnProperty.call(message, "viewport"))
                            $root.google.geo.type.Viewport.encode(message.viewport, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListVehiclesRequest message, length delimited. Does not implicitly {@link maps.fleetengine.v1.ListVehiclesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesRequest} message ListVehiclesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListVehiclesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListVehiclesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.ListVehiclesRequest} ListVehiclesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListVehiclesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.ListVehiclesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 12: {
                                    message.header = $root.maps.fleetengine.v1.RequestHeader.decode(reader, reader.uint32());
                                    break;
                                }
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.minimumCapacity = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    if (!(message.tripTypes && message.tripTypes.length))
                                        message.tripTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.tripTypes.push(reader.int32());
                                    } else
                                        message.tripTypes.push(reader.int32());
                                    break;
                                }
                            case 8: {
                                    message.maximumStaleness = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    if (!(message.vehicleTypeCategories && message.vehicleTypeCategories.length))
                                        message.vehicleTypeCategories = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.vehicleTypeCategories.push(reader.int32());
                                    } else
                                        message.vehicleTypeCategories.push(reader.int32());
                                    break;
                                }
                            case 10: {
                                    if (!(message.requiredAttributes && message.requiredAttributes.length))
                                        message.requiredAttributes = [];
                                    message.requiredAttributes.push(reader.string());
                                    break;
                                }
                            case 13: {
                                    if (!(message.requiredOneOfAttributes && message.requiredOneOfAttributes.length))
                                        message.requiredOneOfAttributes = [];
                                    message.requiredOneOfAttributes.push(reader.string());
                                    break;
                                }
                            case 15: {
                                    if (!(message.requiredOneOfAttributeSets && message.requiredOneOfAttributeSets.length))
                                        message.requiredOneOfAttributeSets = [];
                                    message.requiredOneOfAttributeSets.push(reader.string());
                                    break;
                                }
                            case 11: {
                                    message.vehicleState = reader.int32();
                                    break;
                                }
                            case 14: {
                                    message.onTripOnly = reader.bool();
                                    break;
                                }
                            case 16: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 17: {
                                    message.viewport = $root.google.geo.type.Viewport.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListVehiclesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.ListVehiclesRequest} ListVehiclesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListVehiclesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListVehiclesRequest message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListVehiclesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.header != null && message.hasOwnProperty("header")) {
                            var error = $root.maps.fleetengine.v1.RequestHeader.verify(message.header);
                            if (error)
                                return "header." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        if (message.minimumCapacity != null && message.hasOwnProperty("minimumCapacity")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.minimumCapacity);
                            if (error)
                                return "minimumCapacity." + error;
                        }
                        if (message.tripTypes != null && message.hasOwnProperty("tripTypes")) {
                            if (!Array.isArray(message.tripTypes))
                                return "tripTypes: array expected";
                            for (var i = 0; i < message.tripTypes.length; ++i)
                                switch (message.tripTypes[i]) {
                                default:
                                    return "tripTypes: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                        }
                        if (message.maximumStaleness != null && message.hasOwnProperty("maximumStaleness")) {
                            var error = $root.google.protobuf.Duration.verify(message.maximumStaleness);
                            if (error)
                                return "maximumStaleness." + error;
                        }
                        if (message.vehicleTypeCategories != null && message.hasOwnProperty("vehicleTypeCategories")) {
                            if (!Array.isArray(message.vehicleTypeCategories))
                                return "vehicleTypeCategories: array expected";
                            for (var i = 0; i < message.vehicleTypeCategories.length; ++i)
                                switch (message.vehicleTypeCategories[i]) {
                                default:
                                    return "vehicleTypeCategories: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                        }
                        if (message.requiredAttributes != null && message.hasOwnProperty("requiredAttributes")) {
                            if (!Array.isArray(message.requiredAttributes))
                                return "requiredAttributes: array expected";
                            for (var i = 0; i < message.requiredAttributes.length; ++i)
                                if (!$util.isString(message.requiredAttributes[i]))
                                    return "requiredAttributes: string[] expected";
                        }
                        if (message.requiredOneOfAttributes != null && message.hasOwnProperty("requiredOneOfAttributes")) {
                            if (!Array.isArray(message.requiredOneOfAttributes))
                                return "requiredOneOfAttributes: array expected";
                            for (var i = 0; i < message.requiredOneOfAttributes.length; ++i)
                                if (!$util.isString(message.requiredOneOfAttributes[i]))
                                    return "requiredOneOfAttributes: string[] expected";
                        }
                        if (message.requiredOneOfAttributeSets != null && message.hasOwnProperty("requiredOneOfAttributeSets")) {
                            if (!Array.isArray(message.requiredOneOfAttributeSets))
                                return "requiredOneOfAttributeSets: array expected";
                            for (var i = 0; i < message.requiredOneOfAttributeSets.length; ++i)
                                if (!$util.isString(message.requiredOneOfAttributeSets[i]))
                                    return "requiredOneOfAttributeSets: string[] expected";
                        }
                        if (message.vehicleState != null && message.hasOwnProperty("vehicleState"))
                            switch (message.vehicleState) {
                            default:
                                return "vehicleState: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.onTripOnly != null && message.hasOwnProperty("onTripOnly"))
                            if (typeof message.onTripOnly !== "boolean")
                                return "onTripOnly: boolean expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.viewport != null && message.hasOwnProperty("viewport")) {
                            var error = $root.google.geo.type.Viewport.verify(message.viewport);
                            if (error)
                                return "viewport." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ListVehiclesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.ListVehiclesRequest} ListVehiclesRequest
                     */
                    ListVehiclesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.ListVehiclesRequest)
                            return object;
                        var message = new $root.maps.fleetengine.v1.ListVehiclesRequest();
                        if (object.header != null) {
                            if (typeof object.header !== "object")
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.header: object expected");
                            message.header = $root.maps.fleetengine.v1.RequestHeader.fromObject(object.header);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        if (object.minimumCapacity != null) {
                            if (typeof object.minimumCapacity !== "object")
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.minimumCapacity: object expected");
                            message.minimumCapacity = $root.google.protobuf.Int32Value.fromObject(object.minimumCapacity);
                        }
                        if (object.tripTypes) {
                            if (!Array.isArray(object.tripTypes))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.tripTypes: array expected");
                            message.tripTypes = [];
                            for (var i = 0; i < object.tripTypes.length; ++i)
                                switch (object.tripTypes[i]) {
                                default:
                                    if (typeof object.tripTypes[i] === "number") {
                                        message.tripTypes[i] = object.tripTypes[i];
                                        break;
                                    }
                                case "UNKNOWN_TRIP_TYPE":
                                case 0:
                                    message.tripTypes[i] = 0;
                                    break;
                                case "SHARED":
                                case 1:
                                    message.tripTypes[i] = 1;
                                    break;
                                case "EXCLUSIVE":
                                case 2:
                                    message.tripTypes[i] = 2;
                                    break;
                                }
                        }
                        if (object.maximumStaleness != null) {
                            if (typeof object.maximumStaleness !== "object")
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.maximumStaleness: object expected");
                            message.maximumStaleness = $root.google.protobuf.Duration.fromObject(object.maximumStaleness);
                        }
                        if (object.vehicleTypeCategories) {
                            if (!Array.isArray(object.vehicleTypeCategories))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.vehicleTypeCategories: array expected");
                            message.vehicleTypeCategories = [];
                            for (var i = 0; i < object.vehicleTypeCategories.length; ++i)
                                switch (object.vehicleTypeCategories[i]) {
                                default:
                                    if (typeof object.vehicleTypeCategories[i] === "number") {
                                        message.vehicleTypeCategories[i] = object.vehicleTypeCategories[i];
                                        break;
                                    }
                                case "UNKNOWN":
                                case 0:
                                    message.vehicleTypeCategories[i] = 0;
                                    break;
                                case "AUTO":
                                case 1:
                                    message.vehicleTypeCategories[i] = 1;
                                    break;
                                case "TAXI":
                                case 2:
                                    message.vehicleTypeCategories[i] = 2;
                                    break;
                                case "TRUCK":
                                case 3:
                                    message.vehicleTypeCategories[i] = 3;
                                    break;
                                case "TWO_WHEELER":
                                case 4:
                                    message.vehicleTypeCategories[i] = 4;
                                    break;
                                case "BICYCLE":
                                case 5:
                                    message.vehicleTypeCategories[i] = 5;
                                    break;
                                case "PEDESTRIAN":
                                case 6:
                                    message.vehicleTypeCategories[i] = 6;
                                    break;
                                }
                        }
                        if (object.requiredAttributes) {
                            if (!Array.isArray(object.requiredAttributes))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.requiredAttributes: array expected");
                            message.requiredAttributes = [];
                            for (var i = 0; i < object.requiredAttributes.length; ++i)
                                message.requiredAttributes[i] = String(object.requiredAttributes[i]);
                        }
                        if (object.requiredOneOfAttributes) {
                            if (!Array.isArray(object.requiredOneOfAttributes))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.requiredOneOfAttributes: array expected");
                            message.requiredOneOfAttributes = [];
                            for (var i = 0; i < object.requiredOneOfAttributes.length; ++i)
                                message.requiredOneOfAttributes[i] = String(object.requiredOneOfAttributes[i]);
                        }
                        if (object.requiredOneOfAttributeSets) {
                            if (!Array.isArray(object.requiredOneOfAttributeSets))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.requiredOneOfAttributeSets: array expected");
                            message.requiredOneOfAttributeSets = [];
                            for (var i = 0; i < object.requiredOneOfAttributeSets.length; ++i)
                                message.requiredOneOfAttributeSets[i] = String(object.requiredOneOfAttributeSets[i]);
                        }
                        switch (object.vehicleState) {
                        default:
                            if (typeof object.vehicleState === "number") {
                                message.vehicleState = object.vehicleState;
                                break;
                            }
                            break;
                        case "UNKNOWN_VEHICLE_STATE":
                        case 0:
                            message.vehicleState = 0;
                            break;
                        case "OFFLINE":
                        case 1:
                            message.vehicleState = 1;
                            break;
                        case "ONLINE":
                        case 2:
                            message.vehicleState = 2;
                            break;
                        }
                        if (object.onTripOnly != null)
                            message.onTripOnly = Boolean(object.onTripOnly);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.viewport != null) {
                            if (typeof object.viewport !== "object")
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesRequest.viewport: object expected");
                            message.viewport = $root.google.geo.type.Viewport.fromObject(object.viewport);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListVehiclesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {maps.fleetengine.v1.ListVehiclesRequest} message ListVehiclesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListVehiclesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.tripTypes = [];
                            object.vehicleTypeCategories = [];
                            object.requiredAttributes = [];
                            object.requiredOneOfAttributes = [];
                            object.requiredOneOfAttributeSets = [];
                        }
                        if (options.defaults) {
                            object.parent = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                            object.minimumCapacity = null;
                            object.maximumStaleness = null;
                            object.vehicleState = options.enums === String ? "UNKNOWN_VEHICLE_STATE" : 0;
                            object.header = null;
                            object.onTripOnly = false;
                            object.filter = "";
                            object.viewport = null;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        if (message.minimumCapacity != null && message.hasOwnProperty("minimumCapacity"))
                            object.minimumCapacity = $root.google.protobuf.Int32Value.toObject(message.minimumCapacity, options);
                        if (message.tripTypes && message.tripTypes.length) {
                            object.tripTypes = [];
                            for (var j = 0; j < message.tripTypes.length; ++j)
                                object.tripTypes[j] = options.enums === String ? $root.maps.fleetengine.v1.TripType[message.tripTypes[j]] === undefined ? message.tripTypes[j] : $root.maps.fleetengine.v1.TripType[message.tripTypes[j]] : message.tripTypes[j];
                        }
                        if (message.maximumStaleness != null && message.hasOwnProperty("maximumStaleness"))
                            object.maximumStaleness = $root.google.protobuf.Duration.toObject(message.maximumStaleness, options);
                        if (message.vehicleTypeCategories && message.vehicleTypeCategories.length) {
                            object.vehicleTypeCategories = [];
                            for (var j = 0; j < message.vehicleTypeCategories.length; ++j)
                                object.vehicleTypeCategories[j] = options.enums === String ? $root.maps.fleetengine.v1.Vehicle.VehicleType.Category[message.vehicleTypeCategories[j]] === undefined ? message.vehicleTypeCategories[j] : $root.maps.fleetengine.v1.Vehicle.VehicleType.Category[message.vehicleTypeCategories[j]] : message.vehicleTypeCategories[j];
                        }
                        if (message.requiredAttributes && message.requiredAttributes.length) {
                            object.requiredAttributes = [];
                            for (var j = 0; j < message.requiredAttributes.length; ++j)
                                object.requiredAttributes[j] = message.requiredAttributes[j];
                        }
                        if (message.vehicleState != null && message.hasOwnProperty("vehicleState"))
                            object.vehicleState = options.enums === String ? $root.maps.fleetengine.v1.VehicleState[message.vehicleState] === undefined ? message.vehicleState : $root.maps.fleetengine.v1.VehicleState[message.vehicleState] : message.vehicleState;
                        if (message.header != null && message.hasOwnProperty("header"))
                            object.header = $root.maps.fleetengine.v1.RequestHeader.toObject(message.header, options);
                        if (message.requiredOneOfAttributes && message.requiredOneOfAttributes.length) {
                            object.requiredOneOfAttributes = [];
                            for (var j = 0; j < message.requiredOneOfAttributes.length; ++j)
                                object.requiredOneOfAttributes[j] = message.requiredOneOfAttributes[j];
                        }
                        if (message.onTripOnly != null && message.hasOwnProperty("onTripOnly"))
                            object.onTripOnly = message.onTripOnly;
                        if (message.requiredOneOfAttributeSets && message.requiredOneOfAttributeSets.length) {
                            object.requiredOneOfAttributeSets = [];
                            for (var j = 0; j < message.requiredOneOfAttributeSets.length; ++j)
                                object.requiredOneOfAttributeSets[j] = message.requiredOneOfAttributeSets[j];
                        }
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.viewport != null && message.hasOwnProperty("viewport"))
                            object.viewport = $root.google.geo.type.Viewport.toObject(message.viewport, options);
                        return object;
                    };
    
                    /**
                     * Converts this ListVehiclesRequest to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListVehiclesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListVehiclesRequest
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.ListVehiclesRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListVehiclesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.ListVehiclesRequest";
                    };
    
                    return ListVehiclesRequest;
                })();
    
                v1.ListVehiclesResponse = (function() {
    
                    /**
                     * Properties of a ListVehiclesResponse.
                     * @memberof maps.fleetengine.v1
                     * @interface IListVehiclesResponse
                     * @property {Array.<maps.fleetengine.v1.IVehicle>|null} [vehicles] ListVehiclesResponse vehicles
                     * @property {string|null} [nextPageToken] ListVehiclesResponse nextPageToken
                     * @property {number|Long|null} [totalSize] ListVehiclesResponse totalSize
                     */
    
                    /**
                     * Constructs a new ListVehiclesResponse.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a ListVehiclesResponse.
                     * @implements IListVehiclesResponse
                     * @constructor
                     * @param {maps.fleetengine.v1.IListVehiclesResponse=} [properties] Properties to set
                     */
                    function ListVehiclesResponse(properties) {
                        this.vehicles = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListVehiclesResponse vehicles.
                     * @member {Array.<maps.fleetengine.v1.IVehicle>} vehicles
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @instance
                     */
                    ListVehiclesResponse.prototype.vehicles = $util.emptyArray;
    
                    /**
                     * ListVehiclesResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @instance
                     */
                    ListVehiclesResponse.prototype.nextPageToken = "";
    
                    /**
                     * ListVehiclesResponse totalSize.
                     * @member {number|Long} totalSize
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @instance
                     */
                    ListVehiclesResponse.prototype.totalSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * Creates a new ListVehiclesResponse instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesResponse=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.ListVehiclesResponse} ListVehiclesResponse instance
                     */
                    ListVehiclesResponse.create = function create(properties) {
                        return new ListVehiclesResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListVehiclesResponse message. Does not implicitly {@link maps.fleetengine.v1.ListVehiclesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesResponse} message ListVehiclesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListVehiclesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.vehicles != null && message.vehicles.length)
                            for (var i = 0; i < message.vehicles.length; ++i)
                                $root.maps.fleetengine.v1.Vehicle.encode(message.vehicles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.totalSize);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListVehiclesResponse message, length delimited. Does not implicitly {@link maps.fleetengine.v1.ListVehiclesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.IListVehiclesResponse} message ListVehiclesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListVehiclesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListVehiclesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.ListVehiclesResponse} ListVehiclesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListVehiclesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.ListVehiclesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.vehicles && message.vehicles.length))
                                        message.vehicles = [];
                                    message.vehicles.push($root.maps.fleetengine.v1.Vehicle.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.totalSize = reader.int64();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListVehiclesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.ListVehiclesResponse} ListVehiclesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListVehiclesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListVehiclesResponse message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListVehiclesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.vehicles != null && message.hasOwnProperty("vehicles")) {
                            if (!Array.isArray(message.vehicles))
                                return "vehicles: array expected";
                            for (var i = 0; i < message.vehicles.length; ++i) {
                                var error = $root.maps.fleetengine.v1.Vehicle.verify(message.vehicles[i]);
                                if (error)
                                    return "vehicles." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (!$util.isInteger(message.totalSize) && !(message.totalSize && $util.isInteger(message.totalSize.low) && $util.isInteger(message.totalSize.high)))
                                return "totalSize: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListVehiclesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.ListVehiclesResponse} ListVehiclesResponse
                     */
                    ListVehiclesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.ListVehiclesResponse)
                            return object;
                        var message = new $root.maps.fleetengine.v1.ListVehiclesResponse();
                        if (object.vehicles) {
                            if (!Array.isArray(object.vehicles))
                                throw TypeError(".maps.fleetengine.v1.ListVehiclesResponse.vehicles: array expected");
                            message.vehicles = [];
                            for (var i = 0; i < object.vehicles.length; ++i) {
                                if (typeof object.vehicles[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.ListVehiclesResponse.vehicles: object expected");
                                message.vehicles[i] = $root.maps.fleetengine.v1.Vehicle.fromObject(object.vehicles[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        if (object.totalSize != null)
                            if ($util.Long)
                                (message.totalSize = $util.Long.fromValue(object.totalSize)).unsigned = false;
                            else if (typeof object.totalSize === "string")
                                message.totalSize = parseInt(object.totalSize, 10);
                            else if (typeof object.totalSize === "number")
                                message.totalSize = object.totalSize;
                            else if (typeof object.totalSize === "object")
                                message.totalSize = new $util.LongBits(object.totalSize.low >>> 0, object.totalSize.high >>> 0).toNumber();
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListVehiclesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {maps.fleetengine.v1.ListVehiclesResponse} message ListVehiclesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListVehiclesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.vehicles = [];
                        if (options.defaults) {
                            object.nextPageToken = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.totalSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.totalSize = options.longs === String ? "0" : 0;
                        }
                        if (message.vehicles && message.vehicles.length) {
                            object.vehicles = [];
                            for (var j = 0; j < message.vehicles.length; ++j)
                                object.vehicles[j] = $root.maps.fleetengine.v1.Vehicle.toObject(message.vehicles[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                            if (typeof message.totalSize === "number")
                                object.totalSize = options.longs === String ? String(message.totalSize) : message.totalSize;
                            else
                                object.totalSize = options.longs === String ? $util.Long.prototype.toString.call(message.totalSize) : options.longs === Number ? new $util.LongBits(message.totalSize.low >>> 0, message.totalSize.high >>> 0).toNumber() : message.totalSize;
                        return object;
                    };
    
                    /**
                     * Converts this ListVehiclesResponse to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListVehiclesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListVehiclesResponse
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.ListVehiclesResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListVehiclesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.ListVehiclesResponse";
                    };
    
                    return ListVehiclesResponse;
                })();
    
                v1.Waypoint = (function() {
    
                    /**
                     * Properties of a Waypoint.
                     * @memberof maps.fleetengine.v1
                     * @interface IWaypoint
                     * @property {google.type.ILatLng|null} [latLng] Waypoint latLng
                     * @property {google.protobuf.ITimestamp|null} [eta] Waypoint eta
                     */
    
                    /**
                     * Constructs a new Waypoint.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a Waypoint.
                     * @implements IWaypoint
                     * @constructor
                     * @param {maps.fleetengine.v1.IWaypoint=} [properties] Properties to set
                     */
                    function Waypoint(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Waypoint latLng.
                     * @member {google.type.ILatLng|null|undefined} latLng
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @instance
                     */
                    Waypoint.prototype.latLng = null;
    
                    /**
                     * Waypoint eta.
                     * @member {google.protobuf.ITimestamp|null|undefined} eta
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @instance
                     */
                    Waypoint.prototype.eta = null;
    
                    /**
                     * Creates a new Waypoint instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {maps.fleetengine.v1.IWaypoint=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.Waypoint} Waypoint instance
                     */
                    Waypoint.create = function create(properties) {
                        return new Waypoint(properties);
                    };
    
                    /**
                     * Encodes the specified Waypoint message. Does not implicitly {@link maps.fleetengine.v1.Waypoint.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {maps.fleetengine.v1.IWaypoint} message Waypoint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Waypoint.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.latLng != null && Object.hasOwnProperty.call(message, "latLng"))
                            $root.google.type.LatLng.encode(message.latLng, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.eta != null && Object.hasOwnProperty.call(message, "eta"))
                            $root.google.protobuf.Timestamp.encode(message.eta, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Waypoint message, length delimited. Does not implicitly {@link maps.fleetengine.v1.Waypoint.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {maps.fleetengine.v1.IWaypoint} message Waypoint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Waypoint.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Waypoint message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.Waypoint} Waypoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Waypoint.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.Waypoint();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.latLng = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.eta = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Waypoint message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.Waypoint} Waypoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Waypoint.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Waypoint message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Waypoint.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.latLng != null && message.hasOwnProperty("latLng")) {
                            var error = $root.google.type.LatLng.verify(message.latLng);
                            if (error)
                                return "latLng." + error;
                        }
                        if (message.eta != null && message.hasOwnProperty("eta")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.eta);
                            if (error)
                                return "eta." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Waypoint message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.Waypoint} Waypoint
                     */
                    Waypoint.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.Waypoint)
                            return object;
                        var message = new $root.maps.fleetengine.v1.Waypoint();
                        if (object.latLng != null) {
                            if (typeof object.latLng !== "object")
                                throw TypeError(".maps.fleetengine.v1.Waypoint.latLng: object expected");
                            message.latLng = $root.google.type.LatLng.fromObject(object.latLng);
                        }
                        if (object.eta != null) {
                            if (typeof object.eta !== "object")
                                throw TypeError(".maps.fleetengine.v1.Waypoint.eta: object expected");
                            message.eta = $root.google.protobuf.Timestamp.fromObject(object.eta);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Waypoint message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {maps.fleetengine.v1.Waypoint} message Waypoint
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Waypoint.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.latLng = null;
                            object.eta = null;
                        }
                        if (message.latLng != null && message.hasOwnProperty("latLng"))
                            object.latLng = $root.google.type.LatLng.toObject(message.latLng, options);
                        if (message.eta != null && message.hasOwnProperty("eta"))
                            object.eta = $root.google.protobuf.Timestamp.toObject(message.eta, options);
                        return object;
                    };
    
                    /**
                     * Converts this Waypoint to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Waypoint.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Waypoint
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.Waypoint
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Waypoint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.Waypoint";
                    };
    
                    return Waypoint;
                })();
    
                v1.VehicleMatch = (function() {
    
                    /**
                     * Properties of a VehicleMatch.
                     * @memberof maps.fleetengine.v1
                     * @interface IVehicleMatch
                     * @property {maps.fleetengine.v1.IVehicle|null} [vehicle] VehicleMatch vehicle
                     * @property {google.protobuf.ITimestamp|null} [vehiclePickupEta] VehicleMatch vehiclePickupEta
                     * @property {google.protobuf.IInt32Value|null} [vehiclePickupDistanceMeters] VehicleMatch vehiclePickupDistanceMeters
                     * @property {google.protobuf.IInt32Value|null} [vehiclePickupStraightLineDistanceMeters] VehicleMatch vehiclePickupStraightLineDistanceMeters
                     * @property {google.protobuf.ITimestamp|null} [vehicleDropoffEta] VehicleMatch vehicleDropoffEta
                     * @property {google.protobuf.IInt32Value|null} [vehiclePickupToDropoffDistanceMeters] VehicleMatch vehiclePickupToDropoffDistanceMeters
                     * @property {maps.fleetengine.v1.TripType|null} [tripType] VehicleMatch tripType
                     * @property {Array.<maps.fleetengine.v1.IWaypoint>|null} [vehicleTripsWaypoints] VehicleMatch vehicleTripsWaypoints
                     * @property {maps.fleetengine.v1.VehicleMatch.VehicleMatchType|null} [vehicleMatchType] VehicleMatch vehicleMatchType
                     * @property {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder|null} [requestedOrderedBy] VehicleMatch requestedOrderedBy
                     * @property {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder|null} [orderedBy] VehicleMatch orderedBy
                     */
    
                    /**
                     * Constructs a new VehicleMatch.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VehicleMatch.
                     * @implements IVehicleMatch
                     * @constructor
                     * @param {maps.fleetengine.v1.IVehicleMatch=} [properties] Properties to set
                     */
                    function VehicleMatch(properties) {
                        this.vehicleTripsWaypoints = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VehicleMatch vehicle.
                     * @member {maps.fleetengine.v1.IVehicle|null|undefined} vehicle
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehicle = null;
    
                    /**
                     * VehicleMatch vehiclePickupEta.
                     * @member {google.protobuf.ITimestamp|null|undefined} vehiclePickupEta
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehiclePickupEta = null;
    
                    /**
                     * VehicleMatch vehiclePickupDistanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} vehiclePickupDistanceMeters
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehiclePickupDistanceMeters = null;
    
                    /**
                     * VehicleMatch vehiclePickupStraightLineDistanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} vehiclePickupStraightLineDistanceMeters
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehiclePickupStraightLineDistanceMeters = null;
    
                    /**
                     * VehicleMatch vehicleDropoffEta.
                     * @member {google.protobuf.ITimestamp|null|undefined} vehicleDropoffEta
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehicleDropoffEta = null;
    
                    /**
                     * VehicleMatch vehiclePickupToDropoffDistanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} vehiclePickupToDropoffDistanceMeters
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehiclePickupToDropoffDistanceMeters = null;
    
                    /**
                     * VehicleMatch tripType.
                     * @member {maps.fleetengine.v1.TripType} tripType
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.tripType = 0;
    
                    /**
                     * VehicleMatch vehicleTripsWaypoints.
                     * @member {Array.<maps.fleetengine.v1.IWaypoint>} vehicleTripsWaypoints
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehicleTripsWaypoints = $util.emptyArray;
    
                    /**
                     * VehicleMatch vehicleMatchType.
                     * @member {maps.fleetengine.v1.VehicleMatch.VehicleMatchType} vehicleMatchType
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.vehicleMatchType = 0;
    
                    /**
                     * VehicleMatch requestedOrderedBy.
                     * @member {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder} requestedOrderedBy
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.requestedOrderedBy = 0;
    
                    /**
                     * VehicleMatch orderedBy.
                     * @member {maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder} orderedBy
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     */
                    VehicleMatch.prototype.orderedBy = 0;
    
                    /**
                     * Creates a new VehicleMatch instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleMatch=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.VehicleMatch} VehicleMatch instance
                     */
                    VehicleMatch.create = function create(properties) {
                        return new VehicleMatch(properties);
                    };
    
                    /**
                     * Encodes the specified VehicleMatch message. Does not implicitly {@link maps.fleetengine.v1.VehicleMatch.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleMatch} message VehicleMatch message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleMatch.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.vehicle != null && Object.hasOwnProperty.call(message, "vehicle"))
                            $root.maps.fleetengine.v1.Vehicle.encode(message.vehicle, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.vehiclePickupEta != null && Object.hasOwnProperty.call(message, "vehiclePickupEta"))
                            $root.google.protobuf.Timestamp.encode(message.vehiclePickupEta, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.vehiclePickupDistanceMeters != null && Object.hasOwnProperty.call(message, "vehiclePickupDistanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.vehiclePickupDistanceMeters, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.vehicleDropoffEta != null && Object.hasOwnProperty.call(message, "vehicleDropoffEta"))
                            $root.google.protobuf.Timestamp.encode(message.vehicleDropoffEta, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.vehiclePickupToDropoffDistanceMeters != null && Object.hasOwnProperty.call(message, "vehiclePickupToDropoffDistanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.vehiclePickupToDropoffDistanceMeters, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.tripType != null && Object.hasOwnProperty.call(message, "tripType"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.tripType);
                        if (message.vehicleTripsWaypoints != null && message.vehicleTripsWaypoints.length)
                            for (var i = 0; i < message.vehicleTripsWaypoints.length; ++i)
                                $root.maps.fleetengine.v1.Waypoint.encode(message.vehicleTripsWaypoints[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.vehicleMatchType != null && Object.hasOwnProperty.call(message, "vehicleMatchType"))
                            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.vehicleMatchType);
                        if (message.requestedOrderedBy != null && Object.hasOwnProperty.call(message, "requestedOrderedBy"))
                            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.requestedOrderedBy);
                        if (message.orderedBy != null && Object.hasOwnProperty.call(message, "orderedBy"))
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.orderedBy);
                        if (message.vehiclePickupStraightLineDistanceMeters != null && Object.hasOwnProperty.call(message, "vehiclePickupStraightLineDistanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.vehiclePickupStraightLineDistanceMeters, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VehicleMatch message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VehicleMatch.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleMatch} message VehicleMatch message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleMatch.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VehicleMatch message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.VehicleMatch} VehicleMatch
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleMatch.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VehicleMatch();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.vehicle = $root.maps.fleetengine.v1.Vehicle.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.vehiclePickupEta = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.vehiclePickupDistanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.vehiclePickupStraightLineDistanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.vehicleDropoffEta = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.vehiclePickupToDropoffDistanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.tripType = reader.int32();
                                    break;
                                }
                            case 7: {
                                    if (!(message.vehicleTripsWaypoints && message.vehicleTripsWaypoints.length))
                                        message.vehicleTripsWaypoints = [];
                                    message.vehicleTripsWaypoints.push($root.maps.fleetengine.v1.Waypoint.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 8: {
                                    message.vehicleMatchType = reader.int32();
                                    break;
                                }
                            case 9: {
                                    message.requestedOrderedBy = reader.int32();
                                    break;
                                }
                            case 10: {
                                    message.orderedBy = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VehicleMatch message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.VehicleMatch} VehicleMatch
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleMatch.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VehicleMatch message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VehicleMatch.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.vehicle != null && message.hasOwnProperty("vehicle")) {
                            var error = $root.maps.fleetengine.v1.Vehicle.verify(message.vehicle);
                            if (error)
                                return "vehicle." + error;
                        }
                        if (message.vehiclePickupEta != null && message.hasOwnProperty("vehiclePickupEta")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.vehiclePickupEta);
                            if (error)
                                return "vehiclePickupEta." + error;
                        }
                        if (message.vehiclePickupDistanceMeters != null && message.hasOwnProperty("vehiclePickupDistanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.vehiclePickupDistanceMeters);
                            if (error)
                                return "vehiclePickupDistanceMeters." + error;
                        }
                        if (message.vehiclePickupStraightLineDistanceMeters != null && message.hasOwnProperty("vehiclePickupStraightLineDistanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.vehiclePickupStraightLineDistanceMeters);
                            if (error)
                                return "vehiclePickupStraightLineDistanceMeters." + error;
                        }
                        if (message.vehicleDropoffEta != null && message.hasOwnProperty("vehicleDropoffEta")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.vehicleDropoffEta);
                            if (error)
                                return "vehicleDropoffEta." + error;
                        }
                        if (message.vehiclePickupToDropoffDistanceMeters != null && message.hasOwnProperty("vehiclePickupToDropoffDistanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.vehiclePickupToDropoffDistanceMeters);
                            if (error)
                                return "vehiclePickupToDropoffDistanceMeters." + error;
                        }
                        if (message.tripType != null && message.hasOwnProperty("tripType"))
                            switch (message.tripType) {
                            default:
                                return "tripType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.vehicleTripsWaypoints != null && message.hasOwnProperty("vehicleTripsWaypoints")) {
                            if (!Array.isArray(message.vehicleTripsWaypoints))
                                return "vehicleTripsWaypoints: array expected";
                            for (var i = 0; i < message.vehicleTripsWaypoints.length; ++i) {
                                var error = $root.maps.fleetengine.v1.Waypoint.verify(message.vehicleTripsWaypoints[i]);
                                if (error)
                                    return "vehicleTripsWaypoints." + error;
                            }
                        }
                        if (message.vehicleMatchType != null && message.hasOwnProperty("vehicleMatchType"))
                            switch (message.vehicleMatchType) {
                            default:
                                return "vehicleMatchType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.requestedOrderedBy != null && message.hasOwnProperty("requestedOrderedBy"))
                            switch (message.requestedOrderedBy) {
                            default:
                                return "requestedOrderedBy: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.orderedBy != null && message.hasOwnProperty("orderedBy"))
                            switch (message.orderedBy) {
                            default:
                                return "orderedBy: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a VehicleMatch message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.VehicleMatch} VehicleMatch
                     */
                    VehicleMatch.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.VehicleMatch)
                            return object;
                        var message = new $root.maps.fleetengine.v1.VehicleMatch();
                        if (object.vehicle != null) {
                            if (typeof object.vehicle !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehicle: object expected");
                            message.vehicle = $root.maps.fleetengine.v1.Vehicle.fromObject(object.vehicle);
                        }
                        if (object.vehiclePickupEta != null) {
                            if (typeof object.vehiclePickupEta !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehiclePickupEta: object expected");
                            message.vehiclePickupEta = $root.google.protobuf.Timestamp.fromObject(object.vehiclePickupEta);
                        }
                        if (object.vehiclePickupDistanceMeters != null) {
                            if (typeof object.vehiclePickupDistanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehiclePickupDistanceMeters: object expected");
                            message.vehiclePickupDistanceMeters = $root.google.protobuf.Int32Value.fromObject(object.vehiclePickupDistanceMeters);
                        }
                        if (object.vehiclePickupStraightLineDistanceMeters != null) {
                            if (typeof object.vehiclePickupStraightLineDistanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehiclePickupStraightLineDistanceMeters: object expected");
                            message.vehiclePickupStraightLineDistanceMeters = $root.google.protobuf.Int32Value.fromObject(object.vehiclePickupStraightLineDistanceMeters);
                        }
                        if (object.vehicleDropoffEta != null) {
                            if (typeof object.vehicleDropoffEta !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehicleDropoffEta: object expected");
                            message.vehicleDropoffEta = $root.google.protobuf.Timestamp.fromObject(object.vehicleDropoffEta);
                        }
                        if (object.vehiclePickupToDropoffDistanceMeters != null) {
                            if (typeof object.vehiclePickupToDropoffDistanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehiclePickupToDropoffDistanceMeters: object expected");
                            message.vehiclePickupToDropoffDistanceMeters = $root.google.protobuf.Int32Value.fromObject(object.vehiclePickupToDropoffDistanceMeters);
                        }
                        switch (object.tripType) {
                        default:
                            if (typeof object.tripType === "number") {
                                message.tripType = object.tripType;
                                break;
                            }
                            break;
                        case "UNKNOWN_TRIP_TYPE":
                        case 0:
                            message.tripType = 0;
                            break;
                        case "SHARED":
                        case 1:
                            message.tripType = 1;
                            break;
                        case "EXCLUSIVE":
                        case 2:
                            message.tripType = 2;
                            break;
                        }
                        if (object.vehicleTripsWaypoints) {
                            if (!Array.isArray(object.vehicleTripsWaypoints))
                                throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehicleTripsWaypoints: array expected");
                            message.vehicleTripsWaypoints = [];
                            for (var i = 0; i < object.vehicleTripsWaypoints.length; ++i) {
                                if (typeof object.vehicleTripsWaypoints[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.VehicleMatch.vehicleTripsWaypoints: object expected");
                                message.vehicleTripsWaypoints[i] = $root.maps.fleetengine.v1.Waypoint.fromObject(object.vehicleTripsWaypoints[i]);
                            }
                        }
                        switch (object.vehicleMatchType) {
                        default:
                            if (typeof object.vehicleMatchType === "number") {
                                message.vehicleMatchType = object.vehicleMatchType;
                                break;
                            }
                            break;
                        case "UNKNOWN":
                        case 0:
                            message.vehicleMatchType = 0;
                            break;
                        case "EXCLUSIVE":
                        case 1:
                            message.vehicleMatchType = 1;
                            break;
                        case "BACK_TO_BACK":
                        case 2:
                            message.vehicleMatchType = 2;
                            break;
                        case "CARPOOL":
                        case 3:
                            message.vehicleMatchType = 3;
                            break;
                        case "CARPOOL_BACK_TO_BACK":
                        case 4:
                            message.vehicleMatchType = 4;
                            break;
                        }
                        switch (object.requestedOrderedBy) {
                        default:
                            if (typeof object.requestedOrderedBy === "number") {
                                message.requestedOrderedBy = object.requestedOrderedBy;
                                break;
                            }
                            break;
                        case "UNKNOWN_VEHICLE_MATCH_ORDER":
                        case 0:
                            message.requestedOrderedBy = 0;
                            break;
                        case "PICKUP_POINT_ETA":
                        case 1:
                            message.requestedOrderedBy = 1;
                            break;
                        case "PICKUP_POINT_DISTANCE":
                        case 2:
                            message.requestedOrderedBy = 2;
                            break;
                        case "DROPOFF_POINT_ETA":
                        case 3:
                            message.requestedOrderedBy = 3;
                            break;
                        case "PICKUP_POINT_STRAIGHT_DISTANCE":
                        case 4:
                            message.requestedOrderedBy = 4;
                            break;
                        case "COST":
                        case 5:
                            message.requestedOrderedBy = 5;
                            break;
                        }
                        switch (object.orderedBy) {
                        default:
                            if (typeof object.orderedBy === "number") {
                                message.orderedBy = object.orderedBy;
                                break;
                            }
                            break;
                        case "UNKNOWN_VEHICLE_MATCH_ORDER":
                        case 0:
                            message.orderedBy = 0;
                            break;
                        case "PICKUP_POINT_ETA":
                        case 1:
                            message.orderedBy = 1;
                            break;
                        case "PICKUP_POINT_DISTANCE":
                        case 2:
                            message.orderedBy = 2;
                            break;
                        case "DROPOFF_POINT_ETA":
                        case 3:
                            message.orderedBy = 3;
                            break;
                        case "PICKUP_POINT_STRAIGHT_DISTANCE":
                        case 4:
                            message.orderedBy = 4;
                            break;
                        case "COST":
                        case 5:
                            message.orderedBy = 5;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VehicleMatch message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {maps.fleetengine.v1.VehicleMatch} message VehicleMatch
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VehicleMatch.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.vehicleTripsWaypoints = [];
                        if (options.defaults) {
                            object.vehicle = null;
                            object.vehiclePickupEta = null;
                            object.vehiclePickupDistanceMeters = null;
                            object.vehicleDropoffEta = null;
                            object.vehiclePickupToDropoffDistanceMeters = null;
                            object.tripType = options.enums === String ? "UNKNOWN_TRIP_TYPE" : 0;
                            object.vehicleMatchType = options.enums === String ? "UNKNOWN" : 0;
                            object.requestedOrderedBy = options.enums === String ? "UNKNOWN_VEHICLE_MATCH_ORDER" : 0;
                            object.orderedBy = options.enums === String ? "UNKNOWN_VEHICLE_MATCH_ORDER" : 0;
                            object.vehiclePickupStraightLineDistanceMeters = null;
                        }
                        if (message.vehicle != null && message.hasOwnProperty("vehicle"))
                            object.vehicle = $root.maps.fleetengine.v1.Vehicle.toObject(message.vehicle, options);
                        if (message.vehiclePickupEta != null && message.hasOwnProperty("vehiclePickupEta"))
                            object.vehiclePickupEta = $root.google.protobuf.Timestamp.toObject(message.vehiclePickupEta, options);
                        if (message.vehiclePickupDistanceMeters != null && message.hasOwnProperty("vehiclePickupDistanceMeters"))
                            object.vehiclePickupDistanceMeters = $root.google.protobuf.Int32Value.toObject(message.vehiclePickupDistanceMeters, options);
                        if (message.vehicleDropoffEta != null && message.hasOwnProperty("vehicleDropoffEta"))
                            object.vehicleDropoffEta = $root.google.protobuf.Timestamp.toObject(message.vehicleDropoffEta, options);
                        if (message.vehiclePickupToDropoffDistanceMeters != null && message.hasOwnProperty("vehiclePickupToDropoffDistanceMeters"))
                            object.vehiclePickupToDropoffDistanceMeters = $root.google.protobuf.Int32Value.toObject(message.vehiclePickupToDropoffDistanceMeters, options);
                        if (message.tripType != null && message.hasOwnProperty("tripType"))
                            object.tripType = options.enums === String ? $root.maps.fleetengine.v1.TripType[message.tripType] === undefined ? message.tripType : $root.maps.fleetengine.v1.TripType[message.tripType] : message.tripType;
                        if (message.vehicleTripsWaypoints && message.vehicleTripsWaypoints.length) {
                            object.vehicleTripsWaypoints = [];
                            for (var j = 0; j < message.vehicleTripsWaypoints.length; ++j)
                                object.vehicleTripsWaypoints[j] = $root.maps.fleetengine.v1.Waypoint.toObject(message.vehicleTripsWaypoints[j], options);
                        }
                        if (message.vehicleMatchType != null && message.hasOwnProperty("vehicleMatchType"))
                            object.vehicleMatchType = options.enums === String ? $root.maps.fleetengine.v1.VehicleMatch.VehicleMatchType[message.vehicleMatchType] === undefined ? message.vehicleMatchType : $root.maps.fleetengine.v1.VehicleMatch.VehicleMatchType[message.vehicleMatchType] : message.vehicleMatchType;
                        if (message.requestedOrderedBy != null && message.hasOwnProperty("requestedOrderedBy"))
                            object.requestedOrderedBy = options.enums === String ? $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.requestedOrderedBy] === undefined ? message.requestedOrderedBy : $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.requestedOrderedBy] : message.requestedOrderedBy;
                        if (message.orderedBy != null && message.hasOwnProperty("orderedBy"))
                            object.orderedBy = options.enums === String ? $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.orderedBy] === undefined ? message.orderedBy : $root.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder[message.orderedBy] : message.orderedBy;
                        if (message.vehiclePickupStraightLineDistanceMeters != null && message.hasOwnProperty("vehiclePickupStraightLineDistanceMeters"))
                            object.vehiclePickupStraightLineDistanceMeters = $root.google.protobuf.Int32Value.toObject(message.vehiclePickupStraightLineDistanceMeters, options);
                        return object;
                    };
    
                    /**
                     * Converts this VehicleMatch to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VehicleMatch.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VehicleMatch
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.VehicleMatch
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VehicleMatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.VehicleMatch";
                    };
    
                    /**
                     * VehicleMatchType enum.
                     * @name maps.fleetengine.v1.VehicleMatch.VehicleMatchType
                     * @enum {number}
                     * @property {number} UNKNOWN=0 UNKNOWN value
                     * @property {number} EXCLUSIVE=1 EXCLUSIVE value
                     * @property {number} BACK_TO_BACK=2 BACK_TO_BACK value
                     * @property {number} CARPOOL=3 CARPOOL value
                     * @property {number} CARPOOL_BACK_TO_BACK=4 CARPOOL_BACK_TO_BACK value
                     */
                    VehicleMatch.VehicleMatchType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN"] = 0;
                        values[valuesById[1] = "EXCLUSIVE"] = 1;
                        values[valuesById[2] = "BACK_TO_BACK"] = 2;
                        values[valuesById[3] = "CARPOOL"] = 3;
                        values[valuesById[4] = "CARPOOL_BACK_TO_BACK"] = 4;
                        return values;
                    })();
    
                    return VehicleMatch;
                })();
    
                v1.VehicleAttributeList = (function() {
    
                    /**
                     * Properties of a VehicleAttributeList.
                     * @memberof maps.fleetengine.v1
                     * @interface IVehicleAttributeList
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttribute>|null} [attributes] VehicleAttributeList attributes
                     */
    
                    /**
                     * Constructs a new VehicleAttributeList.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VehicleAttributeList.
                     * @implements IVehicleAttributeList
                     * @constructor
                     * @param {maps.fleetengine.v1.IVehicleAttributeList=} [properties] Properties to set
                     */
                    function VehicleAttributeList(properties) {
                        this.attributes = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VehicleAttributeList attributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttribute>} attributes
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @instance
                     */
                    VehicleAttributeList.prototype.attributes = $util.emptyArray;
    
                    /**
                     * Creates a new VehicleAttributeList instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttributeList=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.VehicleAttributeList} VehicleAttributeList instance
                     */
                    VehicleAttributeList.create = function create(properties) {
                        return new VehicleAttributeList(properties);
                    };
    
                    /**
                     * Encodes the specified VehicleAttributeList message. Does not implicitly {@link maps.fleetengine.v1.VehicleAttributeList.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttributeList} message VehicleAttributeList message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleAttributeList.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.attributes != null && message.attributes.length)
                            for (var i = 0; i < message.attributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttribute.encode(message.attributes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VehicleAttributeList message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VehicleAttributeList.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {maps.fleetengine.v1.IVehicleAttributeList} message VehicleAttributeList message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VehicleAttributeList.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VehicleAttributeList message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.VehicleAttributeList} VehicleAttributeList
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleAttributeList.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VehicleAttributeList();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.attributes && message.attributes.length))
                                        message.attributes = [];
                                    message.attributes.push($root.maps.fleetengine.v1.VehicleAttribute.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VehicleAttributeList message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.VehicleAttributeList} VehicleAttributeList
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VehicleAttributeList.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VehicleAttributeList message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VehicleAttributeList.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.attributes != null && message.hasOwnProperty("attributes")) {
                            if (!Array.isArray(message.attributes))
                                return "attributes: array expected";
                            for (var i = 0; i < message.attributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttribute.verify(message.attributes[i]);
                                if (error)
                                    return "attributes." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a VehicleAttributeList message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.VehicleAttributeList} VehicleAttributeList
                     */
                    VehicleAttributeList.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.VehicleAttributeList)
                            return object;
                        var message = new $root.maps.fleetengine.v1.VehicleAttributeList();
                        if (object.attributes) {
                            if (!Array.isArray(object.attributes))
                                throw TypeError(".maps.fleetengine.v1.VehicleAttributeList.attributes: array expected");
                            message.attributes = [];
                            for (var i = 0; i < object.attributes.length; ++i) {
                                if (typeof object.attributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.VehicleAttributeList.attributes: object expected");
                                message.attributes[i] = $root.maps.fleetengine.v1.VehicleAttribute.fromObject(object.attributes[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VehicleAttributeList message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {maps.fleetengine.v1.VehicleAttributeList} message VehicleAttributeList
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VehicleAttributeList.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.attributes = [];
                        if (message.attributes && message.attributes.length) {
                            object.attributes = [];
                            for (var j = 0; j < message.attributes.length; ++j)
                                object.attributes[j] = $root.maps.fleetengine.v1.VehicleAttribute.toObject(message.attributes[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this VehicleAttributeList to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VehicleAttributeList.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VehicleAttributeList
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.VehicleAttributeList
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VehicleAttributeList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.VehicleAttributeList";
                    };
    
                    return VehicleAttributeList;
                })();
    
                v1.Vehicle = (function() {
    
                    /**
                     * Properties of a Vehicle.
                     * @memberof maps.fleetengine.v1
                     * @interface IVehicle
                     * @property {string|null} [name] Vehicle name
                     * @property {maps.fleetengine.v1.VehicleState|null} [vehicleState] Vehicle vehicleState
                     * @property {Array.<maps.fleetengine.v1.TripType>|null} [supportedTripTypes] Vehicle supportedTripTypes
                     * @property {Array.<string>|null} [currentTrips] Vehicle currentTrips
                     * @property {maps.fleetengine.v1.IVehicleLocation|null} [lastLocation] Vehicle lastLocation
                     * @property {number|null} [maximumCapacity] Vehicle maximumCapacity
                     * @property {Array.<maps.fleetengine.v1.IVehicleAttribute>|null} [attributes] Vehicle attributes
                     * @property {maps.fleetengine.v1.Vehicle.IVehicleType|null} [vehicleType] Vehicle vehicleType
                     * @property {maps.fleetengine.v1.ILicensePlate|null} [licensePlate] Vehicle licensePlate
                     * @property {Array.<maps.fleetengine.v1.ITerminalLocation>|null} [route] Vehicle route
                     * @property {string|null} [currentRouteSegment] Vehicle currentRouteSegment
                     * @property {maps.fleetengine.v1.ITrafficPolylineData|null} [currentRouteSegmentTraffic] Vehicle currentRouteSegmentTraffic
                     * @property {google.protobuf.ITimestamp|null} [currentRouteSegmentVersion] Vehicle currentRouteSegmentVersion
                     * @property {maps.fleetengine.v1.ITripWaypoint|null} [currentRouteSegmentEndPoint] Vehicle currentRouteSegmentEndPoint
                     * @property {google.protobuf.IInt32Value|null} [remainingDistanceMeters] Vehicle remainingDistanceMeters
                     * @property {google.protobuf.ITimestamp|null} [etaToFirstWaypoint] Vehicle etaToFirstWaypoint
                     * @property {google.protobuf.IInt32Value|null} [remainingTimeSeconds] Vehicle remainingTimeSeconds
                     * @property {Array.<maps.fleetengine.v1.ITripWaypoint>|null} [waypoints] Vehicle waypoints
                     * @property {google.protobuf.ITimestamp|null} [waypointsVersion] Vehicle waypointsVersion
                     * @property {boolean|null} [backToBackEnabled] Vehicle backToBackEnabled
                     * @property {maps.fleetengine.v1.NavigationStatus|null} [navigationStatus] Vehicle navigationStatus
                     * @property {maps.fleetengine.v1.IDeviceSettings|null} [deviceSettings] Vehicle deviceSettings
                     */
    
                    /**
                     * Constructs a new Vehicle.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a Vehicle.
                     * @implements IVehicle
                     * @constructor
                     * @param {maps.fleetengine.v1.IVehicle=} [properties] Properties to set
                     */
                    function Vehicle(properties) {
                        this.supportedTripTypes = [];
                        this.currentTrips = [];
                        this.attributes = [];
                        this.route = [];
                        this.waypoints = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Vehicle name.
                     * @member {string} name
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.name = "";
    
                    /**
                     * Vehicle vehicleState.
                     * @member {maps.fleetengine.v1.VehicleState} vehicleState
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.vehicleState = 0;
    
                    /**
                     * Vehicle supportedTripTypes.
                     * @member {Array.<maps.fleetengine.v1.TripType>} supportedTripTypes
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.supportedTripTypes = $util.emptyArray;
    
                    /**
                     * Vehicle currentTrips.
                     * @member {Array.<string>} currentTrips
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.currentTrips = $util.emptyArray;
    
                    /**
                     * Vehicle lastLocation.
                     * @member {maps.fleetengine.v1.IVehicleLocation|null|undefined} lastLocation
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.lastLocation = null;
    
                    /**
                     * Vehicle maximumCapacity.
                     * @member {number} maximumCapacity
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.maximumCapacity = 0;
    
                    /**
                     * Vehicle attributes.
                     * @member {Array.<maps.fleetengine.v1.IVehicleAttribute>} attributes
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.attributes = $util.emptyArray;
    
                    /**
                     * Vehicle vehicleType.
                     * @member {maps.fleetengine.v1.Vehicle.IVehicleType|null|undefined} vehicleType
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.vehicleType = null;
    
                    /**
                     * Vehicle licensePlate.
                     * @member {maps.fleetengine.v1.ILicensePlate|null|undefined} licensePlate
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.licensePlate = null;
    
                    /**
                     * Vehicle route.
                     * @member {Array.<maps.fleetengine.v1.ITerminalLocation>} route
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.route = $util.emptyArray;
    
                    /**
                     * Vehicle currentRouteSegment.
                     * @member {string} currentRouteSegment
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.currentRouteSegment = "";
    
                    /**
                     * Vehicle currentRouteSegmentTraffic.
                     * @member {maps.fleetengine.v1.ITrafficPolylineData|null|undefined} currentRouteSegmentTraffic
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.currentRouteSegmentTraffic = null;
    
                    /**
                     * Vehicle currentRouteSegmentVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} currentRouteSegmentVersion
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.currentRouteSegmentVersion = null;
    
                    /**
                     * Vehicle currentRouteSegmentEndPoint.
                     * @member {maps.fleetengine.v1.ITripWaypoint|null|undefined} currentRouteSegmentEndPoint
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.currentRouteSegmentEndPoint = null;
    
                    /**
                     * Vehicle remainingDistanceMeters.
                     * @member {google.protobuf.IInt32Value|null|undefined} remainingDistanceMeters
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.remainingDistanceMeters = null;
    
                    /**
                     * Vehicle etaToFirstWaypoint.
                     * @member {google.protobuf.ITimestamp|null|undefined} etaToFirstWaypoint
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.etaToFirstWaypoint = null;
    
                    /**
                     * Vehicle remainingTimeSeconds.
                     * @member {google.protobuf.IInt32Value|null|undefined} remainingTimeSeconds
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.remainingTimeSeconds = null;
    
                    /**
                     * Vehicle waypoints.
                     * @member {Array.<maps.fleetengine.v1.ITripWaypoint>} waypoints
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.waypoints = $util.emptyArray;
    
                    /**
                     * Vehicle waypointsVersion.
                     * @member {google.protobuf.ITimestamp|null|undefined} waypointsVersion
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.waypointsVersion = null;
    
                    /**
                     * Vehicle backToBackEnabled.
                     * @member {boolean} backToBackEnabled
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.backToBackEnabled = false;
    
                    /**
                     * Vehicle navigationStatus.
                     * @member {maps.fleetengine.v1.NavigationStatus} navigationStatus
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.navigationStatus = 0;
    
                    /**
                     * Vehicle deviceSettings.
                     * @member {maps.fleetengine.v1.IDeviceSettings|null|undefined} deviceSettings
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     */
                    Vehicle.prototype.deviceSettings = null;
    
                    /**
                     * Creates a new Vehicle instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {maps.fleetengine.v1.IVehicle=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.Vehicle} Vehicle instance
                     */
                    Vehicle.create = function create(properties) {
                        return new Vehicle(properties);
                    };
    
                    /**
                     * Encodes the specified Vehicle message. Does not implicitly {@link maps.fleetengine.v1.Vehicle.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {maps.fleetengine.v1.IVehicle} message Vehicle message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Vehicle.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.vehicleState != null && Object.hasOwnProperty.call(message, "vehicleState"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.vehicleState);
                        if (message.supportedTripTypes != null && message.supportedTripTypes.length) {
                            writer.uint32(/* id 3, wireType 2 =*/26).fork();
                            for (var i = 0; i < message.supportedTripTypes.length; ++i)
                                writer.int32(message.supportedTripTypes[i]);
                            writer.ldelim();
                        }
                        if (message.currentTrips != null && message.currentTrips.length)
                            for (var i = 0; i < message.currentTrips.length; ++i)
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.currentTrips[i]);
                        if (message.lastLocation != null && Object.hasOwnProperty.call(message, "lastLocation"))
                            $root.maps.fleetengine.v1.VehicleLocation.encode(message.lastLocation, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.maximumCapacity != null && Object.hasOwnProperty.call(message, "maximumCapacity"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.maximumCapacity);
                        if (message.attributes != null && message.attributes.length)
                            for (var i = 0; i < message.attributes.length; ++i)
                                $root.maps.fleetengine.v1.VehicleAttribute.encode(message.attributes[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.vehicleType != null && Object.hasOwnProperty.call(message, "vehicleType"))
                            $root.maps.fleetengine.v1.Vehicle.VehicleType.encode(message.vehicleType, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.licensePlate != null && Object.hasOwnProperty.call(message, "licensePlate"))
                            $root.maps.fleetengine.v1.LicensePlate.encode(message.licensePlate, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.route != null && message.route.length)
                            for (var i = 0; i < message.route.length; ++i)
                                $root.maps.fleetengine.v1.TerminalLocation.encode(message.route[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.currentRouteSegmentVersion != null && Object.hasOwnProperty.call(message, "currentRouteSegmentVersion"))
                            $root.google.protobuf.Timestamp.encode(message.currentRouteSegmentVersion, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.waypointsVersion != null && Object.hasOwnProperty.call(message, "waypointsVersion"))
                            $root.google.protobuf.Timestamp.encode(message.waypointsVersion, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.remainingDistanceMeters != null && Object.hasOwnProperty.call(message, "remainingDistanceMeters"))
                            $root.google.protobuf.Int32Value.encode(message.remainingDistanceMeters, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                        if (message.etaToFirstWaypoint != null && Object.hasOwnProperty.call(message, "etaToFirstWaypoint"))
                            $root.google.protobuf.Timestamp.encode(message.etaToFirstWaypoint, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.currentRouteSegment != null && Object.hasOwnProperty.call(message, "currentRouteSegment"))
                            writer.uint32(/* id 20, wireType 2 =*/162).string(message.currentRouteSegment);
                        if (message.waypoints != null && message.waypoints.length)
                            for (var i = 0; i < message.waypoints.length; ++i)
                                $root.maps.fleetengine.v1.TripWaypoint.encode(message.waypoints[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.backToBackEnabled != null && Object.hasOwnProperty.call(message, "backToBackEnabled"))
                            writer.uint32(/* id 23, wireType 0 =*/184).bool(message.backToBackEnabled);
                        if (message.currentRouteSegmentEndPoint != null && Object.hasOwnProperty.call(message, "currentRouteSegmentEndPoint"))
                            $root.maps.fleetengine.v1.TripWaypoint.encode(message.currentRouteSegmentEndPoint, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                        if (message.remainingTimeSeconds != null && Object.hasOwnProperty.call(message, "remainingTimeSeconds"))
                            $root.google.protobuf.Int32Value.encode(message.remainingTimeSeconds, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                        if (message.navigationStatus != null && Object.hasOwnProperty.call(message, "navigationStatus"))
                            writer.uint32(/* id 26, wireType 0 =*/208).int32(message.navigationStatus);
                        if (message.deviceSettings != null && Object.hasOwnProperty.call(message, "deviceSettings"))
                            $root.maps.fleetengine.v1.DeviceSettings.encode(message.deviceSettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                        if (message.currentRouteSegmentTraffic != null && Object.hasOwnProperty.call(message, "currentRouteSegmentTraffic"))
                            $root.maps.fleetengine.v1.TrafficPolylineData.encode(message.currentRouteSegmentTraffic, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Vehicle message, length delimited. Does not implicitly {@link maps.fleetengine.v1.Vehicle.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {maps.fleetengine.v1.IVehicle} message Vehicle message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Vehicle.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Vehicle message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.Vehicle} Vehicle
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Vehicle.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.Vehicle();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.vehicleState = reader.int32();
                                    break;
                                }
                            case 3: {
                                    if (!(message.supportedTripTypes && message.supportedTripTypes.length))
                                        message.supportedTripTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.supportedTripTypes.push(reader.int32());
                                    } else
                                        message.supportedTripTypes.push(reader.int32());
                                    break;
                                }
                            case 4: {
                                    if (!(message.currentTrips && message.currentTrips.length))
                                        message.currentTrips = [];
                                    message.currentTrips.push(reader.string());
                                    break;
                                }
                            case 5: {
                                    message.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.maximumCapacity = reader.int32();
                                    break;
                                }
                            case 8: {
                                    if (!(message.attributes && message.attributes.length))
                                        message.attributes = [];
                                    message.attributes.push($root.maps.fleetengine.v1.VehicleAttribute.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 9: {
                                    message.vehicleType = $root.maps.fleetengine.v1.Vehicle.VehicleType.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.licensePlate = $root.maps.fleetengine.v1.LicensePlate.decode(reader, reader.uint32());
                                    break;
                                }
                            case 12: {
                                    if (!(message.route && message.route.length))
                                        message.route = [];
                                    message.route.push($root.maps.fleetengine.v1.TerminalLocation.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 20: {
                                    message.currentRouteSegment = reader.string();
                                    break;
                                }
                            case 28: {
                                    message.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.TrafficPolylineData.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 24: {
                                    message.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.decode(reader, reader.uint32());
                                    break;
                                }
                            case 18: {
                                    message.remainingDistanceMeters = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.etaToFirstWaypoint = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 25: {
                                    message.remainingTimeSeconds = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    if (!(message.waypoints && message.waypoints.length))
                                        message.waypoints = [];
                                    message.waypoints.push($root.maps.fleetengine.v1.TripWaypoint.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 16: {
                                    message.waypointsVersion = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.backToBackEnabled = reader.bool();
                                    break;
                                }
                            case 26: {
                                    message.navigationStatus = reader.int32();
                                    break;
                                }
                            case 27: {
                                    message.deviceSettings = $root.maps.fleetengine.v1.DeviceSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Vehicle message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.Vehicle} Vehicle
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Vehicle.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Vehicle message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Vehicle.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.vehicleState != null && message.hasOwnProperty("vehicleState"))
                            switch (message.vehicleState) {
                            default:
                                return "vehicleState: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.supportedTripTypes != null && message.hasOwnProperty("supportedTripTypes")) {
                            if (!Array.isArray(message.supportedTripTypes))
                                return "supportedTripTypes: array expected";
                            for (var i = 0; i < message.supportedTripTypes.length; ++i)
                                switch (message.supportedTripTypes[i]) {
                                default:
                                    return "supportedTripTypes: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                        }
                        if (message.currentTrips != null && message.hasOwnProperty("currentTrips")) {
                            if (!Array.isArray(message.currentTrips))
                                return "currentTrips: array expected";
                            for (var i = 0; i < message.currentTrips.length; ++i)
                                if (!$util.isString(message.currentTrips[i]))
                                    return "currentTrips: string[] expected";
                        }
                        if (message.lastLocation != null && message.hasOwnProperty("lastLocation")) {
                            var error = $root.maps.fleetengine.v1.VehicleLocation.verify(message.lastLocation);
                            if (error)
                                return "lastLocation." + error;
                        }
                        if (message.maximumCapacity != null && message.hasOwnProperty("maximumCapacity"))
                            if (!$util.isInteger(message.maximumCapacity))
                                return "maximumCapacity: integer expected";
                        if (message.attributes != null && message.hasOwnProperty("attributes")) {
                            if (!Array.isArray(message.attributes))
                                return "attributes: array expected";
                            for (var i = 0; i < message.attributes.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VehicleAttribute.verify(message.attributes[i]);
                                if (error)
                                    return "attributes." + error;
                            }
                        }
                        if (message.vehicleType != null && message.hasOwnProperty("vehicleType")) {
                            var error = $root.maps.fleetengine.v1.Vehicle.VehicleType.verify(message.vehicleType);
                            if (error)
                                return "vehicleType." + error;
                        }
                        if (message.licensePlate != null && message.hasOwnProperty("licensePlate")) {
                            var error = $root.maps.fleetengine.v1.LicensePlate.verify(message.licensePlate);
                            if (error)
                                return "licensePlate." + error;
                        }
                        if (message.route != null && message.hasOwnProperty("route")) {
                            if (!Array.isArray(message.route))
                                return "route: array expected";
                            for (var i = 0; i < message.route.length; ++i) {
                                var error = $root.maps.fleetengine.v1.TerminalLocation.verify(message.route[i]);
                                if (error)
                                    return "route." + error;
                            }
                        }
                        if (message.currentRouteSegment != null && message.hasOwnProperty("currentRouteSegment"))
                            if (!$util.isString(message.currentRouteSegment))
                                return "currentRouteSegment: string expected";
                        if (message.currentRouteSegmentTraffic != null && message.hasOwnProperty("currentRouteSegmentTraffic")) {
                            var error = $root.maps.fleetengine.v1.TrafficPolylineData.verify(message.currentRouteSegmentTraffic);
                            if (error)
                                return "currentRouteSegmentTraffic." + error;
                        }
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.currentRouteSegmentVersion);
                            if (error)
                                return "currentRouteSegmentVersion." + error;
                        }
                        if (message.currentRouteSegmentEndPoint != null && message.hasOwnProperty("currentRouteSegmentEndPoint")) {
                            var error = $root.maps.fleetengine.v1.TripWaypoint.verify(message.currentRouteSegmentEndPoint);
                            if (error)
                                return "currentRouteSegmentEndPoint." + error;
                        }
                        if (message.remainingDistanceMeters != null && message.hasOwnProperty("remainingDistanceMeters")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.remainingDistanceMeters);
                            if (error)
                                return "remainingDistanceMeters." + error;
                        }
                        if (message.etaToFirstWaypoint != null && message.hasOwnProperty("etaToFirstWaypoint")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.etaToFirstWaypoint);
                            if (error)
                                return "etaToFirstWaypoint." + error;
                        }
                        if (message.remainingTimeSeconds != null && message.hasOwnProperty("remainingTimeSeconds")) {
                            var error = $root.google.protobuf.Int32Value.verify(message.remainingTimeSeconds);
                            if (error)
                                return "remainingTimeSeconds." + error;
                        }
                        if (message.waypoints != null && message.hasOwnProperty("waypoints")) {
                            if (!Array.isArray(message.waypoints))
                                return "waypoints: array expected";
                            for (var i = 0; i < message.waypoints.length; ++i) {
                                var error = $root.maps.fleetengine.v1.TripWaypoint.verify(message.waypoints[i]);
                                if (error)
                                    return "waypoints." + error;
                            }
                        }
                        if (message.waypointsVersion != null && message.hasOwnProperty("waypointsVersion")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.waypointsVersion);
                            if (error)
                                return "waypointsVersion." + error;
                        }
                        if (message.backToBackEnabled != null && message.hasOwnProperty("backToBackEnabled"))
                            if (typeof message.backToBackEnabled !== "boolean")
                                return "backToBackEnabled: boolean expected";
                        if (message.navigationStatus != null && message.hasOwnProperty("navigationStatus"))
                            switch (message.navigationStatus) {
                            default:
                                return "navigationStatus: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.deviceSettings != null && message.hasOwnProperty("deviceSettings")) {
                            var error = $root.maps.fleetengine.v1.DeviceSettings.verify(message.deviceSettings);
                            if (error)
                                return "deviceSettings." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Vehicle message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.Vehicle} Vehicle
                     */
                    Vehicle.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.Vehicle)
                            return object;
                        var message = new $root.maps.fleetengine.v1.Vehicle();
                        if (object.name != null)
                            message.name = String(object.name);
                        switch (object.vehicleState) {
                        default:
                            if (typeof object.vehicleState === "number") {
                                message.vehicleState = object.vehicleState;
                                break;
                            }
                            break;
                        case "UNKNOWN_VEHICLE_STATE":
                        case 0:
                            message.vehicleState = 0;
                            break;
                        case "OFFLINE":
                        case 1:
                            message.vehicleState = 1;
                            break;
                        case "ONLINE":
                        case 2:
                            message.vehicleState = 2;
                            break;
                        }
                        if (object.supportedTripTypes) {
                            if (!Array.isArray(object.supportedTripTypes))
                                throw TypeError(".maps.fleetengine.v1.Vehicle.supportedTripTypes: array expected");
                            message.supportedTripTypes = [];
                            for (var i = 0; i < object.supportedTripTypes.length; ++i)
                                switch (object.supportedTripTypes[i]) {
                                default:
                                    if (typeof object.supportedTripTypes[i] === "number") {
                                        message.supportedTripTypes[i] = object.supportedTripTypes[i];
                                        break;
                                    }
                                case "UNKNOWN_TRIP_TYPE":
                                case 0:
                                    message.supportedTripTypes[i] = 0;
                                    break;
                                case "SHARED":
                                case 1:
                                    message.supportedTripTypes[i] = 1;
                                    break;
                                case "EXCLUSIVE":
                                case 2:
                                    message.supportedTripTypes[i] = 2;
                                    break;
                                }
                        }
                        if (object.currentTrips) {
                            if (!Array.isArray(object.currentTrips))
                                throw TypeError(".maps.fleetengine.v1.Vehicle.currentTrips: array expected");
                            message.currentTrips = [];
                            for (var i = 0; i < object.currentTrips.length; ++i)
                                message.currentTrips[i] = String(object.currentTrips[i]);
                        }
                        if (object.lastLocation != null) {
                            if (typeof object.lastLocation !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.lastLocation: object expected");
                            message.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.fromObject(object.lastLocation);
                        }
                        if (object.maximumCapacity != null)
                            message.maximumCapacity = object.maximumCapacity | 0;
                        if (object.attributes) {
                            if (!Array.isArray(object.attributes))
                                throw TypeError(".maps.fleetengine.v1.Vehicle.attributes: array expected");
                            message.attributes = [];
                            for (var i = 0; i < object.attributes.length; ++i) {
                                if (typeof object.attributes[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Vehicle.attributes: object expected");
                                message.attributes[i] = $root.maps.fleetengine.v1.VehicleAttribute.fromObject(object.attributes[i]);
                            }
                        }
                        if (object.vehicleType != null) {
                            if (typeof object.vehicleType !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.vehicleType: object expected");
                            message.vehicleType = $root.maps.fleetengine.v1.Vehicle.VehicleType.fromObject(object.vehicleType);
                        }
                        if (object.licensePlate != null) {
                            if (typeof object.licensePlate !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.licensePlate: object expected");
                            message.licensePlate = $root.maps.fleetengine.v1.LicensePlate.fromObject(object.licensePlate);
                        }
                        if (object.route) {
                            if (!Array.isArray(object.route))
                                throw TypeError(".maps.fleetengine.v1.Vehicle.route: array expected");
                            message.route = [];
                            for (var i = 0; i < object.route.length; ++i) {
                                if (typeof object.route[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Vehicle.route: object expected");
                                message.route[i] = $root.maps.fleetengine.v1.TerminalLocation.fromObject(object.route[i]);
                            }
                        }
                        if (object.currentRouteSegment != null)
                            message.currentRouteSegment = String(object.currentRouteSegment);
                        if (object.currentRouteSegmentTraffic != null) {
                            if (typeof object.currentRouteSegmentTraffic !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.currentRouteSegmentTraffic: object expected");
                            message.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.TrafficPolylineData.fromObject(object.currentRouteSegmentTraffic);
                        }
                        if (object.currentRouteSegmentVersion != null) {
                            if (typeof object.currentRouteSegmentVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.currentRouteSegmentVersion: object expected");
                            message.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.fromObject(object.currentRouteSegmentVersion);
                        }
                        if (object.currentRouteSegmentEndPoint != null) {
                            if (typeof object.currentRouteSegmentEndPoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.currentRouteSegmentEndPoint: object expected");
                            message.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.fromObject(object.currentRouteSegmentEndPoint);
                        }
                        if (object.remainingDistanceMeters != null) {
                            if (typeof object.remainingDistanceMeters !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.remainingDistanceMeters: object expected");
                            message.remainingDistanceMeters = $root.google.protobuf.Int32Value.fromObject(object.remainingDistanceMeters);
                        }
                        if (object.etaToFirstWaypoint != null) {
                            if (typeof object.etaToFirstWaypoint !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.etaToFirstWaypoint: object expected");
                            message.etaToFirstWaypoint = $root.google.protobuf.Timestamp.fromObject(object.etaToFirstWaypoint);
                        }
                        if (object.remainingTimeSeconds != null) {
                            if (typeof object.remainingTimeSeconds !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.remainingTimeSeconds: object expected");
                            message.remainingTimeSeconds = $root.google.protobuf.Int32Value.fromObject(object.remainingTimeSeconds);
                        }
                        if (object.waypoints) {
                            if (!Array.isArray(object.waypoints))
                                throw TypeError(".maps.fleetengine.v1.Vehicle.waypoints: array expected");
                            message.waypoints = [];
                            for (var i = 0; i < object.waypoints.length; ++i) {
                                if (typeof object.waypoints[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.Vehicle.waypoints: object expected");
                                message.waypoints[i] = $root.maps.fleetengine.v1.TripWaypoint.fromObject(object.waypoints[i]);
                            }
                        }
                        if (object.waypointsVersion != null) {
                            if (typeof object.waypointsVersion !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.waypointsVersion: object expected");
                            message.waypointsVersion = $root.google.protobuf.Timestamp.fromObject(object.waypointsVersion);
                        }
                        if (object.backToBackEnabled != null)
                            message.backToBackEnabled = Boolean(object.backToBackEnabled);
                        switch (object.navigationStatus) {
                        default:
                            if (typeof object.navigationStatus === "number") {
                                message.navigationStatus = object.navigationStatus;
                                break;
                            }
                            break;
                        case "UNKNOWN_NAVIGATION_STATUS":
                        case 0:
                            message.navigationStatus = 0;
                            break;
                        case "NO_GUIDANCE":
                        case 1:
                            message.navigationStatus = 1;
                            break;
                        case "ENROUTE_TO_DESTINATION":
                        case 2:
                            message.navigationStatus = 2;
                            break;
                        case "OFF_ROUTE":
                        case 3:
                            message.navigationStatus = 3;
                            break;
                        case "ARRIVED_AT_DESTINATION":
                        case 4:
                            message.navigationStatus = 4;
                            break;
                        }
                        if (object.deviceSettings != null) {
                            if (typeof object.deviceSettings !== "object")
                                throw TypeError(".maps.fleetengine.v1.Vehicle.deviceSettings: object expected");
                            message.deviceSettings = $root.maps.fleetengine.v1.DeviceSettings.fromObject(object.deviceSettings);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Vehicle message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {maps.fleetengine.v1.Vehicle} message Vehicle
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Vehicle.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.supportedTripTypes = [];
                            object.currentTrips = [];
                            object.attributes = [];
                            object.route = [];
                            object.waypoints = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.vehicleState = options.enums === String ? "UNKNOWN_VEHICLE_STATE" : 0;
                            object.lastLocation = null;
                            object.maximumCapacity = 0;
                            object.vehicleType = null;
                            object.licensePlate = null;
                            object.currentRouteSegmentVersion = null;
                            object.waypointsVersion = null;
                            object.remainingDistanceMeters = null;
                            object.etaToFirstWaypoint = null;
                            object.currentRouteSegment = "";
                            object.backToBackEnabled = false;
                            object.currentRouteSegmentEndPoint = null;
                            object.remainingTimeSeconds = null;
                            object.navigationStatus = options.enums === String ? "UNKNOWN_NAVIGATION_STATUS" : 0;
                            object.deviceSettings = null;
                            object.currentRouteSegmentTraffic = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.vehicleState != null && message.hasOwnProperty("vehicleState"))
                            object.vehicleState = options.enums === String ? $root.maps.fleetengine.v1.VehicleState[message.vehicleState] === undefined ? message.vehicleState : $root.maps.fleetengine.v1.VehicleState[message.vehicleState] : message.vehicleState;
                        if (message.supportedTripTypes && message.supportedTripTypes.length) {
                            object.supportedTripTypes = [];
                            for (var j = 0; j < message.supportedTripTypes.length; ++j)
                                object.supportedTripTypes[j] = options.enums === String ? $root.maps.fleetengine.v1.TripType[message.supportedTripTypes[j]] === undefined ? message.supportedTripTypes[j] : $root.maps.fleetengine.v1.TripType[message.supportedTripTypes[j]] : message.supportedTripTypes[j];
                        }
                        if (message.currentTrips && message.currentTrips.length) {
                            object.currentTrips = [];
                            for (var j = 0; j < message.currentTrips.length; ++j)
                                object.currentTrips[j] = message.currentTrips[j];
                        }
                        if (message.lastLocation != null && message.hasOwnProperty("lastLocation"))
                            object.lastLocation = $root.maps.fleetengine.v1.VehicleLocation.toObject(message.lastLocation, options);
                        if (message.maximumCapacity != null && message.hasOwnProperty("maximumCapacity"))
                            object.maximumCapacity = message.maximumCapacity;
                        if (message.attributes && message.attributes.length) {
                            object.attributes = [];
                            for (var j = 0; j < message.attributes.length; ++j)
                                object.attributes[j] = $root.maps.fleetengine.v1.VehicleAttribute.toObject(message.attributes[j], options);
                        }
                        if (message.vehicleType != null && message.hasOwnProperty("vehicleType"))
                            object.vehicleType = $root.maps.fleetengine.v1.Vehicle.VehicleType.toObject(message.vehicleType, options);
                        if (message.licensePlate != null && message.hasOwnProperty("licensePlate"))
                            object.licensePlate = $root.maps.fleetengine.v1.LicensePlate.toObject(message.licensePlate, options);
                        if (message.route && message.route.length) {
                            object.route = [];
                            for (var j = 0; j < message.route.length; ++j)
                                object.route[j] = $root.maps.fleetengine.v1.TerminalLocation.toObject(message.route[j], options);
                        }
                        if (message.currentRouteSegmentVersion != null && message.hasOwnProperty("currentRouteSegmentVersion"))
                            object.currentRouteSegmentVersion = $root.google.protobuf.Timestamp.toObject(message.currentRouteSegmentVersion, options);
                        if (message.waypointsVersion != null && message.hasOwnProperty("waypointsVersion"))
                            object.waypointsVersion = $root.google.protobuf.Timestamp.toObject(message.waypointsVersion, options);
                        if (message.remainingDistanceMeters != null && message.hasOwnProperty("remainingDistanceMeters"))
                            object.remainingDistanceMeters = $root.google.protobuf.Int32Value.toObject(message.remainingDistanceMeters, options);
                        if (message.etaToFirstWaypoint != null && message.hasOwnProperty("etaToFirstWaypoint"))
                            object.etaToFirstWaypoint = $root.google.protobuf.Timestamp.toObject(message.etaToFirstWaypoint, options);
                        if (message.currentRouteSegment != null && message.hasOwnProperty("currentRouteSegment"))
                            object.currentRouteSegment = message.currentRouteSegment;
                        if (message.waypoints && message.waypoints.length) {
                            object.waypoints = [];
                            for (var j = 0; j < message.waypoints.length; ++j)
                                object.waypoints[j] = $root.maps.fleetengine.v1.TripWaypoint.toObject(message.waypoints[j], options);
                        }
                        if (message.backToBackEnabled != null && message.hasOwnProperty("backToBackEnabled"))
                            object.backToBackEnabled = message.backToBackEnabled;
                        if (message.currentRouteSegmentEndPoint != null && message.hasOwnProperty("currentRouteSegmentEndPoint"))
                            object.currentRouteSegmentEndPoint = $root.maps.fleetengine.v1.TripWaypoint.toObject(message.currentRouteSegmentEndPoint, options);
                        if (message.remainingTimeSeconds != null && message.hasOwnProperty("remainingTimeSeconds"))
                            object.remainingTimeSeconds = $root.google.protobuf.Int32Value.toObject(message.remainingTimeSeconds, options);
                        if (message.navigationStatus != null && message.hasOwnProperty("navigationStatus"))
                            object.navigationStatus = options.enums === String ? $root.maps.fleetengine.v1.NavigationStatus[message.navigationStatus] === undefined ? message.navigationStatus : $root.maps.fleetengine.v1.NavigationStatus[message.navigationStatus] : message.navigationStatus;
                        if (message.deviceSettings != null && message.hasOwnProperty("deviceSettings"))
                            object.deviceSettings = $root.maps.fleetengine.v1.DeviceSettings.toObject(message.deviceSettings, options);
                        if (message.currentRouteSegmentTraffic != null && message.hasOwnProperty("currentRouteSegmentTraffic"))
                            object.currentRouteSegmentTraffic = $root.maps.fleetengine.v1.TrafficPolylineData.toObject(message.currentRouteSegmentTraffic, options);
                        return object;
                    };
    
                    /**
                     * Converts this Vehicle to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Vehicle.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Vehicle
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.Vehicle
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Vehicle.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.Vehicle";
                    };
    
                    Vehicle.VehicleType = (function() {
    
                        /**
                         * Properties of a VehicleType.
                         * @memberof maps.fleetengine.v1.Vehicle
                         * @interface IVehicleType
                         * @property {maps.fleetengine.v1.Vehicle.VehicleType.Category|null} [category] VehicleType category
                         */
    
                        /**
                         * Constructs a new VehicleType.
                         * @memberof maps.fleetengine.v1.Vehicle
                         * @classdesc Represents a VehicleType.
                         * @implements IVehicleType
                         * @constructor
                         * @param {maps.fleetengine.v1.Vehicle.IVehicleType=} [properties] Properties to set
                         */
                        function VehicleType(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VehicleType category.
                         * @member {maps.fleetengine.v1.Vehicle.VehicleType.Category} category
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @instance
                         */
                        VehicleType.prototype.category = 0;
    
                        /**
                         * Creates a new VehicleType instance using the specified properties.
                         * @function create
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {maps.fleetengine.v1.Vehicle.IVehicleType=} [properties] Properties to set
                         * @returns {maps.fleetengine.v1.Vehicle.VehicleType} VehicleType instance
                         */
                        VehicleType.create = function create(properties) {
                            return new VehicleType(properties);
                        };
    
                        /**
                         * Encodes the specified VehicleType message. Does not implicitly {@link maps.fleetengine.v1.Vehicle.VehicleType.verify|verify} messages.
                         * @function encode
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {maps.fleetengine.v1.Vehicle.IVehicleType} message VehicleType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VehicleType.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.category);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VehicleType message, length delimited. Does not implicitly {@link maps.fleetengine.v1.Vehicle.VehicleType.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {maps.fleetengine.v1.Vehicle.IVehicleType} message VehicleType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VehicleType.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VehicleType message from the specified reader or buffer.
                         * @function decode
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {maps.fleetengine.v1.Vehicle.VehicleType} VehicleType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VehicleType.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.Vehicle.VehicleType();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.category = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VehicleType message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {maps.fleetengine.v1.Vehicle.VehicleType} VehicleType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VehicleType.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VehicleType message.
                         * @function verify
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VehicleType.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                switch (message.category) {
                                default:
                                    return "category: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a VehicleType message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {maps.fleetengine.v1.Vehicle.VehicleType} VehicleType
                         */
                        VehicleType.fromObject = function fromObject(object) {
                            if (object instanceof $root.maps.fleetengine.v1.Vehicle.VehicleType)
                                return object;
                            var message = new $root.maps.fleetengine.v1.Vehicle.VehicleType();
                            switch (object.category) {
                            default:
                                if (typeof object.category === "number") {
                                    message.category = object.category;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.category = 0;
                                break;
                            case "AUTO":
                            case 1:
                                message.category = 1;
                                break;
                            case "TAXI":
                            case 2:
                                message.category = 2;
                                break;
                            case "TRUCK":
                            case 3:
                                message.category = 3;
                                break;
                            case "TWO_WHEELER":
                            case 4:
                                message.category = 4;
                                break;
                            case "BICYCLE":
                            case 5:
                                message.category = 5;
                                break;
                            case "PEDESTRIAN":
                            case 6:
                                message.category = 6;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VehicleType message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {maps.fleetengine.v1.Vehicle.VehicleType} message VehicleType
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VehicleType.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.category = options.enums === String ? "UNKNOWN" : 0;
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = options.enums === String ? $root.maps.fleetengine.v1.Vehicle.VehicleType.Category[message.category] === undefined ? message.category : $root.maps.fleetengine.v1.Vehicle.VehicleType.Category[message.category] : message.category;
                            return object;
                        };
    
                        /**
                         * Converts this VehicleType to JSON.
                         * @function toJSON
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VehicleType.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VehicleType
                         * @function getTypeUrl
                         * @memberof maps.fleetengine.v1.Vehicle.VehicleType
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VehicleType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/maps.fleetengine.v1.Vehicle.VehicleType";
                        };
    
                        /**
                         * Category enum.
                         * @name maps.fleetengine.v1.Vehicle.VehicleType.Category
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} AUTO=1 AUTO value
                         * @property {number} TAXI=2 TAXI value
                         * @property {number} TRUCK=3 TRUCK value
                         * @property {number} TWO_WHEELER=4 TWO_WHEELER value
                         * @property {number} BICYCLE=5 BICYCLE value
                         * @property {number} PEDESTRIAN=6 PEDESTRIAN value
                         */
                        VehicleType.Category = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "AUTO"] = 1;
                            values[valuesById[2] = "TAXI"] = 2;
                            values[valuesById[3] = "TRUCK"] = 3;
                            values[valuesById[4] = "TWO_WHEELER"] = 4;
                            values[valuesById[5] = "BICYCLE"] = 5;
                            values[valuesById[6] = "PEDESTRIAN"] = 6;
                            return values;
                        })();
    
                        return VehicleType;
                    })();
    
                    return Vehicle;
                })();
    
                v1.BatteryInfo = (function() {
    
                    /**
                     * Properties of a BatteryInfo.
                     * @memberof maps.fleetengine.v1
                     * @interface IBatteryInfo
                     * @property {maps.fleetengine.v1.BatteryStatus|null} [batteryStatus] BatteryInfo batteryStatus
                     * @property {maps.fleetengine.v1.PowerSource|null} [powerSource] BatteryInfo powerSource
                     * @property {number|null} [batteryPercentage] BatteryInfo batteryPercentage
                     */
    
                    /**
                     * Constructs a new BatteryInfo.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a BatteryInfo.
                     * @implements IBatteryInfo
                     * @constructor
                     * @param {maps.fleetengine.v1.IBatteryInfo=} [properties] Properties to set
                     */
                    function BatteryInfo(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BatteryInfo batteryStatus.
                     * @member {maps.fleetengine.v1.BatteryStatus} batteryStatus
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @instance
                     */
                    BatteryInfo.prototype.batteryStatus = 0;
    
                    /**
                     * BatteryInfo powerSource.
                     * @member {maps.fleetengine.v1.PowerSource} powerSource
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @instance
                     */
                    BatteryInfo.prototype.powerSource = 0;
    
                    /**
                     * BatteryInfo batteryPercentage.
                     * @member {number} batteryPercentage
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @instance
                     */
                    BatteryInfo.prototype.batteryPercentage = 0;
    
                    /**
                     * Creates a new BatteryInfo instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {maps.fleetengine.v1.IBatteryInfo=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.BatteryInfo} BatteryInfo instance
                     */
                    BatteryInfo.create = function create(properties) {
                        return new BatteryInfo(properties);
                    };
    
                    /**
                     * Encodes the specified BatteryInfo message. Does not implicitly {@link maps.fleetengine.v1.BatteryInfo.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {maps.fleetengine.v1.IBatteryInfo} message BatteryInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BatteryInfo.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.batteryStatus != null && Object.hasOwnProperty.call(message, "batteryStatus"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.batteryStatus);
                        if (message.powerSource != null && Object.hasOwnProperty.call(message, "powerSource"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.powerSource);
                        if (message.batteryPercentage != null && Object.hasOwnProperty.call(message, "batteryPercentage"))
                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.batteryPercentage);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BatteryInfo message, length delimited. Does not implicitly {@link maps.fleetengine.v1.BatteryInfo.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {maps.fleetengine.v1.IBatteryInfo} message BatteryInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BatteryInfo.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BatteryInfo message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.BatteryInfo} BatteryInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BatteryInfo.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.BatteryInfo();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.batteryStatus = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.powerSource = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.batteryPercentage = reader.float();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BatteryInfo message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.BatteryInfo} BatteryInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BatteryInfo.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BatteryInfo message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BatteryInfo.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.batteryStatus != null && message.hasOwnProperty("batteryStatus"))
                            switch (message.batteryStatus) {
                            default:
                                return "batteryStatus: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.powerSource != null && message.hasOwnProperty("powerSource"))
                            switch (message.powerSource) {
                            default:
                                return "powerSource: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.batteryPercentage != null && message.hasOwnProperty("batteryPercentage"))
                            if (typeof message.batteryPercentage !== "number")
                                return "batteryPercentage: number expected";
                        return null;
                    };
    
                    /**
                     * Creates a BatteryInfo message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.BatteryInfo} BatteryInfo
                     */
                    BatteryInfo.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.BatteryInfo)
                            return object;
                        var message = new $root.maps.fleetengine.v1.BatteryInfo();
                        switch (object.batteryStatus) {
                        default:
                            if (typeof object.batteryStatus === "number") {
                                message.batteryStatus = object.batteryStatus;
                                break;
                            }
                            break;
                        case "UNKNOWN_BATTERY_STATUS":
                        case 0:
                            message.batteryStatus = 0;
                            break;
                        case "BATTERY_STATUS_CHARGING":
                        case 1:
                            message.batteryStatus = 1;
                            break;
                        case "BATTERY_STATUS_DISCHARGING":
                        case 2:
                            message.batteryStatus = 2;
                            break;
                        case "BATTERY_STATUS_FULL":
                        case 3:
                            message.batteryStatus = 3;
                            break;
                        case "BATTERY_STATUS_NOT_CHARGING":
                        case 4:
                            message.batteryStatus = 4;
                            break;
                        case "BATTERY_STATUS_POWER_LOW":
                        case 5:
                            message.batteryStatus = 5;
                            break;
                        }
                        switch (object.powerSource) {
                        default:
                            if (typeof object.powerSource === "number") {
                                message.powerSource = object.powerSource;
                                break;
                            }
                            break;
                        case "UNKNOWN_POWER_SOURCE":
                        case 0:
                            message.powerSource = 0;
                            break;
                        case "POWER_SOURCE_AC":
                        case 1:
                            message.powerSource = 1;
                            break;
                        case "POWER_SOURCE_USB":
                        case 2:
                            message.powerSource = 2;
                            break;
                        case "POWER_SOURCE_WIRELESS":
                        case 3:
                            message.powerSource = 3;
                            break;
                        case "POWER_SOURCE_UNPLUGGED":
                        case 4:
                            message.powerSource = 4;
                            break;
                        }
                        if (object.batteryPercentage != null)
                            message.batteryPercentage = Number(object.batteryPercentage);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BatteryInfo message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {maps.fleetengine.v1.BatteryInfo} message BatteryInfo
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BatteryInfo.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.batteryStatus = options.enums === String ? "UNKNOWN_BATTERY_STATUS" : 0;
                            object.powerSource = options.enums === String ? "UNKNOWN_POWER_SOURCE" : 0;
                            object.batteryPercentage = 0;
                        }
                        if (message.batteryStatus != null && message.hasOwnProperty("batteryStatus"))
                            object.batteryStatus = options.enums === String ? $root.maps.fleetengine.v1.BatteryStatus[message.batteryStatus] === undefined ? message.batteryStatus : $root.maps.fleetengine.v1.BatteryStatus[message.batteryStatus] : message.batteryStatus;
                        if (message.powerSource != null && message.hasOwnProperty("powerSource"))
                            object.powerSource = options.enums === String ? $root.maps.fleetengine.v1.PowerSource[message.powerSource] === undefined ? message.powerSource : $root.maps.fleetengine.v1.PowerSource[message.powerSource] : message.powerSource;
                        if (message.batteryPercentage != null && message.hasOwnProperty("batteryPercentage"))
                            object.batteryPercentage = options.json && !isFinite(message.batteryPercentage) ? String(message.batteryPercentage) : message.batteryPercentage;
                        return object;
                    };
    
                    /**
                     * Converts this BatteryInfo to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BatteryInfo.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BatteryInfo
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.BatteryInfo
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BatteryInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.BatteryInfo";
                    };
    
                    return BatteryInfo;
                })();
    
                v1.DeviceSettings = (function() {
    
                    /**
                     * Properties of a DeviceSettings.
                     * @memberof maps.fleetengine.v1
                     * @interface IDeviceSettings
                     * @property {maps.fleetengine.v1.LocationPowerSaveMode|null} [locationPowerSaveMode] DeviceSettings locationPowerSaveMode
                     * @property {boolean|null} [isPowerSaveMode] DeviceSettings isPowerSaveMode
                     * @property {boolean|null} [isInteractive] DeviceSettings isInteractive
                     * @property {maps.fleetengine.v1.IBatteryInfo|null} [batteryInfo] DeviceSettings batteryInfo
                     */
    
                    /**
                     * Constructs a new DeviceSettings.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a DeviceSettings.
                     * @implements IDeviceSettings
                     * @constructor
                     * @param {maps.fleetengine.v1.IDeviceSettings=} [properties] Properties to set
                     */
                    function DeviceSettings(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeviceSettings locationPowerSaveMode.
                     * @member {maps.fleetengine.v1.LocationPowerSaveMode} locationPowerSaveMode
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @instance
                     */
                    DeviceSettings.prototype.locationPowerSaveMode = 0;
    
                    /**
                     * DeviceSettings isPowerSaveMode.
                     * @member {boolean} isPowerSaveMode
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @instance
                     */
                    DeviceSettings.prototype.isPowerSaveMode = false;
    
                    /**
                     * DeviceSettings isInteractive.
                     * @member {boolean} isInteractive
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @instance
                     */
                    DeviceSettings.prototype.isInteractive = false;
    
                    /**
                     * DeviceSettings batteryInfo.
                     * @member {maps.fleetengine.v1.IBatteryInfo|null|undefined} batteryInfo
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @instance
                     */
                    DeviceSettings.prototype.batteryInfo = null;
    
                    /**
                     * Creates a new DeviceSettings instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {maps.fleetengine.v1.IDeviceSettings=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.DeviceSettings} DeviceSettings instance
                     */
                    DeviceSettings.create = function create(properties) {
                        return new DeviceSettings(properties);
                    };
    
                    /**
                     * Encodes the specified DeviceSettings message. Does not implicitly {@link maps.fleetengine.v1.DeviceSettings.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {maps.fleetengine.v1.IDeviceSettings} message DeviceSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeviceSettings.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.locationPowerSaveMode != null && Object.hasOwnProperty.call(message, "locationPowerSaveMode"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.locationPowerSaveMode);
                        if (message.isPowerSaveMode != null && Object.hasOwnProperty.call(message, "isPowerSaveMode"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isPowerSaveMode);
                        if (message.isInteractive != null && Object.hasOwnProperty.call(message, "isInteractive"))
                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isInteractive);
                        if (message.batteryInfo != null && Object.hasOwnProperty.call(message, "batteryInfo"))
                            $root.maps.fleetengine.v1.BatteryInfo.encode(message.batteryInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeviceSettings message, length delimited. Does not implicitly {@link maps.fleetengine.v1.DeviceSettings.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {maps.fleetengine.v1.IDeviceSettings} message DeviceSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeviceSettings.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeviceSettings message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.DeviceSettings} DeviceSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeviceSettings.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.DeviceSettings();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.locationPowerSaveMode = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.isPowerSaveMode = reader.bool();
                                    break;
                                }
                            case 3: {
                                    message.isInteractive = reader.bool();
                                    break;
                                }
                            case 4: {
                                    message.batteryInfo = $root.maps.fleetengine.v1.BatteryInfo.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeviceSettings message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.DeviceSettings} DeviceSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeviceSettings.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeviceSettings message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeviceSettings.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.locationPowerSaveMode != null && message.hasOwnProperty("locationPowerSaveMode"))
                            switch (message.locationPowerSaveMode) {
                            default:
                                return "locationPowerSaveMode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        if (message.isPowerSaveMode != null && message.hasOwnProperty("isPowerSaveMode"))
                            if (typeof message.isPowerSaveMode !== "boolean")
                                return "isPowerSaveMode: boolean expected";
                        if (message.isInteractive != null && message.hasOwnProperty("isInteractive"))
                            if (typeof message.isInteractive !== "boolean")
                                return "isInteractive: boolean expected";
                        if (message.batteryInfo != null && message.hasOwnProperty("batteryInfo")) {
                            var error = $root.maps.fleetengine.v1.BatteryInfo.verify(message.batteryInfo);
                            if (error)
                                return "batteryInfo." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a DeviceSettings message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.DeviceSettings} DeviceSettings
                     */
                    DeviceSettings.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.DeviceSettings)
                            return object;
                        var message = new $root.maps.fleetengine.v1.DeviceSettings();
                        switch (object.locationPowerSaveMode) {
                        default:
                            if (typeof object.locationPowerSaveMode === "number") {
                                message.locationPowerSaveMode = object.locationPowerSaveMode;
                                break;
                            }
                            break;
                        case "UNKNOWN_LOCATION_POWER_SAVE_MODE":
                        case 0:
                            message.locationPowerSaveMode = 0;
                            break;
                        case "LOCATION_MODE_NO_CHANGE":
                        case 1:
                            message.locationPowerSaveMode = 1;
                            break;
                        case "LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF":
                        case 2:
                            message.locationPowerSaveMode = 2;
                            break;
                        case "LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF":
                        case 3:
                            message.locationPowerSaveMode = 3;
                            break;
                        case "LOCATION_MODE_FOREGROUND_ONLY":
                        case 4:
                            message.locationPowerSaveMode = 4;
                            break;
                        case "LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF":
                        case 5:
                            message.locationPowerSaveMode = 5;
                            break;
                        }
                        if (object.isPowerSaveMode != null)
                            message.isPowerSaveMode = Boolean(object.isPowerSaveMode);
                        if (object.isInteractive != null)
                            message.isInteractive = Boolean(object.isInteractive);
                        if (object.batteryInfo != null) {
                            if (typeof object.batteryInfo !== "object")
                                throw TypeError(".maps.fleetengine.v1.DeviceSettings.batteryInfo: object expected");
                            message.batteryInfo = $root.maps.fleetengine.v1.BatteryInfo.fromObject(object.batteryInfo);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeviceSettings message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {maps.fleetengine.v1.DeviceSettings} message DeviceSettings
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeviceSettings.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.locationPowerSaveMode = options.enums === String ? "UNKNOWN_LOCATION_POWER_SAVE_MODE" : 0;
                            object.isPowerSaveMode = false;
                            object.isInteractive = false;
                            object.batteryInfo = null;
                        }
                        if (message.locationPowerSaveMode != null && message.hasOwnProperty("locationPowerSaveMode"))
                            object.locationPowerSaveMode = options.enums === String ? $root.maps.fleetengine.v1.LocationPowerSaveMode[message.locationPowerSaveMode] === undefined ? message.locationPowerSaveMode : $root.maps.fleetengine.v1.LocationPowerSaveMode[message.locationPowerSaveMode] : message.locationPowerSaveMode;
                        if (message.isPowerSaveMode != null && message.hasOwnProperty("isPowerSaveMode"))
                            object.isPowerSaveMode = message.isPowerSaveMode;
                        if (message.isInteractive != null && message.hasOwnProperty("isInteractive"))
                            object.isInteractive = message.isInteractive;
                        if (message.batteryInfo != null && message.hasOwnProperty("batteryInfo"))
                            object.batteryInfo = $root.maps.fleetengine.v1.BatteryInfo.toObject(message.batteryInfo, options);
                        return object;
                    };
    
                    /**
                     * Converts this DeviceSettings to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeviceSettings.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeviceSettings
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.DeviceSettings
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeviceSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.DeviceSettings";
                    };
    
                    return DeviceSettings;
                })();
    
                v1.LicensePlate = (function() {
    
                    /**
                     * Properties of a LicensePlate.
                     * @memberof maps.fleetengine.v1
                     * @interface ILicensePlate
                     * @property {string|null} [countryCode] LicensePlate countryCode
                     * @property {string|null} [lastCharacter] LicensePlate lastCharacter
                     */
    
                    /**
                     * Constructs a new LicensePlate.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a LicensePlate.
                     * @implements ILicensePlate
                     * @constructor
                     * @param {maps.fleetengine.v1.ILicensePlate=} [properties] Properties to set
                     */
                    function LicensePlate(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LicensePlate countryCode.
                     * @member {string} countryCode
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @instance
                     */
                    LicensePlate.prototype.countryCode = "";
    
                    /**
                     * LicensePlate lastCharacter.
                     * @member {string} lastCharacter
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @instance
                     */
                    LicensePlate.prototype.lastCharacter = "";
    
                    /**
                     * Creates a new LicensePlate instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {maps.fleetengine.v1.ILicensePlate=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.LicensePlate} LicensePlate instance
                     */
                    LicensePlate.create = function create(properties) {
                        return new LicensePlate(properties);
                    };
    
                    /**
                     * Encodes the specified LicensePlate message. Does not implicitly {@link maps.fleetengine.v1.LicensePlate.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {maps.fleetengine.v1.ILicensePlate} message LicensePlate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LicensePlate.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.countryCode);
                        if (message.lastCharacter != null && Object.hasOwnProperty.call(message, "lastCharacter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.lastCharacter);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LicensePlate message, length delimited. Does not implicitly {@link maps.fleetengine.v1.LicensePlate.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {maps.fleetengine.v1.ILicensePlate} message LicensePlate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LicensePlate.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LicensePlate message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.LicensePlate} LicensePlate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LicensePlate.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.LicensePlate();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.countryCode = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.lastCharacter = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LicensePlate message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.LicensePlate} LicensePlate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LicensePlate.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LicensePlate message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LicensePlate.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                            if (!$util.isString(message.countryCode))
                                return "countryCode: string expected";
                        if (message.lastCharacter != null && message.hasOwnProperty("lastCharacter"))
                            if (!$util.isString(message.lastCharacter))
                                return "lastCharacter: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a LicensePlate message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.LicensePlate} LicensePlate
                     */
                    LicensePlate.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.LicensePlate)
                            return object;
                        var message = new $root.maps.fleetengine.v1.LicensePlate();
                        if (object.countryCode != null)
                            message.countryCode = String(object.countryCode);
                        if (object.lastCharacter != null)
                            message.lastCharacter = String(object.lastCharacter);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LicensePlate message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {maps.fleetengine.v1.LicensePlate} message LicensePlate
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LicensePlate.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.countryCode = "";
                            object.lastCharacter = "";
                        }
                        if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                            object.countryCode = message.countryCode;
                        if (message.lastCharacter != null && message.hasOwnProperty("lastCharacter"))
                            object.lastCharacter = message.lastCharacter;
                        return object;
                    };
    
                    /**
                     * Converts this LicensePlate to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LicensePlate.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LicensePlate
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.LicensePlate
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LicensePlate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.LicensePlate";
                    };
    
                    return LicensePlate;
                })();
    
                v1.VisualTrafficReportPolylineRendering = (function() {
    
                    /**
                     * Properties of a VisualTrafficReportPolylineRendering.
                     * @memberof maps.fleetengine.v1
                     * @interface IVisualTrafficReportPolylineRendering
                     * @property {Array.<maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch>|null} [roadStretch] VisualTrafficReportPolylineRendering roadStretch
                     */
    
                    /**
                     * Constructs a new VisualTrafficReportPolylineRendering.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a VisualTrafficReportPolylineRendering.
                     * @implements IVisualTrafficReportPolylineRendering
                     * @constructor
                     * @param {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering=} [properties] Properties to set
                     */
                    function VisualTrafficReportPolylineRendering(properties) {
                        this.roadStretch = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VisualTrafficReportPolylineRendering roadStretch.
                     * @member {Array.<maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch>} roadStretch
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @instance
                     */
                    VisualTrafficReportPolylineRendering.prototype.roadStretch = $util.emptyArray;
    
                    /**
                     * Creates a new VisualTrafficReportPolylineRendering instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering} VisualTrafficReportPolylineRendering instance
                     */
                    VisualTrafficReportPolylineRendering.create = function create(properties) {
                        return new VisualTrafficReportPolylineRendering(properties);
                    };
    
                    /**
                     * Encodes the specified VisualTrafficReportPolylineRendering message. Does not implicitly {@link maps.fleetengine.v1.VisualTrafficReportPolylineRendering.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering} message VisualTrafficReportPolylineRendering message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VisualTrafficReportPolylineRendering.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.roadStretch != null && message.roadStretch.length)
                            for (var i = 0; i < message.roadStretch.length; ++i)
                                $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.encode(message.roadStretch[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VisualTrafficReportPolylineRendering message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VisualTrafficReportPolylineRendering.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering} message VisualTrafficReportPolylineRendering message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VisualTrafficReportPolylineRendering.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VisualTrafficReportPolylineRendering message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering} VisualTrafficReportPolylineRendering
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VisualTrafficReportPolylineRendering.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.roadStretch && message.roadStretch.length))
                                        message.roadStretch = [];
                                    message.roadStretch.push($root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VisualTrafficReportPolylineRendering message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering} VisualTrafficReportPolylineRendering
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VisualTrafficReportPolylineRendering.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VisualTrafficReportPolylineRendering message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VisualTrafficReportPolylineRendering.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.roadStretch != null && message.hasOwnProperty("roadStretch")) {
                            if (!Array.isArray(message.roadStretch))
                                return "roadStretch: array expected";
                            for (var i = 0; i < message.roadStretch.length; ++i) {
                                var error = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.verify(message.roadStretch[i]);
                                if (error)
                                    return "roadStretch." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a VisualTrafficReportPolylineRendering message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering} VisualTrafficReportPolylineRendering
                     */
                    VisualTrafficReportPolylineRendering.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
                            return object;
                        var message = new $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering();
                        if (object.roadStretch) {
                            if (!Array.isArray(object.roadStretch))
                                throw TypeError(".maps.fleetengine.v1.VisualTrafficReportPolylineRendering.roadStretch: array expected");
                            message.roadStretch = [];
                            for (var i = 0; i < object.roadStretch.length; ++i) {
                                if (typeof object.roadStretch[i] !== "object")
                                    throw TypeError(".maps.fleetengine.v1.VisualTrafficReportPolylineRendering.roadStretch: object expected");
                                message.roadStretch[i] = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.fromObject(object.roadStretch[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VisualTrafficReportPolylineRendering message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering} message VisualTrafficReportPolylineRendering
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VisualTrafficReportPolylineRendering.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.roadStretch = [];
                        if (message.roadStretch && message.roadStretch.length) {
                            object.roadStretch = [];
                            for (var j = 0; j < message.roadStretch.length; ++j)
                                object.roadStretch[j] = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.toObject(message.roadStretch[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this VisualTrafficReportPolylineRendering to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VisualTrafficReportPolylineRendering.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VisualTrafficReportPolylineRendering
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VisualTrafficReportPolylineRendering.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.VisualTrafficReportPolylineRendering";
                    };
    
                    VisualTrafficReportPolylineRendering.RoadStretch = (function() {
    
                        /**
                         * Properties of a RoadStretch.
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                         * @interface IRoadStretch
                         * @property {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style|null} [style] RoadStretch style
                         * @property {number|null} [offsetMeters] RoadStretch offsetMeters
                         * @property {number|null} [lengthMeters] RoadStretch lengthMeters
                         */
    
                        /**
                         * Constructs a new RoadStretch.
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                         * @classdesc Represents a RoadStretch.
                         * @implements IRoadStretch
                         * @constructor
                         * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch=} [properties] Properties to set
                         */
                        function RoadStretch(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RoadStretch style.
                         * @member {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style} style
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @instance
                         */
                        RoadStretch.prototype.style = 0;
    
                        /**
                         * RoadStretch offsetMeters.
                         * @member {number} offsetMeters
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @instance
                         */
                        RoadStretch.prototype.offsetMeters = 0;
    
                        /**
                         * RoadStretch lengthMeters.
                         * @member {number} lengthMeters
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @instance
                         */
                        RoadStretch.prototype.lengthMeters = 0;
    
                        /**
                         * Creates a new RoadStretch instance using the specified properties.
                         * @function create
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch=} [properties] Properties to set
                         * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch} RoadStretch instance
                         */
                        RoadStretch.create = function create(properties) {
                            return new RoadStretch(properties);
                        };
    
                        /**
                         * Encodes the specified RoadStretch message. Does not implicitly {@link maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.verify|verify} messages.
                         * @function encode
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch} message RoadStretch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RoadStretch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.style != null && Object.hasOwnProperty.call(message, "style"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.style);
                            if (message.offsetMeters != null && Object.hasOwnProperty.call(message, "offsetMeters"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.offsetMeters);
                            if (message.lengthMeters != null && Object.hasOwnProperty.call(message, "lengthMeters"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.lengthMeters);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RoadStretch message, length delimited. Does not implicitly {@link maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.IRoadStretch} message RoadStretch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RoadStretch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RoadStretch message from the specified reader or buffer.
                         * @function decode
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch} RoadStretch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RoadStretch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.style = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.offsetMeters = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.lengthMeters = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RoadStretch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch} RoadStretch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RoadStretch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RoadStretch message.
                         * @function verify
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RoadStretch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.style != null && message.hasOwnProperty("style"))
                                switch (message.style) {
                                default:
                                    return "style: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.offsetMeters != null && message.hasOwnProperty("offsetMeters"))
                                if (!$util.isInteger(message.offsetMeters))
                                    return "offsetMeters: integer expected";
                            if (message.lengthMeters != null && message.hasOwnProperty("lengthMeters"))
                                if (!$util.isInteger(message.lengthMeters))
                                    return "lengthMeters: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RoadStretch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch} RoadStretch
                         */
                        RoadStretch.fromObject = function fromObject(object) {
                            if (object instanceof $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
                                return object;
                            var message = new $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch();
                            switch (object.style) {
                            default:
                                if (typeof object.style === "number") {
                                    message.style = object.style;
                                    break;
                                }
                                break;
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style = 0;
                                break;
                            case "SLOWER_TRAFFIC":
                            case 1:
                                message.style = 1;
                                break;
                            case "TRAFFIC_JAM":
                            case 2:
                                message.style = 2;
                                break;
                            }
                            if (object.offsetMeters != null)
                                message.offsetMeters = object.offsetMeters | 0;
                            if (object.lengthMeters != null)
                                message.lengthMeters = object.lengthMeters | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RoadStretch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch} message RoadStretch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RoadStretch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.style = options.enums === String ? "STYLE_UNSPECIFIED" : 0;
                                object.offsetMeters = 0;
                                object.lengthMeters = 0;
                            }
                            if (message.style != null && message.hasOwnProperty("style"))
                                object.style = options.enums === String ? $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style[message.style] === undefined ? message.style : $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style[message.style] : message.style;
                            if (message.offsetMeters != null && message.hasOwnProperty("offsetMeters"))
                                object.offsetMeters = message.offsetMeters;
                            if (message.lengthMeters != null && message.hasOwnProperty("lengthMeters"))
                                object.lengthMeters = message.lengthMeters;
                            return object;
                        };
    
                        /**
                         * Converts this RoadStretch to JSON.
                         * @function toJSON
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RoadStretch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RoadStretch
                         * @function getTypeUrl
                         * @memberof maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RoadStretch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch";
                        };
    
                        /**
                         * Style enum.
                         * @name maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
                         * @enum {number}
                         * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                         * @property {number} SLOWER_TRAFFIC=1 SLOWER_TRAFFIC value
                         * @property {number} TRAFFIC_JAM=2 TRAFFIC_JAM value
                         */
                        RoadStretch.Style = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SLOWER_TRAFFIC"] = 1;
                            values[valuesById[2] = "TRAFFIC_JAM"] = 2;
                            return values;
                        })();
    
                        return RoadStretch;
                    })();
    
                    return VisualTrafficReportPolylineRendering;
                })();
    
                v1.TrafficPolylineData = (function() {
    
                    /**
                     * Properties of a TrafficPolylineData.
                     * @memberof maps.fleetengine.v1
                     * @interface ITrafficPolylineData
                     * @property {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering|null} [trafficRendering] TrafficPolylineData trafficRendering
                     */
    
                    /**
                     * Constructs a new TrafficPolylineData.
                     * @memberof maps.fleetengine.v1
                     * @classdesc Represents a TrafficPolylineData.
                     * @implements ITrafficPolylineData
                     * @constructor
                     * @param {maps.fleetengine.v1.ITrafficPolylineData=} [properties] Properties to set
                     */
                    function TrafficPolylineData(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TrafficPolylineData trafficRendering.
                     * @member {maps.fleetengine.v1.IVisualTrafficReportPolylineRendering|null|undefined} trafficRendering
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @instance
                     */
                    TrafficPolylineData.prototype.trafficRendering = null;
    
                    /**
                     * Creates a new TrafficPolylineData instance using the specified properties.
                     * @function create
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {maps.fleetengine.v1.ITrafficPolylineData=} [properties] Properties to set
                     * @returns {maps.fleetengine.v1.TrafficPolylineData} TrafficPolylineData instance
                     */
                    TrafficPolylineData.create = function create(properties) {
                        return new TrafficPolylineData(properties);
                    };
    
                    /**
                     * Encodes the specified TrafficPolylineData message. Does not implicitly {@link maps.fleetengine.v1.TrafficPolylineData.verify|verify} messages.
                     * @function encode
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {maps.fleetengine.v1.ITrafficPolylineData} message TrafficPolylineData message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TrafficPolylineData.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.trafficRendering != null && Object.hasOwnProperty.call(message, "trafficRendering"))
                            $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.encode(message.trafficRendering, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TrafficPolylineData message, length delimited. Does not implicitly {@link maps.fleetengine.v1.TrafficPolylineData.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {maps.fleetengine.v1.ITrafficPolylineData} message TrafficPolylineData message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TrafficPolylineData.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TrafficPolylineData message from the specified reader or buffer.
                     * @function decode
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {maps.fleetengine.v1.TrafficPolylineData} TrafficPolylineData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TrafficPolylineData.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.maps.fleetengine.v1.TrafficPolylineData();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.trafficRendering = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TrafficPolylineData message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {maps.fleetengine.v1.TrafficPolylineData} TrafficPolylineData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TrafficPolylineData.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TrafficPolylineData message.
                     * @function verify
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TrafficPolylineData.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.trafficRendering != null && message.hasOwnProperty("trafficRendering")) {
                            var error = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.verify(message.trafficRendering);
                            if (error)
                                return "trafficRendering." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TrafficPolylineData message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {maps.fleetengine.v1.TrafficPolylineData} TrafficPolylineData
                     */
                    TrafficPolylineData.fromObject = function fromObject(object) {
                        if (object instanceof $root.maps.fleetengine.v1.TrafficPolylineData)
                            return object;
                        var message = new $root.maps.fleetengine.v1.TrafficPolylineData();
                        if (object.trafficRendering != null) {
                            if (typeof object.trafficRendering !== "object")
                                throw TypeError(".maps.fleetengine.v1.TrafficPolylineData.trafficRendering: object expected");
                            message.trafficRendering = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.fromObject(object.trafficRendering);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TrafficPolylineData message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {maps.fleetengine.v1.TrafficPolylineData} message TrafficPolylineData
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TrafficPolylineData.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.trafficRendering = null;
                        if (message.trafficRendering != null && message.hasOwnProperty("trafficRendering"))
                            object.trafficRendering = $root.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.toObject(message.trafficRendering, options);
                        return object;
                    };
    
                    /**
                     * Converts this TrafficPolylineData to JSON.
                     * @function toJSON
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TrafficPolylineData.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TrafficPolylineData
                     * @function getTypeUrl
                     * @memberof maps.fleetengine.v1.TrafficPolylineData
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TrafficPolylineData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/maps.fleetengine.v1.TrafficPolylineData";
                    };
    
                    return TrafficPolylineData;
                })();
    
                /**
                 * VehicleState enum.
                 * @name maps.fleetengine.v1.VehicleState
                 * @enum {number}
                 * @property {number} UNKNOWN_VEHICLE_STATE=0 UNKNOWN_VEHICLE_STATE value
                 * @property {number} OFFLINE=1 OFFLINE value
                 * @property {number} ONLINE=2 ONLINE value
                 */
                v1.VehicleState = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_VEHICLE_STATE"] = 0;
                    values[valuesById[1] = "OFFLINE"] = 1;
                    values[valuesById[2] = "ONLINE"] = 2;
                    return values;
                })();
    
                /**
                 * LocationPowerSaveMode enum.
                 * @name maps.fleetengine.v1.LocationPowerSaveMode
                 * @enum {number}
                 * @property {number} UNKNOWN_LOCATION_POWER_SAVE_MODE=0 UNKNOWN_LOCATION_POWER_SAVE_MODE value
                 * @property {number} LOCATION_MODE_NO_CHANGE=1 LOCATION_MODE_NO_CHANGE value
                 * @property {number} LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF=2 LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF value
                 * @property {number} LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF=3 LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF value
                 * @property {number} LOCATION_MODE_FOREGROUND_ONLY=4 LOCATION_MODE_FOREGROUND_ONLY value
                 * @property {number} LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF=5 LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF value
                 */
                v1.LocationPowerSaveMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_LOCATION_POWER_SAVE_MODE"] = 0;
                    values[valuesById[1] = "LOCATION_MODE_NO_CHANGE"] = 1;
                    values[valuesById[2] = "LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF"] = 2;
                    values[valuesById[3] = "LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF"] = 3;
                    values[valuesById[4] = "LOCATION_MODE_FOREGROUND_ONLY"] = 4;
                    values[valuesById[5] = "LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF"] = 5;
                    return values;
                })();
    
                /**
                 * BatteryStatus enum.
                 * @name maps.fleetengine.v1.BatteryStatus
                 * @enum {number}
                 * @property {number} UNKNOWN_BATTERY_STATUS=0 UNKNOWN_BATTERY_STATUS value
                 * @property {number} BATTERY_STATUS_CHARGING=1 BATTERY_STATUS_CHARGING value
                 * @property {number} BATTERY_STATUS_DISCHARGING=2 BATTERY_STATUS_DISCHARGING value
                 * @property {number} BATTERY_STATUS_FULL=3 BATTERY_STATUS_FULL value
                 * @property {number} BATTERY_STATUS_NOT_CHARGING=4 BATTERY_STATUS_NOT_CHARGING value
                 * @property {number} BATTERY_STATUS_POWER_LOW=5 BATTERY_STATUS_POWER_LOW value
                 */
                v1.BatteryStatus = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_BATTERY_STATUS"] = 0;
                    values[valuesById[1] = "BATTERY_STATUS_CHARGING"] = 1;
                    values[valuesById[2] = "BATTERY_STATUS_DISCHARGING"] = 2;
                    values[valuesById[3] = "BATTERY_STATUS_FULL"] = 3;
                    values[valuesById[4] = "BATTERY_STATUS_NOT_CHARGING"] = 4;
                    values[valuesById[5] = "BATTERY_STATUS_POWER_LOW"] = 5;
                    return values;
                })();
    
                /**
                 * PowerSource enum.
                 * @name maps.fleetengine.v1.PowerSource
                 * @enum {number}
                 * @property {number} UNKNOWN_POWER_SOURCE=0 UNKNOWN_POWER_SOURCE value
                 * @property {number} POWER_SOURCE_AC=1 POWER_SOURCE_AC value
                 * @property {number} POWER_SOURCE_USB=2 POWER_SOURCE_USB value
                 * @property {number} POWER_SOURCE_WIRELESS=3 POWER_SOURCE_WIRELESS value
                 * @property {number} POWER_SOURCE_UNPLUGGED=4 POWER_SOURCE_UNPLUGGED value
                 */
                v1.PowerSource = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UNKNOWN_POWER_SOURCE"] = 0;
                    values[valuesById[1] = "POWER_SOURCE_AC"] = 1;
                    values[valuesById[2] = "POWER_SOURCE_USB"] = 2;
                    values[valuesById[3] = "POWER_SOURCE_WIRELESS"] = 3;
                    values[valuesById[4] = "POWER_SOURCE_UNPLUGGED"] = 4;
                    return values;
                })();
    
                return v1;
            })();
    
            return fleetengine;
        })();
    
        return maps;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.geo = (function() {
    
            /**
             * Namespace geo.
             * @memberof google
             * @namespace
             */
            var geo = {};
    
            geo.type = (function() {
    
                /**
                 * Namespace type.
                 * @memberof google.geo
                 * @namespace
                 */
                var type = {};
    
                type.Viewport = (function() {
    
                    /**
                     * Properties of a Viewport.
                     * @memberof google.geo.type
                     * @interface IViewport
                     * @property {google.type.ILatLng|null} [low] Viewport low
                     * @property {google.type.ILatLng|null} [high] Viewport high
                     */
    
                    /**
                     * Constructs a new Viewport.
                     * @memberof google.geo.type
                     * @classdesc Represents a Viewport.
                     * @implements IViewport
                     * @constructor
                     * @param {google.geo.type.IViewport=} [properties] Properties to set
                     */
                    function Viewport(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Viewport low.
                     * @member {google.type.ILatLng|null|undefined} low
                     * @memberof google.geo.type.Viewport
                     * @instance
                     */
                    Viewport.prototype.low = null;
    
                    /**
                     * Viewport high.
                     * @member {google.type.ILatLng|null|undefined} high
                     * @memberof google.geo.type.Viewport
                     * @instance
                     */
                    Viewport.prototype.high = null;
    
                    /**
                     * Creates a new Viewport instance using the specified properties.
                     * @function create
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport=} [properties] Properties to set
                     * @returns {google.geo.type.Viewport} Viewport instance
                     */
                    Viewport.create = function create(properties) {
                        return new Viewport(properties);
                    };
    
                    /**
                     * Encodes the specified Viewport message. Does not implicitly {@link google.geo.type.Viewport.verify|verify} messages.
                     * @function encode
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport} message Viewport message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Viewport.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.low != null && Object.hasOwnProperty.call(message, "low"))
                            $root.google.type.LatLng.encode(message.low, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.high != null && Object.hasOwnProperty.call(message, "high"))
                            $root.google.type.LatLng.encode(message.high, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Viewport message, length delimited. Does not implicitly {@link google.geo.type.Viewport.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport} message Viewport message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Viewport.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Viewport message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.geo.type.Viewport} Viewport
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Viewport.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.geo.type.Viewport();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.low = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.high = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Viewport message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.geo.type.Viewport} Viewport
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Viewport.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Viewport message.
                     * @function verify
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Viewport.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.low != null && message.hasOwnProperty("low")) {
                            var error = $root.google.type.LatLng.verify(message.low);
                            if (error)
                                return "low." + error;
                        }
                        if (message.high != null && message.hasOwnProperty("high")) {
                            var error = $root.google.type.LatLng.verify(message.high);
                            if (error)
                                return "high." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Viewport message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.geo.type.Viewport} Viewport
                     */
                    Viewport.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.geo.type.Viewport)
                            return object;
                        var message = new $root.google.geo.type.Viewport();
                        if (object.low != null) {
                            if (typeof object.low !== "object")
                                throw TypeError(".google.geo.type.Viewport.low: object expected");
                            message.low = $root.google.type.LatLng.fromObject(object.low);
                        }
                        if (object.high != null) {
                            if (typeof object.high !== "object")
                                throw TypeError(".google.geo.type.Viewport.high: object expected");
                            message.high = $root.google.type.LatLng.fromObject(object.high);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Viewport message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.Viewport} message Viewport
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Viewport.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.low = null;
                            object.high = null;
                        }
                        if (message.low != null && message.hasOwnProperty("low"))
                            object.low = $root.google.type.LatLng.toObject(message.low, options);
                        if (message.high != null && message.hasOwnProperty("high"))
                            object.high = $root.google.type.LatLng.toObject(message.high, options);
                        return object;
                    };
    
                    /**
                     * Converts this Viewport to JSON.
                     * @function toJSON
                     * @memberof google.geo.type.Viewport
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Viewport.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Viewport
                     * @function getTypeUrl
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Viewport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.geo.type.Viewport";
                    };
    
                    return Viewport;
                })();
    
                return type;
            })();
    
            return geo;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.LatLng = (function() {
    
                /**
                 * Properties of a LatLng.
                 * @memberof google.type
                 * @interface ILatLng
                 * @property {number|null} [latitude] LatLng latitude
                 * @property {number|null} [longitude] LatLng longitude
                 */
    
                /**
                 * Constructs a new LatLng.
                 * @memberof google.type
                 * @classdesc Represents a LatLng.
                 * @implements ILatLng
                 * @constructor
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 */
                function LatLng(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * LatLng latitude.
                 * @member {number} latitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.latitude = 0;
    
                /**
                 * LatLng longitude.
                 * @member {number} longitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.longitude = 0;
    
                /**
                 * Creates a new LatLng instance using the specified properties.
                 * @function create
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 * @returns {google.type.LatLng} LatLng instance
                 */
                LatLng.create = function create(properties) {
                    return new LatLng(properties);
                };
    
                /**
                 * Encodes the specified LatLng message. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.latitude);
                    if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.longitude);
                    return writer;
                };
    
                /**
                 * Encodes the specified LatLng message, length delimited. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.LatLng();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.latitude = reader.double();
                                break;
                            }
                        case 2: {
                                message.longitude = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a LatLng message.
                 * @function verify
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LatLng.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        if (typeof message.latitude !== "number")
                            return "latitude: number expected";
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        if (typeof message.longitude !== "number")
                            return "longitude: number expected";
                    return null;
                };
    
                /**
                 * Creates a LatLng message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.LatLng} LatLng
                 */
                LatLng.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.LatLng)
                        return object;
                    var message = new $root.google.type.LatLng();
                    if (object.latitude != null)
                        message.latitude = Number(object.latitude);
                    if (object.longitude != null)
                        message.longitude = Number(object.longitude);
                    return message;
                };
    
                /**
                 * Creates a plain object from a LatLng message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.LatLng} message LatLng
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LatLng.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.latitude = 0;
                        object.longitude = 0;
                    }
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
                    return object;
                };
    
                /**
                 * Converts this LatLng to JSON.
                 * @function toJSON
                 * @memberof google.type.LatLng
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LatLng.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for LatLng
                 * @function getTypeUrl
                 * @memberof google.type.LatLng
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LatLng.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.LatLng";
                };
    
                return LatLng;
            })();
    
            return type;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             * @property {number} IDENTIFIER=8 IDENTIFIER value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                values[valuesById[8] = "IDENTIFIER"] = 8;
                return values;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 * @property {string|null} [protoReferenceDocumentationUri] Publishing protoReferenceDocumentationUri
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Publishing protoReferenceDocumentationUri.
                 * @member {string} protoReferenceDocumentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.protoReferenceDocumentationUri = "";
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    if (message.protoReferenceDocumentationUri != null && Object.hasOwnProperty.call(message, "protoReferenceDocumentationUri"))
                        writer.uint32(/* id 110, wireType 2 =*/882).string(message.protoReferenceDocumentationUri);
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 110: {
                                message.protoReferenceDocumentationUri = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        if (!$util.isString(message.protoReferenceDocumentationUri))
                            return "protoReferenceDocumentationUri: string expected";
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    case "SHOPPING":
                    case 5:
                        message.organization = 5;
                        break;
                    case "GEO":
                    case 6:
                        message.organization = 6;
                        break;
                    case "GENERATIVE_AI":
                    case 7:
                        message.organization = 7;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    if (object.protoReferenceDocumentationUri != null)
                        message.protoReferenceDocumentationUri = String(object.protoReferenceDocumentationUri);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                        object.protoReferenceDocumentationUri = "";
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        object.protoReferenceDocumentationUri = message.protoReferenceDocumentationUri;
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 * @property {Object.<string,string>|null} [renamedServices] DotnetSettings renamedServices
                 * @property {Object.<string,string>|null} [renamedResources] DotnetSettings renamedResources
                 * @property {Array.<string>|null} [ignoredResources] DotnetSettings ignoredResources
                 * @property {Array.<string>|null} [forcedNamespaceAliases] DotnetSettings forcedNamespaceAliases
                 * @property {Array.<string>|null} [handwrittenSignatures] DotnetSettings handwrittenSignatures
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    this.renamedServices = {};
                    this.renamedResources = {};
                    this.ignoredResources = [];
                    this.forcedNamespaceAliases = [];
                    this.handwrittenSignatures = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * DotnetSettings renamedServices.
                 * @member {Object.<string,string>} renamedServices
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedServices = $util.emptyObject;
    
                /**
                 * DotnetSettings renamedResources.
                 * @member {Object.<string,string>} renamedResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedResources = $util.emptyObject;
    
                /**
                 * DotnetSettings ignoredResources.
                 * @member {Array.<string>} ignoredResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.ignoredResources = $util.emptyArray;
    
                /**
                 * DotnetSettings forcedNamespaceAliases.
                 * @member {Array.<string>} forcedNamespaceAliases
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.forcedNamespaceAliases = $util.emptyArray;
    
                /**
                 * DotnetSettings handwrittenSignatures.
                 * @member {Array.<string>} handwrittenSignatures
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.handwrittenSignatures = $util.emptyArray;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.renamedServices != null && Object.hasOwnProperty.call(message, "renamedServices"))
                        for (var keys = Object.keys(message.renamedServices), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedServices[keys[i]]).ldelim();
                    if (message.renamedResources != null && Object.hasOwnProperty.call(message, "renamedResources"))
                        for (var keys = Object.keys(message.renamedResources), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedResources[keys[i]]).ldelim();
                    if (message.ignoredResources != null && message.ignoredResources.length)
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.ignoredResources[i]);
                    if (message.forcedNamespaceAliases != null && message.forcedNamespaceAliases.length)
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.forcedNamespaceAliases[i]);
                    if (message.handwrittenSignatures != null && message.handwrittenSignatures.length)
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.handwrittenSignatures[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                if (message.renamedServices === $util.emptyObject)
                                    message.renamedServices = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedServices[key] = value;
                                break;
                            }
                        case 3: {
                                if (message.renamedResources === $util.emptyObject)
                                    message.renamedResources = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedResources[key] = value;
                                break;
                            }
                        case 4: {
                                if (!(message.ignoredResources && message.ignoredResources.length))
                                    message.ignoredResources = [];
                                message.ignoredResources.push(reader.string());
                                break;
                            }
                        case 5: {
                                if (!(message.forcedNamespaceAliases && message.forcedNamespaceAliases.length))
                                    message.forcedNamespaceAliases = [];
                                message.forcedNamespaceAliases.push(reader.string());
                                break;
                            }
                        case 6: {
                                if (!(message.handwrittenSignatures && message.handwrittenSignatures.length))
                                    message.handwrittenSignatures = [];
                                message.handwrittenSignatures.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    if (message.renamedServices != null && message.hasOwnProperty("renamedServices")) {
                        if (!$util.isObject(message.renamedServices))
                            return "renamedServices: object expected";
                        var key = Object.keys(message.renamedServices);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedServices[key[i]]))
                                return "renamedServices: string{k:string} expected";
                    }
                    if (message.renamedResources != null && message.hasOwnProperty("renamedResources")) {
                        if (!$util.isObject(message.renamedResources))
                            return "renamedResources: object expected";
                        var key = Object.keys(message.renamedResources);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedResources[key[i]]))
                                return "renamedResources: string{k:string} expected";
                    }
                    if (message.ignoredResources != null && message.hasOwnProperty("ignoredResources")) {
                        if (!Array.isArray(message.ignoredResources))
                            return "ignoredResources: array expected";
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            if (!$util.isString(message.ignoredResources[i]))
                                return "ignoredResources: string[] expected";
                    }
                    if (message.forcedNamespaceAliases != null && message.hasOwnProperty("forcedNamespaceAliases")) {
                        if (!Array.isArray(message.forcedNamespaceAliases))
                            return "forcedNamespaceAliases: array expected";
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            if (!$util.isString(message.forcedNamespaceAliases[i]))
                                return "forcedNamespaceAliases: string[] expected";
                    }
                    if (message.handwrittenSignatures != null && message.hasOwnProperty("handwrittenSignatures")) {
                        if (!Array.isArray(message.handwrittenSignatures))
                            return "handwrittenSignatures: array expected";
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            if (!$util.isString(message.handwrittenSignatures[i]))
                                return "handwrittenSignatures: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    if (object.renamedServices) {
                        if (typeof object.renamedServices !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedServices: object expected");
                        message.renamedServices = {};
                        for (var keys = Object.keys(object.renamedServices), i = 0; i < keys.length; ++i)
                            message.renamedServices[keys[i]] = String(object.renamedServices[keys[i]]);
                    }
                    if (object.renamedResources) {
                        if (typeof object.renamedResources !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedResources: object expected");
                        message.renamedResources = {};
                        for (var keys = Object.keys(object.renamedResources), i = 0; i < keys.length; ++i)
                            message.renamedResources[keys[i]] = String(object.renamedResources[keys[i]]);
                    }
                    if (object.ignoredResources) {
                        if (!Array.isArray(object.ignoredResources))
                            throw TypeError(".google.api.DotnetSettings.ignoredResources: array expected");
                        message.ignoredResources = [];
                        for (var i = 0; i < object.ignoredResources.length; ++i)
                            message.ignoredResources[i] = String(object.ignoredResources[i]);
                    }
                    if (object.forcedNamespaceAliases) {
                        if (!Array.isArray(object.forcedNamespaceAliases))
                            throw TypeError(".google.api.DotnetSettings.forcedNamespaceAliases: array expected");
                        message.forcedNamespaceAliases = [];
                        for (var i = 0; i < object.forcedNamespaceAliases.length; ++i)
                            message.forcedNamespaceAliases[i] = String(object.forcedNamespaceAliases[i]);
                    }
                    if (object.handwrittenSignatures) {
                        if (!Array.isArray(object.handwrittenSignatures))
                            throw TypeError(".google.api.DotnetSettings.handwrittenSignatures: array expected");
                        message.handwrittenSignatures = [];
                        for (var i = 0; i < object.handwrittenSignatures.length; ++i)
                            message.handwrittenSignatures[i] = String(object.handwrittenSignatures[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.ignoredResources = [];
                        object.forcedNamespaceAliases = [];
                        object.handwrittenSignatures = [];
                    }
                    if (options.objects || options.defaults) {
                        object.renamedServices = {};
                        object.renamedResources = {};
                    }
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    var keys2;
                    if (message.renamedServices && (keys2 = Object.keys(message.renamedServices)).length) {
                        object.renamedServices = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedServices[keys2[j]] = message.renamedServices[keys2[j]];
                    }
                    if (message.renamedResources && (keys2 = Object.keys(message.renamedResources)).length) {
                        object.renamedResources = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedResources[keys2[j]] = message.renamedResources[keys2[j]];
                    }
                    if (message.ignoredResources && message.ignoredResources.length) {
                        object.ignoredResources = [];
                        for (var j = 0; j < message.ignoredResources.length; ++j)
                            object.ignoredResources[j] = message.ignoredResources[j];
                    }
                    if (message.forcedNamespaceAliases && message.forcedNamespaceAliases.length) {
                        object.forcedNamespaceAliases = [];
                        for (var j = 0; j < message.forcedNamespaceAliases.length; ++j)
                            object.forcedNamespaceAliases[j] = message.forcedNamespaceAliases[j];
                    }
                    if (message.handwrittenSignatures && message.handwrittenSignatures.length) {
                        object.handwrittenSignatures = [];
                        for (var j = 0; j < message.handwrittenSignatures.length; ++j)
                            object.handwrittenSignatures[j] = message.handwrittenSignatures[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 * @property {Array.<string>|null} [autoPopulatedFields] MethodSettings autoPopulatedFields
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    this.autoPopulatedFields = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * MethodSettings autoPopulatedFields.
                 * @member {Array.<string>} autoPopulatedFields
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.autoPopulatedFields = $util.emptyArray;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.autoPopulatedFields != null && message.autoPopulatedFields.length)
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.autoPopulatedFields[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                if (!(message.autoPopulatedFields && message.autoPopulatedFields.length))
                                    message.autoPopulatedFields = [];
                                message.autoPopulatedFields.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    if (message.autoPopulatedFields != null && message.hasOwnProperty("autoPopulatedFields")) {
                        if (!Array.isArray(message.autoPopulatedFields))
                            return "autoPopulatedFields: array expected";
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            if (!$util.isString(message.autoPopulatedFields[i]))
                                return "autoPopulatedFields: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    if (object.autoPopulatedFields) {
                        if (!Array.isArray(object.autoPopulatedFields))
                            throw TypeError(".google.api.MethodSettings.autoPopulatedFields: array expected");
                        message.autoPopulatedFields = [];
                        for (var i = 0; i < object.autoPopulatedFields.length; ++i)
                            message.autoPopulatedFields[i] = String(object.autoPopulatedFields[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.autoPopulatedFields = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    if (message.autoPopulatedFields && message.autoPopulatedFields.length) {
                        object.autoPopulatedFields = [];
                        for (var j = 0; j < message.autoPopulatedFields.length; ++j)
                            object.autoPopulatedFields[j] = message.autoPopulatedFields[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             * @property {number} SHOPPING=5 SHOPPING value
             * @property {number} GEO=6 GEO value
             * @property {number} GENERATIVE_AI=7 GENERATIVE_AI value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                values[valuesById[5] = "SHOPPING"] = 5;
                values[valuesById[6] = "GEO"] = 6;
                values[valuesById[7] = "GENERATIVE_AI"] = 7;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.RoutingRule = (function() {
    
                /**
                 * Properties of a RoutingRule.
                 * @memberof google.api
                 * @interface IRoutingRule
                 * @property {Array.<google.api.IRoutingParameter>|null} [routingParameters] RoutingRule routingParameters
                 */
    
                /**
                 * Constructs a new RoutingRule.
                 * @memberof google.api
                 * @classdesc Represents a RoutingRule.
                 * @implements IRoutingRule
                 * @constructor
                 * @param {google.api.IRoutingRule=} [properties] Properties to set
                 */
                function RoutingRule(properties) {
                    this.routingParameters = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RoutingRule routingParameters.
                 * @member {Array.<google.api.IRoutingParameter>} routingParameters
                 * @memberof google.api.RoutingRule
                 * @instance
                 */
                RoutingRule.prototype.routingParameters = $util.emptyArray;
    
                /**
                 * Creates a new RoutingRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule=} [properties] Properties to set
                 * @returns {google.api.RoutingRule} RoutingRule instance
                 */
                RoutingRule.create = function create(properties) {
                    return new RoutingRule(properties);
                };
    
                /**
                 * Encodes the specified RoutingRule message. Does not implicitly {@link google.api.RoutingRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule} message RoutingRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.routingParameters != null && message.routingParameters.length)
                        for (var i = 0; i < message.routingParameters.length; ++i)
                            $root.google.api.RoutingParameter.encode(message.routingParameters[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RoutingRule message, length delimited. Does not implicitly {@link google.api.RoutingRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule} message RoutingRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RoutingRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RoutingRule} RoutingRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RoutingRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.routingParameters && message.routingParameters.length))
                                    message.routingParameters = [];
                                message.routingParameters.push($root.google.api.RoutingParameter.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RoutingRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RoutingRule} RoutingRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RoutingRule message.
                 * @function verify
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RoutingRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.routingParameters != null && message.hasOwnProperty("routingParameters")) {
                        if (!Array.isArray(message.routingParameters))
                            return "routingParameters: array expected";
                        for (var i = 0; i < message.routingParameters.length; ++i) {
                            var error = $root.google.api.RoutingParameter.verify(message.routingParameters[i]);
                            if (error)
                                return "routingParameters." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a RoutingRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RoutingRule} RoutingRule
                 */
                RoutingRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RoutingRule)
                        return object;
                    var message = new $root.google.api.RoutingRule();
                    if (object.routingParameters) {
                        if (!Array.isArray(object.routingParameters))
                            throw TypeError(".google.api.RoutingRule.routingParameters: array expected");
                        message.routingParameters = [];
                        for (var i = 0; i < object.routingParameters.length; ++i) {
                            if (typeof object.routingParameters[i] !== "object")
                                throw TypeError(".google.api.RoutingRule.routingParameters: object expected");
                            message.routingParameters[i] = $root.google.api.RoutingParameter.fromObject(object.routingParameters[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RoutingRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.RoutingRule} message RoutingRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RoutingRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.routingParameters = [];
                    if (message.routingParameters && message.routingParameters.length) {
                        object.routingParameters = [];
                        for (var j = 0; j < message.routingParameters.length; ++j)
                            object.routingParameters[j] = $root.google.api.RoutingParameter.toObject(message.routingParameters[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this RoutingRule to JSON.
                 * @function toJSON
                 * @memberof google.api.RoutingRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RoutingRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RoutingRule
                 * @function getTypeUrl
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RoutingRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RoutingRule";
                };
    
                return RoutingRule;
            })();
    
            api.RoutingParameter = (function() {
    
                /**
                 * Properties of a RoutingParameter.
                 * @memberof google.api
                 * @interface IRoutingParameter
                 * @property {string|null} [field] RoutingParameter field
                 * @property {string|null} [pathTemplate] RoutingParameter pathTemplate
                 */
    
                /**
                 * Constructs a new RoutingParameter.
                 * @memberof google.api
                 * @classdesc Represents a RoutingParameter.
                 * @implements IRoutingParameter
                 * @constructor
                 * @param {google.api.IRoutingParameter=} [properties] Properties to set
                 */
                function RoutingParameter(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RoutingParameter field.
                 * @member {string} field
                 * @memberof google.api.RoutingParameter
                 * @instance
                 */
                RoutingParameter.prototype.field = "";
    
                /**
                 * RoutingParameter pathTemplate.
                 * @member {string} pathTemplate
                 * @memberof google.api.RoutingParameter
                 * @instance
                 */
                RoutingParameter.prototype.pathTemplate = "";
    
                /**
                 * Creates a new RoutingParameter instance using the specified properties.
                 * @function create
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter=} [properties] Properties to set
                 * @returns {google.api.RoutingParameter} RoutingParameter instance
                 */
                RoutingParameter.create = function create(properties) {
                    return new RoutingParameter(properties);
                };
    
                /**
                 * Encodes the specified RoutingParameter message. Does not implicitly {@link google.api.RoutingParameter.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter} message RoutingParameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingParameter.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.field != null && Object.hasOwnProperty.call(message, "field"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.field);
                    if (message.pathTemplate != null && Object.hasOwnProperty.call(message, "pathTemplate"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.pathTemplate);
                    return writer;
                };
    
                /**
                 * Encodes the specified RoutingParameter message, length delimited. Does not implicitly {@link google.api.RoutingParameter.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter} message RoutingParameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingParameter.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RoutingParameter message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingParameter.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RoutingParameter();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.field = reader.string();
                                break;
                            }
                        case 2: {
                                message.pathTemplate = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RoutingParameter message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingParameter.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RoutingParameter message.
                 * @function verify
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RoutingParameter.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.field != null && message.hasOwnProperty("field"))
                        if (!$util.isString(message.field))
                            return "field: string expected";
                    if (message.pathTemplate != null && message.hasOwnProperty("pathTemplate"))
                        if (!$util.isString(message.pathTemplate))
                            return "pathTemplate: string expected";
                    return null;
                };
    
                /**
                 * Creates a RoutingParameter message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 */
                RoutingParameter.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RoutingParameter)
                        return object;
                    var message = new $root.google.api.RoutingParameter();
                    if (object.field != null)
                        message.field = String(object.field);
                    if (object.pathTemplate != null)
                        message.pathTemplate = String(object.pathTemplate);
                    return message;
                };
    
                /**
                 * Creates a plain object from a RoutingParameter message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.RoutingParameter} message RoutingParameter
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RoutingParameter.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.field = "";
                        object.pathTemplate = "";
                    }
                    if (message.field != null && message.hasOwnProperty("field"))
                        object.field = message.field;
                    if (message.pathTemplate != null && message.hasOwnProperty("pathTemplate"))
                        object.pathTemplate = message.pathTemplate;
                    return object;
                };
    
                /**
                 * Converts this RoutingParameter to JSON.
                 * @function toJSON
                 * @memberof google.api.RoutingParameter
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RoutingParameter.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RoutingParameter
                 * @function getTypeUrl
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RoutingParameter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RoutingParameter";
                };
    
                return RoutingParameter;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            /**
             * Edition enum.
             * @name google.protobuf.Edition
             * @enum {number}
             * @property {number} EDITION_UNKNOWN=0 EDITION_UNKNOWN value
             * @property {number} EDITION_PROTO2=998 EDITION_PROTO2 value
             * @property {number} EDITION_PROTO3=999 EDITION_PROTO3 value
             * @property {number} EDITION_2023=1000 EDITION_2023 value
             * @property {number} EDITION_2024=1001 EDITION_2024 value
             * @property {number} EDITION_1_TEST_ONLY=1 EDITION_1_TEST_ONLY value
             * @property {number} EDITION_2_TEST_ONLY=2 EDITION_2_TEST_ONLY value
             * @property {number} EDITION_99997_TEST_ONLY=99997 EDITION_99997_TEST_ONLY value
             * @property {number} EDITION_99998_TEST_ONLY=99998 EDITION_99998_TEST_ONLY value
             * @property {number} EDITION_99999_TEST_ONLY=99999 EDITION_99999_TEST_ONLY value
             * @property {number} EDITION_MAX=2147483647 EDITION_MAX value
             */
            protobuf.Edition = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "EDITION_UNKNOWN"] = 0;
                values[valuesById[998] = "EDITION_PROTO2"] = 998;
                values[valuesById[999] = "EDITION_PROTO3"] = 999;
                values[valuesById[1000] = "EDITION_2023"] = 1000;
                values[valuesById[1001] = "EDITION_2024"] = 1001;
                values[valuesById[1] = "EDITION_1_TEST_ONLY"] = 1;
                values[valuesById[2] = "EDITION_2_TEST_ONLY"] = 2;
                values[valuesById[99997] = "EDITION_99997_TEST_ONLY"] = 99997;
                values[valuesById[99998] = "EDITION_99998_TEST_ONLY"] = 99998;
                values[valuesById[99999] = "EDITION_99999_TEST_ONLY"] = 99999;
                values[valuesById[2147483647] = "EDITION_MAX"] = 2147483647;
                return values;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {google.protobuf.Edition|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {google.protobuf.Edition} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = 0;
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 14, wireType 0 =*/112).int32(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 14: {
                                message.edition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        switch (message.edition) {
                        default:
                            return "edition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    switch (object.edition) {
                    default:
                        if (typeof object.edition === "number") {
                            message.edition = object.edition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.edition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.edition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.edition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.edition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.edition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.edition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.edition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.edition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.edition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.edition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.edition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 * @property {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>|null} [declaration] ExtensionRangeOptions declaration
                 * @property {google.protobuf.IFeatureSet|null} [features] ExtensionRangeOptions features
                 * @property {google.protobuf.ExtensionRangeOptions.VerificationState|null} [verification] ExtensionRangeOptions verification
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    this.declaration = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions declaration.
                 * @member {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>} declaration
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.declaration = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.features = null;
    
                /**
                 * ExtensionRangeOptions verification.
                 * @member {google.protobuf.ExtensionRangeOptions.VerificationState} verification
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.verification = 1;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.declaration != null && message.declaration.length)
                        for (var i = 0; i < message.declaration.length; ++i)
                            $root.google.protobuf.ExtensionRangeOptions.Declaration.encode(message.declaration[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.verification != null && Object.hasOwnProperty.call(message, "verification"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.verification);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                if (!(message.declaration && message.declaration.length))
                                    message.declaration = [];
                                message.declaration.push($root.google.protobuf.ExtensionRangeOptions.Declaration.decode(reader, reader.uint32()));
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.verification = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message.declaration != null && message.hasOwnProperty("declaration")) {
                        if (!Array.isArray(message.declaration))
                            return "declaration: array expected";
                        for (var i = 0; i < message.declaration.length; ++i) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.Declaration.verify(message.declaration[i]);
                            if (error)
                                return "declaration." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        switch (message.verification) {
                        default:
                            return "verification: enum value expected";
                        case 0:
                        case 1:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object.declaration) {
                        if (!Array.isArray(object.declaration))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: array expected");
                        message.declaration = [];
                        for (var i = 0; i < object.declaration.length; ++i) {
                            if (typeof object.declaration[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: object expected");
                            message.declaration[i] = $root.google.protobuf.ExtensionRangeOptions.Declaration.fromObject(object.declaration[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    switch (object.verification) {
                    case "DECLARATION":
                    case 0:
                        message.verification = 0;
                        break;
                    default:
                        if (typeof object.verification === "number") {
                            message.verification = object.verification;
                            break;
                        }
                        break;
                    case "UNVERIFIED":
                    case 1:
                        message.verification = 1;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.declaration = [];
                        object.uninterpretedOption = [];
                    }
                    if (options.defaults) {
                        object.verification = options.enums === String ? "UNVERIFIED" : 1;
                        object.features = null;
                    }
                    if (message.declaration && message.declaration.length) {
                        object.declaration = [];
                        for (var j = 0; j < message.declaration.length; ++j)
                            object.declaration[j] = $root.google.protobuf.ExtensionRangeOptions.Declaration.toObject(message.declaration[j], options);
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        object.verification = options.enums === String ? $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] === undefined ? message.verification : $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] : message.verification;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                ExtensionRangeOptions.Declaration = (function() {
    
                    /**
                     * Properties of a Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @interface IDeclaration
                     * @property {number|null} [number] Declaration number
                     * @property {string|null} [fullName] Declaration fullName
                     * @property {string|null} [type] Declaration type
                     * @property {boolean|null} [reserved] Declaration reserved
                     * @property {boolean|null} [repeated] Declaration repeated
                     */
    
                    /**
                     * Constructs a new Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @classdesc Represents a Declaration.
                     * @implements IDeclaration
                     * @constructor
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     */
                    function Declaration(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Declaration number.
                     * @member {number} number
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.number = 0;
    
                    /**
                     * Declaration fullName.
                     * @member {string} fullName
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.fullName = "";
    
                    /**
                     * Declaration type.
                     * @member {string} type
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.type = "";
    
                    /**
                     * Declaration reserved.
                     * @member {boolean} reserved
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.reserved = false;
    
                    /**
                     * Declaration repeated.
                     * @member {boolean} repeated
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.repeated = false;
    
                    /**
                     * Creates a new Declaration instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration instance
                     */
                    Declaration.create = function create(properties) {
                        return new Declaration(properties);
                    };
    
                    /**
                     * Encodes the specified Declaration message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.number);
                        if (message.fullName != null && Object.hasOwnProperty.call(message, "fullName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.fullName);
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                        if (message.reserved != null && Object.hasOwnProperty.call(message, "reserved"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.reserved);
                        if (message.repeated != null && Object.hasOwnProperty.call(message, "repeated"))
                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.repeated);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Declaration message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.number = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.fullName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.type = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.reserved = reader.bool();
                                    break;
                                }
                            case 6: {
                                    message.repeated = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Declaration message.
                     * @function verify
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Declaration.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.number != null && message.hasOwnProperty("number"))
                            if (!$util.isInteger(message.number))
                                return "number: integer expected";
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            if (!$util.isString(message.fullName))
                                return "fullName: string expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            if (!$util.isString(message.type))
                                return "type: string expected";
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            if (typeof message.reserved !== "boolean")
                                return "reserved: boolean expected";
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            if (typeof message.repeated !== "boolean")
                                return "repeated: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a Declaration message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     */
                    Declaration.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.ExtensionRangeOptions.Declaration)
                            return object;
                        var message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        if (object.number != null)
                            message.number = object.number | 0;
                        if (object.fullName != null)
                            message.fullName = String(object.fullName);
                        if (object.type != null)
                            message.type = String(object.type);
                        if (object.reserved != null)
                            message.reserved = Boolean(object.reserved);
                        if (object.repeated != null)
                            message.repeated = Boolean(object.repeated);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Declaration message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.Declaration} message Declaration
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Declaration.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.number = 0;
                            object.fullName = "";
                            object.type = "";
                            object.reserved = false;
                            object.repeated = false;
                        }
                        if (message.number != null && message.hasOwnProperty("number"))
                            object.number = message.number;
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            object.fullName = message.fullName;
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = message.type;
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            object.reserved = message.reserved;
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            object.repeated = message.repeated;
                        return object;
                    };
    
                    /**
                     * Converts this Declaration to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Declaration.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Declaration
                     * @function getTypeUrl
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Declaration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions.Declaration";
                    };
    
                    return Declaration;
                })();
    
                /**
                 * VerificationState enum.
                 * @name google.protobuf.ExtensionRangeOptions.VerificationState
                 * @enum {number}
                 * @property {number} DECLARATION=0 DECLARATION value
                 * @property {number} UNVERIFIED=1 UNVERIFIED value
                 */
                ExtensionRangeOptions.VerificationState = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "DECLARATION"] = 0;
                    values[valuesById[1] = "UNVERIFIED"] = 1;
                    return values;
                })();
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 3:
                        case 2:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {google.protobuf.IFeatureSet|null} [features] FileOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.features = null;
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FileOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                        object.features = null;
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] MessageOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.features = null;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 12: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MessageOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {Array.<google.protobuf.FieldOptions.OptionTargetType>|null} [targets] FieldOptions targets
                 * @property {Array.<google.protobuf.FieldOptions.IEditionDefault>|null} [editionDefaults] FieldOptions editionDefaults
                 * @property {google.protobuf.IFeatureSet|null} [features] FieldOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.targets = [];
                    this.editionDefaults = [];
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions targets.
                 * @member {Array.<google.protobuf.FieldOptions.OptionTargetType>} targets
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.targets = $util.emptyArray;
    
                /**
                 * FieldOptions editionDefaults.
                 * @member {Array.<google.protobuf.FieldOptions.IEditionDefault>} editionDefaults
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.editionDefaults = $util.emptyArray;
    
                /**
                 * FieldOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.features = null;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.targets != null && message.targets.length)
                        for (var i = 0; i < message.targets.length; ++i)
                            writer.uint32(/* id 19, wireType 0 =*/152).int32(message.targets[i]);
                    if (message.editionDefaults != null && message.editionDefaults.length)
                        for (var i = 0; i < message.editionDefaults.length; ++i)
                            $root.google.protobuf.FieldOptions.EditionDefault.encode(message.editionDefaults[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 19: {
                                if (!(message.targets && message.targets.length))
                                    message.targets = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.targets.push(reader.int32());
                                } else
                                    message.targets.push(reader.int32());
                                break;
                            }
                        case 20: {
                                if (!(message.editionDefaults && message.editionDefaults.length))
                                    message.editionDefaults = [];
                                message.editionDefaults.push($root.google.protobuf.FieldOptions.EditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 21: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.targets != null && message.hasOwnProperty("targets")) {
                        if (!Array.isArray(message.targets))
                            return "targets: array expected";
                        for (var i = 0; i < message.targets.length; ++i)
                            switch (message.targets[i]) {
                            default:
                                return "targets: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                                break;
                            }
                    }
                    if (message.editionDefaults != null && message.hasOwnProperty("editionDefaults")) {
                        if (!Array.isArray(message.editionDefaults))
                            return "editionDefaults: array expected";
                        for (var i = 0; i < message.editionDefaults.length; ++i) {
                            var error = $root.google.protobuf.FieldOptions.EditionDefault.verify(message.editionDefaults[i]);
                            if (error)
                                return "editionDefaults." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    if (object.targets) {
                        if (!Array.isArray(object.targets))
                            throw TypeError(".google.protobuf.FieldOptions.targets: array expected");
                        message.targets = [];
                        for (var i = 0; i < object.targets.length; ++i)
                            switch (object.targets[i]) {
                            default:
                                if (typeof object.targets[i] === "number") {
                                    message.targets[i] = object.targets[i];
                                    break;
                                }
                            case "TARGET_TYPE_UNKNOWN":
                            case 0:
                                message.targets[i] = 0;
                                break;
                            case "TARGET_TYPE_FILE":
                            case 1:
                                message.targets[i] = 1;
                                break;
                            case "TARGET_TYPE_EXTENSION_RANGE":
                            case 2:
                                message.targets[i] = 2;
                                break;
                            case "TARGET_TYPE_MESSAGE":
                            case 3:
                                message.targets[i] = 3;
                                break;
                            case "TARGET_TYPE_FIELD":
                            case 4:
                                message.targets[i] = 4;
                                break;
                            case "TARGET_TYPE_ONEOF":
                            case 5:
                                message.targets[i] = 5;
                                break;
                            case "TARGET_TYPE_ENUM":
                            case 6:
                                message.targets[i] = 6;
                                break;
                            case "TARGET_TYPE_ENUM_ENTRY":
                            case 7:
                                message.targets[i] = 7;
                                break;
                            case "TARGET_TYPE_SERVICE":
                            case 8:
                                message.targets[i] = 8;
                                break;
                            case "TARGET_TYPE_METHOD":
                            case 9:
                                message.targets[i] = 9;
                                break;
                            }
                    }
                    if (object.editionDefaults) {
                        if (!Array.isArray(object.editionDefaults))
                            throw TypeError(".google.protobuf.FieldOptions.editionDefaults: array expected");
                        message.editionDefaults = [];
                        for (var i = 0; i < object.editionDefaults.length; ++i) {
                            if (typeof object.editionDefaults[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.editionDefaults: object expected");
                            message.editionDefaults[i] = $root.google.protobuf.FieldOptions.EditionDefault.fromObject(object.editionDefaults[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FieldOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            case "IDENTIFIER":
                            case 8:
                                message[".google.api.fieldBehavior"][i] = 8;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.targets = [];
                        object.editionDefaults = [];
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.targets && message.targets.length) {
                        object.targets = [];
                        for (var j = 0; j < message.targets.length; ++j)
                            object.targets[j] = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] === undefined ? message.targets[j] : $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] : message.targets[j];
                    }
                    if (message.editionDefaults && message.editionDefaults.length) {
                        object.editionDefaults = [];
                        for (var j = 0; j < message.editionDefaults.length; ++j)
                            object.editionDefaults[j] = $root.google.protobuf.FieldOptions.EditionDefault.toObject(message.editionDefaults[j], options);
                    }
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                FieldOptions.EditionDefault = (function() {
    
                    /**
                     * Properties of an EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @interface IEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] EditionDefault edition
                     * @property {string|null} [value] EditionDefault value
                     */
    
                    /**
                     * Constructs a new EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @classdesc Represents an EditionDefault.
                     * @implements IEditionDefault
                     * @constructor
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     */
                    function EditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.edition = 0;
    
                    /**
                     * EditionDefault value.
                     * @member {string} value
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.value = "";
    
                    /**
                     * Creates a new EditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault instance
                     */
                    EditionDefault.create = function create(properties) {
                        return new EditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified EditionDefault message. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.value = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an EditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     */
                    EditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FieldOptions.EditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.value != null)
                            message.value = String(object.value);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.EditionDefault} message EditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.value = "";
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this EditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FieldOptions.EditionDefault";
                    };
    
                    return EditionDefault;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] OneofOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.features = null;
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.OneofOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.features = null;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.features = null;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 7: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumValueOptions features
                 * @property {boolean|null} [debugRedact] EnumValueOptions debugRedact
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.features = null;
    
                /**
                 * EnumValueOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.debugRedact = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.debugRedact);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 2: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumValueOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object.debugRedact = false;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] ServiceOptions features
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.features = null;
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 34: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ServiceOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {google.protobuf.IFeatureSet|null} [features] MethodOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.api.IRoutingRule|null} [".google.api.routing"] MethodOptions .google.api.routing
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.features = null;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.routing.
                 * @member {google.api.IRoutingRule|null|undefined} .google.api.routing
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.routing"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    if (message[".google.api.routing"] != null && Object.hasOwnProperty.call(message, ".google.api.routing"))
                        $root.google.api.RoutingRule.encode(message[".google.api.routing"], writer.uint32(/* id 72295729, wireType 2 =*/578365834).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 35: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 72295729: {
                                message[".google.api.routing"] = $root.google.api.RoutingRule.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.api.routing"] != null && message.hasOwnProperty(".google.api.routing")) {
                        var error = $root.google.api.RoutingRule.verify(message[".google.api.routing"]);
                        if (error)
                            return ".google.api.routing." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MethodOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.api.routing"] != null) {
                        if (typeof object[".google.api.routing"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.routing: object expected");
                        message[".google.api.routing"] = $root.google.api.RoutingRule.fromObject(object[".google.api.routing"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.api.http"] = null;
                        object[".google.api.routing"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    if (message[".google.api.routing"] != null && message.hasOwnProperty(".google.api.routing"))
                        object[".google.api.routing"] = $root.google.api.RoutingRule.toObject(message[".google.api.routing"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.FeatureSet = (function() {
    
                /**
                 * Properties of a FeatureSet.
                 * @memberof google.protobuf
                 * @interface IFeatureSet
                 * @property {google.protobuf.FeatureSet.FieldPresence|null} [fieldPresence] FeatureSet fieldPresence
                 * @property {google.protobuf.FeatureSet.EnumType|null} [enumType] FeatureSet enumType
                 * @property {google.protobuf.FeatureSet.RepeatedFieldEncoding|null} [repeatedFieldEncoding] FeatureSet repeatedFieldEncoding
                 * @property {google.protobuf.FeatureSet.Utf8Validation|null} [utf8Validation] FeatureSet utf8Validation
                 * @property {google.protobuf.FeatureSet.MessageEncoding|null} [messageEncoding] FeatureSet messageEncoding
                 * @property {google.protobuf.FeatureSet.JsonFormat|null} [jsonFormat] FeatureSet jsonFormat
                 */
    
                /**
                 * Constructs a new FeatureSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSet.
                 * @implements IFeatureSet
                 * @constructor
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 */
                function FeatureSet(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSet fieldPresence.
                 * @member {google.protobuf.FeatureSet.FieldPresence} fieldPresence
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.fieldPresence = 0;
    
                /**
                 * FeatureSet enumType.
                 * @member {google.protobuf.FeatureSet.EnumType} enumType
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.enumType = 0;
    
                /**
                 * FeatureSet repeatedFieldEncoding.
                 * @member {google.protobuf.FeatureSet.RepeatedFieldEncoding} repeatedFieldEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.repeatedFieldEncoding = 0;
    
                /**
                 * FeatureSet utf8Validation.
                 * @member {google.protobuf.FeatureSet.Utf8Validation} utf8Validation
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.utf8Validation = 0;
    
                /**
                 * FeatureSet messageEncoding.
                 * @member {google.protobuf.FeatureSet.MessageEncoding} messageEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.messageEncoding = 0;
    
                /**
                 * FeatureSet jsonFormat.
                 * @member {google.protobuf.FeatureSet.JsonFormat} jsonFormat
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.jsonFormat = 0;
    
                /**
                 * Creates a new FeatureSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSet} FeatureSet instance
                 */
                FeatureSet.create = function create(properties) {
                    return new FeatureSet(properties);
                };
    
                /**
                 * Encodes the specified FeatureSet message. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fieldPresence != null && Object.hasOwnProperty.call(message, "fieldPresence"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fieldPresence);
                    if (message.enumType != null && Object.hasOwnProperty.call(message, "enumType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.enumType);
                    if (message.repeatedFieldEncoding != null && Object.hasOwnProperty.call(message, "repeatedFieldEncoding"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.repeatedFieldEncoding);
                    if (message.utf8Validation != null && Object.hasOwnProperty.call(message, "utf8Validation"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.utf8Validation);
                    if (message.messageEncoding != null && Object.hasOwnProperty.call(message, "messageEncoding"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.messageEncoding);
                    if (message.jsonFormat != null && Object.hasOwnProperty.call(message, "jsonFormat"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jsonFormat);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSet message, length delimited. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.fieldPresence = reader.int32();
                                break;
                            }
                        case 2: {
                                message.enumType = reader.int32();
                                break;
                            }
                        case 3: {
                                message.repeatedFieldEncoding = reader.int32();
                                break;
                            }
                        case 4: {
                                message.utf8Validation = reader.int32();
                                break;
                            }
                        case 5: {
                                message.messageEncoding = reader.int32();
                                break;
                            }
                        case 6: {
                                message.jsonFormat = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSet message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        switch (message.fieldPresence) {
                        default:
                            return "fieldPresence: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        switch (message.enumType) {
                        default:
                            return "enumType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        switch (message.repeatedFieldEncoding) {
                        default:
                            return "repeatedFieldEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        switch (message.utf8Validation) {
                        default:
                            return "utf8Validation: enum value expected";
                        case 0:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        switch (message.messageEncoding) {
                        default:
                            return "messageEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        switch (message.jsonFormat) {
                        default:
                            return "jsonFormat: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 */
                FeatureSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSet)
                        return object;
                    var message = new $root.google.protobuf.FeatureSet();
                    switch (object.fieldPresence) {
                    default:
                        if (typeof object.fieldPresence === "number") {
                            message.fieldPresence = object.fieldPresence;
                            break;
                        }
                        break;
                    case "FIELD_PRESENCE_UNKNOWN":
                    case 0:
                        message.fieldPresence = 0;
                        break;
                    case "EXPLICIT":
                    case 1:
                        message.fieldPresence = 1;
                        break;
                    case "IMPLICIT":
                    case 2:
                        message.fieldPresence = 2;
                        break;
                    case "LEGACY_REQUIRED":
                    case 3:
                        message.fieldPresence = 3;
                        break;
                    }
                    switch (object.enumType) {
                    default:
                        if (typeof object.enumType === "number") {
                            message.enumType = object.enumType;
                            break;
                        }
                        break;
                    case "ENUM_TYPE_UNKNOWN":
                    case 0:
                        message.enumType = 0;
                        break;
                    case "OPEN":
                    case 1:
                        message.enumType = 1;
                        break;
                    case "CLOSED":
                    case 2:
                        message.enumType = 2;
                        break;
                    }
                    switch (object.repeatedFieldEncoding) {
                    default:
                        if (typeof object.repeatedFieldEncoding === "number") {
                            message.repeatedFieldEncoding = object.repeatedFieldEncoding;
                            break;
                        }
                        break;
                    case "REPEATED_FIELD_ENCODING_UNKNOWN":
                    case 0:
                        message.repeatedFieldEncoding = 0;
                        break;
                    case "PACKED":
                    case 1:
                        message.repeatedFieldEncoding = 1;
                        break;
                    case "EXPANDED":
                    case 2:
                        message.repeatedFieldEncoding = 2;
                        break;
                    }
                    switch (object.utf8Validation) {
                    default:
                        if (typeof object.utf8Validation === "number") {
                            message.utf8Validation = object.utf8Validation;
                            break;
                        }
                        break;
                    case "UTF8_VALIDATION_UNKNOWN":
                    case 0:
                        message.utf8Validation = 0;
                        break;
                    case "VERIFY":
                    case 2:
                        message.utf8Validation = 2;
                        break;
                    case "NONE":
                    case 3:
                        message.utf8Validation = 3;
                        break;
                    }
                    switch (object.messageEncoding) {
                    default:
                        if (typeof object.messageEncoding === "number") {
                            message.messageEncoding = object.messageEncoding;
                            break;
                        }
                        break;
                    case "MESSAGE_ENCODING_UNKNOWN":
                    case 0:
                        message.messageEncoding = 0;
                        break;
                    case "LENGTH_PREFIXED":
                    case 1:
                        message.messageEncoding = 1;
                        break;
                    case "DELIMITED":
                    case 2:
                        message.messageEncoding = 2;
                        break;
                    }
                    switch (object.jsonFormat) {
                    default:
                        if (typeof object.jsonFormat === "number") {
                            message.jsonFormat = object.jsonFormat;
                            break;
                        }
                        break;
                    case "JSON_FORMAT_UNKNOWN":
                    case 0:
                        message.jsonFormat = 0;
                        break;
                    case "ALLOW":
                    case 1:
                        message.jsonFormat = 1;
                        break;
                    case "LEGACY_BEST_EFFORT":
                    case 2:
                        message.jsonFormat = 2;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.FeatureSet} message FeatureSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.fieldPresence = options.enums === String ? "FIELD_PRESENCE_UNKNOWN" : 0;
                        object.enumType = options.enums === String ? "ENUM_TYPE_UNKNOWN" : 0;
                        object.repeatedFieldEncoding = options.enums === String ? "REPEATED_FIELD_ENCODING_UNKNOWN" : 0;
                        object.utf8Validation = options.enums === String ? "UTF8_VALIDATION_UNKNOWN" : 0;
                        object.messageEncoding = options.enums === String ? "MESSAGE_ENCODING_UNKNOWN" : 0;
                        object.jsonFormat = options.enums === String ? "JSON_FORMAT_UNKNOWN" : 0;
                    }
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        object.fieldPresence = options.enums === String ? $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] === undefined ? message.fieldPresence : $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] : message.fieldPresence;
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        object.enumType = options.enums === String ? $root.google.protobuf.FeatureSet.EnumType[message.enumType] === undefined ? message.enumType : $root.google.protobuf.FeatureSet.EnumType[message.enumType] : message.enumType;
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        object.repeatedFieldEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] === undefined ? message.repeatedFieldEncoding : $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] : message.repeatedFieldEncoding;
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        object.utf8Validation = options.enums === String ? $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] === undefined ? message.utf8Validation : $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] : message.utf8Validation;
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        object.messageEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] === undefined ? message.messageEncoding : $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] : message.messageEncoding;
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        object.jsonFormat = options.enums === String ? $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] === undefined ? message.jsonFormat : $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] : message.jsonFormat;
                    return object;
                };
    
                /**
                 * Converts this FeatureSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSet";
                };
    
                /**
                 * FieldPresence enum.
                 * @name google.protobuf.FeatureSet.FieldPresence
                 * @enum {number}
                 * @property {number} FIELD_PRESENCE_UNKNOWN=0 FIELD_PRESENCE_UNKNOWN value
                 * @property {number} EXPLICIT=1 EXPLICIT value
                 * @property {number} IMPLICIT=2 IMPLICIT value
                 * @property {number} LEGACY_REQUIRED=3 LEGACY_REQUIRED value
                 */
                FeatureSet.FieldPresence = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "FIELD_PRESENCE_UNKNOWN"] = 0;
                    values[valuesById[1] = "EXPLICIT"] = 1;
                    values[valuesById[2] = "IMPLICIT"] = 2;
                    values[valuesById[3] = "LEGACY_REQUIRED"] = 3;
                    return values;
                })();
    
                /**
                 * EnumType enum.
                 * @name google.protobuf.FeatureSet.EnumType
                 * @enum {number}
                 * @property {number} ENUM_TYPE_UNKNOWN=0 ENUM_TYPE_UNKNOWN value
                 * @property {number} OPEN=1 OPEN value
                 * @property {number} CLOSED=2 CLOSED value
                 */
                FeatureSet.EnumType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "ENUM_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "OPEN"] = 1;
                    values[valuesById[2] = "CLOSED"] = 2;
                    return values;
                })();
    
                /**
                 * RepeatedFieldEncoding enum.
                 * @name google.protobuf.FeatureSet.RepeatedFieldEncoding
                 * @enum {number}
                 * @property {number} REPEATED_FIELD_ENCODING_UNKNOWN=0 REPEATED_FIELD_ENCODING_UNKNOWN value
                 * @property {number} PACKED=1 PACKED value
                 * @property {number} EXPANDED=2 EXPANDED value
                 */
                FeatureSet.RepeatedFieldEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "REPEATED_FIELD_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "PACKED"] = 1;
                    values[valuesById[2] = "EXPANDED"] = 2;
                    return values;
                })();
    
                /**
                 * Utf8Validation enum.
                 * @name google.protobuf.FeatureSet.Utf8Validation
                 * @enum {number}
                 * @property {number} UTF8_VALIDATION_UNKNOWN=0 UTF8_VALIDATION_UNKNOWN value
                 * @property {number} VERIFY=2 VERIFY value
                 * @property {number} NONE=3 NONE value
                 */
                FeatureSet.Utf8Validation = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UTF8_VALIDATION_UNKNOWN"] = 0;
                    values[valuesById[2] = "VERIFY"] = 2;
                    values[valuesById[3] = "NONE"] = 3;
                    return values;
                })();
    
                /**
                 * MessageEncoding enum.
                 * @name google.protobuf.FeatureSet.MessageEncoding
                 * @enum {number}
                 * @property {number} MESSAGE_ENCODING_UNKNOWN=0 MESSAGE_ENCODING_UNKNOWN value
                 * @property {number} LENGTH_PREFIXED=1 LENGTH_PREFIXED value
                 * @property {number} DELIMITED=2 DELIMITED value
                 */
                FeatureSet.MessageEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "MESSAGE_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "LENGTH_PREFIXED"] = 1;
                    values[valuesById[2] = "DELIMITED"] = 2;
                    return values;
                })();
    
                /**
                 * JsonFormat enum.
                 * @name google.protobuf.FeatureSet.JsonFormat
                 * @enum {number}
                 * @property {number} JSON_FORMAT_UNKNOWN=0 JSON_FORMAT_UNKNOWN value
                 * @property {number} ALLOW=1 ALLOW value
                 * @property {number} LEGACY_BEST_EFFORT=2 LEGACY_BEST_EFFORT value
                 */
                FeatureSet.JsonFormat = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JSON_FORMAT_UNKNOWN"] = 0;
                    values[valuesById[1] = "ALLOW"] = 1;
                    values[valuesById[2] = "LEGACY_BEST_EFFORT"] = 2;
                    return values;
                })();
    
                return FeatureSet;
            })();
    
            protobuf.FeatureSetDefaults = (function() {
    
                /**
                 * Properties of a FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @interface IFeatureSetDefaults
                 * @property {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>|null} [defaults] FeatureSetDefaults defaults
                 * @property {google.protobuf.Edition|null} [minimumEdition] FeatureSetDefaults minimumEdition
                 * @property {google.protobuf.Edition|null} [maximumEdition] FeatureSetDefaults maximumEdition
                 */
    
                /**
                 * Constructs a new FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSetDefaults.
                 * @implements IFeatureSetDefaults
                 * @constructor
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 */
                function FeatureSetDefaults(properties) {
                    this.defaults = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSetDefaults defaults.
                 * @member {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>} defaults
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.defaults = $util.emptyArray;
    
                /**
                 * FeatureSetDefaults minimumEdition.
                 * @member {google.protobuf.Edition} minimumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.minimumEdition = 0;
    
                /**
                 * FeatureSetDefaults maximumEdition.
                 * @member {google.protobuf.Edition} maximumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.maximumEdition = 0;
    
                /**
                 * Creates a new FeatureSetDefaults instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults instance
                 */
                FeatureSetDefaults.create = function create(properties) {
                    return new FeatureSetDefaults(properties);
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.defaults != null && message.defaults.length)
                        for (var i = 0; i < message.defaults.length; ++i)
                            $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.encode(message.defaults[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.minimumEdition != null && Object.hasOwnProperty.call(message, "minimumEdition"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.minimumEdition);
                    if (message.maximumEdition != null && Object.hasOwnProperty.call(message, "maximumEdition"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maximumEdition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.defaults && message.defaults.length))
                                    message.defaults = [];
                                message.defaults.push($root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                message.minimumEdition = reader.int32();
                                break;
                            }
                        case 5: {
                                message.maximumEdition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSetDefaults message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSetDefaults.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.defaults != null && message.hasOwnProperty("defaults")) {
                        if (!Array.isArray(message.defaults))
                            return "defaults: array expected";
                        for (var i = 0; i < message.defaults.length; ++i) {
                            var error = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify(message.defaults[i]);
                            if (error)
                                return "defaults." + error;
                        }
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        switch (message.minimumEdition) {
                        default:
                            return "minimumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        switch (message.maximumEdition) {
                        default:
                            return "maximumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSetDefaults message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 */
                FeatureSetDefaults.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSetDefaults)
                        return object;
                    var message = new $root.google.protobuf.FeatureSetDefaults();
                    if (object.defaults) {
                        if (!Array.isArray(object.defaults))
                            throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: array expected");
                        message.defaults = [];
                        for (var i = 0; i < object.defaults.length; ++i) {
                            if (typeof object.defaults[i] !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: object expected");
                            message.defaults[i] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.fromObject(object.defaults[i]);
                        }
                    }
                    switch (object.minimumEdition) {
                    default:
                        if (typeof object.minimumEdition === "number") {
                            message.minimumEdition = object.minimumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.minimumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.minimumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.minimumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.minimumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.minimumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.minimumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.minimumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.minimumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.minimumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.minimumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.minimumEdition = 2147483647;
                        break;
                    }
                    switch (object.maximumEdition) {
                    default:
                        if (typeof object.maximumEdition === "number") {
                            message.maximumEdition = object.maximumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.maximumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.maximumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.maximumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.maximumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.maximumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.maximumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.maximumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.maximumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.maximumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.maximumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.maximumEdition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSetDefaults message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.FeatureSetDefaults} message FeatureSetDefaults
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSetDefaults.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.defaults = [];
                    if (options.defaults) {
                        object.minimumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        object.maximumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.defaults && message.defaults.length) {
                        object.defaults = [];
                        for (var j = 0; j < message.defaults.length; ++j)
                            object.defaults[j] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.toObject(message.defaults[j], options);
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        object.minimumEdition = options.enums === String ? $root.google.protobuf.Edition[message.minimumEdition] === undefined ? message.minimumEdition : $root.google.protobuf.Edition[message.minimumEdition] : message.minimumEdition;
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        object.maximumEdition = options.enums === String ? $root.google.protobuf.Edition[message.maximumEdition] === undefined ? message.maximumEdition : $root.google.protobuf.Edition[message.maximumEdition] : message.maximumEdition;
                    return object;
                };
    
                /**
                 * Converts this FeatureSetDefaults to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSetDefaults.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSetDefaults
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSetDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults";
                };
    
                FeatureSetDefaults.FeatureSetEditionDefault = (function() {
    
                    /**
                     * Properties of a FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @interface IFeatureSetEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] FeatureSetEditionDefault edition
                     * @property {google.protobuf.IFeatureSet|null} [features] FeatureSetEditionDefault features
                     */
    
                    /**
                     * Constructs a new FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @classdesc Represents a FeatureSetEditionDefault.
                     * @implements IFeatureSetEditionDefault
                     * @constructor
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     */
                    function FeatureSetEditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * FeatureSetEditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.edition = 0;
    
                    /**
                     * FeatureSetEditionDefault features.
                     * @member {google.protobuf.IFeatureSet|null|undefined} features
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.features = null;
    
                    /**
                     * Creates a new FeatureSetEditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault instance
                     */
                    FeatureSetEditionDefault.create = function create(properties) {
                        return new FeatureSetEditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                            $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a FeatureSetEditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    FeatureSetEditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.features != null && message.hasOwnProperty("features")) {
                            var error = $root.google.protobuf.FeatureSet.verify(message.features);
                            if (error)
                                return "features." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a FeatureSetEditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     */
                    FeatureSetEditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.features != null) {
                            if (typeof object.features !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.features: object expected");
                            message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a FeatureSetEditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} message FeatureSetEditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    FeatureSetEditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.features = null;
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.features != null && message.hasOwnProperty("features"))
                            object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this FeatureSetEditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    FeatureSetEditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for FeatureSetEditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    FeatureSetEditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault";
                    };
    
                    return FeatureSetEditionDefault;
                })();
    
                return FeatureSetDefaults;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
