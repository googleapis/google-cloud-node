// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_domains_protos || ($protobuf.roots._google_cloud_domains_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.domains = (function() {
    
                /**
                 * Namespace domains.
                 * @memberof google.cloud
                 * @namespace
                 */
                var domains = {};
    
                domains.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.domains
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Domains = (function() {
    
                        /**
                         * Constructs a new Domains service.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a Domains
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Domains(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Domains.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Domains;
    
                        /**
                         * Creates new Domains service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.domains.v1.Domains
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Domains} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Domains.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|searchDomains}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef SearchDomainsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.SearchDomainsResponse} [response] SearchDomainsResponse
                         */
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.SearchDomainsCallback} callback Node-style callback called with the error, if any, and SearchDomainsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.searchDomains = function searchDomains(request, callback) {
                            return this.rpcCall(searchDomains, $root.google.cloud.domains.v1.SearchDomainsRequest, $root.google.cloud.domains.v1.SearchDomainsResponse, request, callback);
                        }, "name", { value: "SearchDomains" });
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.SearchDomainsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|retrieveRegisterParameters}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef RetrieveRegisterParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.RetrieveRegisterParametersResponse} [response] RetrieveRegisterParametersResponse
                         */
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.RetrieveRegisterParametersCallback} callback Node-style callback called with the error, if any, and RetrieveRegisterParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveRegisterParameters = function retrieveRegisterParameters(request, callback) {
                            return this.rpcCall(retrieveRegisterParameters, $root.google.cloud.domains.v1.RetrieveRegisterParametersRequest, $root.google.cloud.domains.v1.RetrieveRegisterParametersResponse, request, callback);
                        }, "name", { value: "RetrieveRegisterParameters" });
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.RetrieveRegisterParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|registerDomain}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef RegisterDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.RegisterDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.registerDomain = function registerDomain(request, callback) {
                            return this.rpcCall(registerDomain, $root.google.cloud.domains.v1.RegisterDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RegisterDomain" });
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|retrieveTransferParameters}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef RetrieveTransferParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.RetrieveTransferParametersResponse} [response] RetrieveTransferParametersResponse
                         */
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.RetrieveTransferParametersCallback} callback Node-style callback called with the error, if any, and RetrieveTransferParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveTransferParameters = function retrieveTransferParameters(request, callback) {
                            return this.rpcCall(retrieveTransferParameters, $root.google.cloud.domains.v1.RetrieveTransferParametersRequest, $root.google.cloud.domains.v1.RetrieveTransferParametersResponse, request, callback);
                        }, "name", { value: "RetrieveTransferParameters" });
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.RetrieveTransferParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|transferDomain}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef TransferDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.TransferDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.transferDomain = function transferDomain(request, callback) {
                            return this.rpcCall(transferDomain, $root.google.cloud.domains.v1.TransferDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TransferDomain" });
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|listRegistrations}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ListRegistrationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.ListRegistrationsResponse} [response] ListRegistrationsResponse
                         */
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ListRegistrationsCallback} callback Node-style callback called with the error, if any, and ListRegistrationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.listRegistrations = function listRegistrations(request, callback) {
                            return this.rpcCall(listRegistrations, $root.google.cloud.domains.v1.ListRegistrationsRequest, $root.google.cloud.domains.v1.ListRegistrationsResponse, request, callback);
                        }, "name", { value: "ListRegistrations" });
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.ListRegistrationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|getRegistration}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef GetRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.Registration} [response] Registration
                         */
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.GetRegistrationCallback} callback Node-style callback called with the error, if any, and Registration
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.getRegistration = function getRegistration(request, callback) {
                            return this.rpcCall(getRegistration, $root.google.cloud.domains.v1.GetRegistrationRequest, $root.google.cloud.domains.v1.Registration, request, callback);
                        }, "name", { value: "GetRegistration" });
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.Registration>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|updateRegistration}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef UpdateRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.UpdateRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.updateRegistration = function updateRegistration(request, callback) {
                            return this.rpcCall(updateRegistration, $root.google.cloud.domains.v1.UpdateRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateRegistration" });
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|configureManagementSettings}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ConfigureManagementSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ConfigureManagementSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureManagementSettings = function configureManagementSettings(request, callback) {
                            return this.rpcCall(configureManagementSettings, $root.google.cloud.domains.v1.ConfigureManagementSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureManagementSettings" });
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|configureDnsSettings}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ConfigureDnsSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ConfigureDnsSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureDnsSettings = function configureDnsSettings(request, callback) {
                            return this.rpcCall(configureDnsSettings, $root.google.cloud.domains.v1.ConfigureDnsSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureDnsSettings" });
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|configureContactSettings}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ConfigureContactSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ConfigureContactSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureContactSettings = function configureContactSettings(request, callback) {
                            return this.rpcCall(configureContactSettings, $root.google.cloud.domains.v1.ConfigureContactSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureContactSettings" });
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|exportRegistration}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ExportRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ExportRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.exportRegistration = function exportRegistration(request, callback) {
                            return this.rpcCall(exportRegistration, $root.google.cloud.domains.v1.ExportRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportRegistration" });
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|deleteRegistration}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef DeleteRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.DeleteRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.deleteRegistration = function deleteRegistration(request, callback) {
                            return this.rpcCall(deleteRegistration, $root.google.cloud.domains.v1.DeleteRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRegistration" });
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|retrieveAuthorizationCode}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef RetrieveAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.RetrieveAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveAuthorizationCode = function retrieveAuthorizationCode(request, callback) {
                            return this.rpcCall(retrieveAuthorizationCode, $root.google.cloud.domains.v1.RetrieveAuthorizationCodeRequest, $root.google.cloud.domains.v1.AuthorizationCode, request, callback);
                        }, "name", { value: "RetrieveAuthorizationCode" });
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1.Domains|resetAuthorizationCode}.
                         * @memberof google.cloud.domains.v1.Domains
                         * @typedef ResetAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1.Domains.ResetAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.resetAuthorizationCode = function resetAuthorizationCode(request, callback) {
                            return this.rpcCall(resetAuthorizationCode, $root.google.cloud.domains.v1.ResetAuthorizationCodeRequest, $root.google.cloud.domains.v1.AuthorizationCode, request, callback);
                        }, "name", { value: "ResetAuthorizationCode" });
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        return Domains;
                    })();
    
                    v1.Registration = (function() {
    
                        /**
                         * Properties of a Registration.
                         * @memberof google.cloud.domains.v1
                         * @interface IRegistration
                         * @property {string|null} [name] Registration name
                         * @property {string|null} [domainName] Registration domainName
                         * @property {google.protobuf.ITimestamp|null} [createTime] Registration createTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Registration expireTime
                         * @property {google.cloud.domains.v1.Registration.State|null} [state] Registration state
                         * @property {Array.<google.cloud.domains.v1.Registration.Issue>|null} [issues] Registration issues
                         * @property {Object.<string,string>|null} [labels] Registration labels
                         * @property {google.cloud.domains.v1.IManagementSettings|null} [managementSettings] Registration managementSettings
                         * @property {google.cloud.domains.v1.IDnsSettings|null} [dnsSettings] Registration dnsSettings
                         * @property {google.cloud.domains.v1.IContactSettings|null} [contactSettings] Registration contactSettings
                         * @property {google.cloud.domains.v1.IContactSettings|null} [pendingContactSettings] Registration pendingContactSettings
                         * @property {Array.<google.cloud.domains.v1.ContactPrivacy>|null} [supportedPrivacy] Registration supportedPrivacy
                         */
    
                        /**
                         * Constructs a new Registration.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a Registration.
                         * @implements IRegistration
                         * @constructor
                         * @param {google.cloud.domains.v1.IRegistration=} [properties] Properties to set
                         */
                        function Registration(properties) {
                            this.issues = [];
                            this.labels = {};
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Registration name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.name = "";
    
                        /**
                         * Registration domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.domainName = "";
    
                        /**
                         * Registration createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.createTime = null;
    
                        /**
                         * Registration expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.expireTime = null;
    
                        /**
                         * Registration state.
                         * @member {google.cloud.domains.v1.Registration.State} state
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.state = 0;
    
                        /**
                         * Registration issues.
                         * @member {Array.<google.cloud.domains.v1.Registration.Issue>} issues
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.issues = $util.emptyArray;
    
                        /**
                         * Registration labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.labels = $util.emptyObject;
    
                        /**
                         * Registration managementSettings.
                         * @member {google.cloud.domains.v1.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.managementSettings = null;
    
                        /**
                         * Registration dnsSettings.
                         * @member {google.cloud.domains.v1.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.dnsSettings = null;
    
                        /**
                         * Registration contactSettings.
                         * @member {google.cloud.domains.v1.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.contactSettings = null;
    
                        /**
                         * Registration pendingContactSettings.
                         * @member {google.cloud.domains.v1.IContactSettings|null|undefined} pendingContactSettings
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.pendingContactSettings = null;
    
                        /**
                         * Registration supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         */
                        Registration.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * Creates a new Registration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {google.cloud.domains.v1.IRegistration=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.Registration} Registration instance
                         */
                        Registration.create = function create(properties) {
                            return new Registration(properties);
                        };
    
                        /**
                         * Encodes the specified Registration message. Does not implicitly {@link google.cloud.domains.v1.Registration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {google.cloud.domains.v1.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domainName);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.issues != null && message.issues.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.issues.length; ++i)
                                    writer.int32(message.issues[i]);
                                writer.ldelim();
                            }
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.pendingContactSettings != null && Object.hasOwnProperty.call(message, "pendingContactSettings"))
                                $root.google.cloud.domains.v1.ContactSettings.encode(message.pendingContactSettings, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 14, wireType 2 =*/114).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Registration message, length delimited. Does not implicitly {@link google.cloud.domains.v1.Registration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {google.cloud.domains.v1.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.Registration(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.issues && message.issues.length))
                                            message.issues = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.issues.push(reader.int32());
                                        } else
                                            message.issues.push(reader.int32());
                                        break;
                                    }
                                case 9: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.contactSettings = $root.google.cloud.domains.v1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.pendingContactSettings = $root.google.cloud.domains.v1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Registration message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Registration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.issues != null && message.hasOwnProperty("issues")) {
                                if (!Array.isArray(message.issues))
                                    return "issues: array expected";
                                for (var i = 0; i < message.issues.length; ++i)
                                    switch (message.issues[i]) {
                                    default:
                                        return "issues: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.verify(message.pendingContactSettings);
                                if (error)
                                    return "pendingContactSettings." + error;
                            }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Registration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.Registration} Registration
                         */
                        Registration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.Registration)
                                return object;
                            var message = new $root.google.cloud.domains.v1.Registration();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "REGISTRATION_PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "REGISTRATION_FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "TRANSFER_PENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "TRANSFER_FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "ACTIVE":
                            case 6:
                                message.state = 6;
                                break;
                            case "SUSPENDED":
                            case 7:
                                message.state = 7;
                                break;
                            case "EXPORTED":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.issues) {
                                if (!Array.isArray(object.issues))
                                    throw TypeError(".google.cloud.domains.v1.Registration.issues: array expected");
                                message.issues = [];
                                for (var i = 0; i < object.issues.length; ++i)
                                    switch (object.issues[i]) {
                                    default:
                                        if (typeof object.issues[i] === "number") {
                                            message.issues[i] = object.issues[i];
                                            break;
                                        }
                                    case "ISSUE_UNSPECIFIED":
                                    case 0:
                                        message.issues[i] = 0;
                                        break;
                                    case "CONTACT_SUPPORT":
                                    case 1:
                                        message.issues[i] = 1;
                                        break;
                                    case "UNVERIFIED_EMAIL":
                                    case 2:
                                        message.issues[i] = 2;
                                        break;
                                    }
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.pendingContactSettings != null) {
                                if (typeof object.pendingContactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.Registration.pendingContactSettings: object expected");
                                message.pendingContactSettings = $root.google.cloud.domains.v1.ContactSettings.fromObject(object.pendingContactSettings);
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1.Registration.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Registration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {google.cloud.domains.v1.Registration} message Registration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Registration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.issues = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.domainName = "";
                                object.createTime = null;
                                object.expireTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.managementSettings = null;
                                object.dnsSettings = null;
                                object.contactSettings = null;
                                object.pendingContactSettings = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.domains.v1.Registration.State[message.state] === undefined ? message.state : $root.google.cloud.domains.v1.Registration.State[message.state] : message.state;
                            if (message.issues && message.issues.length) {
                                object.issues = [];
                                for (var j = 0; j < message.issues.length; ++j)
                                    object.issues[j] = options.enums === String ? $root.google.cloud.domains.v1.Registration.Issue[message.issues[j]] === undefined ? message.issues[j] : $root.google.cloud.domains.v1.Registration.Issue[message.issues[j]] : message.issues[j];
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1.ContactSettings.toObject(message.contactSettings, options);
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings"))
                                object.pendingContactSettings = $root.google.cloud.domains.v1.ContactSettings.toObject(message.pendingContactSettings, options);
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Registration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.Registration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Registration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Registration
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.Registration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Registration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.Registration";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.domains.v1.Registration.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} REGISTRATION_PENDING=1 REGISTRATION_PENDING value
                         * @property {number} REGISTRATION_FAILED=2 REGISTRATION_FAILED value
                         * @property {number} TRANSFER_PENDING=3 TRANSFER_PENDING value
                         * @property {number} TRANSFER_FAILED=4 TRANSFER_FAILED value
                         * @property {number} ACTIVE=6 ACTIVE value
                         * @property {number} SUSPENDED=7 SUSPENDED value
                         * @property {number} EXPORTED=8 EXPORTED value
                         */
                        Registration.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REGISTRATION_PENDING"] = 1;
                            values[valuesById[2] = "REGISTRATION_FAILED"] = 2;
                            values[valuesById[3] = "TRANSFER_PENDING"] = 3;
                            values[valuesById[4] = "TRANSFER_FAILED"] = 4;
                            values[valuesById[6] = "ACTIVE"] = 6;
                            values[valuesById[7] = "SUSPENDED"] = 7;
                            values[valuesById[8] = "EXPORTED"] = 8;
                            return values;
                        })();
    
                        /**
                         * Issue enum.
                         * @name google.cloud.domains.v1.Registration.Issue
                         * @enum {number}
                         * @property {number} ISSUE_UNSPECIFIED=0 ISSUE_UNSPECIFIED value
                         * @property {number} CONTACT_SUPPORT=1 CONTACT_SUPPORT value
                         * @property {number} UNVERIFIED_EMAIL=2 UNVERIFIED_EMAIL value
                         */
                        Registration.Issue = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ISSUE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTACT_SUPPORT"] = 1;
                            values[valuesById[2] = "UNVERIFIED_EMAIL"] = 2;
                            return values;
                        })();
    
                        return Registration;
                    })();
    
                    v1.ManagementSettings = (function() {
    
                        /**
                         * Properties of a ManagementSettings.
                         * @memberof google.cloud.domains.v1
                         * @interface IManagementSettings
                         * @property {google.cloud.domains.v1.ManagementSettings.RenewalMethod|null} [renewalMethod] ManagementSettings renewalMethod
                         * @property {google.cloud.domains.v1.TransferLockState|null} [transferLockState] ManagementSettings transferLockState
                         */
    
                        /**
                         * Constructs a new ManagementSettings.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ManagementSettings.
                         * @implements IManagementSettings
                         * @constructor
                         * @param {google.cloud.domains.v1.IManagementSettings=} [properties] Properties to set
                         */
                        function ManagementSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ManagementSettings renewalMethod.
                         * @member {google.cloud.domains.v1.ManagementSettings.RenewalMethod} renewalMethod
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.renewalMethod = 0;
    
                        /**
                         * ManagementSettings transferLockState.
                         * @member {google.cloud.domains.v1.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.transferLockState = 0;
    
                        /**
                         * Creates a new ManagementSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1.IManagementSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ManagementSettings} ManagementSettings instance
                         */
                        ManagementSettings.create = function create(properties) {
                            return new ManagementSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message. Does not implicitly {@link google.cloud.domains.v1.ManagementSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.renewalMethod != null && Object.hasOwnProperty.call(message, "renewalMethod"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.renewalMethod);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ManagementSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ManagementSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.renewalMethod = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ManagementSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ManagementSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                switch (message.renewalMethod) {
                                default:
                                    return "renewalMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ManagementSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ManagementSettings} ManagementSettings
                         */
                        ManagementSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ManagementSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ManagementSettings();
                            switch (object.renewalMethod) {
                            default:
                                if (typeof object.renewalMethod === "number") {
                                    message.renewalMethod = object.renewalMethod;
                                    break;
                                }
                                break;
                            case "RENEWAL_METHOD_UNSPECIFIED":
                            case 0:
                                message.renewalMethod = 0;
                                break;
                            case "AUTOMATIC_RENEWAL":
                            case 1:
                                message.renewalMethod = 1;
                                break;
                            case "MANUAL_RENEWAL":
                            case 2:
                                message.renewalMethod = 2;
                                break;
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ManagementSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1.ManagementSettings} message ManagementSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ManagementSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.renewalMethod = options.enums === String ? "RENEWAL_METHOD_UNSPECIFIED" : 0;
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                            }
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                object.renewalMethod = options.enums === String ? $root.google.cloud.domains.v1.ManagementSettings.RenewalMethod[message.renewalMethod] === undefined ? message.renewalMethod : $root.google.cloud.domains.v1.ManagementSettings.RenewalMethod[message.renewalMethod] : message.renewalMethod;
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1.TransferLockState[message.transferLockState] : message.transferLockState;
                            return object;
                        };
    
                        /**
                         * Converts this ManagementSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ManagementSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ManagementSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ManagementSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ManagementSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ManagementSettings";
                        };
    
                        /**
                         * RenewalMethod enum.
                         * @name google.cloud.domains.v1.ManagementSettings.RenewalMethod
                         * @enum {number}
                         * @property {number} RENEWAL_METHOD_UNSPECIFIED=0 RENEWAL_METHOD_UNSPECIFIED value
                         * @property {number} AUTOMATIC_RENEWAL=1 AUTOMATIC_RENEWAL value
                         * @property {number} MANUAL_RENEWAL=2 MANUAL_RENEWAL value
                         */
                        ManagementSettings.RenewalMethod = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RENEWAL_METHOD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AUTOMATIC_RENEWAL"] = 1;
                            values[valuesById[2] = "MANUAL_RENEWAL"] = 2;
                            return values;
                        })();
    
                        return ManagementSettings;
                    })();
    
                    v1.DnsSettings = (function() {
    
                        /**
                         * Properties of a DnsSettings.
                         * @memberof google.cloud.domains.v1
                         * @interface IDnsSettings
                         * @property {google.cloud.domains.v1.DnsSettings.ICustomDns|null} [customDns] DnsSettings customDns
                         * @property {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns|null} [googleDomainsDns] DnsSettings googleDomainsDns
                         * @property {Array.<google.cloud.domains.v1.DnsSettings.IGlueRecord>|null} [glueRecords] DnsSettings glueRecords
                         */
    
                        /**
                         * Constructs a new DnsSettings.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a DnsSettings.
                         * @implements IDnsSettings
                         * @constructor
                         * @param {google.cloud.domains.v1.IDnsSettings=} [properties] Properties to set
                         */
                        function DnsSettings(properties) {
                            this.glueRecords = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DnsSettings customDns.
                         * @member {google.cloud.domains.v1.DnsSettings.ICustomDns|null|undefined} customDns
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.customDns = null;
    
                        /**
                         * DnsSettings googleDomainsDns.
                         * @member {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns|null|undefined} googleDomainsDns
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.googleDomainsDns = null;
    
                        /**
                         * DnsSettings glueRecords.
                         * @member {Array.<google.cloud.domains.v1.DnsSettings.IGlueRecord>} glueRecords
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.glueRecords = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DnsSettings dnsProvider.
                         * @member {"customDns"|"googleDomainsDns"|undefined} dnsProvider
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @instance
                         */
                        Object.defineProperty(DnsSettings.prototype, "dnsProvider", {
                            get: $util.oneOfGetter($oneOfFields = ["customDns", "googleDomainsDns"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DnsSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1.IDnsSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.DnsSettings} DnsSettings instance
                         */
                        DnsSettings.create = function create(properties) {
                            return new DnsSettings(properties);
                        };
    
                        /**
                         * Encodes the specified DnsSettings message. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customDns != null && Object.hasOwnProperty.call(message, "customDns"))
                                $root.google.cloud.domains.v1.DnsSettings.CustomDns.encode(message.customDns, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.googleDomainsDns != null && Object.hasOwnProperty.call(message, "googleDomainsDns"))
                                $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.encode(message.googleDomainsDns, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.glueRecords != null && message.glueRecords.length)
                                for (var i = 0; i < message.glueRecords.length; ++i)
                                    $root.google.cloud.domains.v1.DnsSettings.GlueRecord.encode(message.glueRecords[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DnsSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DnsSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customDns = $root.google.cloud.domains.v1.DnsSettings.CustomDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.googleDomainsDns = $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.glueRecords && message.glueRecords.length))
                                            message.glueRecords = [];
                                        message.glueRecords.push($root.google.cloud.domains.v1.DnsSettings.GlueRecord.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DnsSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DnsSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1.DnsSettings.CustomDns.verify(message.customDns);
                                    if (error)
                                        return "customDns." + error;
                                }
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                if (properties.dnsProvider === 1)
                                    return "dnsProvider: multiple values";
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.verify(message.googleDomainsDns);
                                    if (error)
                                        return "googleDomainsDns." + error;
                                }
                            }
                            if (message.glueRecords != null && message.hasOwnProperty("glueRecords")) {
                                if (!Array.isArray(message.glueRecords))
                                    return "glueRecords: array expected";
                                for (var i = 0; i < message.glueRecords.length; ++i) {
                                    var error = $root.google.cloud.domains.v1.DnsSettings.GlueRecord.verify(message.glueRecords[i]);
                                    if (error)
                                        return "glueRecords." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DnsSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.DnsSettings} DnsSettings
                         */
                        DnsSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.DnsSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1.DnsSettings();
                            if (object.customDns != null) {
                                if (typeof object.customDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1.DnsSettings.customDns: object expected");
                                message.customDns = $root.google.cloud.domains.v1.DnsSettings.CustomDns.fromObject(object.customDns);
                            }
                            if (object.googleDomainsDns != null) {
                                if (typeof object.googleDomainsDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1.DnsSettings.googleDomainsDns: object expected");
                                message.googleDomainsDns = $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.fromObject(object.googleDomainsDns);
                            }
                            if (object.glueRecords) {
                                if (!Array.isArray(object.glueRecords))
                                    throw TypeError(".google.cloud.domains.v1.DnsSettings.glueRecords: array expected");
                                message.glueRecords = [];
                                for (var i = 0; i < object.glueRecords.length; ++i) {
                                    if (typeof object.glueRecords[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.glueRecords: object expected");
                                    message.glueRecords[i] = $root.google.cloud.domains.v1.DnsSettings.GlueRecord.fromObject(object.glueRecords[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DnsSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1.DnsSettings} message DnsSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DnsSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.glueRecords = [];
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                object.customDns = $root.google.cloud.domains.v1.DnsSettings.CustomDns.toObject(message.customDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "customDns";
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                object.googleDomainsDns = $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.toObject(message.googleDomainsDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "googleDomainsDns";
                            }
                            if (message.glueRecords && message.glueRecords.length) {
                                object.glueRecords = [];
                                for (var j = 0; j < message.glueRecords.length; ++j)
                                    object.glueRecords[j] = $root.google.cloud.domains.v1.DnsSettings.GlueRecord.toObject(message.glueRecords[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DnsSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DnsSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DnsSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.DnsSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DnsSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.DnsSettings";
                        };
    
                        DnsSettings.CustomDns = (function() {
    
                            /**
                             * Properties of a CustomDns.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @interface ICustomDns
                             * @property {Array.<string>|null} [nameServers] CustomDns nameServers
                             * @property {Array.<google.cloud.domains.v1.DnsSettings.IDsRecord>|null} [dsRecords] CustomDns dsRecords
                             */
    
                            /**
                             * Constructs a new CustomDns.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @classdesc Represents a CustomDns.
                             * @implements ICustomDns
                             * @constructor
                             * @param {google.cloud.domains.v1.DnsSettings.ICustomDns=} [properties] Properties to set
                             */
                            function CustomDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CustomDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * CustomDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new CustomDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.ICustomDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1.DnsSettings.CustomDns} CustomDns instance
                             */
                            CustomDns.create = function create(properties) {
                                return new CustomDns(properties);
                            };
    
                            /**
                             * Encodes the specified CustomDns message. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CustomDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DnsSettings.CustomDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CustomDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CustomDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CustomDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1.DnsSettings.CustomDns} CustomDns
                             */
                            CustomDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1.DnsSettings.CustomDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1.DnsSettings.CustomDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.CustomDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.CustomDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1.DnsSettings.CustomDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CustomDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.CustomDns} message CustomDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CustomDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CustomDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CustomDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CustomDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1.DnsSettings.CustomDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CustomDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1.DnsSettings.CustomDns";
                            };
    
                            return CustomDns;
                        })();
    
                        DnsSettings.GoogleDomainsDns = (function() {
    
                            /**
                             * Properties of a GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @interface IGoogleDomainsDns
                             * @property {Array.<string>|null} [nameServers] GoogleDomainsDns nameServers
                             * @property {google.cloud.domains.v1.DnsSettings.DsState|null} [dsState] GoogleDomainsDns dsState
                             * @property {Array.<google.cloud.domains.v1.DnsSettings.IDsRecord>|null} [dsRecords] GoogleDomainsDns dsRecords
                             */
    
                            /**
                             * Constructs a new GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @classdesc Represents a GoogleDomainsDns.
                             * @implements IGoogleDomainsDns
                             * @constructor
                             * @param {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             */
                            function GoogleDomainsDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GoogleDomainsDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * GoogleDomainsDns dsState.
                             * @member {google.cloud.domains.v1.DnsSettings.DsState} dsState
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsState = 0;
    
                            /**
                             * GoogleDomainsDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new GoogleDomainsDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns instance
                             */
                            GoogleDomainsDns.create = function create(properties) {
                                return new GoogleDomainsDns(properties);
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsState != null && Object.hasOwnProperty.call(message, "dsState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dsState);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.dsState = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GoogleDomainsDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GoogleDomainsDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    switch (message.dsState) {
                                    default:
                                        return "dsState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GoogleDomainsDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             */
                            GoogleDomainsDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1.DnsSettings.GoogleDomainsDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                switch (object.dsState) {
                                default:
                                    if (typeof object.dsState === "number") {
                                        message.dsState = object.dsState;
                                        break;
                                    }
                                    break;
                                case "DS_STATE_UNSPECIFIED":
                                case 0:
                                    message.dsState = 0;
                                    break;
                                case "DS_RECORDS_UNPUBLISHED":
                                case 1:
                                    message.dsState = 1;
                                    break;
                                case "DS_RECORDS_PUBLISHED":
                                case 2:
                                    message.dsState = 2;
                                    break;
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1.DnsSettings.GoogleDomainsDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GoogleDomainsDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.GoogleDomainsDns} message GoogleDomainsDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GoogleDomainsDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (options.defaults)
                                    object.dsState = options.enums === String ? "DS_STATE_UNSPECIFIED" : 0;
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    object.dsState = options.enums === String ? $root.google.cloud.domains.v1.DnsSettings.DsState[message.dsState] === undefined ? message.dsState : $root.google.cloud.domains.v1.DnsSettings.DsState[message.dsState] : message.dsState;
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GoogleDomainsDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GoogleDomainsDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GoogleDomainsDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GoogleDomainsDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1.DnsSettings.GoogleDomainsDns";
                            };
    
                            return GoogleDomainsDns;
                        })();
    
                        DnsSettings.DsRecord = (function() {
    
                            /**
                             * Properties of a DsRecord.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @interface IDsRecord
                             * @property {number|null} [keyTag] DsRecord keyTag
                             * @property {google.cloud.domains.v1.DnsSettings.DsRecord.Algorithm|null} [algorithm] DsRecord algorithm
                             * @property {google.cloud.domains.v1.DnsSettings.DsRecord.DigestType|null} [digestType] DsRecord digestType
                             * @property {string|null} [digest] DsRecord digest
                             */
    
                            /**
                             * Constructs a new DsRecord.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @classdesc Represents a DsRecord.
                             * @implements IDsRecord
                             * @constructor
                             * @param {google.cloud.domains.v1.DnsSettings.IDsRecord=} [properties] Properties to set
                             */
                            function DsRecord(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DsRecord keyTag.
                             * @member {number} keyTag
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.keyTag = 0;
    
                            /**
                             * DsRecord algorithm.
                             * @member {google.cloud.domains.v1.DnsSettings.DsRecord.Algorithm} algorithm
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.algorithm = 0;
    
                            /**
                             * DsRecord digestType.
                             * @member {google.cloud.domains.v1.DnsSettings.DsRecord.DigestType} digestType
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digestType = 0;
    
                            /**
                             * DsRecord digest.
                             * @member {string} digest
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digest = "";
    
                            /**
                             * Creates a new DsRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IDsRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1.DnsSettings.DsRecord} DsRecord instance
                             */
                            DsRecord.create = function create(properties) {
                                return new DsRecord(properties);
                            };
    
                            /**
                             * Encodes the specified DsRecord message. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.keyTag != null && Object.hasOwnProperty.call(message, "keyTag"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keyTag);
                                if (message.algorithm != null && Object.hasOwnProperty.call(message, "algorithm"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.algorithm);
                                if (message.digestType != null && Object.hasOwnProperty.call(message, "digestType"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.digestType);
                                if (message.digest != null && Object.hasOwnProperty.call(message, "digest"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.digest);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DsRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DnsSettings.DsRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.keyTag = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.algorithm = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.digestType = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.digest = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DsRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DsRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    if (!$util.isInteger(message.keyTag))
                                        return "keyTag: integer expected";
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    switch (message.algorithm) {
                                    default:
                                        return "algorithm: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 10:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                    case 16:
                                    case 252:
                                    case 253:
                                    case 254:
                                        break;
                                    }
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    switch (message.digestType) {
                                    default:
                                        return "digestType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    if (!$util.isString(message.digest))
                                        return "digest: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DsRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1.DnsSettings.DsRecord} DsRecord
                             */
                            DsRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1.DnsSettings.DsRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1.DnsSettings.DsRecord();
                                if (object.keyTag != null)
                                    message.keyTag = object.keyTag | 0;
                                switch (object.algorithm) {
                                default:
                                    if (typeof object.algorithm === "number") {
                                        message.algorithm = object.algorithm;
                                        break;
                                    }
                                    break;
                                case "ALGORITHM_UNSPECIFIED":
                                case 0:
                                    message.algorithm = 0;
                                    break;
                                case "RSAMD5":
                                case 1:
                                    message.algorithm = 1;
                                    break;
                                case "DH":
                                case 2:
                                    message.algorithm = 2;
                                    break;
                                case "DSA":
                                case 3:
                                    message.algorithm = 3;
                                    break;
                                case "ECC":
                                case 4:
                                    message.algorithm = 4;
                                    break;
                                case "RSASHA1":
                                case 5:
                                    message.algorithm = 5;
                                    break;
                                case "DSANSEC3SHA1":
                                case 6:
                                    message.algorithm = 6;
                                    break;
                                case "RSASHA1NSEC3SHA1":
                                case 7:
                                    message.algorithm = 7;
                                    break;
                                case "RSASHA256":
                                case 8:
                                    message.algorithm = 8;
                                    break;
                                case "RSASHA512":
                                case 10:
                                    message.algorithm = 10;
                                    break;
                                case "ECCGOST":
                                case 12:
                                    message.algorithm = 12;
                                    break;
                                case "ECDSAP256SHA256":
                                case 13:
                                    message.algorithm = 13;
                                    break;
                                case "ECDSAP384SHA384":
                                case 14:
                                    message.algorithm = 14;
                                    break;
                                case "ED25519":
                                case 15:
                                    message.algorithm = 15;
                                    break;
                                case "ED448":
                                case 16:
                                    message.algorithm = 16;
                                    break;
                                case "INDIRECT":
                                case 252:
                                    message.algorithm = 252;
                                    break;
                                case "PRIVATEDNS":
                                case 253:
                                    message.algorithm = 253;
                                    break;
                                case "PRIVATEOID":
                                case 254:
                                    message.algorithm = 254;
                                    break;
                                }
                                switch (object.digestType) {
                                default:
                                    if (typeof object.digestType === "number") {
                                        message.digestType = object.digestType;
                                        break;
                                    }
                                    break;
                                case "DIGEST_TYPE_UNSPECIFIED":
                                case 0:
                                    message.digestType = 0;
                                    break;
                                case "SHA1":
                                case 1:
                                    message.digestType = 1;
                                    break;
                                case "SHA256":
                                case 2:
                                    message.digestType = 2;
                                    break;
                                case "GOST3411":
                                case 3:
                                    message.digestType = 3;
                                    break;
                                case "SHA384":
                                case 4:
                                    message.digestType = 4;
                                    break;
                                }
                                if (object.digest != null)
                                    message.digest = String(object.digest);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DsRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.DsRecord} message DsRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DsRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.keyTag = 0;
                                    object.algorithm = options.enums === String ? "ALGORITHM_UNSPECIFIED" : 0;
                                    object.digestType = options.enums === String ? "DIGEST_TYPE_UNSPECIFIED" : 0;
                                    object.digest = "";
                                }
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    object.keyTag = message.keyTag;
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    object.algorithm = options.enums === String ? $root.google.cloud.domains.v1.DnsSettings.DsRecord.Algorithm[message.algorithm] === undefined ? message.algorithm : $root.google.cloud.domains.v1.DnsSettings.DsRecord.Algorithm[message.algorithm] : message.algorithm;
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    object.digestType = options.enums === String ? $root.google.cloud.domains.v1.DnsSettings.DsRecord.DigestType[message.digestType] === undefined ? message.digestType : $root.google.cloud.domains.v1.DnsSettings.DsRecord.DigestType[message.digestType] : message.digestType;
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    object.digest = message.digest;
                                return object;
                            };
    
                            /**
                             * Converts this DsRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DsRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DsRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1.DnsSettings.DsRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DsRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1.DnsSettings.DsRecord";
                            };
    
                            /**
                             * Algorithm enum.
                             * @name google.cloud.domains.v1.DnsSettings.DsRecord.Algorithm
                             * @enum {number}
                             * @property {number} ALGORITHM_UNSPECIFIED=0 ALGORITHM_UNSPECIFIED value
                             * @property {number} RSAMD5=1 RSAMD5 value
                             * @property {number} DH=2 DH value
                             * @property {number} DSA=3 DSA value
                             * @property {number} ECC=4 ECC value
                             * @property {number} RSASHA1=5 RSASHA1 value
                             * @property {number} DSANSEC3SHA1=6 DSANSEC3SHA1 value
                             * @property {number} RSASHA1NSEC3SHA1=7 RSASHA1NSEC3SHA1 value
                             * @property {number} RSASHA256=8 RSASHA256 value
                             * @property {number} RSASHA512=10 RSASHA512 value
                             * @property {number} ECCGOST=12 ECCGOST value
                             * @property {number} ECDSAP256SHA256=13 ECDSAP256SHA256 value
                             * @property {number} ECDSAP384SHA384=14 ECDSAP384SHA384 value
                             * @property {number} ED25519=15 ED25519 value
                             * @property {number} ED448=16 ED448 value
                             * @property {number} INDIRECT=252 INDIRECT value
                             * @property {number} PRIVATEDNS=253 PRIVATEDNS value
                             * @property {number} PRIVATEOID=254 PRIVATEOID value
                             */
                            DsRecord.Algorithm = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ALGORITHM_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RSAMD5"] = 1;
                                values[valuesById[2] = "DH"] = 2;
                                values[valuesById[3] = "DSA"] = 3;
                                values[valuesById[4] = "ECC"] = 4;
                                values[valuesById[5] = "RSASHA1"] = 5;
                                values[valuesById[6] = "DSANSEC3SHA1"] = 6;
                                values[valuesById[7] = "RSASHA1NSEC3SHA1"] = 7;
                                values[valuesById[8] = "RSASHA256"] = 8;
                                values[valuesById[10] = "RSASHA512"] = 10;
                                values[valuesById[12] = "ECCGOST"] = 12;
                                values[valuesById[13] = "ECDSAP256SHA256"] = 13;
                                values[valuesById[14] = "ECDSAP384SHA384"] = 14;
                                values[valuesById[15] = "ED25519"] = 15;
                                values[valuesById[16] = "ED448"] = 16;
                                values[valuesById[252] = "INDIRECT"] = 252;
                                values[valuesById[253] = "PRIVATEDNS"] = 253;
                                values[valuesById[254] = "PRIVATEOID"] = 254;
                                return values;
                            })();
    
                            /**
                             * DigestType enum.
                             * @name google.cloud.domains.v1.DnsSettings.DsRecord.DigestType
                             * @enum {number}
                             * @property {number} DIGEST_TYPE_UNSPECIFIED=0 DIGEST_TYPE_UNSPECIFIED value
                             * @property {number} SHA1=1 SHA1 value
                             * @property {number} SHA256=2 SHA256 value
                             * @property {number} GOST3411=3 GOST3411 value
                             * @property {number} SHA384=4 SHA384 value
                             */
                            DsRecord.DigestType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DIGEST_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SHA1"] = 1;
                                values[valuesById[2] = "SHA256"] = 2;
                                values[valuesById[3] = "GOST3411"] = 3;
                                values[valuesById[4] = "SHA384"] = 4;
                                return values;
                            })();
    
                            return DsRecord;
                        })();
    
                        DnsSettings.GlueRecord = (function() {
    
                            /**
                             * Properties of a GlueRecord.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @interface IGlueRecord
                             * @property {string|null} [hostName] GlueRecord hostName
                             * @property {Array.<string>|null} [ipv4Addresses] GlueRecord ipv4Addresses
                             * @property {Array.<string>|null} [ipv6Addresses] GlueRecord ipv6Addresses
                             */
    
                            /**
                             * Constructs a new GlueRecord.
                             * @memberof google.cloud.domains.v1.DnsSettings
                             * @classdesc Represents a GlueRecord.
                             * @implements IGlueRecord
                             * @constructor
                             * @param {google.cloud.domains.v1.DnsSettings.IGlueRecord=} [properties] Properties to set
                             */
                            function GlueRecord(properties) {
                                this.ipv4Addresses = [];
                                this.ipv6Addresses = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GlueRecord hostName.
                             * @member {string} hostName
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.hostName = "";
    
                            /**
                             * GlueRecord ipv4Addresses.
                             * @member {Array.<string>} ipv4Addresses
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv4Addresses = $util.emptyArray;
    
                            /**
                             * GlueRecord ipv6Addresses.
                             * @member {Array.<string>} ipv6Addresses
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv6Addresses = $util.emptyArray;
    
                            /**
                             * Creates a new GlueRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGlueRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1.DnsSettings.GlueRecord} GlueRecord instance
                             */
                            GlueRecord.create = function create(properties) {
                                return new GlueRecord(properties);
                            };
    
                            /**
                             * Encodes the specified GlueRecord message. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hostName != null && Object.hasOwnProperty.call(message, "hostName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostName);
                                if (message.ipv4Addresses != null && message.ipv4Addresses.length)
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.ipv4Addresses[i]);
                                if (message.ipv6Addresses != null && message.ipv6Addresses.length)
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.ipv6Addresses[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GlueRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DnsSettings.GlueRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.hostName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.ipv4Addresses && message.ipv4Addresses.length))
                                                message.ipv4Addresses = [];
                                            message.ipv4Addresses.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.ipv6Addresses && message.ipv6Addresses.length))
                                                message.ipv6Addresses = [];
                                            message.ipv6Addresses.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GlueRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GlueRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    if (!$util.isString(message.hostName))
                                        return "hostName: string expected";
                                if (message.ipv4Addresses != null && message.hasOwnProperty("ipv4Addresses")) {
                                    if (!Array.isArray(message.ipv4Addresses))
                                        return "ipv4Addresses: array expected";
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        if (!$util.isString(message.ipv4Addresses[i]))
                                            return "ipv4Addresses: string[] expected";
                                }
                                if (message.ipv6Addresses != null && message.hasOwnProperty("ipv6Addresses")) {
                                    if (!Array.isArray(message.ipv6Addresses))
                                        return "ipv6Addresses: array expected";
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        if (!$util.isString(message.ipv6Addresses[i]))
                                            return "ipv6Addresses: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GlueRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1.DnsSettings.GlueRecord} GlueRecord
                             */
                            GlueRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1.DnsSettings.GlueRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1.DnsSettings.GlueRecord();
                                if (object.hostName != null)
                                    message.hostName = String(object.hostName);
                                if (object.ipv4Addresses) {
                                    if (!Array.isArray(object.ipv4Addresses))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.GlueRecord.ipv4Addresses: array expected");
                                    message.ipv4Addresses = [];
                                    for (var i = 0; i < object.ipv4Addresses.length; ++i)
                                        message.ipv4Addresses[i] = String(object.ipv4Addresses[i]);
                                }
                                if (object.ipv6Addresses) {
                                    if (!Array.isArray(object.ipv6Addresses))
                                        throw TypeError(".google.cloud.domains.v1.DnsSettings.GlueRecord.ipv6Addresses: array expected");
                                    message.ipv6Addresses = [];
                                    for (var i = 0; i < object.ipv6Addresses.length; ++i)
                                        message.ipv6Addresses[i] = String(object.ipv6Addresses[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GlueRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1.DnsSettings.GlueRecord} message GlueRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GlueRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.ipv4Addresses = [];
                                    object.ipv6Addresses = [];
                                }
                                if (options.defaults)
                                    object.hostName = "";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    object.hostName = message.hostName;
                                if (message.ipv4Addresses && message.ipv4Addresses.length) {
                                    object.ipv4Addresses = [];
                                    for (var j = 0; j < message.ipv4Addresses.length; ++j)
                                        object.ipv4Addresses[j] = message.ipv4Addresses[j];
                                }
                                if (message.ipv6Addresses && message.ipv6Addresses.length) {
                                    object.ipv6Addresses = [];
                                    for (var j = 0; j < message.ipv6Addresses.length; ++j)
                                        object.ipv6Addresses[j] = message.ipv6Addresses[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GlueRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GlueRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GlueRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1.DnsSettings.GlueRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GlueRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1.DnsSettings.GlueRecord";
                            };
    
                            return GlueRecord;
                        })();
    
                        /**
                         * DsState enum.
                         * @name google.cloud.domains.v1.DnsSettings.DsState
                         * @enum {number}
                         * @property {number} DS_STATE_UNSPECIFIED=0 DS_STATE_UNSPECIFIED value
                         * @property {number} DS_RECORDS_UNPUBLISHED=1 DS_RECORDS_UNPUBLISHED value
                         * @property {number} DS_RECORDS_PUBLISHED=2 DS_RECORDS_PUBLISHED value
                         */
                        DnsSettings.DsState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DS_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DS_RECORDS_UNPUBLISHED"] = 1;
                            values[valuesById[2] = "DS_RECORDS_PUBLISHED"] = 2;
                            return values;
                        })();
    
                        return DnsSettings;
                    })();
    
                    v1.ContactSettings = (function() {
    
                        /**
                         * Properties of a ContactSettings.
                         * @memberof google.cloud.domains.v1
                         * @interface IContactSettings
                         * @property {google.cloud.domains.v1.ContactPrivacy|null} [privacy] ContactSettings privacy
                         * @property {google.cloud.domains.v1.ContactSettings.IContact|null} [registrantContact] ContactSettings registrantContact
                         * @property {google.cloud.domains.v1.ContactSettings.IContact|null} [adminContact] ContactSettings adminContact
                         * @property {google.cloud.domains.v1.ContactSettings.IContact|null} [technicalContact] ContactSettings technicalContact
                         */
    
                        /**
                         * Constructs a new ContactSettings.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ContactSettings.
                         * @implements IContactSettings
                         * @constructor
                         * @param {google.cloud.domains.v1.IContactSettings=} [properties] Properties to set
                         */
                        function ContactSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContactSettings privacy.
                         * @member {google.cloud.domains.v1.ContactPrivacy} privacy
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.privacy = 0;
    
                        /**
                         * ContactSettings registrantContact.
                         * @member {google.cloud.domains.v1.ContactSettings.IContact|null|undefined} registrantContact
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.registrantContact = null;
    
                        /**
                         * ContactSettings adminContact.
                         * @member {google.cloud.domains.v1.ContactSettings.IContact|null|undefined} adminContact
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.adminContact = null;
    
                        /**
                         * ContactSettings technicalContact.
                         * @member {google.cloud.domains.v1.ContactSettings.IContact|null|undefined} technicalContact
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.technicalContact = null;
    
                        /**
                         * Creates a new ContactSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1.IContactSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ContactSettings} ContactSettings instance
                         */
                        ContactSettings.create = function create(properties) {
                            return new ContactSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ContactSettings message. Does not implicitly {@link google.cloud.domains.v1.ContactSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privacy != null && Object.hasOwnProperty.call(message, "privacy"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.privacy);
                            if (message.registrantContact != null && Object.hasOwnProperty.call(message, "registrantContact"))
                                $root.google.cloud.domains.v1.ContactSettings.Contact.encode(message.registrantContact, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.adminContact != null && Object.hasOwnProperty.call(message, "adminContact"))
                                $root.google.cloud.domains.v1.ContactSettings.Contact.encode(message.adminContact, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.technicalContact != null && Object.hasOwnProperty.call(message, "technicalContact"))
                                $root.google.cloud.domains.v1.ContactSettings.Contact.encode(message.technicalContact, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContactSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ContactSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ContactSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privacy = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.registrantContact = $root.google.cloud.domains.v1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.adminContact = $root.google.cloud.domains.v1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.technicalContact = $root.google.cloud.domains.v1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContactSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContactSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                switch (message.privacy) {
                                default:
                                    return "privacy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.Contact.verify(message.registrantContact);
                                if (error)
                                    return "registrantContact." + error;
                            }
                            if (message.adminContact != null && message.hasOwnProperty("adminContact")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.Contact.verify(message.adminContact);
                                if (error)
                                    return "adminContact." + error;
                            }
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.Contact.verify(message.technicalContact);
                                if (error)
                                    return "technicalContact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContactSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ContactSettings} ContactSettings
                         */
                        ContactSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ContactSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ContactSettings();
                            switch (object.privacy) {
                            default:
                                if (typeof object.privacy === "number") {
                                    message.privacy = object.privacy;
                                    break;
                                }
                                break;
                            case "CONTACT_PRIVACY_UNSPECIFIED":
                            case 0:
                                message.privacy = 0;
                                break;
                            case "PUBLIC_CONTACT_DATA":
                            case 1:
                                message.privacy = 1;
                                break;
                            case "PRIVATE_CONTACT_DATA":
                            case 2:
                                message.privacy = 2;
                                break;
                            case "REDACTED_CONTACT_DATA":
                            case 3:
                                message.privacy = 3;
                                break;
                            }
                            if (object.registrantContact != null) {
                                if (typeof object.registrantContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ContactSettings.registrantContact: object expected");
                                message.registrantContact = $root.google.cloud.domains.v1.ContactSettings.Contact.fromObject(object.registrantContact);
                            }
                            if (object.adminContact != null) {
                                if (typeof object.adminContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ContactSettings.adminContact: object expected");
                                message.adminContact = $root.google.cloud.domains.v1.ContactSettings.Contact.fromObject(object.adminContact);
                            }
                            if (object.technicalContact != null) {
                                if (typeof object.technicalContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ContactSettings.technicalContact: object expected");
                                message.technicalContact = $root.google.cloud.domains.v1.ContactSettings.Contact.fromObject(object.technicalContact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContactSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1.ContactSettings} message ContactSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContactSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privacy = options.enums === String ? "CONTACT_PRIVACY_UNSPECIFIED" : 0;
                                object.registrantContact = null;
                                object.adminContact = null;
                                object.technicalContact = null;
                            }
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                object.privacy = options.enums === String ? $root.google.cloud.domains.v1.ContactPrivacy[message.privacy] === undefined ? message.privacy : $root.google.cloud.domains.v1.ContactPrivacy[message.privacy] : message.privacy;
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact"))
                                object.registrantContact = $root.google.cloud.domains.v1.ContactSettings.Contact.toObject(message.registrantContact, options);
                            if (message.adminContact != null && message.hasOwnProperty("adminContact"))
                                object.adminContact = $root.google.cloud.domains.v1.ContactSettings.Contact.toObject(message.adminContact, options);
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact"))
                                object.technicalContact = $root.google.cloud.domains.v1.ContactSettings.Contact.toObject(message.technicalContact, options);
                            return object;
                        };
    
                        /**
                         * Converts this ContactSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContactSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContactSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ContactSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContactSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ContactSettings";
                        };
    
                        ContactSettings.Contact = (function() {
    
                            /**
                             * Properties of a Contact.
                             * @memberof google.cloud.domains.v1.ContactSettings
                             * @interface IContact
                             * @property {google.type.IPostalAddress|null} [postalAddress] Contact postalAddress
                             * @property {string|null} [email] Contact email
                             * @property {string|null} [phoneNumber] Contact phoneNumber
                             * @property {string|null} [faxNumber] Contact faxNumber
                             */
    
                            /**
                             * Constructs a new Contact.
                             * @memberof google.cloud.domains.v1.ContactSettings
                             * @classdesc Represents a Contact.
                             * @implements IContact
                             * @constructor
                             * @param {google.cloud.domains.v1.ContactSettings.IContact=} [properties] Properties to set
                             */
                            function Contact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Contact postalAddress.
                             * @member {google.type.IPostalAddress|null|undefined} postalAddress
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.postalAddress = null;
    
                            /**
                             * Contact email.
                             * @member {string} email
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.email = "";
    
                            /**
                             * Contact phoneNumber.
                             * @member {string} phoneNumber
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.phoneNumber = "";
    
                            /**
                             * Contact faxNumber.
                             * @member {string} faxNumber
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.faxNumber = "";
    
                            /**
                             * Creates a new Contact instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1.ContactSettings.IContact=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1.ContactSettings.Contact} Contact instance
                             */
                            Contact.create = function create(properties) {
                                return new Contact(properties);
                            };
    
                            /**
                             * Encodes the specified Contact message. Does not implicitly {@link google.cloud.domains.v1.ContactSettings.Contact.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.postalAddress != null && Object.hasOwnProperty.call(message, "postalAddress"))
                                    $root.google.type.PostalAddress.encode(message.postalAddress, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                                if (message.phoneNumber != null && Object.hasOwnProperty.call(message, "phoneNumber"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.phoneNumber);
                                if (message.faxNumber != null && Object.hasOwnProperty.call(message, "faxNumber"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.faxNumber);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Contact message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ContactSettings.Contact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ContactSettings.Contact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.postalAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.email = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.phoneNumber = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.faxNumber = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Contact message.
                             * @function verify
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Contact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress")) {
                                    var error = $root.google.type.PostalAddress.verify(message.postalAddress);
                                    if (error)
                                        return "postalAddress." + error;
                                }
                                if (message.email != null && message.hasOwnProperty("email"))
                                    if (!$util.isString(message.email))
                                        return "email: string expected";
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    if (!$util.isString(message.phoneNumber))
                                        return "phoneNumber: string expected";
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    if (!$util.isString(message.faxNumber))
                                        return "faxNumber: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Contact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1.ContactSettings.Contact} Contact
                             */
                            Contact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1.ContactSettings.Contact)
                                    return object;
                                var message = new $root.google.cloud.domains.v1.ContactSettings.Contact();
                                if (object.postalAddress != null) {
                                    if (typeof object.postalAddress !== "object")
                                        throw TypeError(".google.cloud.domains.v1.ContactSettings.Contact.postalAddress: object expected");
                                    message.postalAddress = $root.google.type.PostalAddress.fromObject(object.postalAddress);
                                }
                                if (object.email != null)
                                    message.email = String(object.email);
                                if (object.phoneNumber != null)
                                    message.phoneNumber = String(object.phoneNumber);
                                if (object.faxNumber != null)
                                    message.faxNumber = String(object.faxNumber);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Contact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1.ContactSettings.Contact} message Contact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Contact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.postalAddress = null;
                                    object.email = "";
                                    object.phoneNumber = "";
                                    object.faxNumber = "";
                                }
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress"))
                                    object.postalAddress = $root.google.type.PostalAddress.toObject(message.postalAddress, options);
                                if (message.email != null && message.hasOwnProperty("email"))
                                    object.email = message.email;
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    object.phoneNumber = message.phoneNumber;
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    object.faxNumber = message.faxNumber;
                                return object;
                            };
    
                            /**
                             * Converts this Contact to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Contact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Contact
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1.ContactSettings.Contact
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Contact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1.ContactSettings.Contact";
                            };
    
                            return Contact;
                        })();
    
                        return ContactSettings;
                    })();
    
                    v1.SearchDomainsRequest = (function() {
    
                        /**
                         * Properties of a SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface ISearchDomainsRequest
                         * @property {string|null} [query] SearchDomainsRequest query
                         * @property {string|null} [location] SearchDomainsRequest location
                         */
    
                        /**
                         * Constructs a new SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a SearchDomainsRequest.
                         * @implements ISearchDomainsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest=} [properties] Properties to set
                         */
                        function SearchDomainsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsRequest query.
                         * @member {string} query
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.query = "";
    
                        /**
                         * SearchDomainsRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.location = "";
    
                        /**
                         * Creates a new SearchDomainsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.SearchDomainsRequest} SearchDomainsRequest instance
                         */
                        SearchDomainsRequest.create = function create(properties) {
                            return new SearchDomainsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message. Does not implicitly {@link google.cloud.domains.v1.SearchDomainsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.SearchDomainsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.SearchDomainsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.SearchDomainsRequest} SearchDomainsRequest
                         */
                        SearchDomainsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.SearchDomainsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.SearchDomainsRequest();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1.SearchDomainsRequest} message SearchDomainsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.query = "";
                                object.location = "";
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.SearchDomainsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.SearchDomainsRequest";
                        };
    
                        return SearchDomainsRequest;
                    })();
    
                    v1.SearchDomainsResponse = (function() {
    
                        /**
                         * Properties of a SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1
                         * @interface ISearchDomainsResponse
                         * @property {Array.<google.cloud.domains.v1.IRegisterParameters>|null} [registerParameters] SearchDomainsResponse registerParameters
                         */
    
                        /**
                         * Constructs a new SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a SearchDomainsResponse.
                         * @implements ISearchDomainsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1.ISearchDomainsResponse=} [properties] Properties to set
                         */
                        function SearchDomainsResponse(properties) {
                            this.registerParameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsResponse registerParameters.
                         * @member {Array.<google.cloud.domains.v1.IRegisterParameters>} registerParameters
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @instance
                         */
                        SearchDomainsResponse.prototype.registerParameters = $util.emptyArray;
    
                        /**
                         * Creates a new SearchDomainsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.SearchDomainsResponse} SearchDomainsResponse instance
                         */
                        SearchDomainsResponse.create = function create(properties) {
                            return new SearchDomainsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message. Does not implicitly {@link google.cloud.domains.v1.SearchDomainsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && message.registerParameters.length)
                                for (var i = 0; i < message.registerParameters.length; ++i)
                                    $root.google.cloud.domains.v1.RegisterParameters.encode(message.registerParameters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1.SearchDomainsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.SearchDomainsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registerParameters && message.registerParameters.length))
                                            message.registerParameters = [];
                                        message.registerParameters.push($root.google.cloud.domains.v1.RegisterParameters.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                if (!Array.isArray(message.registerParameters))
                                    return "registerParameters: array expected";
                                for (var i = 0; i < message.registerParameters.length; ++i) {
                                    var error = $root.google.cloud.domains.v1.RegisterParameters.verify(message.registerParameters[i]);
                                    if (error)
                                        return "registerParameters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.SearchDomainsResponse} SearchDomainsResponse
                         */
                        SearchDomainsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.SearchDomainsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1.SearchDomainsResponse();
                            if (object.registerParameters) {
                                if (!Array.isArray(object.registerParameters))
                                    throw TypeError(".google.cloud.domains.v1.SearchDomainsResponse.registerParameters: array expected");
                                message.registerParameters = [];
                                for (var i = 0; i < object.registerParameters.length; ++i) {
                                    if (typeof object.registerParameters[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1.SearchDomainsResponse.registerParameters: object expected");
                                    message.registerParameters[i] = $root.google.cloud.domains.v1.RegisterParameters.fromObject(object.registerParameters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1.SearchDomainsResponse} message SearchDomainsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registerParameters = [];
                            if (message.registerParameters && message.registerParameters.length) {
                                object.registerParameters = [];
                                for (var j = 0; j < message.registerParameters.length; ++j)
                                    object.registerParameters[j] = $root.google.cloud.domains.v1.RegisterParameters.toObject(message.registerParameters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.SearchDomainsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.SearchDomainsResponse";
                        };
    
                        return SearchDomainsResponse;
                    })();
    
                    v1.RetrieveRegisterParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IRetrieveRegisterParametersRequest
                         * @property {string|null} [domainName] RetrieveRegisterParametersRequest domainName
                         * @property {string|null} [location] RetrieveRegisterParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RetrieveRegisterParametersRequest.
                         * @implements IRetrieveRegisterParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveRegisterParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveRegisterParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest instance
                         */
                        RetrieveRegisterParametersRequest.create = function create(properties) {
                            return new RetrieveRegisterParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message. Does not implicitly {@link google.cloud.domains.v1.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RetrieveRegisterParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         */
                        RetrieveRegisterParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RetrieveRegisterParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RetrieveRegisterParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.RetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RetrieveRegisterParametersRequest";
                        };
    
                        return RetrieveRegisterParametersRequest;
                    })();
    
                    v1.RetrieveRegisterParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1
                         * @interface IRetrieveRegisterParametersResponse
                         * @property {google.cloud.domains.v1.IRegisterParameters|null} [registerParameters] RetrieveRegisterParametersResponse registerParameters
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RetrieveRegisterParametersResponse.
                         * @implements IRetrieveRegisterParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersResponse registerParameters.
                         * @member {google.cloud.domains.v1.IRegisterParameters|null|undefined} registerParameters
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @instance
                         */
                        RetrieveRegisterParametersResponse.prototype.registerParameters = null;
    
                        /**
                         * Creates a new RetrieveRegisterParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse instance
                         */
                        RetrieveRegisterParametersResponse.create = function create(properties) {
                            return new RetrieveRegisterParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message. Does not implicitly {@link google.cloud.domains.v1.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && Object.hasOwnProperty.call(message, "registerParameters"))
                                $root.google.cloud.domains.v1.RegisterParameters.encode(message.registerParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RetrieveRegisterParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registerParameters = $root.google.cloud.domains.v1.RegisterParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                var error = $root.google.cloud.domains.v1.RegisterParameters.verify(message.registerParameters);
                                if (error)
                                    return "registerParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         */
                        RetrieveRegisterParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RetrieveRegisterParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RetrieveRegisterParametersResponse();
                            if (object.registerParameters != null) {
                                if (typeof object.registerParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1.RetrieveRegisterParametersResponse.registerParameters: object expected");
                                message.registerParameters = $root.google.cloud.domains.v1.RegisterParameters.fromObject(object.registerParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.RetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registerParameters = null;
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters"))
                                object.registerParameters = $root.google.cloud.domains.v1.RegisterParameters.toObject(message.registerParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RetrieveRegisterParametersResponse";
                        };
    
                        return RetrieveRegisterParametersResponse;
                    })();
    
                    v1.RegisterDomainRequest = (function() {
    
                        /**
                         * Properties of a RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IRegisterDomainRequest
                         * @property {string|null} [parent] RegisterDomainRequest parent
                         * @property {google.cloud.domains.v1.IRegistration|null} [registration] RegisterDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1.DomainNotice>|null} [domainNotices] RegisterDomainRequest domainNotices
                         * @property {Array.<google.cloud.domains.v1.ContactNotice>|null} [contactNotices] RegisterDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterDomainRequest yearlyPrice
                         * @property {boolean|null} [validateOnly] RegisterDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RegisterDomainRequest.
                         * @implements IRegisterDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest=} [properties] Properties to set
                         */
                        function RegisterDomainRequest(properties) {
                            this.domainNotices = [];
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.parent = "";
    
                        /**
                         * RegisterDomainRequest registration.
                         * @member {google.cloud.domains.v1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.registration = null;
    
                        /**
                         * RegisterDomainRequest domainNotices.
                         * @member {Array.<google.cloud.domains.v1.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * RegisterDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new RegisterDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RegisterDomainRequest} RegisterDomainRequest instance
                         */
                        RegisterDomainRequest.create = function create(properties) {
                            return new RegisterDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message. Does not implicitly {@link google.cloud.domains.v1.RegisterDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RegisterDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RegisterDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RegisterDomainRequest} RegisterDomainRequest
                         */
                        RegisterDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RegisterDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RegisterDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1.RegisterDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1.Registration.fromObject(object.registration);
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1.RegisterDomainRequest.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1.RegisterDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1.RegisterDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.RegisterDomainRequest} message RegisterDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.domainNotices = [];
                                object.contactNotices = [];
                            }
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1.Registration.toObject(message.registration, options);
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RegisterDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RegisterDomainRequest";
                        };
    
                        return RegisterDomainRequest;
                    })();
    
                    v1.RetrieveTransferParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IRetrieveTransferParametersRequest
                         * @property {string|null} [domainName] RetrieveTransferParametersRequest domainName
                         * @property {string|null} [location] RetrieveTransferParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RetrieveTransferParametersRequest.
                         * @implements IRetrieveTransferParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveTransferParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveTransferParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest instance
                         */
                        RetrieveTransferParametersRequest.create = function create(properties) {
                            return new RetrieveTransferParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message. Does not implicitly {@link google.cloud.domains.v1.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RetrieveTransferParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         */
                        RetrieveTransferParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RetrieveTransferParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RetrieveTransferParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1.RetrieveTransferParametersRequest} message RetrieveTransferParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RetrieveTransferParametersRequest";
                        };
    
                        return RetrieveTransferParametersRequest;
                    })();
    
                    v1.RetrieveTransferParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1
                         * @interface IRetrieveTransferParametersResponse
                         * @property {google.cloud.domains.v1.ITransferParameters|null} [transferParameters] RetrieveTransferParametersResponse transferParameters
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RetrieveTransferParametersResponse.
                         * @implements IRetrieveTransferParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersResponse transferParameters.
                         * @member {google.cloud.domains.v1.ITransferParameters|null|undefined} transferParameters
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @instance
                         */
                        RetrieveTransferParametersResponse.prototype.transferParameters = null;
    
                        /**
                         * Creates a new RetrieveTransferParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse instance
                         */
                        RetrieveTransferParametersResponse.create = function create(properties) {
                            return new RetrieveTransferParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message. Does not implicitly {@link google.cloud.domains.v1.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferParameters != null && Object.hasOwnProperty.call(message, "transferParameters"))
                                $root.google.cloud.domains.v1.TransferParameters.encode(message.transferParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RetrieveTransferParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.transferParameters = $root.google.cloud.domains.v1.TransferParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters")) {
                                var error = $root.google.cloud.domains.v1.TransferParameters.verify(message.transferParameters);
                                if (error)
                                    return "transferParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         */
                        RetrieveTransferParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RetrieveTransferParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RetrieveTransferParametersResponse();
                            if (object.transferParameters != null) {
                                if (typeof object.transferParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1.RetrieveTransferParametersResponse.transferParameters: object expected");
                                message.transferParameters = $root.google.cloud.domains.v1.TransferParameters.fromObject(object.transferParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1.RetrieveTransferParametersResponse} message RetrieveTransferParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.transferParameters = null;
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters"))
                                object.transferParameters = $root.google.cloud.domains.v1.TransferParameters.toObject(message.transferParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RetrieveTransferParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RetrieveTransferParametersResponse";
                        };
    
                        return RetrieveTransferParametersResponse;
                    })();
    
                    v1.TransferDomainRequest = (function() {
    
                        /**
                         * Properties of a TransferDomainRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface ITransferDomainRequest
                         * @property {string|null} [parent] TransferDomainRequest parent
                         * @property {google.cloud.domains.v1.IRegistration|null} [registration] TransferDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1.ContactNotice>|null} [contactNotices] TransferDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferDomainRequest yearlyPrice
                         * @property {google.cloud.domains.v1.IAuthorizationCode|null} [authorizationCode] TransferDomainRequest authorizationCode
                         * @property {boolean|null} [validateOnly] TransferDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new TransferDomainRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a TransferDomainRequest.
                         * @implements ITransferDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.ITransferDomainRequest=} [properties] Properties to set
                         */
                        function TransferDomainRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.parent = "";
    
                        /**
                         * TransferDomainRequest registration.
                         * @member {google.cloud.domains.v1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.registration = null;
    
                        /**
                         * TransferDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * TransferDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * TransferDomainRequest authorizationCode.
                         * @member {google.cloud.domains.v1.IAuthorizationCode|null|undefined} authorizationCode
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.authorizationCode = null;
    
                        /**
                         * TransferDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new TransferDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.ITransferDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.TransferDomainRequest} TransferDomainRequest instance
                         */
                        TransferDomainRequest.create = function create(properties) {
                            return new TransferDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message. Does not implicitly {@link google.cloud.domains.v1.TransferDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.authorizationCode != null && Object.hasOwnProperty.call(message, "authorizationCode"))
                                $root.google.cloud.domains.v1.AuthorizationCode.encode(message.authorizationCode, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.TransferDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.TransferDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.authorizationCode = $root.google.cloud.domains.v1.AuthorizationCode.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode")) {
                                var error = $root.google.cloud.domains.v1.AuthorizationCode.verify(message.authorizationCode);
                                if (error)
                                    return "authorizationCode." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransferDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.TransferDomainRequest} TransferDomainRequest
                         */
                        TransferDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.TransferDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.TransferDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1.TransferDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1.Registration.fromObject(object.registration);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1.TransferDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1.TransferDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.authorizationCode != null) {
                                if (typeof object.authorizationCode !== "object")
                                    throw TypeError(".google.cloud.domains.v1.TransferDomainRequest.authorizationCode: object expected");
                                message.authorizationCode = $root.google.cloud.domains.v1.AuthorizationCode.fromObject(object.authorizationCode);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1.TransferDomainRequest} message TransferDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.authorizationCode = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1.Registration.toObject(message.registration, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode"))
                                object.authorizationCode = $root.google.cloud.domains.v1.AuthorizationCode.toObject(message.authorizationCode, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this TransferDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.TransferDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.TransferDomainRequest";
                        };
    
                        return TransferDomainRequest;
                    })();
    
                    v1.ListRegistrationsRequest = (function() {
    
                        /**
                         * Properties of a ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IListRegistrationsRequest
                         * @property {string|null} [parent] ListRegistrationsRequest parent
                         * @property {number|null} [pageSize] ListRegistrationsRequest pageSize
                         * @property {string|null} [pageToken] ListRegistrationsRequest pageToken
                         * @property {string|null} [filter] ListRegistrationsRequest filter
                         */
    
                        /**
                         * Constructs a new ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ListRegistrationsRequest.
                         * @implements IListRegistrationsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest=} [properties] Properties to set
                         */
                        function ListRegistrationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.parent = "";
    
                        /**
                         * ListRegistrationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRegistrationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListRegistrationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRegistrationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ListRegistrationsRequest} ListRegistrationsRequest instance
                         */
                        ListRegistrationsRequest.create = function create(properties) {
                            return new ListRegistrationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message. Does not implicitly {@link google.cloud.domains.v1.ListRegistrationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ListRegistrationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ListRegistrationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ListRegistrationsRequest} ListRegistrationsRequest
                         */
                        ListRegistrationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ListRegistrationsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ListRegistrationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ListRegistrationsRequest} message ListRegistrationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ListRegistrationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ListRegistrationsRequest";
                        };
    
                        return ListRegistrationsRequest;
                    })();
    
                    v1.ListRegistrationsResponse = (function() {
    
                        /**
                         * Properties of a ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1
                         * @interface IListRegistrationsResponse
                         * @property {Array.<google.cloud.domains.v1.IRegistration>|null} [registrations] ListRegistrationsResponse registrations
                         * @property {string|null} [nextPageToken] ListRegistrationsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ListRegistrationsResponse.
                         * @implements IListRegistrationsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1.IListRegistrationsResponse=} [properties] Properties to set
                         */
                        function ListRegistrationsResponse(properties) {
                            this.registrations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsResponse registrations.
                         * @member {Array.<google.cloud.domains.v1.IRegistration>} registrations
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.registrations = $util.emptyArray;
    
                        /**
                         * ListRegistrationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRegistrationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ListRegistrationsResponse} ListRegistrationsResponse instance
                         */
                        ListRegistrationsResponse.create = function create(properties) {
                            return new ListRegistrationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message. Does not implicitly {@link google.cloud.domains.v1.ListRegistrationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registrations != null && message.registrations.length)
                                for (var i = 0; i < message.registrations.length; ++i)
                                    $root.google.cloud.domains.v1.Registration.encode(message.registrations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ListRegistrationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ListRegistrationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registrations && message.registrations.length))
                                            message.registrations = [];
                                        message.registrations.push($root.google.cloud.domains.v1.Registration.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registrations != null && message.hasOwnProperty("registrations")) {
                                if (!Array.isArray(message.registrations))
                                    return "registrations: array expected";
                                for (var i = 0; i < message.registrations.length; ++i) {
                                    var error = $root.google.cloud.domains.v1.Registration.verify(message.registrations[i]);
                                    if (error)
                                        return "registrations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ListRegistrationsResponse} ListRegistrationsResponse
                         */
                        ListRegistrationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ListRegistrationsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ListRegistrationsResponse();
                            if (object.registrations) {
                                if (!Array.isArray(object.registrations))
                                    throw TypeError(".google.cloud.domains.v1.ListRegistrationsResponse.registrations: array expected");
                                message.registrations = [];
                                for (var i = 0; i < object.registrations.length; ++i) {
                                    if (typeof object.registrations[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1.ListRegistrationsResponse.registrations: object expected");
                                    message.registrations[i] = $root.google.cloud.domains.v1.Registration.fromObject(object.registrations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1.ListRegistrationsResponse} message ListRegistrationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registrations = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.registrations && message.registrations.length) {
                                object.registrations = [];
                                for (var j = 0; j < message.registrations.length; ++j)
                                    object.registrations[j] = $root.google.cloud.domains.v1.Registration.toObject(message.registrations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ListRegistrationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ListRegistrationsResponse";
                        };
    
                        return ListRegistrationsResponse;
                    })();
    
                    v1.GetRegistrationRequest = (function() {
    
                        /**
                         * Properties of a GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IGetRegistrationRequest
                         * @property {string|null} [name] GetRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a GetRegistrationRequest.
                         * @implements IGetRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest=} [properties] Properties to set
                         */
                        function GetRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @instance
                         */
                        GetRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.GetRegistrationRequest} GetRegistrationRequest instance
                         */
                        GetRegistrationRequest.create = function create(properties) {
                            return new GetRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1.GetRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.GetRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.GetRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.GetRegistrationRequest} GetRegistrationRequest
                         */
                        GetRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.GetRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.GetRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.GetRegistrationRequest} message GetRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.GetRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.GetRegistrationRequest";
                        };
    
                        return GetRegistrationRequest;
                    })();
    
                    v1.UpdateRegistrationRequest = (function() {
    
                        /**
                         * Properties of an UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IUpdateRegistrationRequest
                         * @property {google.cloud.domains.v1.IRegistration|null} [registration] UpdateRegistrationRequest registration
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRegistrationRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents an UpdateRegistrationRequest.
                         * @implements IUpdateRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest=} [properties] Properties to set
                         */
                        function UpdateRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRegistrationRequest registration.
                         * @member {google.cloud.domains.v1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.registration = null;
    
                        /**
                         * UpdateRegistrationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.UpdateRegistrationRequest} UpdateRegistrationRequest instance
                         */
                        UpdateRegistrationRequest.create = function create(properties) {
                            return new UpdateRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1.Registration.encode(message.registration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.UpdateRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = $root.google.cloud.domains.v1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         */
                        UpdateRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.UpdateRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.UpdateRegistrationRequest();
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1.UpdateRegistrationRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1.Registration.fromObject(object.registration);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1.UpdateRegistrationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.UpdateRegistrationRequest} message UpdateRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1.Registration.toObject(message.registration, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.UpdateRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.UpdateRegistrationRequest";
                        };
    
                        return UpdateRegistrationRequest;
                    })();
    
                    v1.ConfigureManagementSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IConfigureManagementSettingsRequest
                         * @property {string|null} [registration] ConfigureManagementSettingsRequest registration
                         * @property {google.cloud.domains.v1.IManagementSettings|null} [managementSettings] ConfigureManagementSettingsRequest managementSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureManagementSettingsRequest updateMask
                         */
    
                        /**
                         * Constructs a new ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ConfigureManagementSettingsRequest.
                         * @implements IConfigureManagementSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureManagementSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureManagementSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureManagementSettingsRequest managementSettings.
                         * @member {google.cloud.domains.v1.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.managementSettings = null;
    
                        /**
                         * ConfigureManagementSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new ConfigureManagementSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest instance
                         */
                        ConfigureManagementSettingsRequest.create = function create(properties) {
                            return new ConfigureManagementSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ConfigureManagementSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureManagementSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureManagementSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureManagementSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         */
                        ConfigureManagementSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ConfigureManagementSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ConfigureManagementSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureManagementSettingsRequest.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureManagementSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureManagementSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureManagementSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.managementSettings = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureManagementSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureManagementSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureManagementSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureManagementSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ConfigureManagementSettingsRequest";
                        };
    
                        return ConfigureManagementSettingsRequest;
                    })();
    
                    v1.ConfigureDnsSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IConfigureDnsSettingsRequest
                         * @property {string|null} [registration] ConfigureDnsSettingsRequest registration
                         * @property {google.cloud.domains.v1.IDnsSettings|null} [dnsSettings] ConfigureDnsSettingsRequest dnsSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureDnsSettingsRequest updateMask
                         * @property {boolean|null} [validateOnly] ConfigureDnsSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ConfigureDnsSettingsRequest.
                         * @implements IConfigureDnsSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureDnsSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureDnsSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureDnsSettingsRequest dnsSettings.
                         * @member {google.cloud.domains.v1.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.dnsSettings = null;
    
                        /**
                         * ConfigureDnsSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureDnsSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureDnsSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest instance
                         */
                        ConfigureDnsSettingsRequest.create = function create(properties) {
                            return new ConfigureDnsSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ConfigureDnsSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureDnsSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureDnsSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureDnsSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         */
                        ConfigureDnsSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ConfigureDnsSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ConfigureDnsSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureDnsSettingsRequest.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureDnsSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureDnsSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureDnsSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.dnsSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureDnsSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureDnsSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureDnsSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureDnsSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ConfigureDnsSettingsRequest";
                        };
    
                        return ConfigureDnsSettingsRequest;
                    })();
    
                    v1.ConfigureContactSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IConfigureContactSettingsRequest
                         * @property {string|null} [registration] ConfigureContactSettingsRequest registration
                         * @property {google.cloud.domains.v1.IContactSettings|null} [contactSettings] ConfigureContactSettingsRequest contactSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureContactSettingsRequest updateMask
                         * @property {Array.<google.cloud.domains.v1.ContactNotice>|null} [contactNotices] ConfigureContactSettingsRequest contactNotices
                         * @property {boolean|null} [validateOnly] ConfigureContactSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ConfigureContactSettingsRequest.
                         * @implements IConfigureContactSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureContactSettingsRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureContactSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureContactSettingsRequest contactSettings.
                         * @member {google.cloud.domains.v1.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactSettings = null;
    
                        /**
                         * ConfigureContactSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureContactSettingsRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * ConfigureContactSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureContactSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest instance
                         */
                        ConfigureContactSettingsRequest.create = function create(properties) {
                            return new ConfigureContactSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ConfigureContactSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.contactSettings = $root.google.cloud.domains.v1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureContactSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureContactSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureContactSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         */
                        ConfigureContactSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ConfigureContactSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ConfigureContactSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureContactSettingsRequest.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1.ConfigureContactSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1.ConfigureContactSettingsRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureContactSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1.ConfigureContactSettingsRequest} message ConfigureContactSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureContactSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.registration = "";
                                object.contactSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1.ContactSettings.toObject(message.contactSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureContactSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureContactSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureContactSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ConfigureContactSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureContactSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ConfigureContactSettingsRequest";
                        };
    
                        return ConfigureContactSettingsRequest;
                    })();
    
                    v1.ExportRegistrationRequest = (function() {
    
                        /**
                         * Properties of an ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IExportRegistrationRequest
                         * @property {string|null} [name] ExportRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents an ExportRegistrationRequest.
                         * @implements IExportRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest=} [properties] Properties to set
                         */
                        function ExportRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @instance
                         */
                        ExportRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new ExportRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ExportRegistrationRequest} ExportRegistrationRequest instance
                         */
                        ExportRegistrationRequest.create = function create(properties) {
                            return new ExportRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1.ExportRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ExportRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ExportRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExportRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ExportRegistrationRequest} ExportRegistrationRequest
                         */
                        ExportRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ExportRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ExportRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.ExportRegistrationRequest} message ExportRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ExportRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ExportRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ExportRegistrationRequest";
                        };
    
                        return ExportRegistrationRequest;
                    })();
    
                    v1.DeleteRegistrationRequest = (function() {
    
                        /**
                         * Properties of a DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IDeleteRegistrationRequest
                         * @property {string|null} [name] DeleteRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a DeleteRegistrationRequest.
                         * @implements IDeleteRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest=} [properties] Properties to set
                         */
                        function DeleteRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @instance
                         */
                        DeleteRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.DeleteRegistrationRequest} DeleteRegistrationRequest instance
                         */
                        DeleteRegistrationRequest.create = function create(properties) {
                            return new DeleteRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.DeleteRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         */
                        DeleteRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.DeleteRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.DeleteRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1.DeleteRegistrationRequest} message DeleteRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.DeleteRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.DeleteRegistrationRequest";
                        };
    
                        return DeleteRegistrationRequest;
                    })();
    
                    v1.RetrieveAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IRetrieveAuthorizationCodeRequest
                         * @property {string|null} [registration] RetrieveAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RetrieveAuthorizationCodeRequest.
                         * @implements IRetrieveAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function RetrieveAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @instance
                         */
                        RetrieveAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new RetrieveAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest instance
                         */
                        RetrieveAuthorizationCodeRequest.create = function create(properties) {
                            return new RetrieveAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RetrieveAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         */
                        RetrieveAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RetrieveAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RetrieveAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.RetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RetrieveAuthorizationCodeRequest";
                        };
    
                        return RetrieveAuthorizationCodeRequest;
                    })();
    
                    v1.ResetAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1
                         * @interface IResetAuthorizationCodeRequest
                         * @property {string|null} [registration] ResetAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a ResetAuthorizationCodeRequest.
                         * @implements IResetAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function ResetAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @instance
                         */
                        ResetAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new ResetAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest instance
                         */
                        ResetAuthorizationCodeRequest.create = function create(properties) {
                            return new ResetAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.ResetAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         */
                        ResetAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.ResetAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1.ResetAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1.ResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this ResetAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.ResetAuthorizationCodeRequest";
                        };
    
                        return ResetAuthorizationCodeRequest;
                    })();
    
                    v1.RegisterParameters = (function() {
    
                        /**
                         * Properties of a RegisterParameters.
                         * @memberof google.cloud.domains.v1
                         * @interface IRegisterParameters
                         * @property {string|null} [domainName] RegisterParameters domainName
                         * @property {google.cloud.domains.v1.RegisterParameters.Availability|null} [availability] RegisterParameters availability
                         * @property {Array.<google.cloud.domains.v1.ContactPrivacy>|null} [supportedPrivacy] RegisterParameters supportedPrivacy
                         * @property {Array.<google.cloud.domains.v1.DomainNotice>|null} [domainNotices] RegisterParameters domainNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new RegisterParameters.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a RegisterParameters.
                         * @implements IRegisterParameters
                         * @constructor
                         * @param {google.cloud.domains.v1.IRegisterParameters=} [properties] Properties to set
                         */
                        function RegisterParameters(properties) {
                            this.supportedPrivacy = [];
                            this.domainNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainName = "";
    
                        /**
                         * RegisterParameters availability.
                         * @member {google.cloud.domains.v1.RegisterParameters.Availability} availability
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.availability = 0;
    
                        /**
                         * RegisterParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * RegisterParameters domainNotices.
                         * @member {Array.<google.cloud.domains.v1.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new RegisterParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.RegisterParameters} RegisterParameters instance
                         */
                        RegisterParameters.create = function create(properties) {
                            return new RegisterParameters(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message. Does not implicitly {@link google.cloud.domains.v1.RegisterParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.availability != null && Object.hasOwnProperty.call(message, "availability"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.availability);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1.RegisterParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.RegisterParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.availability = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                switch (message.availability) {
                                default:
                                    return "availability: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RegisterParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.RegisterParameters} RegisterParameters
                         */
                        RegisterParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.RegisterParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1.RegisterParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            switch (object.availability) {
                            default:
                                if (typeof object.availability === "number") {
                                    message.availability = object.availability;
                                    break;
                                }
                                break;
                            case "AVAILABILITY_UNSPECIFIED":
                            case 0:
                                message.availability = 0;
                                break;
                            case "AVAILABLE":
                            case 1:
                                message.availability = 1;
                                break;
                            case "UNAVAILABLE":
                            case 2:
                                message.availability = 2;
                                break;
                            case "UNSUPPORTED":
                            case 3:
                                message.availability = 3;
                                break;
                            case "UNKNOWN":
                            case 4:
                                message.availability = 4;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1.RegisterParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1.RegisterParameters.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1.RegisterParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1.RegisterParameters} message RegisterParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.supportedPrivacy = [];
                                object.domainNotices = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.availability = options.enums === String ? "AVAILABILITY_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                object.availability = options.enums === String ? $root.google.cloud.domains.v1.RegisterParameters.Availability[message.availability] === undefined ? message.availability : $root.google.cloud.domains.v1.RegisterParameters.Availability[message.availability] : message.availability;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this RegisterParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.RegisterParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.RegisterParameters";
                        };
    
                        /**
                         * Availability enum.
                         * @name google.cloud.domains.v1.RegisterParameters.Availability
                         * @enum {number}
                         * @property {number} AVAILABILITY_UNSPECIFIED=0 AVAILABILITY_UNSPECIFIED value
                         * @property {number} AVAILABLE=1 AVAILABLE value
                         * @property {number} UNAVAILABLE=2 UNAVAILABLE value
                         * @property {number} UNSUPPORTED=3 UNSUPPORTED value
                         * @property {number} UNKNOWN=4 UNKNOWN value
                         */
                        RegisterParameters.Availability = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "AVAILABILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVAILABLE"] = 1;
                            values[valuesById[2] = "UNAVAILABLE"] = 2;
                            values[valuesById[3] = "UNSUPPORTED"] = 3;
                            values[valuesById[4] = "UNKNOWN"] = 4;
                            return values;
                        })();
    
                        return RegisterParameters;
                    })();
    
                    v1.TransferParameters = (function() {
    
                        /**
                         * Properties of a TransferParameters.
                         * @memberof google.cloud.domains.v1
                         * @interface ITransferParameters
                         * @property {string|null} [domainName] TransferParameters domainName
                         * @property {string|null} [currentRegistrar] TransferParameters currentRegistrar
                         * @property {Array.<string>|null} [nameServers] TransferParameters nameServers
                         * @property {google.cloud.domains.v1.TransferLockState|null} [transferLockState] TransferParameters transferLockState
                         * @property {Array.<google.cloud.domains.v1.ContactPrivacy>|null} [supportedPrivacy] TransferParameters supportedPrivacy
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new TransferParameters.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents a TransferParameters.
                         * @implements ITransferParameters
                         * @constructor
                         * @param {google.cloud.domains.v1.ITransferParameters=} [properties] Properties to set
                         */
                        function TransferParameters(properties) {
                            this.nameServers = [];
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.domainName = "";
    
                        /**
                         * TransferParameters currentRegistrar.
                         * @member {string} currentRegistrar
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.currentRegistrar = "";
    
                        /**
                         * TransferParameters nameServers.
                         * @member {Array.<string>} nameServers
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.nameServers = $util.emptyArray;
    
                        /**
                         * TransferParameters transferLockState.
                         * @member {google.cloud.domains.v1.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.transferLockState = 0;
    
                        /**
                         * TransferParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * TransferParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new TransferParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1.ITransferParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.TransferParameters} TransferParameters instance
                         */
                        TransferParameters.create = function create(properties) {
                            return new TransferParameters(properties);
                        };
    
                        /**
                         * Encodes the specified TransferParameters message. Does not implicitly {@link google.cloud.domains.v1.TransferParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.currentRegistrar != null && Object.hasOwnProperty.call(message, "currentRegistrar"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.currentRegistrar);
                            if (message.nameServers != null && message.nameServers.length)
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameServers[i]);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 5, wireType 2 =*/42).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1.TransferParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.TransferParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.currentRegistrar = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.nameServers && message.nameServers.length))
                                            message.nameServers = [];
                                        message.nameServers.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 6: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                if (!$util.isString(message.currentRegistrar))
                                    return "currentRegistrar: string expected";
                            if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                if (!Array.isArray(message.nameServers))
                                    return "nameServers: array expected";
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    if (!$util.isString(message.nameServers[i]))
                                        return "nameServers: string[] expected";
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.TransferParameters} TransferParameters
                         */
                        TransferParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.TransferParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1.TransferParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.currentRegistrar != null)
                                message.currentRegistrar = String(object.currentRegistrar);
                            if (object.nameServers) {
                                if (!Array.isArray(object.nameServers))
                                    throw TypeError(".google.cloud.domains.v1.TransferParameters.nameServers: array expected");
                                message.nameServers = [];
                                for (var i = 0; i < object.nameServers.length; ++i)
                                    message.nameServers[i] = String(object.nameServers[i]);
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1.TransferParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1.TransferParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1.TransferParameters} message TransferParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.nameServers = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.currentRegistrar = "";
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                object.currentRegistrar = message.currentRegistrar;
                            if (message.nameServers && message.nameServers.length) {
                                object.nameServers = [];
                                for (var j = 0; j < message.nameServers.length; ++j)
                                    object.nameServers[j] = message.nameServers[j];
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1.TransferLockState[message.transferLockState] : message.transferLockState;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransferParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.TransferParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.TransferParameters";
                        };
    
                        return TransferParameters;
                    })();
    
                    v1.AuthorizationCode = (function() {
    
                        /**
                         * Properties of an AuthorizationCode.
                         * @memberof google.cloud.domains.v1
                         * @interface IAuthorizationCode
                         * @property {string|null} [code] AuthorizationCode code
                         */
    
                        /**
                         * Constructs a new AuthorizationCode.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents an AuthorizationCode.
                         * @implements IAuthorizationCode
                         * @constructor
                         * @param {google.cloud.domains.v1.IAuthorizationCode=} [properties] Properties to set
                         */
                        function AuthorizationCode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuthorizationCode code.
                         * @member {string} code
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @instance
                         */
                        AuthorizationCode.prototype.code = "";
    
                        /**
                         * Creates a new AuthorizationCode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1.IAuthorizationCode=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.AuthorizationCode} AuthorizationCode instance
                         */
                        AuthorizationCode.create = function create(properties) {
                            return new AuthorizationCode(properties);
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message. Does not implicitly {@link google.cloud.domains.v1.AuthorizationCode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message, length delimited. Does not implicitly {@link google.cloud.domains.v1.AuthorizationCode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.AuthorizationCode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuthorizationCode message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuthorizationCode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AuthorizationCode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.AuthorizationCode} AuthorizationCode
                         */
                        AuthorizationCode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.AuthorizationCode)
                                return object;
                            var message = new $root.google.cloud.domains.v1.AuthorizationCode();
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuthorizationCode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1.AuthorizationCode} message AuthorizationCode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuthorizationCode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.code = "";
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this AuthorizationCode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuthorizationCode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuthorizationCode
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.AuthorizationCode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuthorizationCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.AuthorizationCode";
                        };
    
                        return AuthorizationCode;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.domains.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.domains.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.domains.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.domains.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.domains.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.domains.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    /**
                     * ContactPrivacy enum.
                     * @name google.cloud.domains.v1.ContactPrivacy
                     * @enum {number}
                     * @property {number} CONTACT_PRIVACY_UNSPECIFIED=0 CONTACT_PRIVACY_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA=1 PUBLIC_CONTACT_DATA value
                     * @property {number} PRIVATE_CONTACT_DATA=2 PRIVATE_CONTACT_DATA value
                     * @property {number} REDACTED_CONTACT_DATA=3 REDACTED_CONTACT_DATA value
                     */
                    v1.ContactPrivacy = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_PRIVACY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA"] = 1;
                        values[valuesById[2] = "PRIVATE_CONTACT_DATA"] = 2;
                        values[valuesById[3] = "REDACTED_CONTACT_DATA"] = 3;
                        return values;
                    })();
    
                    /**
                     * DomainNotice enum.
                     * @name google.cloud.domains.v1.DomainNotice
                     * @enum {number}
                     * @property {number} DOMAIN_NOTICE_UNSPECIFIED=0 DOMAIN_NOTICE_UNSPECIFIED value
                     * @property {number} HSTS_PRELOADED=1 HSTS_PRELOADED value
                     */
                    v1.DomainNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DOMAIN_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HSTS_PRELOADED"] = 1;
                        return values;
                    })();
    
                    /**
                     * ContactNotice enum.
                     * @name google.cloud.domains.v1.ContactNotice
                     * @enum {number}
                     * @property {number} CONTACT_NOTICE_UNSPECIFIED=0 CONTACT_NOTICE_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT=1 PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT value
                     */
                    v1.ContactNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"] = 1;
                        return values;
                    })();
    
                    /**
                     * TransferLockState enum.
                     * @name google.cloud.domains.v1.TransferLockState
                     * @enum {number}
                     * @property {number} TRANSFER_LOCK_STATE_UNSPECIFIED=0 TRANSFER_LOCK_STATE_UNSPECIFIED value
                     * @property {number} UNLOCKED=1 UNLOCKED value
                     * @property {number} LOCKED=2 LOCKED value
                     */
                    v1.TransferLockState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRANSFER_LOCK_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UNLOCKED"] = 1;
                        values[valuesById[2] = "LOCKED"] = 2;
                        return values;
                    })();
    
                    return v1;
                })();
    
                domains.v1alpha2 = (function() {
    
                    /**
                     * Namespace v1alpha2.
                     * @memberof google.cloud.domains
                     * @namespace
                     */
                    var v1alpha2 = {};
    
                    v1alpha2.Domains = (function() {
    
                        /**
                         * Constructs a new Domains service.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a Domains
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Domains(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Domains.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Domains;
    
                        /**
                         * Creates new Domains service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Domains} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Domains.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|searchDomains}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef SearchDomainsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.SearchDomainsResponse} [response] SearchDomainsResponse
                         */
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.SearchDomainsCallback} callback Node-style callback called with the error, if any, and SearchDomainsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.searchDomains = function searchDomains(request, callback) {
                            return this.rpcCall(searchDomains, $root.google.cloud.domains.v1alpha2.SearchDomainsRequest, $root.google.cloud.domains.v1alpha2.SearchDomainsResponse, request, callback);
                        }, "name", { value: "SearchDomains" });
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.SearchDomainsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|retrieveRegisterParameters}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef RetrieveRegisterParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} [response] RetrieveRegisterParametersResponse
                         */
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.RetrieveRegisterParametersCallback} callback Node-style callback called with the error, if any, and RetrieveRegisterParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveRegisterParameters = function retrieveRegisterParameters(request, callback) {
                            return this.rpcCall(retrieveRegisterParameters, $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest, $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse, request, callback);
                        }, "name", { value: "RetrieveRegisterParameters" });
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|registerDomain}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef RegisterDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.RegisterDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.registerDomain = function registerDomain(request, callback) {
                            return this.rpcCall(registerDomain, $root.google.cloud.domains.v1alpha2.RegisterDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RegisterDomain" });
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|retrieveTransferParameters}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef RetrieveTransferParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} [response] RetrieveTransferParametersResponse
                         */
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.RetrieveTransferParametersCallback} callback Node-style callback called with the error, if any, and RetrieveTransferParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveTransferParameters = function retrieveTransferParameters(request, callback) {
                            return this.rpcCall(retrieveTransferParameters, $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest, $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse, request, callback);
                        }, "name", { value: "RetrieveTransferParameters" });
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|transferDomain}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef TransferDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.TransferDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.transferDomain = function transferDomain(request, callback) {
                            return this.rpcCall(transferDomain, $root.google.cloud.domains.v1alpha2.TransferDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TransferDomain" });
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|listRegistrations}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ListRegistrationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.ListRegistrationsResponse} [response] ListRegistrationsResponse
                         */
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ListRegistrationsCallback} callback Node-style callback called with the error, if any, and ListRegistrationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.listRegistrations = function listRegistrations(request, callback) {
                            return this.rpcCall(listRegistrations, $root.google.cloud.domains.v1alpha2.ListRegistrationsRequest, $root.google.cloud.domains.v1alpha2.ListRegistrationsResponse, request, callback);
                        }, "name", { value: "ListRegistrations" });
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.ListRegistrationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|getRegistration}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef GetRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.Registration} [response] Registration
                         */
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.GetRegistrationCallback} callback Node-style callback called with the error, if any, and Registration
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.getRegistration = function getRegistration(request, callback) {
                            return this.rpcCall(getRegistration, $root.google.cloud.domains.v1alpha2.GetRegistrationRequest, $root.google.cloud.domains.v1alpha2.Registration, request, callback);
                        }, "name", { value: "GetRegistration" });
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.Registration>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|updateRegistration}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef UpdateRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.UpdateRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.updateRegistration = function updateRegistration(request, callback) {
                            return this.rpcCall(updateRegistration, $root.google.cloud.domains.v1alpha2.UpdateRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateRegistration" });
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|configureManagementSettings}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ConfigureManagementSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ConfigureManagementSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureManagementSettings = function configureManagementSettings(request, callback) {
                            return this.rpcCall(configureManagementSettings, $root.google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureManagementSettings" });
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|configureDnsSettings}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ConfigureDnsSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ConfigureDnsSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureDnsSettings = function configureDnsSettings(request, callback) {
                            return this.rpcCall(configureDnsSettings, $root.google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureDnsSettings" });
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|configureContactSettings}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ConfigureContactSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ConfigureContactSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureContactSettings = function configureContactSettings(request, callback) {
                            return this.rpcCall(configureContactSettings, $root.google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureContactSettings" });
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|exportRegistration}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ExportRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ExportRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.exportRegistration = function exportRegistration(request, callback) {
                            return this.rpcCall(exportRegistration, $root.google.cloud.domains.v1alpha2.ExportRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportRegistration" });
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|deleteRegistration}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef DeleteRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.DeleteRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.deleteRegistration = function deleteRegistration(request, callback) {
                            return this.rpcCall(deleteRegistration, $root.google.cloud.domains.v1alpha2.DeleteRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRegistration" });
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|retrieveAuthorizationCode}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef RetrieveAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.RetrieveAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveAuthorizationCode = function retrieveAuthorizationCode(request, callback) {
                            return this.rpcCall(retrieveAuthorizationCode, $root.google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest, $root.google.cloud.domains.v1alpha2.AuthorizationCode, request, callback);
                        }, "name", { value: "RetrieveAuthorizationCode" });
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1alpha2.Domains|resetAuthorizationCode}.
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @typedef ResetAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1alpha2.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1alpha2.Domains.ResetAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.resetAuthorizationCode = function resetAuthorizationCode(request, callback) {
                            return this.rpcCall(resetAuthorizationCode, $root.google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest, $root.google.cloud.domains.v1alpha2.AuthorizationCode, request, callback);
                        }, "name", { value: "ResetAuthorizationCode" });
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1alpha2.Domains
                         * @instance
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1alpha2.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        return Domains;
                    })();
    
                    v1alpha2.Registration = (function() {
    
                        /**
                         * Properties of a Registration.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRegistration
                         * @property {string|null} [name] Registration name
                         * @property {string|null} [domainName] Registration domainName
                         * @property {google.protobuf.ITimestamp|null} [createTime] Registration createTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Registration expireTime
                         * @property {google.cloud.domains.v1alpha2.Registration.State|null} [state] Registration state
                         * @property {Array.<google.cloud.domains.v1alpha2.Registration.Issue>|null} [issues] Registration issues
                         * @property {Object.<string,string>|null} [labels] Registration labels
                         * @property {google.cloud.domains.v1alpha2.IManagementSettings|null} [managementSettings] Registration managementSettings
                         * @property {google.cloud.domains.v1alpha2.IDnsSettings|null} [dnsSettings] Registration dnsSettings
                         * @property {google.cloud.domains.v1alpha2.IContactSettings|null} [contactSettings] Registration contactSettings
                         * @property {google.cloud.domains.v1alpha2.IContactSettings|null} [pendingContactSettings] Registration pendingContactSettings
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>|null} [supportedPrivacy] Registration supportedPrivacy
                         */
    
                        /**
                         * Constructs a new Registration.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a Registration.
                         * @implements IRegistration
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRegistration=} [properties] Properties to set
                         */
                        function Registration(properties) {
                            this.issues = [];
                            this.labels = {};
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Registration name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.name = "";
    
                        /**
                         * Registration domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.domainName = "";
    
                        /**
                         * Registration createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.createTime = null;
    
                        /**
                         * Registration expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.expireTime = null;
    
                        /**
                         * Registration state.
                         * @member {google.cloud.domains.v1alpha2.Registration.State} state
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.state = 0;
    
                        /**
                         * Registration issues.
                         * @member {Array.<google.cloud.domains.v1alpha2.Registration.Issue>} issues
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.issues = $util.emptyArray;
    
                        /**
                         * Registration labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.labels = $util.emptyObject;
    
                        /**
                         * Registration managementSettings.
                         * @member {google.cloud.domains.v1alpha2.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.managementSettings = null;
    
                        /**
                         * Registration dnsSettings.
                         * @member {google.cloud.domains.v1alpha2.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.dnsSettings = null;
    
                        /**
                         * Registration contactSettings.
                         * @member {google.cloud.domains.v1alpha2.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.contactSettings = null;
    
                        /**
                         * Registration pendingContactSettings.
                         * @member {google.cloud.domains.v1alpha2.IContactSettings|null|undefined} pendingContactSettings
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.pendingContactSettings = null;
    
                        /**
                         * Registration supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         */
                        Registration.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * Creates a new Registration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegistration=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.Registration} Registration instance
                         */
                        Registration.create = function create(properties) {
                            return new Registration(properties);
                        };
    
                        /**
                         * Encodes the specified Registration message. Does not implicitly {@link google.cloud.domains.v1alpha2.Registration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domainName);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.issues != null && message.issues.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.issues.length; ++i)
                                    writer.int32(message.issues[i]);
                                writer.ldelim();
                            }
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1alpha2.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1alpha2.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.pendingContactSettings != null && Object.hasOwnProperty.call(message, "pendingContactSettings"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.encode(message.pendingContactSettings, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 14, wireType 2 =*/114).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Registration message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.Registration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.Registration(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.issues && message.issues.length))
                                            message.issues = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.issues.push(reader.int32());
                                        } else
                                            message.issues.push(reader.int32());
                                        break;
                                    }
                                case 9: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.pendingContactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Registration message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Registration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.issues != null && message.hasOwnProperty("issues")) {
                                if (!Array.isArray(message.issues))
                                    return "issues: array expected";
                                for (var i = 0; i < message.issues.length; ++i)
                                    switch (message.issues[i]) {
                                    default:
                                        return "issues: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.verify(message.pendingContactSettings);
                                if (error)
                                    return "pendingContactSettings." + error;
                            }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Registration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.Registration} Registration
                         */
                        Registration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.Registration)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.Registration();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "REGISTRATION_PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "REGISTRATION_FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "TRANSFER_PENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "TRANSFER_FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "ACTIVE":
                            case 6:
                                message.state = 6;
                                break;
                            case "SUSPENDED":
                            case 7:
                                message.state = 7;
                                break;
                            case "EXPORTED":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.issues) {
                                if (!Array.isArray(object.issues))
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.issues: array expected");
                                message.issues = [];
                                for (var i = 0; i < object.issues.length; ++i)
                                    switch (object.issues[i]) {
                                    default:
                                        if (typeof object.issues[i] === "number") {
                                            message.issues[i] = object.issues[i];
                                            break;
                                        }
                                    case "ISSUE_UNSPECIFIED":
                                    case 0:
                                        message.issues[i] = 0;
                                        break;
                                    case "CONTACT_SUPPORT":
                                    case 1:
                                        message.issues[i] = 1;
                                        break;
                                    case "UNVERIFIED_EMAIL":
                                    case 2:
                                        message.issues[i] = 2;
                                        break;
                                    }
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.pendingContactSettings != null) {
                                if (typeof object.pendingContactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.pendingContactSettings: object expected");
                                message.pendingContactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.fromObject(object.pendingContactSettings);
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1alpha2.Registration.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Registration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {google.cloud.domains.v1alpha2.Registration} message Registration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Registration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.issues = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.domainName = "";
                                object.createTime = null;
                                object.expireTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.managementSettings = null;
                                object.dnsSettings = null;
                                object.contactSettings = null;
                                object.pendingContactSettings = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.domains.v1alpha2.Registration.State[message.state] === undefined ? message.state : $root.google.cloud.domains.v1alpha2.Registration.State[message.state] : message.state;
                            if (message.issues && message.issues.length) {
                                object.issues = [];
                                for (var j = 0; j < message.issues.length; ++j)
                                    object.issues[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.Registration.Issue[message.issues[j]] === undefined ? message.issues[j] : $root.google.cloud.domains.v1alpha2.Registration.Issue[message.issues[j]] : message.issues[j];
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.toObject(message.contactSettings, options);
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings"))
                                object.pendingContactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.toObject(message.pendingContactSettings, options);
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Registration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Registration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Registration
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.Registration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Registration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.Registration";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.domains.v1alpha2.Registration.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} REGISTRATION_PENDING=1 REGISTRATION_PENDING value
                         * @property {number} REGISTRATION_FAILED=2 REGISTRATION_FAILED value
                         * @property {number} TRANSFER_PENDING=3 TRANSFER_PENDING value
                         * @property {number} TRANSFER_FAILED=4 TRANSFER_FAILED value
                         * @property {number} ACTIVE=6 ACTIVE value
                         * @property {number} SUSPENDED=7 SUSPENDED value
                         * @property {number} EXPORTED=8 EXPORTED value
                         */
                        Registration.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REGISTRATION_PENDING"] = 1;
                            values[valuesById[2] = "REGISTRATION_FAILED"] = 2;
                            values[valuesById[3] = "TRANSFER_PENDING"] = 3;
                            values[valuesById[4] = "TRANSFER_FAILED"] = 4;
                            values[valuesById[6] = "ACTIVE"] = 6;
                            values[valuesById[7] = "SUSPENDED"] = 7;
                            values[valuesById[8] = "EXPORTED"] = 8;
                            return values;
                        })();
    
                        /**
                         * Issue enum.
                         * @name google.cloud.domains.v1alpha2.Registration.Issue
                         * @enum {number}
                         * @property {number} ISSUE_UNSPECIFIED=0 ISSUE_UNSPECIFIED value
                         * @property {number} CONTACT_SUPPORT=1 CONTACT_SUPPORT value
                         * @property {number} UNVERIFIED_EMAIL=2 UNVERIFIED_EMAIL value
                         */
                        Registration.Issue = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ISSUE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTACT_SUPPORT"] = 1;
                            values[valuesById[2] = "UNVERIFIED_EMAIL"] = 2;
                            return values;
                        })();
    
                        return Registration;
                    })();
    
                    v1alpha2.ManagementSettings = (function() {
    
                        /**
                         * Properties of a ManagementSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IManagementSettings
                         * @property {google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod|null} [renewalMethod] ManagementSettings renewalMethod
                         * @property {google.cloud.domains.v1alpha2.TransferLockState|null} [transferLockState] ManagementSettings transferLockState
                         */
    
                        /**
                         * Constructs a new ManagementSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ManagementSettings.
                         * @implements IManagementSettings
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IManagementSettings=} [properties] Properties to set
                         */
                        function ManagementSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ManagementSettings renewalMethod.
                         * @member {google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod} renewalMethod
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.renewalMethod = 0;
    
                        /**
                         * ManagementSettings transferLockState.
                         * @member {google.cloud.domains.v1alpha2.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.transferLockState = 0;
    
                        /**
                         * Creates a new ManagementSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IManagementSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ManagementSettings} ManagementSettings instance
                         */
                        ManagementSettings.create = function create(properties) {
                            return new ManagementSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message. Does not implicitly {@link google.cloud.domains.v1alpha2.ManagementSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.renewalMethod != null && Object.hasOwnProperty.call(message, "renewalMethod"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.renewalMethod);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ManagementSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ManagementSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.renewalMethod = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ManagementSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ManagementSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                switch (message.renewalMethod) {
                                default:
                                    return "renewalMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ManagementSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ManagementSettings} ManagementSettings
                         */
                        ManagementSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ManagementSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ManagementSettings();
                            switch (object.renewalMethod) {
                            default:
                                if (typeof object.renewalMethod === "number") {
                                    message.renewalMethod = object.renewalMethod;
                                    break;
                                }
                                break;
                            case "RENEWAL_METHOD_UNSPECIFIED":
                            case 0:
                                message.renewalMethod = 0;
                                break;
                            case "AUTOMATIC_RENEWAL":
                            case 1:
                                message.renewalMethod = 1;
                                break;
                            case "MANUAL_RENEWAL":
                            case 2:
                                message.renewalMethod = 2;
                                break;
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ManagementSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ManagementSettings} message ManagementSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ManagementSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.renewalMethod = options.enums === String ? "RENEWAL_METHOD_UNSPECIFIED" : 0;
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                            }
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                object.renewalMethod = options.enums === String ? $root.google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod[message.renewalMethod] === undefined ? message.renewalMethod : $root.google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod[message.renewalMethod] : message.renewalMethod;
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1alpha2.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1alpha2.TransferLockState[message.transferLockState] : message.transferLockState;
                            return object;
                        };
    
                        /**
                         * Converts this ManagementSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ManagementSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ManagementSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ManagementSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ManagementSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ManagementSettings";
                        };
    
                        /**
                         * RenewalMethod enum.
                         * @name google.cloud.domains.v1alpha2.ManagementSettings.RenewalMethod
                         * @enum {number}
                         * @property {number} RENEWAL_METHOD_UNSPECIFIED=0 RENEWAL_METHOD_UNSPECIFIED value
                         * @property {number} AUTOMATIC_RENEWAL=1 AUTOMATIC_RENEWAL value
                         * @property {number} MANUAL_RENEWAL=2 MANUAL_RENEWAL value
                         */
                        ManagementSettings.RenewalMethod = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RENEWAL_METHOD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AUTOMATIC_RENEWAL"] = 1;
                            values[valuesById[2] = "MANUAL_RENEWAL"] = 2;
                            return values;
                        })();
    
                        return ManagementSettings;
                    })();
    
                    v1alpha2.DnsSettings = (function() {
    
                        /**
                         * Properties of a DnsSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IDnsSettings
                         * @property {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns|null} [customDns] DnsSettings customDns
                         * @property {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns|null} [googleDomainsDns] DnsSettings googleDomainsDns
                         * @property {Array.<google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord>|null} [glueRecords] DnsSettings glueRecords
                         */
    
                        /**
                         * Constructs a new DnsSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a DnsSettings.
                         * @implements IDnsSettings
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IDnsSettings=} [properties] Properties to set
                         */
                        function DnsSettings(properties) {
                            this.glueRecords = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DnsSettings customDns.
                         * @member {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns|null|undefined} customDns
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.customDns = null;
    
                        /**
                         * DnsSettings googleDomainsDns.
                         * @member {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns|null|undefined} googleDomainsDns
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.googleDomainsDns = null;
    
                        /**
                         * DnsSettings glueRecords.
                         * @member {Array.<google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord>} glueRecords
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.glueRecords = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DnsSettings dnsProvider.
                         * @member {"customDns"|"googleDomainsDns"|undefined} dnsProvider
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @instance
                         */
                        Object.defineProperty(DnsSettings.prototype, "dnsProvider", {
                            get: $util.oneOfGetter($oneOfFields = ["customDns", "googleDomainsDns"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DnsSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDnsSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.DnsSettings} DnsSettings instance
                         */
                        DnsSettings.create = function create(properties) {
                            return new DnsSettings(properties);
                        };
    
                        /**
                         * Encodes the specified DnsSettings message. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customDns != null && Object.hasOwnProperty.call(message, "customDns"))
                                $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns.encode(message.customDns, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.googleDomainsDns != null && Object.hasOwnProperty.call(message, "googleDomainsDns"))
                                $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.encode(message.googleDomainsDns, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.glueRecords != null && message.glueRecords.length)
                                for (var i = 0; i < message.glueRecords.length; ++i)
                                    $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.encode(message.glueRecords[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DnsSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DnsSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customDns = $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.googleDomainsDns = $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.glueRecords && message.glueRecords.length))
                                            message.glueRecords = [];
                                        message.glueRecords.push($root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DnsSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DnsSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns.verify(message.customDns);
                                    if (error)
                                        return "customDns." + error;
                                }
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                if (properties.dnsProvider === 1)
                                    return "dnsProvider: multiple values";
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.verify(message.googleDomainsDns);
                                    if (error)
                                        return "googleDomainsDns." + error;
                                }
                            }
                            if (message.glueRecords != null && message.hasOwnProperty("glueRecords")) {
                                if (!Array.isArray(message.glueRecords))
                                    return "glueRecords: array expected";
                                for (var i = 0; i < message.glueRecords.length; ++i) {
                                    var error = $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.verify(message.glueRecords[i]);
                                    if (error)
                                        return "glueRecords." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DnsSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.DnsSettings} DnsSettings
                         */
                        DnsSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.DnsSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.DnsSettings();
                            if (object.customDns != null) {
                                if (typeof object.customDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.customDns: object expected");
                                message.customDns = $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns.fromObject(object.customDns);
                            }
                            if (object.googleDomainsDns != null) {
                                if (typeof object.googleDomainsDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.googleDomainsDns: object expected");
                                message.googleDomainsDns = $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.fromObject(object.googleDomainsDns);
                            }
                            if (object.glueRecords) {
                                if (!Array.isArray(object.glueRecords))
                                    throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.glueRecords: array expected");
                                message.glueRecords = [];
                                for (var i = 0; i < object.glueRecords.length; ++i) {
                                    if (typeof object.glueRecords[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.glueRecords: object expected");
                                    message.glueRecords[i] = $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.fromObject(object.glueRecords[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DnsSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.DnsSettings} message DnsSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DnsSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.glueRecords = [];
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                object.customDns = $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns.toObject(message.customDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "customDns";
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                object.googleDomainsDns = $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.toObject(message.googleDomainsDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "googleDomainsDns";
                            }
                            if (message.glueRecords && message.glueRecords.length) {
                                object.glueRecords = [];
                                for (var j = 0; j < message.glueRecords.length; ++j)
                                    object.glueRecords[j] = $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.toObject(message.glueRecords[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DnsSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DnsSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DnsSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.DnsSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DnsSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DnsSettings";
                        };
    
                        DnsSettings.CustomDns = (function() {
    
                            /**
                             * Properties of a CustomDns.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @interface ICustomDns
                             * @property {Array.<string>|null} [nameServers] CustomDns nameServers
                             * @property {Array.<google.cloud.domains.v1alpha2.DnsSettings.IDsRecord>|null} [dsRecords] CustomDns dsRecords
                             */
    
                            /**
                             * Constructs a new CustomDns.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @classdesc Represents a CustomDns.
                             * @implements ICustomDns
                             * @constructor
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns=} [properties] Properties to set
                             */
                            function CustomDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CustomDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * CustomDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1alpha2.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new CustomDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.CustomDns} CustomDns instance
                             */
                            CustomDns.create = function create(properties) {
                                return new CustomDns(properties);
                            };
    
                            /**
                             * Encodes the specified CustomDns message. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CustomDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CustomDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CustomDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CustomDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.CustomDns} CustomDns
                             */
                            CustomDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1alpha2.DnsSettings.CustomDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.CustomDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.CustomDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.CustomDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CustomDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.CustomDns} message CustomDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CustomDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CustomDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CustomDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CustomDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.CustomDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CustomDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DnsSettings.CustomDns";
                            };
    
                            return CustomDns;
                        })();
    
                        DnsSettings.GoogleDomainsDns = (function() {
    
                            /**
                             * Properties of a GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @interface IGoogleDomainsDns
                             * @property {Array.<string>|null} [nameServers] GoogleDomainsDns nameServers
                             * @property {google.cloud.domains.v1alpha2.DnsSettings.DsState|null} [dsState] GoogleDomainsDns dsState
                             * @property {Array.<google.cloud.domains.v1alpha2.DnsSettings.IDsRecord>|null} [dsRecords] GoogleDomainsDns dsRecords
                             */
    
                            /**
                             * Constructs a new GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @classdesc Represents a GoogleDomainsDns.
                             * @implements IGoogleDomainsDns
                             * @constructor
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             */
                            function GoogleDomainsDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GoogleDomainsDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * GoogleDomainsDns dsState.
                             * @member {google.cloud.domains.v1alpha2.DnsSettings.DsState} dsState
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsState = 0;
    
                            /**
                             * GoogleDomainsDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1alpha2.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new GoogleDomainsDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns} GoogleDomainsDns instance
                             */
                            GoogleDomainsDns.create = function create(properties) {
                                return new GoogleDomainsDns(properties);
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsState != null && Object.hasOwnProperty.call(message, "dsState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dsState);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.dsState = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GoogleDomainsDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GoogleDomainsDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    switch (message.dsState) {
                                    default:
                                        return "dsState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GoogleDomainsDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             */
                            GoogleDomainsDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                switch (object.dsState) {
                                default:
                                    if (typeof object.dsState === "number") {
                                        message.dsState = object.dsState;
                                        break;
                                    }
                                    break;
                                case "DS_STATE_UNSPECIFIED":
                                case 0:
                                    message.dsState = 0;
                                    break;
                                case "DS_RECORDS_UNPUBLISHED":
                                case 1:
                                    message.dsState = 1;
                                    break;
                                case "DS_RECORDS_PUBLISHED":
                                case 2:
                                    message.dsState = 2;
                                    break;
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GoogleDomainsDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns} message GoogleDomainsDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GoogleDomainsDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (options.defaults)
                                    object.dsState = options.enums === String ? "DS_STATE_UNSPECIFIED" : 0;
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    object.dsState = options.enums === String ? $root.google.cloud.domains.v1alpha2.DnsSettings.DsState[message.dsState] === undefined ? message.dsState : $root.google.cloud.domains.v1alpha2.DnsSettings.DsState[message.dsState] : message.dsState;
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GoogleDomainsDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GoogleDomainsDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GoogleDomainsDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GoogleDomainsDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DnsSettings.GoogleDomainsDns";
                            };
    
                            return GoogleDomainsDns;
                        })();
    
                        DnsSettings.DsRecord = (function() {
    
                            /**
                             * Properties of a DsRecord.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @interface IDsRecord
                             * @property {number|null} [keyTag] DsRecord keyTag
                             * @property {google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm|null} [algorithm] DsRecord algorithm
                             * @property {google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType|null} [digestType] DsRecord digestType
                             * @property {string|null} [digest] DsRecord digest
                             */
    
                            /**
                             * Constructs a new DsRecord.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @classdesc Represents a DsRecord.
                             * @implements IDsRecord
                             * @constructor
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IDsRecord=} [properties] Properties to set
                             */
                            function DsRecord(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DsRecord keyTag.
                             * @member {number} keyTag
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.keyTag = 0;
    
                            /**
                             * DsRecord algorithm.
                             * @member {google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm} algorithm
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.algorithm = 0;
    
                            /**
                             * DsRecord digestType.
                             * @member {google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType} digestType
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digestType = 0;
    
                            /**
                             * DsRecord digest.
                             * @member {string} digest
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digest = "";
    
                            /**
                             * Creates a new DsRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IDsRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.DsRecord} DsRecord instance
                             */
                            DsRecord.create = function create(properties) {
                                return new DsRecord(properties);
                            };
    
                            /**
                             * Encodes the specified DsRecord message. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.keyTag != null && Object.hasOwnProperty.call(message, "keyTag"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keyTag);
                                if (message.algorithm != null && Object.hasOwnProperty.call(message, "algorithm"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.algorithm);
                                if (message.digestType != null && Object.hasOwnProperty.call(message, "digestType"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.digestType);
                                if (message.digest != null && Object.hasOwnProperty.call(message, "digest"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.digest);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DsRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.keyTag = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.algorithm = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.digestType = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.digest = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DsRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DsRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    if (!$util.isInteger(message.keyTag))
                                        return "keyTag: integer expected";
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    switch (message.algorithm) {
                                    default:
                                        return "algorithm: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 10:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                    case 16:
                                    case 252:
                                    case 253:
                                    case 254:
                                        break;
                                    }
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    switch (message.digestType) {
                                    default:
                                        return "digestType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    if (!$util.isString(message.digest))
                                        return "digest: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DsRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.DsRecord} DsRecord
                             */
                            DsRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord();
                                if (object.keyTag != null)
                                    message.keyTag = object.keyTag | 0;
                                switch (object.algorithm) {
                                default:
                                    if (typeof object.algorithm === "number") {
                                        message.algorithm = object.algorithm;
                                        break;
                                    }
                                    break;
                                case "ALGORITHM_UNSPECIFIED":
                                case 0:
                                    message.algorithm = 0;
                                    break;
                                case "RSAMD5":
                                case 1:
                                    message.algorithm = 1;
                                    break;
                                case "DH":
                                case 2:
                                    message.algorithm = 2;
                                    break;
                                case "DSA":
                                case 3:
                                    message.algorithm = 3;
                                    break;
                                case "ECC":
                                case 4:
                                    message.algorithm = 4;
                                    break;
                                case "RSASHA1":
                                case 5:
                                    message.algorithm = 5;
                                    break;
                                case "DSANSEC3SHA1":
                                case 6:
                                    message.algorithm = 6;
                                    break;
                                case "RSASHA1NSEC3SHA1":
                                case 7:
                                    message.algorithm = 7;
                                    break;
                                case "RSASHA256":
                                case 8:
                                    message.algorithm = 8;
                                    break;
                                case "RSASHA512":
                                case 10:
                                    message.algorithm = 10;
                                    break;
                                case "ECCGOST":
                                case 12:
                                    message.algorithm = 12;
                                    break;
                                case "ECDSAP256SHA256":
                                case 13:
                                    message.algorithm = 13;
                                    break;
                                case "ECDSAP384SHA384":
                                case 14:
                                    message.algorithm = 14;
                                    break;
                                case "ED25519":
                                case 15:
                                    message.algorithm = 15;
                                    break;
                                case "ED448":
                                case 16:
                                    message.algorithm = 16;
                                    break;
                                case "INDIRECT":
                                case 252:
                                    message.algorithm = 252;
                                    break;
                                case "PRIVATEDNS":
                                case 253:
                                    message.algorithm = 253;
                                    break;
                                case "PRIVATEOID":
                                case 254:
                                    message.algorithm = 254;
                                    break;
                                }
                                switch (object.digestType) {
                                default:
                                    if (typeof object.digestType === "number") {
                                        message.digestType = object.digestType;
                                        break;
                                    }
                                    break;
                                case "DIGEST_TYPE_UNSPECIFIED":
                                case 0:
                                    message.digestType = 0;
                                    break;
                                case "SHA1":
                                case 1:
                                    message.digestType = 1;
                                    break;
                                case "SHA256":
                                case 2:
                                    message.digestType = 2;
                                    break;
                                case "GOST3411":
                                case 3:
                                    message.digestType = 3;
                                    break;
                                case "SHA384":
                                case 4:
                                    message.digestType = 4;
                                    break;
                                }
                                if (object.digest != null)
                                    message.digest = String(object.digest);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DsRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.DsRecord} message DsRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DsRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.keyTag = 0;
                                    object.algorithm = options.enums === String ? "ALGORITHM_UNSPECIFIED" : 0;
                                    object.digestType = options.enums === String ? "DIGEST_TYPE_UNSPECIFIED" : 0;
                                    object.digest = "";
                                }
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    object.keyTag = message.keyTag;
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    object.algorithm = options.enums === String ? $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm[message.algorithm] === undefined ? message.algorithm : $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm[message.algorithm] : message.algorithm;
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    object.digestType = options.enums === String ? $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType[message.digestType] === undefined ? message.digestType : $root.google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType[message.digestType] : message.digestType;
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    object.digest = message.digest;
                                return object;
                            };
    
                            /**
                             * Converts this DsRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DsRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DsRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.DsRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DsRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DnsSettings.DsRecord";
                            };
    
                            /**
                             * Algorithm enum.
                             * @name google.cloud.domains.v1alpha2.DnsSettings.DsRecord.Algorithm
                             * @enum {number}
                             * @property {number} ALGORITHM_UNSPECIFIED=0 ALGORITHM_UNSPECIFIED value
                             * @property {number} RSAMD5=1 RSAMD5 value
                             * @property {number} DH=2 DH value
                             * @property {number} DSA=3 DSA value
                             * @property {number} ECC=4 ECC value
                             * @property {number} RSASHA1=5 RSASHA1 value
                             * @property {number} DSANSEC3SHA1=6 DSANSEC3SHA1 value
                             * @property {number} RSASHA1NSEC3SHA1=7 RSASHA1NSEC3SHA1 value
                             * @property {number} RSASHA256=8 RSASHA256 value
                             * @property {number} RSASHA512=10 RSASHA512 value
                             * @property {number} ECCGOST=12 ECCGOST value
                             * @property {number} ECDSAP256SHA256=13 ECDSAP256SHA256 value
                             * @property {number} ECDSAP384SHA384=14 ECDSAP384SHA384 value
                             * @property {number} ED25519=15 ED25519 value
                             * @property {number} ED448=16 ED448 value
                             * @property {number} INDIRECT=252 INDIRECT value
                             * @property {number} PRIVATEDNS=253 PRIVATEDNS value
                             * @property {number} PRIVATEOID=254 PRIVATEOID value
                             */
                            DsRecord.Algorithm = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ALGORITHM_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RSAMD5"] = 1;
                                values[valuesById[2] = "DH"] = 2;
                                values[valuesById[3] = "DSA"] = 3;
                                values[valuesById[4] = "ECC"] = 4;
                                values[valuesById[5] = "RSASHA1"] = 5;
                                values[valuesById[6] = "DSANSEC3SHA1"] = 6;
                                values[valuesById[7] = "RSASHA1NSEC3SHA1"] = 7;
                                values[valuesById[8] = "RSASHA256"] = 8;
                                values[valuesById[10] = "RSASHA512"] = 10;
                                values[valuesById[12] = "ECCGOST"] = 12;
                                values[valuesById[13] = "ECDSAP256SHA256"] = 13;
                                values[valuesById[14] = "ECDSAP384SHA384"] = 14;
                                values[valuesById[15] = "ED25519"] = 15;
                                values[valuesById[16] = "ED448"] = 16;
                                values[valuesById[252] = "INDIRECT"] = 252;
                                values[valuesById[253] = "PRIVATEDNS"] = 253;
                                values[valuesById[254] = "PRIVATEOID"] = 254;
                                return values;
                            })();
    
                            /**
                             * DigestType enum.
                             * @name google.cloud.domains.v1alpha2.DnsSettings.DsRecord.DigestType
                             * @enum {number}
                             * @property {number} DIGEST_TYPE_UNSPECIFIED=0 DIGEST_TYPE_UNSPECIFIED value
                             * @property {number} SHA1=1 SHA1 value
                             * @property {number} SHA256=2 SHA256 value
                             * @property {number} GOST3411=3 GOST3411 value
                             * @property {number} SHA384=4 SHA384 value
                             */
                            DsRecord.DigestType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DIGEST_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SHA1"] = 1;
                                values[valuesById[2] = "SHA256"] = 2;
                                values[valuesById[3] = "GOST3411"] = 3;
                                values[valuesById[4] = "SHA384"] = 4;
                                return values;
                            })();
    
                            return DsRecord;
                        })();
    
                        DnsSettings.GlueRecord = (function() {
    
                            /**
                             * Properties of a GlueRecord.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @interface IGlueRecord
                             * @property {string|null} [hostName] GlueRecord hostName
                             * @property {Array.<string>|null} [ipv4Addresses] GlueRecord ipv4Addresses
                             * @property {Array.<string>|null} [ipv6Addresses] GlueRecord ipv6Addresses
                             */
    
                            /**
                             * Constructs a new GlueRecord.
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings
                             * @classdesc Represents a GlueRecord.
                             * @implements IGlueRecord
                             * @constructor
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord=} [properties] Properties to set
                             */
                            function GlueRecord(properties) {
                                this.ipv4Addresses = [];
                                this.ipv6Addresses = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GlueRecord hostName.
                             * @member {string} hostName
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.hostName = "";
    
                            /**
                             * GlueRecord ipv4Addresses.
                             * @member {Array.<string>} ipv4Addresses
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv4Addresses = $util.emptyArray;
    
                            /**
                             * GlueRecord ipv6Addresses.
                             * @member {Array.<string>} ipv6Addresses
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv6Addresses = $util.emptyArray;
    
                            /**
                             * Creates a new GlueRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GlueRecord} GlueRecord instance
                             */
                            GlueRecord.create = function create(properties) {
                                return new GlueRecord(properties);
                            };
    
                            /**
                             * Encodes the specified GlueRecord message. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hostName != null && Object.hasOwnProperty.call(message, "hostName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostName);
                                if (message.ipv4Addresses != null && message.ipv4Addresses.length)
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.ipv4Addresses[i]);
                                if (message.ipv6Addresses != null && message.ipv6Addresses.length)
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.ipv6Addresses[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GlueRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.hostName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.ipv4Addresses && message.ipv4Addresses.length))
                                                message.ipv4Addresses = [];
                                            message.ipv4Addresses.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.ipv6Addresses && message.ipv6Addresses.length))
                                                message.ipv6Addresses = [];
                                            message.ipv6Addresses.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GlueRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GlueRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    if (!$util.isString(message.hostName))
                                        return "hostName: string expected";
                                if (message.ipv4Addresses != null && message.hasOwnProperty("ipv4Addresses")) {
                                    if (!Array.isArray(message.ipv4Addresses))
                                        return "ipv4Addresses: array expected";
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        if (!$util.isString(message.ipv4Addresses[i]))
                                            return "ipv4Addresses: string[] expected";
                                }
                                if (message.ipv6Addresses != null && message.hasOwnProperty("ipv6Addresses")) {
                                    if (!Array.isArray(message.ipv6Addresses))
                                        return "ipv6Addresses: array expected";
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        if (!$util.isString(message.ipv6Addresses[i]))
                                            return "ipv6Addresses: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GlueRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1alpha2.DnsSettings.GlueRecord} GlueRecord
                             */
                            GlueRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1alpha2.DnsSettings.GlueRecord();
                                if (object.hostName != null)
                                    message.hostName = String(object.hostName);
                                if (object.ipv4Addresses) {
                                    if (!Array.isArray(object.ipv4Addresses))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.ipv4Addresses: array expected");
                                    message.ipv4Addresses = [];
                                    for (var i = 0; i < object.ipv4Addresses.length; ++i)
                                        message.ipv4Addresses[i] = String(object.ipv4Addresses[i]);
                                }
                                if (object.ipv6Addresses) {
                                    if (!Array.isArray(object.ipv6Addresses))
                                        throw TypeError(".google.cloud.domains.v1alpha2.DnsSettings.GlueRecord.ipv6Addresses: array expected");
                                    message.ipv6Addresses = [];
                                    for (var i = 0; i < object.ipv6Addresses.length; ++i)
                                        message.ipv6Addresses[i] = String(object.ipv6Addresses[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GlueRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1alpha2.DnsSettings.GlueRecord} message GlueRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GlueRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.ipv4Addresses = [];
                                    object.ipv6Addresses = [];
                                }
                                if (options.defaults)
                                    object.hostName = "";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    object.hostName = message.hostName;
                                if (message.ipv4Addresses && message.ipv4Addresses.length) {
                                    object.ipv4Addresses = [];
                                    for (var j = 0; j < message.ipv4Addresses.length; ++j)
                                        object.ipv4Addresses[j] = message.ipv4Addresses[j];
                                }
                                if (message.ipv6Addresses && message.ipv6Addresses.length) {
                                    object.ipv6Addresses = [];
                                    for (var j = 0; j < message.ipv6Addresses.length; ++j)
                                        object.ipv6Addresses[j] = message.ipv6Addresses[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GlueRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GlueRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GlueRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1alpha2.DnsSettings.GlueRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GlueRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DnsSettings.GlueRecord";
                            };
    
                            return GlueRecord;
                        })();
    
                        /**
                         * DsState enum.
                         * @name google.cloud.domains.v1alpha2.DnsSettings.DsState
                         * @enum {number}
                         * @property {number} DS_STATE_UNSPECIFIED=0 DS_STATE_UNSPECIFIED value
                         * @property {number} DS_RECORDS_UNPUBLISHED=1 DS_RECORDS_UNPUBLISHED value
                         * @property {number} DS_RECORDS_PUBLISHED=2 DS_RECORDS_PUBLISHED value
                         */
                        DnsSettings.DsState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DS_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DS_RECORDS_UNPUBLISHED"] = 1;
                            values[valuesById[2] = "DS_RECORDS_PUBLISHED"] = 2;
                            return values;
                        })();
    
                        return DnsSettings;
                    })();
    
                    v1alpha2.ContactSettings = (function() {
    
                        /**
                         * Properties of a ContactSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IContactSettings
                         * @property {google.cloud.domains.v1alpha2.ContactPrivacy|null} [privacy] ContactSettings privacy
                         * @property {google.cloud.domains.v1alpha2.ContactSettings.IContact|null} [registrantContact] ContactSettings registrantContact
                         * @property {google.cloud.domains.v1alpha2.ContactSettings.IContact|null} [adminContact] ContactSettings adminContact
                         * @property {google.cloud.domains.v1alpha2.ContactSettings.IContact|null} [technicalContact] ContactSettings technicalContact
                         */
    
                        /**
                         * Constructs a new ContactSettings.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ContactSettings.
                         * @implements IContactSettings
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IContactSettings=} [properties] Properties to set
                         */
                        function ContactSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContactSettings privacy.
                         * @member {google.cloud.domains.v1alpha2.ContactPrivacy} privacy
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.privacy = 0;
    
                        /**
                         * ContactSettings registrantContact.
                         * @member {google.cloud.domains.v1alpha2.ContactSettings.IContact|null|undefined} registrantContact
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.registrantContact = null;
    
                        /**
                         * ContactSettings adminContact.
                         * @member {google.cloud.domains.v1alpha2.ContactSettings.IContact|null|undefined} adminContact
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.adminContact = null;
    
                        /**
                         * ContactSettings technicalContact.
                         * @member {google.cloud.domains.v1alpha2.ContactSettings.IContact|null|undefined} technicalContact
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.technicalContact = null;
    
                        /**
                         * Creates a new ContactSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IContactSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ContactSettings} ContactSettings instance
                         */
                        ContactSettings.create = function create(properties) {
                            return new ContactSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ContactSettings message. Does not implicitly {@link google.cloud.domains.v1alpha2.ContactSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privacy != null && Object.hasOwnProperty.call(message, "privacy"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.privacy);
                            if (message.registrantContact != null && Object.hasOwnProperty.call(message, "registrantContact"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.encode(message.registrantContact, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.adminContact != null && Object.hasOwnProperty.call(message, "adminContact"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.encode(message.adminContact, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.technicalContact != null && Object.hasOwnProperty.call(message, "technicalContact"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.encode(message.technicalContact, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContactSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ContactSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ContactSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privacy = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.registrantContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.adminContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.technicalContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContactSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContactSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                switch (message.privacy) {
                                default:
                                    return "privacy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.verify(message.registrantContact);
                                if (error)
                                    return "registrantContact." + error;
                            }
                            if (message.adminContact != null && message.hasOwnProperty("adminContact")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.verify(message.adminContact);
                                if (error)
                                    return "adminContact." + error;
                            }
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.verify(message.technicalContact);
                                if (error)
                                    return "technicalContact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContactSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ContactSettings} ContactSettings
                         */
                        ContactSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ContactSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ContactSettings();
                            switch (object.privacy) {
                            default:
                                if (typeof object.privacy === "number") {
                                    message.privacy = object.privacy;
                                    break;
                                }
                                break;
                            case "CONTACT_PRIVACY_UNSPECIFIED":
                            case 0:
                                message.privacy = 0;
                                break;
                            case "PUBLIC_CONTACT_DATA":
                            case 1:
                                message.privacy = 1;
                                break;
                            case "PRIVATE_CONTACT_DATA":
                            case 2:
                                message.privacy = 2;
                                break;
                            case "REDACTED_CONTACT_DATA":
                            case 3:
                                message.privacy = 3;
                                break;
                            }
                            if (object.registrantContact != null) {
                                if (typeof object.registrantContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ContactSettings.registrantContact: object expected");
                                message.registrantContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.fromObject(object.registrantContact);
                            }
                            if (object.adminContact != null) {
                                if (typeof object.adminContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ContactSettings.adminContact: object expected");
                                message.adminContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.fromObject(object.adminContact);
                            }
                            if (object.technicalContact != null) {
                                if (typeof object.technicalContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ContactSettings.technicalContact: object expected");
                                message.technicalContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.fromObject(object.technicalContact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContactSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ContactSettings} message ContactSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContactSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privacy = options.enums === String ? "CONTACT_PRIVACY_UNSPECIFIED" : 0;
                                object.registrantContact = null;
                                object.adminContact = null;
                                object.technicalContact = null;
                            }
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                object.privacy = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.privacy] === undefined ? message.privacy : $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.privacy] : message.privacy;
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact"))
                                object.registrantContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.toObject(message.registrantContact, options);
                            if (message.adminContact != null && message.hasOwnProperty("adminContact"))
                                object.adminContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.toObject(message.adminContact, options);
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact"))
                                object.technicalContact = $root.google.cloud.domains.v1alpha2.ContactSettings.Contact.toObject(message.technicalContact, options);
                            return object;
                        };
    
                        /**
                         * Converts this ContactSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContactSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContactSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ContactSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContactSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ContactSettings";
                        };
    
                        ContactSettings.Contact = (function() {
    
                            /**
                             * Properties of a Contact.
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings
                             * @interface IContact
                             * @property {google.type.IPostalAddress|null} [postalAddress] Contact postalAddress
                             * @property {string|null} [email] Contact email
                             * @property {string|null} [phoneNumber] Contact phoneNumber
                             * @property {string|null} [faxNumber] Contact faxNumber
                             */
    
                            /**
                             * Constructs a new Contact.
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings
                             * @classdesc Represents a Contact.
                             * @implements IContact
                             * @constructor
                             * @param {google.cloud.domains.v1alpha2.ContactSettings.IContact=} [properties] Properties to set
                             */
                            function Contact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Contact postalAddress.
                             * @member {google.type.IPostalAddress|null|undefined} postalAddress
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.postalAddress = null;
    
                            /**
                             * Contact email.
                             * @member {string} email
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.email = "";
    
                            /**
                             * Contact phoneNumber.
                             * @member {string} phoneNumber
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.phoneNumber = "";
    
                            /**
                             * Contact faxNumber.
                             * @member {string} faxNumber
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.faxNumber = "";
    
                            /**
                             * Creates a new Contact instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1alpha2.ContactSettings.IContact=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1alpha2.ContactSettings.Contact} Contact instance
                             */
                            Contact.create = function create(properties) {
                                return new Contact(properties);
                            };
    
                            /**
                             * Encodes the specified Contact message. Does not implicitly {@link google.cloud.domains.v1alpha2.ContactSettings.Contact.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1alpha2.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.postalAddress != null && Object.hasOwnProperty.call(message, "postalAddress"))
                                    $root.google.type.PostalAddress.encode(message.postalAddress, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                                if (message.phoneNumber != null && Object.hasOwnProperty.call(message, "phoneNumber"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.phoneNumber);
                                if (message.faxNumber != null && Object.hasOwnProperty.call(message, "faxNumber"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.faxNumber);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Contact message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ContactSettings.Contact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1alpha2.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1alpha2.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ContactSettings.Contact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.postalAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.email = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.phoneNumber = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.faxNumber = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1alpha2.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Contact message.
                             * @function verify
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Contact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress")) {
                                    var error = $root.google.type.PostalAddress.verify(message.postalAddress);
                                    if (error)
                                        return "postalAddress." + error;
                                }
                                if (message.email != null && message.hasOwnProperty("email"))
                                    if (!$util.isString(message.email))
                                        return "email: string expected";
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    if (!$util.isString(message.phoneNumber))
                                        return "phoneNumber: string expected";
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    if (!$util.isString(message.faxNumber))
                                        return "faxNumber: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Contact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1alpha2.ContactSettings.Contact} Contact
                             */
                            Contact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1alpha2.ContactSettings.Contact)
                                    return object;
                                var message = new $root.google.cloud.domains.v1alpha2.ContactSettings.Contact();
                                if (object.postalAddress != null) {
                                    if (typeof object.postalAddress !== "object")
                                        throw TypeError(".google.cloud.domains.v1alpha2.ContactSettings.Contact.postalAddress: object expected");
                                    message.postalAddress = $root.google.type.PostalAddress.fromObject(object.postalAddress);
                                }
                                if (object.email != null)
                                    message.email = String(object.email);
                                if (object.phoneNumber != null)
                                    message.phoneNumber = String(object.phoneNumber);
                                if (object.faxNumber != null)
                                    message.faxNumber = String(object.faxNumber);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Contact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1alpha2.ContactSettings.Contact} message Contact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Contact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.postalAddress = null;
                                    object.email = "";
                                    object.phoneNumber = "";
                                    object.faxNumber = "";
                                }
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress"))
                                    object.postalAddress = $root.google.type.PostalAddress.toObject(message.postalAddress, options);
                                if (message.email != null && message.hasOwnProperty("email"))
                                    object.email = message.email;
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    object.phoneNumber = message.phoneNumber;
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    object.faxNumber = message.faxNumber;
                                return object;
                            };
    
                            /**
                             * Converts this Contact to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Contact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Contact
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1alpha2.ContactSettings.Contact
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Contact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ContactSettings.Contact";
                            };
    
                            return Contact;
                        })();
    
                        return ContactSettings;
                    })();
    
                    v1alpha2.SearchDomainsRequest = (function() {
    
                        /**
                         * Properties of a SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface ISearchDomainsRequest
                         * @property {string|null} [query] SearchDomainsRequest query
                         * @property {string|null} [location] SearchDomainsRequest location
                         */
    
                        /**
                         * Constructs a new SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a SearchDomainsRequest.
                         * @implements ISearchDomainsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest=} [properties] Properties to set
                         */
                        function SearchDomainsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsRequest query.
                         * @member {string} query
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.query = "";
    
                        /**
                         * SearchDomainsRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.location = "";
    
                        /**
                         * Creates a new SearchDomainsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsRequest} SearchDomainsRequest instance
                         */
                        SearchDomainsRequest.create = function create(properties) {
                            return new SearchDomainsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.SearchDomainsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.SearchDomainsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.SearchDomainsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsRequest} SearchDomainsRequest
                         */
                        SearchDomainsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.SearchDomainsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.SearchDomainsRequest();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.SearchDomainsRequest} message SearchDomainsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.query = "";
                                object.location = "";
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.SearchDomainsRequest";
                        };
    
                        return SearchDomainsRequest;
                    })();
    
                    v1alpha2.SearchDomainsResponse = (function() {
    
                        /**
                         * Properties of a SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface ISearchDomainsResponse
                         * @property {Array.<google.cloud.domains.v1alpha2.IRegisterParameters>|null} [registerParameters] SearchDomainsResponse registerParameters
                         */
    
                        /**
                         * Constructs a new SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a SearchDomainsResponse.
                         * @implements ISearchDomainsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsResponse=} [properties] Properties to set
                         */
                        function SearchDomainsResponse(properties) {
                            this.registerParameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsResponse registerParameters.
                         * @member {Array.<google.cloud.domains.v1alpha2.IRegisterParameters>} registerParameters
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @instance
                         */
                        SearchDomainsResponse.prototype.registerParameters = $util.emptyArray;
    
                        /**
                         * Creates a new SearchDomainsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsResponse} SearchDomainsResponse instance
                         */
                        SearchDomainsResponse.create = function create(properties) {
                            return new SearchDomainsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message. Does not implicitly {@link google.cloud.domains.v1alpha2.SearchDomainsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && message.registerParameters.length)
                                for (var i = 0; i < message.registerParameters.length; ++i)
                                    $root.google.cloud.domains.v1alpha2.RegisterParameters.encode(message.registerParameters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.SearchDomainsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.SearchDomainsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registerParameters && message.registerParameters.length))
                                            message.registerParameters = [];
                                        message.registerParameters.push($root.google.cloud.domains.v1alpha2.RegisterParameters.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                if (!Array.isArray(message.registerParameters))
                                    return "registerParameters: array expected";
                                for (var i = 0; i < message.registerParameters.length; ++i) {
                                    var error = $root.google.cloud.domains.v1alpha2.RegisterParameters.verify(message.registerParameters[i]);
                                    if (error)
                                        return "registerParameters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.SearchDomainsResponse} SearchDomainsResponse
                         */
                        SearchDomainsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.SearchDomainsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.SearchDomainsResponse();
                            if (object.registerParameters) {
                                if (!Array.isArray(object.registerParameters))
                                    throw TypeError(".google.cloud.domains.v1alpha2.SearchDomainsResponse.registerParameters: array expected");
                                message.registerParameters = [];
                                for (var i = 0; i < object.registerParameters.length; ++i) {
                                    if (typeof object.registerParameters[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1alpha2.SearchDomainsResponse.registerParameters: object expected");
                                    message.registerParameters[i] = $root.google.cloud.domains.v1alpha2.RegisterParameters.fromObject(object.registerParameters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.SearchDomainsResponse} message SearchDomainsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registerParameters = [];
                            if (message.registerParameters && message.registerParameters.length) {
                                object.registerParameters = [];
                                for (var j = 0; j < message.registerParameters.length; ++j)
                                    object.registerParameters[j] = $root.google.cloud.domains.v1alpha2.RegisterParameters.toObject(message.registerParameters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.SearchDomainsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.SearchDomainsResponse";
                        };
    
                        return SearchDomainsResponse;
                    })();
    
                    v1alpha2.RetrieveRegisterParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRetrieveRegisterParametersRequest
                         * @property {string|null} [domainName] RetrieveRegisterParametersRequest domainName
                         * @property {string|null} [location] RetrieveRegisterParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RetrieveRegisterParametersRequest.
                         * @implements IRetrieveRegisterParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveRegisterParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveRegisterParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest instance
                         */
                        RetrieveRegisterParametersRequest.create = function create(properties) {
                            return new RetrieveRegisterParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         */
                        RetrieveRegisterParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RetrieveRegisterParametersRequest";
                        };
    
                        return RetrieveRegisterParametersRequest;
                    })();
    
                    v1alpha2.RetrieveRegisterParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRetrieveRegisterParametersResponse
                         * @property {google.cloud.domains.v1alpha2.IRegisterParameters|null} [registerParameters] RetrieveRegisterParametersResponse registerParameters
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RetrieveRegisterParametersResponse.
                         * @implements IRetrieveRegisterParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersResponse registerParameters.
                         * @member {google.cloud.domains.v1alpha2.IRegisterParameters|null|undefined} registerParameters
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @instance
                         */
                        RetrieveRegisterParametersResponse.prototype.registerParameters = null;
    
                        /**
                         * Creates a new RetrieveRegisterParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse instance
                         */
                        RetrieveRegisterParametersResponse.create = function create(properties) {
                            return new RetrieveRegisterParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && Object.hasOwnProperty.call(message, "registerParameters"))
                                $root.google.cloud.domains.v1alpha2.RegisterParameters.encode(message.registerParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registerParameters = $root.google.cloud.domains.v1alpha2.RegisterParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                var error = $root.google.cloud.domains.v1alpha2.RegisterParameters.verify(message.registerParameters);
                                if (error)
                                    return "registerParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         */
                        RetrieveRegisterParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse();
                            if (object.registerParameters != null) {
                                if (typeof object.registerParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse.registerParameters: object expected");
                                message.registerParameters = $root.google.cloud.domains.v1alpha2.RegisterParameters.fromObject(object.registerParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registerParameters = null;
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters"))
                                object.registerParameters = $root.google.cloud.domains.v1alpha2.RegisterParameters.toObject(message.registerParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RetrieveRegisterParametersResponse";
                        };
    
                        return RetrieveRegisterParametersResponse;
                    })();
    
                    v1alpha2.RegisterDomainRequest = (function() {
    
                        /**
                         * Properties of a RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRegisterDomainRequest
                         * @property {string|null} [parent] RegisterDomainRequest parent
                         * @property {google.cloud.domains.v1alpha2.IRegistration|null} [registration] RegisterDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1alpha2.DomainNotice>|null} [domainNotices] RegisterDomainRequest domainNotices
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactNotice>|null} [contactNotices] RegisterDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterDomainRequest yearlyPrice
                         * @property {boolean|null} [validateOnly] RegisterDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RegisterDomainRequest.
                         * @implements IRegisterDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest=} [properties] Properties to set
                         */
                        function RegisterDomainRequest(properties) {
                            this.domainNotices = [];
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.parent = "";
    
                        /**
                         * RegisterDomainRequest registration.
                         * @member {google.cloud.domains.v1alpha2.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.registration = null;
    
                        /**
                         * RegisterDomainRequest domainNotices.
                         * @member {Array.<google.cloud.domains.v1alpha2.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * RegisterDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new RegisterDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RegisterDomainRequest} RegisterDomainRequest instance
                         */
                        RegisterDomainRequest.create = function create(properties) {
                            return new RegisterDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.RegisterDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1alpha2.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RegisterDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RegisterDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1alpha2.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1alpha2.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RegisterDomainRequest} RegisterDomainRequest
                         */
                        RegisterDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RegisterDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RegisterDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1alpha2.Registration.fromObject(object.registration);
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterDomainRequest.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RegisterDomainRequest} message RegisterDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.domainNotices = [];
                                object.contactNotices = [];
                            }
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1alpha2.Registration.toObject(message.registration, options);
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1alpha2.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RegisterDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RegisterDomainRequest";
                        };
    
                        return RegisterDomainRequest;
                    })();
    
                    v1alpha2.RetrieveTransferParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRetrieveTransferParametersRequest
                         * @property {string|null} [domainName] RetrieveTransferParametersRequest domainName
                         * @property {string|null} [location] RetrieveTransferParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RetrieveTransferParametersRequest.
                         * @implements IRetrieveTransferParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveTransferParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveTransferParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest instance
                         */
                        RetrieveTransferParametersRequest.create = function create(properties) {
                            return new RetrieveTransferParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         */
                        RetrieveTransferParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest} message RetrieveTransferParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RetrieveTransferParametersRequest";
                        };
    
                        return RetrieveTransferParametersRequest;
                    })();
    
                    v1alpha2.RetrieveTransferParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRetrieveTransferParametersResponse
                         * @property {google.cloud.domains.v1alpha2.ITransferParameters|null} [transferParameters] RetrieveTransferParametersResponse transferParameters
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RetrieveTransferParametersResponse.
                         * @implements IRetrieveTransferParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersResponse transferParameters.
                         * @member {google.cloud.domains.v1alpha2.ITransferParameters|null|undefined} transferParameters
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @instance
                         */
                        RetrieveTransferParametersResponse.prototype.transferParameters = null;
    
                        /**
                         * Creates a new RetrieveTransferParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse instance
                         */
                        RetrieveTransferParametersResponse.create = function create(properties) {
                            return new RetrieveTransferParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferParameters != null && Object.hasOwnProperty.call(message, "transferParameters"))
                                $root.google.cloud.domains.v1alpha2.TransferParameters.encode(message.transferParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.transferParameters = $root.google.cloud.domains.v1alpha2.TransferParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters")) {
                                var error = $root.google.cloud.domains.v1alpha2.TransferParameters.verify(message.transferParameters);
                                if (error)
                                    return "transferParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         */
                        RetrieveTransferParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse();
                            if (object.transferParameters != null) {
                                if (typeof object.transferParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse.transferParameters: object expected");
                                message.transferParameters = $root.google.cloud.domains.v1alpha2.TransferParameters.fromObject(object.transferParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse} message RetrieveTransferParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.transferParameters = null;
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters"))
                                object.transferParameters = $root.google.cloud.domains.v1alpha2.TransferParameters.toObject(message.transferParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RetrieveTransferParametersResponse";
                        };
    
                        return RetrieveTransferParametersResponse;
                    })();
    
                    v1alpha2.TransferDomainRequest = (function() {
    
                        /**
                         * Properties of a TransferDomainRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface ITransferDomainRequest
                         * @property {string|null} [parent] TransferDomainRequest parent
                         * @property {google.cloud.domains.v1alpha2.IRegistration|null} [registration] TransferDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactNotice>|null} [contactNotices] TransferDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferDomainRequest yearlyPrice
                         * @property {google.cloud.domains.v1alpha2.IAuthorizationCode|null} [authorizationCode] TransferDomainRequest authorizationCode
                         * @property {boolean|null} [validateOnly] TransferDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new TransferDomainRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a TransferDomainRequest.
                         * @implements ITransferDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest=} [properties] Properties to set
                         */
                        function TransferDomainRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.parent = "";
    
                        /**
                         * TransferDomainRequest registration.
                         * @member {google.cloud.domains.v1alpha2.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.registration = null;
    
                        /**
                         * TransferDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * TransferDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * TransferDomainRequest authorizationCode.
                         * @member {google.cloud.domains.v1alpha2.IAuthorizationCode|null|undefined} authorizationCode
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.authorizationCode = null;
    
                        /**
                         * TransferDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new TransferDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.TransferDomainRequest} TransferDomainRequest instance
                         */
                        TransferDomainRequest.create = function create(properties) {
                            return new TransferDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.TransferDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1alpha2.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.authorizationCode != null && Object.hasOwnProperty.call(message, "authorizationCode"))
                                $root.google.cloud.domains.v1alpha2.AuthorizationCode.encode(message.authorizationCode, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.TransferDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.TransferDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1alpha2.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.authorizationCode = $root.google.cloud.domains.v1alpha2.AuthorizationCode.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1alpha2.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode")) {
                                var error = $root.google.cloud.domains.v1alpha2.AuthorizationCode.verify(message.authorizationCode);
                                if (error)
                                    return "authorizationCode." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransferDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.TransferDomainRequest} TransferDomainRequest
                         */
                        TransferDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.TransferDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.TransferDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1alpha2.Registration.fromObject(object.registration);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.authorizationCode != null) {
                                if (typeof object.authorizationCode !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferDomainRequest.authorizationCode: object expected");
                                message.authorizationCode = $root.google.cloud.domains.v1alpha2.AuthorizationCode.fromObject(object.authorizationCode);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.TransferDomainRequest} message TransferDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.authorizationCode = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1alpha2.Registration.toObject(message.registration, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode"))
                                object.authorizationCode = $root.google.cloud.domains.v1alpha2.AuthorizationCode.toObject(message.authorizationCode, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this TransferDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.TransferDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.TransferDomainRequest";
                        };
    
                        return TransferDomainRequest;
                    })();
    
                    v1alpha2.ListRegistrationsRequest = (function() {
    
                        /**
                         * Properties of a ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IListRegistrationsRequest
                         * @property {string|null} [parent] ListRegistrationsRequest parent
                         * @property {number|null} [pageSize] ListRegistrationsRequest pageSize
                         * @property {string|null} [pageToken] ListRegistrationsRequest pageToken
                         * @property {string|null} [filter] ListRegistrationsRequest filter
                         */
    
                        /**
                         * Constructs a new ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ListRegistrationsRequest.
                         * @implements IListRegistrationsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest=} [properties] Properties to set
                         */
                        function ListRegistrationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.parent = "";
    
                        /**
                         * ListRegistrationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRegistrationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListRegistrationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRegistrationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsRequest} ListRegistrationsRequest instance
                         */
                        ListRegistrationsRequest.create = function create(properties) {
                            return new ListRegistrationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ListRegistrationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ListRegistrationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ListRegistrationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsRequest} ListRegistrationsRequest
                         */
                        ListRegistrationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ListRegistrationsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ListRegistrationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ListRegistrationsRequest} message ListRegistrationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ListRegistrationsRequest";
                        };
    
                        return ListRegistrationsRequest;
                    })();
    
                    v1alpha2.ListRegistrationsResponse = (function() {
    
                        /**
                         * Properties of a ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IListRegistrationsResponse
                         * @property {Array.<google.cloud.domains.v1alpha2.IRegistration>|null} [registrations] ListRegistrationsResponse registrations
                         * @property {string|null} [nextPageToken] ListRegistrationsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ListRegistrationsResponse.
                         * @implements IListRegistrationsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsResponse=} [properties] Properties to set
                         */
                        function ListRegistrationsResponse(properties) {
                            this.registrations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsResponse registrations.
                         * @member {Array.<google.cloud.domains.v1alpha2.IRegistration>} registrations
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.registrations = $util.emptyArray;
    
                        /**
                         * ListRegistrationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRegistrationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsResponse} ListRegistrationsResponse instance
                         */
                        ListRegistrationsResponse.create = function create(properties) {
                            return new ListRegistrationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message. Does not implicitly {@link google.cloud.domains.v1alpha2.ListRegistrationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registrations != null && message.registrations.length)
                                for (var i = 0; i < message.registrations.length; ++i)
                                    $root.google.cloud.domains.v1alpha2.Registration.encode(message.registrations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ListRegistrationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ListRegistrationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registrations && message.registrations.length))
                                            message.registrations = [];
                                        message.registrations.push($root.google.cloud.domains.v1alpha2.Registration.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registrations != null && message.hasOwnProperty("registrations")) {
                                if (!Array.isArray(message.registrations))
                                    return "registrations: array expected";
                                for (var i = 0; i < message.registrations.length; ++i) {
                                    var error = $root.google.cloud.domains.v1alpha2.Registration.verify(message.registrations[i]);
                                    if (error)
                                        return "registrations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ListRegistrationsResponse} ListRegistrationsResponse
                         */
                        ListRegistrationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ListRegistrationsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ListRegistrationsResponse();
                            if (object.registrations) {
                                if (!Array.isArray(object.registrations))
                                    throw TypeError(".google.cloud.domains.v1alpha2.ListRegistrationsResponse.registrations: array expected");
                                message.registrations = [];
                                for (var i = 0; i < object.registrations.length; ++i) {
                                    if (typeof object.registrations[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1alpha2.ListRegistrationsResponse.registrations: object expected");
                                    message.registrations[i] = $root.google.cloud.domains.v1alpha2.Registration.fromObject(object.registrations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ListRegistrationsResponse} message ListRegistrationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registrations = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.registrations && message.registrations.length) {
                                object.registrations = [];
                                for (var j = 0; j < message.registrations.length; ++j)
                                    object.registrations[j] = $root.google.cloud.domains.v1alpha2.Registration.toObject(message.registrations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ListRegistrationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ListRegistrationsResponse";
                        };
    
                        return ListRegistrationsResponse;
                    })();
    
                    v1alpha2.GetRegistrationRequest = (function() {
    
                        /**
                         * Properties of a GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IGetRegistrationRequest
                         * @property {string|null} [name] GetRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a GetRegistrationRequest.
                         * @implements IGetRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest=} [properties] Properties to set
                         */
                        function GetRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @instance
                         */
                        GetRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.GetRegistrationRequest} GetRegistrationRequest instance
                         */
                        GetRegistrationRequest.create = function create(properties) {
                            return new GetRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.GetRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.GetRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.GetRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.GetRegistrationRequest} GetRegistrationRequest
                         */
                        GetRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.GetRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.GetRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.GetRegistrationRequest} message GetRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.GetRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.GetRegistrationRequest";
                        };
    
                        return GetRegistrationRequest;
                    })();
    
                    v1alpha2.UpdateRegistrationRequest = (function() {
    
                        /**
                         * Properties of an UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IUpdateRegistrationRequest
                         * @property {google.cloud.domains.v1alpha2.IRegistration|null} [registration] UpdateRegistrationRequest registration
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRegistrationRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents an UpdateRegistrationRequest.
                         * @implements IUpdateRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest=} [properties] Properties to set
                         */
                        function UpdateRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRegistrationRequest registration.
                         * @member {google.cloud.domains.v1alpha2.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.registration = null;
    
                        /**
                         * UpdateRegistrationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.UpdateRegistrationRequest} UpdateRegistrationRequest instance
                         */
                        UpdateRegistrationRequest.create = function create(properties) {
                            return new UpdateRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1alpha2.Registration.encode(message.registration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.UpdateRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = $root.google.cloud.domains.v1alpha2.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1alpha2.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.UpdateRegistrationRequest} UpdateRegistrationRequest
                         */
                        UpdateRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.UpdateRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.UpdateRegistrationRequest();
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.UpdateRegistrationRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1alpha2.Registration.fromObject(object.registration);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.UpdateRegistrationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.UpdateRegistrationRequest} message UpdateRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1alpha2.Registration.toObject(message.registration, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.UpdateRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.UpdateRegistrationRequest";
                        };
    
                        return UpdateRegistrationRequest;
                    })();
    
                    v1alpha2.ConfigureManagementSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IConfigureManagementSettingsRequest
                         * @property {string|null} [registration] ConfigureManagementSettingsRequest registration
                         * @property {google.cloud.domains.v1alpha2.IManagementSettings|null} [managementSettings] ConfigureManagementSettingsRequest managementSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureManagementSettingsRequest updateMask
                         */
    
                        /**
                         * Constructs a new ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ConfigureManagementSettingsRequest.
                         * @implements IConfigureManagementSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureManagementSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureManagementSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureManagementSettingsRequest managementSettings.
                         * @member {google.cloud.domains.v1alpha2.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.managementSettings = null;
    
                        /**
                         * ConfigureManagementSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new ConfigureManagementSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest instance
                         */
                        ConfigureManagementSettingsRequest.create = function create(properties) {
                            return new ConfigureManagementSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1alpha2.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureManagementSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureManagementSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureManagementSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         */
                        ConfigureManagementSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureManagementSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureManagementSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.managementSettings = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1alpha2.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureManagementSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureManagementSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureManagementSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureManagementSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ConfigureManagementSettingsRequest";
                        };
    
                        return ConfigureManagementSettingsRequest;
                    })();
    
                    v1alpha2.ConfigureDnsSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IConfigureDnsSettingsRequest
                         * @property {string|null} [registration] ConfigureDnsSettingsRequest registration
                         * @property {google.cloud.domains.v1alpha2.IDnsSettings|null} [dnsSettings] ConfigureDnsSettingsRequest dnsSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureDnsSettingsRequest updateMask
                         * @property {boolean|null} [validateOnly] ConfigureDnsSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ConfigureDnsSettingsRequest.
                         * @implements IConfigureDnsSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureDnsSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureDnsSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureDnsSettingsRequest dnsSettings.
                         * @member {google.cloud.domains.v1alpha2.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.dnsSettings = null;
    
                        /**
                         * ConfigureDnsSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureDnsSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureDnsSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest instance
                         */
                        ConfigureDnsSettingsRequest.create = function create(properties) {
                            return new ConfigureDnsSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1alpha2.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureDnsSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureDnsSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureDnsSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         */
                        ConfigureDnsSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureDnsSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureDnsSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.dnsSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1alpha2.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureDnsSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureDnsSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureDnsSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureDnsSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ConfigureDnsSettingsRequest";
                        };
    
                        return ConfigureDnsSettingsRequest;
                    })();
    
                    v1alpha2.ConfigureContactSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IConfigureContactSettingsRequest
                         * @property {string|null} [registration] ConfigureContactSettingsRequest registration
                         * @property {google.cloud.domains.v1alpha2.IContactSettings|null} [contactSettings] ConfigureContactSettingsRequest contactSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureContactSettingsRequest updateMask
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactNotice>|null} [contactNotices] ConfigureContactSettingsRequest contactNotices
                         * @property {boolean|null} [validateOnly] ConfigureContactSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ConfigureContactSettingsRequest.
                         * @implements IConfigureContactSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureContactSettingsRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureContactSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureContactSettingsRequest contactSettings.
                         * @member {google.cloud.domains.v1alpha2.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactSettings = null;
    
                        /**
                         * ConfigureContactSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureContactSettingsRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * ConfigureContactSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureContactSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest instance
                         */
                        ConfigureContactSettingsRequest.create = function create(properties) {
                            return new ConfigureContactSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1alpha2.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureContactSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureContactSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1alpha2.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureContactSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         */
                        ConfigureContactSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureContactSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest} message ConfigureContactSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureContactSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.registration = "";
                                object.contactSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1alpha2.ContactSettings.toObject(message.contactSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1alpha2.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureContactSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureContactSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureContactSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureContactSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ConfigureContactSettingsRequest";
                        };
    
                        return ConfigureContactSettingsRequest;
                    })();
    
                    v1alpha2.ExportRegistrationRequest = (function() {
    
                        /**
                         * Properties of an ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IExportRegistrationRequest
                         * @property {string|null} [name] ExportRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents an ExportRegistrationRequest.
                         * @implements IExportRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest=} [properties] Properties to set
                         */
                        function ExportRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @instance
                         */
                        ExportRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new ExportRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ExportRegistrationRequest} ExportRegistrationRequest instance
                         */
                        ExportRegistrationRequest.create = function create(properties) {
                            return new ExportRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ExportRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ExportRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ExportRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExportRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ExportRegistrationRequest} ExportRegistrationRequest
                         */
                        ExportRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ExportRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ExportRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ExportRegistrationRequest} message ExportRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ExportRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ExportRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ExportRegistrationRequest";
                        };
    
                        return ExportRegistrationRequest;
                    })();
    
                    v1alpha2.DeleteRegistrationRequest = (function() {
    
                        /**
                         * Properties of a DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IDeleteRegistrationRequest
                         * @property {string|null} [name] DeleteRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a DeleteRegistrationRequest.
                         * @implements IDeleteRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest=} [properties] Properties to set
                         */
                        function DeleteRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @instance
                         */
                        DeleteRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.DeleteRegistrationRequest} DeleteRegistrationRequest instance
                         */
                        DeleteRegistrationRequest.create = function create(properties) {
                            return new DeleteRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.DeleteRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.DeleteRegistrationRequest} DeleteRegistrationRequest
                         */
                        DeleteRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.DeleteRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.DeleteRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.DeleteRegistrationRequest} message DeleteRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.DeleteRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.DeleteRegistrationRequest";
                        };
    
                        return DeleteRegistrationRequest;
                    })();
    
                    v1alpha2.RetrieveAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRetrieveAuthorizationCodeRequest
                         * @property {string|null} [registration] RetrieveAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RetrieveAuthorizationCodeRequest.
                         * @implements IRetrieveAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function RetrieveAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @instance
                         */
                        RetrieveAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new RetrieveAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest instance
                         */
                        RetrieveAuthorizationCodeRequest.create = function create(properties) {
                            return new RetrieveAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         */
                        RetrieveAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RetrieveAuthorizationCodeRequest";
                        };
    
                        return RetrieveAuthorizationCodeRequest;
                    })();
    
                    v1alpha2.ResetAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IResetAuthorizationCodeRequest
                         * @property {string|null} [registration] ResetAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a ResetAuthorizationCodeRequest.
                         * @implements IResetAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function ResetAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @instance
                         */
                        ResetAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new ResetAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest instance
                         */
                        ResetAuthorizationCodeRequest.create = function create(properties) {
                            return new ResetAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         */
                        ResetAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this ResetAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.ResetAuthorizationCodeRequest";
                        };
    
                        return ResetAuthorizationCodeRequest;
                    })();
    
                    v1alpha2.RegisterParameters = (function() {
    
                        /**
                         * Properties of a RegisterParameters.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IRegisterParameters
                         * @property {string|null} [domainName] RegisterParameters domainName
                         * @property {google.cloud.domains.v1alpha2.RegisterParameters.Availability|null} [availability] RegisterParameters availability
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>|null} [supportedPrivacy] RegisterParameters supportedPrivacy
                         * @property {Array.<google.cloud.domains.v1alpha2.DomainNotice>|null} [domainNotices] RegisterParameters domainNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new RegisterParameters.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a RegisterParameters.
                         * @implements IRegisterParameters
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IRegisterParameters=} [properties] Properties to set
                         */
                        function RegisterParameters(properties) {
                            this.supportedPrivacy = [];
                            this.domainNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainName = "";
    
                        /**
                         * RegisterParameters availability.
                         * @member {google.cloud.domains.v1alpha2.RegisterParameters.Availability} availability
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.availability = 0;
    
                        /**
                         * RegisterParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * RegisterParameters domainNotices.
                         * @member {Array.<google.cloud.domains.v1alpha2.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new RegisterParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.RegisterParameters} RegisterParameters instance
                         */
                        RegisterParameters.create = function create(properties) {
                            return new RegisterParameters(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message. Does not implicitly {@link google.cloud.domains.v1alpha2.RegisterParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.availability != null && Object.hasOwnProperty.call(message, "availability"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.availability);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.RegisterParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.RegisterParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.availability = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                switch (message.availability) {
                                default:
                                    return "availability: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RegisterParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.RegisterParameters} RegisterParameters
                         */
                        RegisterParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.RegisterParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.RegisterParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            switch (object.availability) {
                            default:
                                if (typeof object.availability === "number") {
                                    message.availability = object.availability;
                                    break;
                                }
                                break;
                            case "AVAILABILITY_UNSPECIFIED":
                            case 0:
                                message.availability = 0;
                                break;
                            case "AVAILABLE":
                            case 1:
                                message.availability = 1;
                                break;
                            case "UNAVAILABLE":
                            case 2:
                                message.availability = 2;
                                break;
                            case "UNSUPPORTED":
                            case 3:
                                message.availability = 3;
                                break;
                            case "UNKNOWN":
                            case 4:
                                message.availability = 4;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterParameters.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.RegisterParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.RegisterParameters} message RegisterParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.supportedPrivacy = [];
                                object.domainNotices = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.availability = options.enums === String ? "AVAILABILITY_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                object.availability = options.enums === String ? $root.google.cloud.domains.v1alpha2.RegisterParameters.Availability[message.availability] === undefined ? message.availability : $root.google.cloud.domains.v1alpha2.RegisterParameters.Availability[message.availability] : message.availability;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1alpha2.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this RegisterParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.RegisterParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.RegisterParameters";
                        };
    
                        /**
                         * Availability enum.
                         * @name google.cloud.domains.v1alpha2.RegisterParameters.Availability
                         * @enum {number}
                         * @property {number} AVAILABILITY_UNSPECIFIED=0 AVAILABILITY_UNSPECIFIED value
                         * @property {number} AVAILABLE=1 AVAILABLE value
                         * @property {number} UNAVAILABLE=2 UNAVAILABLE value
                         * @property {number} UNSUPPORTED=3 UNSUPPORTED value
                         * @property {number} UNKNOWN=4 UNKNOWN value
                         */
                        RegisterParameters.Availability = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "AVAILABILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVAILABLE"] = 1;
                            values[valuesById[2] = "UNAVAILABLE"] = 2;
                            values[valuesById[3] = "UNSUPPORTED"] = 3;
                            values[valuesById[4] = "UNKNOWN"] = 4;
                            return values;
                        })();
    
                        return RegisterParameters;
                    })();
    
                    v1alpha2.TransferParameters = (function() {
    
                        /**
                         * Properties of a TransferParameters.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface ITransferParameters
                         * @property {string|null} [domainName] TransferParameters domainName
                         * @property {string|null} [currentRegistrar] TransferParameters currentRegistrar
                         * @property {Array.<string>|null} [nameServers] TransferParameters nameServers
                         * @property {google.cloud.domains.v1alpha2.TransferLockState|null} [transferLockState] TransferParameters transferLockState
                         * @property {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>|null} [supportedPrivacy] TransferParameters supportedPrivacy
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new TransferParameters.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents a TransferParameters.
                         * @implements ITransferParameters
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.ITransferParameters=} [properties] Properties to set
                         */
                        function TransferParameters(properties) {
                            this.nameServers = [];
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.domainName = "";
    
                        /**
                         * TransferParameters currentRegistrar.
                         * @member {string} currentRegistrar
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.currentRegistrar = "";
    
                        /**
                         * TransferParameters nameServers.
                         * @member {Array.<string>} nameServers
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.nameServers = $util.emptyArray;
    
                        /**
                         * TransferParameters transferLockState.
                         * @member {google.cloud.domains.v1alpha2.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.transferLockState = 0;
    
                        /**
                         * TransferParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1alpha2.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * TransferParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new TransferParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.TransferParameters} TransferParameters instance
                         */
                        TransferParameters.create = function create(properties) {
                            return new TransferParameters(properties);
                        };
    
                        /**
                         * Encodes the specified TransferParameters message. Does not implicitly {@link google.cloud.domains.v1alpha2.TransferParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.currentRegistrar != null && Object.hasOwnProperty.call(message, "currentRegistrar"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.currentRegistrar);
                            if (message.nameServers != null && message.nameServers.length)
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameServers[i]);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 5, wireType 2 =*/42).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.TransferParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.TransferParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.currentRegistrar = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.nameServers && message.nameServers.length))
                                            message.nameServers = [];
                                        message.nameServers.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 6: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                if (!$util.isString(message.currentRegistrar))
                                    return "currentRegistrar: string expected";
                            if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                if (!Array.isArray(message.nameServers))
                                    return "nameServers: array expected";
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    if (!$util.isString(message.nameServers[i]))
                                        return "nameServers: string[] expected";
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.TransferParameters} TransferParameters
                         */
                        TransferParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.TransferParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.TransferParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.currentRegistrar != null)
                                message.currentRegistrar = String(object.currentRegistrar);
                            if (object.nameServers) {
                                if (!Array.isArray(object.nameServers))
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferParameters.nameServers: array expected");
                                message.nameServers = [];
                                for (var i = 0; i < object.nameServers.length; ++i)
                                    message.nameServers[i] = String(object.nameServers[i]);
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.TransferParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1alpha2.TransferParameters} message TransferParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.nameServers = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.currentRegistrar = "";
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                object.currentRegistrar = message.currentRegistrar;
                            if (message.nameServers && message.nameServers.length) {
                                object.nameServers = [];
                                for (var j = 0; j < message.nameServers.length; ++j)
                                    object.nameServers[j] = message.nameServers[j];
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1alpha2.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1alpha2.TransferLockState[message.transferLockState] : message.transferLockState;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1alpha2.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransferParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.TransferParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.TransferParameters";
                        };
    
                        return TransferParameters;
                    })();
    
                    v1alpha2.AuthorizationCode = (function() {
    
                        /**
                         * Properties of an AuthorizationCode.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IAuthorizationCode
                         * @property {string|null} [code] AuthorizationCode code
                         */
    
                        /**
                         * Constructs a new AuthorizationCode.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents an AuthorizationCode.
                         * @implements IAuthorizationCode
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IAuthorizationCode=} [properties] Properties to set
                         */
                        function AuthorizationCode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuthorizationCode code.
                         * @member {string} code
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @instance
                         */
                        AuthorizationCode.prototype.code = "";
    
                        /**
                         * Creates a new AuthorizationCode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IAuthorizationCode=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.AuthorizationCode} AuthorizationCode instance
                         */
                        AuthorizationCode.create = function create(properties) {
                            return new AuthorizationCode(properties);
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message. Does not implicitly {@link google.cloud.domains.v1alpha2.AuthorizationCode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.AuthorizationCode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.AuthorizationCode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuthorizationCode message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuthorizationCode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AuthorizationCode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.AuthorizationCode} AuthorizationCode
                         */
                        AuthorizationCode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.AuthorizationCode)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.AuthorizationCode();
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuthorizationCode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1alpha2.AuthorizationCode} message AuthorizationCode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuthorizationCode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.code = "";
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this AuthorizationCode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuthorizationCode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuthorizationCode
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.AuthorizationCode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuthorizationCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.AuthorizationCode";
                        };
    
                        return AuthorizationCode;
                    })();
    
                    v1alpha2.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.domains.v1alpha2
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.domains.v1alpha2
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.domains.v1alpha2.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1alpha2.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.domains.v1alpha2.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.domains.v1alpha2.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1alpha2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1alpha2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1alpha2.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1alpha2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1alpha2.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1alpha2.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.domains.v1alpha2.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1alpha2.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1alpha2.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1alpha2.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1alpha2.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    /**
                     * ContactPrivacy enum.
                     * @name google.cloud.domains.v1alpha2.ContactPrivacy
                     * @enum {number}
                     * @property {number} CONTACT_PRIVACY_UNSPECIFIED=0 CONTACT_PRIVACY_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA=1 PUBLIC_CONTACT_DATA value
                     * @property {number} PRIVATE_CONTACT_DATA=2 PRIVATE_CONTACT_DATA value
                     * @property {number} REDACTED_CONTACT_DATA=3 REDACTED_CONTACT_DATA value
                     */
                    v1alpha2.ContactPrivacy = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_PRIVACY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA"] = 1;
                        values[valuesById[2] = "PRIVATE_CONTACT_DATA"] = 2;
                        values[valuesById[3] = "REDACTED_CONTACT_DATA"] = 3;
                        return values;
                    })();
    
                    /**
                     * DomainNotice enum.
                     * @name google.cloud.domains.v1alpha2.DomainNotice
                     * @enum {number}
                     * @property {number} DOMAIN_NOTICE_UNSPECIFIED=0 DOMAIN_NOTICE_UNSPECIFIED value
                     * @property {number} HSTS_PRELOADED=1 HSTS_PRELOADED value
                     */
                    v1alpha2.DomainNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DOMAIN_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HSTS_PRELOADED"] = 1;
                        return values;
                    })();
    
                    /**
                     * ContactNotice enum.
                     * @name google.cloud.domains.v1alpha2.ContactNotice
                     * @enum {number}
                     * @property {number} CONTACT_NOTICE_UNSPECIFIED=0 CONTACT_NOTICE_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT=1 PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT value
                     */
                    v1alpha2.ContactNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"] = 1;
                        return values;
                    })();
    
                    /**
                     * TransferLockState enum.
                     * @name google.cloud.domains.v1alpha2.TransferLockState
                     * @enum {number}
                     * @property {number} TRANSFER_LOCK_STATE_UNSPECIFIED=0 TRANSFER_LOCK_STATE_UNSPECIFIED value
                     * @property {number} UNLOCKED=1 UNLOCKED value
                     * @property {number} LOCKED=2 LOCKED value
                     */
                    v1alpha2.TransferLockState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRANSFER_LOCK_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UNLOCKED"] = 1;
                        values[valuesById[2] = "LOCKED"] = 2;
                        return values;
                    })();
    
                    return v1alpha2;
                })();
    
                domains.v1beta1 = (function() {
    
                    /**
                     * Namespace v1beta1.
                     * @memberof google.cloud.domains
                     * @namespace
                     */
                    var v1beta1 = {};
    
                    v1beta1.Domains = (function() {
    
                        /**
                         * Constructs a new Domains service.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a Domains
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Domains(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Domains.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Domains;
    
                        /**
                         * Creates new Domains service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Domains} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Domains.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|searchDomains}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef SearchDomainsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.SearchDomainsResponse} [response] SearchDomainsResponse
                         */
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.SearchDomainsCallback} callback Node-style callback called with the error, if any, and SearchDomainsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.searchDomains = function searchDomains(request, callback) {
                            return this.rpcCall(searchDomains, $root.google.cloud.domains.v1beta1.SearchDomainsRequest, $root.google.cloud.domains.v1beta1.SearchDomainsResponse, request, callback);
                        }, "name", { value: "SearchDomains" });
    
                        /**
                         * Calls SearchDomains.
                         * @function searchDomains
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest} request SearchDomainsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.SearchDomainsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|retrieveRegisterParameters}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef RetrieveRegisterParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} [response] RetrieveRegisterParametersResponse
                         */
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.RetrieveRegisterParametersCallback} callback Node-style callback called with the error, if any, and RetrieveRegisterParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveRegisterParameters = function retrieveRegisterParameters(request, callback) {
                            return this.rpcCall(retrieveRegisterParameters, $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest, $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse, request, callback);
                        }, "name", { value: "RetrieveRegisterParameters" });
    
                        /**
                         * Calls RetrieveRegisterParameters.
                         * @function retrieveRegisterParameters
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest} request RetrieveRegisterParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|registerDomain}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef RegisterDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.RegisterDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.registerDomain = function registerDomain(request, callback) {
                            return this.rpcCall(registerDomain, $root.google.cloud.domains.v1beta1.RegisterDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RegisterDomain" });
    
                        /**
                         * Calls RegisterDomain.
                         * @function registerDomain
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest} request RegisterDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|retrieveTransferParameters}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef RetrieveTransferParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} [response] RetrieveTransferParametersResponse
                         */
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.RetrieveTransferParametersCallback} callback Node-style callback called with the error, if any, and RetrieveTransferParametersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveTransferParameters = function retrieveTransferParameters(request, callback) {
                            return this.rpcCall(retrieveTransferParameters, $root.google.cloud.domains.v1beta1.RetrieveTransferParametersRequest, $root.google.cloud.domains.v1beta1.RetrieveTransferParametersResponse, request, callback);
                        }, "name", { value: "RetrieveTransferParameters" });
    
                        /**
                         * Calls RetrieveTransferParameters.
                         * @function retrieveTransferParameters
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest} request RetrieveTransferParametersRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.RetrieveTransferParametersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|transferDomain}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef TransferDomainCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.TransferDomainCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.transferDomain = function transferDomain(request, callback) {
                            return this.rpcCall(transferDomain, $root.google.cloud.domains.v1beta1.TransferDomainRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TransferDomain" });
    
                        /**
                         * Calls TransferDomain.
                         * @function transferDomain
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest} request TransferDomainRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|listRegistrations}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ListRegistrationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.ListRegistrationsResponse} [response] ListRegistrationsResponse
                         */
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ListRegistrationsCallback} callback Node-style callback called with the error, if any, and ListRegistrationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.listRegistrations = function listRegistrations(request, callback) {
                            return this.rpcCall(listRegistrations, $root.google.cloud.domains.v1beta1.ListRegistrationsRequest, $root.google.cloud.domains.v1beta1.ListRegistrationsResponse, request, callback);
                        }, "name", { value: "ListRegistrations" });
    
                        /**
                         * Calls ListRegistrations.
                         * @function listRegistrations
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest} request ListRegistrationsRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.ListRegistrationsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|getRegistration}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef GetRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.Registration} [response] Registration
                         */
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.GetRegistrationCallback} callback Node-style callback called with the error, if any, and Registration
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.getRegistration = function getRegistration(request, callback) {
                            return this.rpcCall(getRegistration, $root.google.cloud.domains.v1beta1.GetRegistrationRequest, $root.google.cloud.domains.v1beta1.Registration, request, callback);
                        }, "name", { value: "GetRegistration" });
    
                        /**
                         * Calls GetRegistration.
                         * @function getRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest} request GetRegistrationRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.Registration>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|updateRegistration}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef UpdateRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.UpdateRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.updateRegistration = function updateRegistration(request, callback) {
                            return this.rpcCall(updateRegistration, $root.google.cloud.domains.v1beta1.UpdateRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateRegistration" });
    
                        /**
                         * Calls UpdateRegistration.
                         * @function updateRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest} request UpdateRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|configureManagementSettings}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ConfigureManagementSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ConfigureManagementSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureManagementSettings = function configureManagementSettings(request, callback) {
                            return this.rpcCall(configureManagementSettings, $root.google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureManagementSettings" });
    
                        /**
                         * Calls ConfigureManagementSettings.
                         * @function configureManagementSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest} request ConfigureManagementSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|configureDnsSettings}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ConfigureDnsSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ConfigureDnsSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureDnsSettings = function configureDnsSettings(request, callback) {
                            return this.rpcCall(configureDnsSettings, $root.google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureDnsSettings" });
    
                        /**
                         * Calls ConfigureDnsSettings.
                         * @function configureDnsSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest} request ConfigureDnsSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|configureContactSettings}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ConfigureContactSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ConfigureContactSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.configureContactSettings = function configureContactSettings(request, callback) {
                            return this.rpcCall(configureContactSettings, $root.google.cloud.domains.v1beta1.ConfigureContactSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ConfigureContactSettings" });
    
                        /**
                         * Calls ConfigureContactSettings.
                         * @function configureContactSettings
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest} request ConfigureContactSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|exportRegistration}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ExportRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ExportRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.exportRegistration = function exportRegistration(request, callback) {
                            return this.rpcCall(exportRegistration, $root.google.cloud.domains.v1beta1.ExportRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ExportRegistration" });
    
                        /**
                         * Calls ExportRegistration.
                         * @function exportRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest} request ExportRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|deleteRegistration}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef DeleteRegistrationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.DeleteRegistrationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.deleteRegistration = function deleteRegistration(request, callback) {
                            return this.rpcCall(deleteRegistration, $root.google.cloud.domains.v1beta1.DeleteRegistrationRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRegistration" });
    
                        /**
                         * Calls DeleteRegistration.
                         * @function deleteRegistration
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest} request DeleteRegistrationRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|retrieveAuthorizationCode}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef RetrieveAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.RetrieveAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.retrieveAuthorizationCode = function retrieveAuthorizationCode(request, callback) {
                            return this.rpcCall(retrieveAuthorizationCode, $root.google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest, $root.google.cloud.domains.v1beta1.AuthorizationCode, request, callback);
                        }, "name", { value: "RetrieveAuthorizationCode" });
    
                        /**
                         * Calls RetrieveAuthorizationCode.
                         * @function retrieveAuthorizationCode
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest} request RetrieveAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.domains.v1beta1.Domains|resetAuthorizationCode}.
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @typedef ResetAuthorizationCodeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.domains.v1beta1.AuthorizationCode} [response] AuthorizationCode
                         */
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @param {google.cloud.domains.v1beta1.Domains.ResetAuthorizationCodeCallback} callback Node-style callback called with the error, if any, and AuthorizationCode
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Domains.prototype.resetAuthorizationCode = function resetAuthorizationCode(request, callback) {
                            return this.rpcCall(resetAuthorizationCode, $root.google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest, $root.google.cloud.domains.v1beta1.AuthorizationCode, request, callback);
                        }, "name", { value: "ResetAuthorizationCode" });
    
                        /**
                         * Calls ResetAuthorizationCode.
                         * @function resetAuthorizationCode
                         * @memberof google.cloud.domains.v1beta1.Domains
                         * @instance
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest} request ResetAuthorizationCodeRequest message or plain object
                         * @returns {Promise<google.cloud.domains.v1beta1.AuthorizationCode>} Promise
                         * @variation 2
                         */
    
                        return Domains;
                    })();
    
                    v1beta1.Registration = (function() {
    
                        /**
                         * Properties of a Registration.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRegistration
                         * @property {string|null} [name] Registration name
                         * @property {string|null} [domainName] Registration domainName
                         * @property {google.protobuf.ITimestamp|null} [createTime] Registration createTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Registration expireTime
                         * @property {google.cloud.domains.v1beta1.Registration.State|null} [state] Registration state
                         * @property {Array.<google.cloud.domains.v1beta1.Registration.Issue>|null} [issues] Registration issues
                         * @property {Object.<string,string>|null} [labels] Registration labels
                         * @property {google.cloud.domains.v1beta1.IManagementSettings|null} [managementSettings] Registration managementSettings
                         * @property {google.cloud.domains.v1beta1.IDnsSettings|null} [dnsSettings] Registration dnsSettings
                         * @property {google.cloud.domains.v1beta1.IContactSettings|null} [contactSettings] Registration contactSettings
                         * @property {google.cloud.domains.v1beta1.IContactSettings|null} [pendingContactSettings] Registration pendingContactSettings
                         * @property {Array.<google.cloud.domains.v1beta1.ContactPrivacy>|null} [supportedPrivacy] Registration supportedPrivacy
                         */
    
                        /**
                         * Constructs a new Registration.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a Registration.
                         * @implements IRegistration
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRegistration=} [properties] Properties to set
                         */
                        function Registration(properties) {
                            this.issues = [];
                            this.labels = {};
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Registration name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.name = "";
    
                        /**
                         * Registration domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.domainName = "";
    
                        /**
                         * Registration createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.createTime = null;
    
                        /**
                         * Registration expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.expireTime = null;
    
                        /**
                         * Registration state.
                         * @member {google.cloud.domains.v1beta1.Registration.State} state
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.state = 0;
    
                        /**
                         * Registration issues.
                         * @member {Array.<google.cloud.domains.v1beta1.Registration.Issue>} issues
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.issues = $util.emptyArray;
    
                        /**
                         * Registration labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.labels = $util.emptyObject;
    
                        /**
                         * Registration managementSettings.
                         * @member {google.cloud.domains.v1beta1.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.managementSettings = null;
    
                        /**
                         * Registration dnsSettings.
                         * @member {google.cloud.domains.v1beta1.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.dnsSettings = null;
    
                        /**
                         * Registration contactSettings.
                         * @member {google.cloud.domains.v1beta1.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.contactSettings = null;
    
                        /**
                         * Registration pendingContactSettings.
                         * @member {google.cloud.domains.v1beta1.IContactSettings|null|undefined} pendingContactSettings
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.pendingContactSettings = null;
    
                        /**
                         * Registration supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         */
                        Registration.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * Creates a new Registration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegistration=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.Registration} Registration instance
                         */
                        Registration.create = function create(properties) {
                            return new Registration(properties);
                        };
    
                        /**
                         * Encodes the specified Registration message. Does not implicitly {@link google.cloud.domains.v1beta1.Registration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domainName);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.issues != null && message.issues.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.issues.length; ++i)
                                    writer.int32(message.issues[i]);
                                writer.ldelim();
                            }
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1beta1.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1beta1.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.pendingContactSettings != null && Object.hasOwnProperty.call(message, "pendingContactSettings"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.encode(message.pendingContactSettings, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 14, wireType 2 =*/114).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Registration message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.Registration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegistration} message Registration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Registration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.Registration(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.issues && message.issues.length))
                                            message.issues = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.issues.push(reader.int32());
                                        } else
                                            message.issues.push(reader.int32());
                                        break;
                                    }
                                case 9: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.pendingContactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Registration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.Registration} Registration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Registration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Registration message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Registration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.issues != null && message.hasOwnProperty("issues")) {
                                if (!Array.isArray(message.issues))
                                    return "issues: array expected";
                                for (var i = 0; i < message.issues.length; ++i)
                                    switch (message.issues[i]) {
                                    default:
                                        return "issues: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.verify(message.pendingContactSettings);
                                if (error)
                                    return "pendingContactSettings." + error;
                            }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Registration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.Registration} Registration
                         */
                        Registration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.Registration)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.Registration();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "REGISTRATION_PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "REGISTRATION_FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "TRANSFER_PENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "TRANSFER_FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "ACTIVE":
                            case 6:
                                message.state = 6;
                                break;
                            case "SUSPENDED":
                            case 7:
                                message.state = 7;
                                break;
                            case "EXPORTED":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.issues) {
                                if (!Array.isArray(object.issues))
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.issues: array expected");
                                message.issues = [];
                                for (var i = 0; i < object.issues.length; ++i)
                                    switch (object.issues[i]) {
                                    default:
                                        if (typeof object.issues[i] === "number") {
                                            message.issues[i] = object.issues[i];
                                            break;
                                        }
                                    case "ISSUE_UNSPECIFIED":
                                    case 0:
                                        message.issues[i] = 0;
                                        break;
                                    case "CONTACT_SUPPORT":
                                    case 1:
                                        message.issues[i] = 1;
                                        break;
                                    case "UNVERIFIED_EMAIL":
                                    case 2:
                                        message.issues[i] = 2;
                                        break;
                                    }
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.pendingContactSettings != null) {
                                if (typeof object.pendingContactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.pendingContactSettings: object expected");
                                message.pendingContactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.fromObject(object.pendingContactSettings);
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1beta1.Registration.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Registration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {google.cloud.domains.v1beta1.Registration} message Registration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Registration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.issues = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.domainName = "";
                                object.createTime = null;
                                object.expireTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.managementSettings = null;
                                object.dnsSettings = null;
                                object.contactSettings = null;
                                object.pendingContactSettings = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.domains.v1beta1.Registration.State[message.state] === undefined ? message.state : $root.google.cloud.domains.v1beta1.Registration.State[message.state] : message.state;
                            if (message.issues && message.issues.length) {
                                object.issues = [];
                                for (var j = 0; j < message.issues.length; ++j)
                                    object.issues[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.Registration.Issue[message.issues[j]] === undefined ? message.issues[j] : $root.google.cloud.domains.v1beta1.Registration.Issue[message.issues[j]] : message.issues[j];
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.toObject(message.contactSettings, options);
                            if (message.pendingContactSettings != null && message.hasOwnProperty("pendingContactSettings"))
                                object.pendingContactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.toObject(message.pendingContactSettings, options);
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Registration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Registration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Registration
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.Registration
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Registration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.Registration";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.domains.v1beta1.Registration.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} REGISTRATION_PENDING=1 REGISTRATION_PENDING value
                         * @property {number} REGISTRATION_FAILED=2 REGISTRATION_FAILED value
                         * @property {number} TRANSFER_PENDING=3 TRANSFER_PENDING value
                         * @property {number} TRANSFER_FAILED=4 TRANSFER_FAILED value
                         * @property {number} ACTIVE=6 ACTIVE value
                         * @property {number} SUSPENDED=7 SUSPENDED value
                         * @property {number} EXPORTED=8 EXPORTED value
                         */
                        Registration.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REGISTRATION_PENDING"] = 1;
                            values[valuesById[2] = "REGISTRATION_FAILED"] = 2;
                            values[valuesById[3] = "TRANSFER_PENDING"] = 3;
                            values[valuesById[4] = "TRANSFER_FAILED"] = 4;
                            values[valuesById[6] = "ACTIVE"] = 6;
                            values[valuesById[7] = "SUSPENDED"] = 7;
                            values[valuesById[8] = "EXPORTED"] = 8;
                            return values;
                        })();
    
                        /**
                         * Issue enum.
                         * @name google.cloud.domains.v1beta1.Registration.Issue
                         * @enum {number}
                         * @property {number} ISSUE_UNSPECIFIED=0 ISSUE_UNSPECIFIED value
                         * @property {number} CONTACT_SUPPORT=1 CONTACT_SUPPORT value
                         * @property {number} UNVERIFIED_EMAIL=2 UNVERIFIED_EMAIL value
                         */
                        Registration.Issue = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ISSUE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTACT_SUPPORT"] = 1;
                            values[valuesById[2] = "UNVERIFIED_EMAIL"] = 2;
                            return values;
                        })();
    
                        return Registration;
                    })();
    
                    v1beta1.ManagementSettings = (function() {
    
                        /**
                         * Properties of a ManagementSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IManagementSettings
                         * @property {google.cloud.domains.v1beta1.ManagementSettings.RenewalMethod|null} [renewalMethod] ManagementSettings renewalMethod
                         * @property {google.cloud.domains.v1beta1.TransferLockState|null} [transferLockState] ManagementSettings transferLockState
                         */
    
                        /**
                         * Constructs a new ManagementSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ManagementSettings.
                         * @implements IManagementSettings
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IManagementSettings=} [properties] Properties to set
                         */
                        function ManagementSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ManagementSettings renewalMethod.
                         * @member {google.cloud.domains.v1beta1.ManagementSettings.RenewalMethod} renewalMethod
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.renewalMethod = 0;
    
                        /**
                         * ManagementSettings transferLockState.
                         * @member {google.cloud.domains.v1beta1.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @instance
                         */
                        ManagementSettings.prototype.transferLockState = 0;
    
                        /**
                         * Creates a new ManagementSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IManagementSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ManagementSettings} ManagementSettings instance
                         */
                        ManagementSettings.create = function create(properties) {
                            return new ManagementSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message. Does not implicitly {@link google.cloud.domains.v1beta1.ManagementSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.renewalMethod != null && Object.hasOwnProperty.call(message, "renewalMethod"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.renewalMethod);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ManagementSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ManagementSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IManagementSettings} message ManagementSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagementSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ManagementSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.renewalMethod = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ManagementSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ManagementSettings} ManagementSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagementSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ManagementSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ManagementSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                switch (message.renewalMethod) {
                                default:
                                    return "renewalMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ManagementSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ManagementSettings} ManagementSettings
                         */
                        ManagementSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ManagementSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ManagementSettings();
                            switch (object.renewalMethod) {
                            default:
                                if (typeof object.renewalMethod === "number") {
                                    message.renewalMethod = object.renewalMethod;
                                    break;
                                }
                                break;
                            case "RENEWAL_METHOD_UNSPECIFIED":
                            case 0:
                                message.renewalMethod = 0;
                                break;
                            case "AUTOMATIC_RENEWAL":
                            case 1:
                                message.renewalMethod = 1;
                                break;
                            case "MANUAL_RENEWAL":
                            case 2:
                                message.renewalMethod = 2;
                                break;
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ManagementSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.ManagementSettings} message ManagementSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ManagementSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.renewalMethod = options.enums === String ? "RENEWAL_METHOD_UNSPECIFIED" : 0;
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                            }
                            if (message.renewalMethod != null && message.hasOwnProperty("renewalMethod"))
                                object.renewalMethod = options.enums === String ? $root.google.cloud.domains.v1beta1.ManagementSettings.RenewalMethod[message.renewalMethod] === undefined ? message.renewalMethod : $root.google.cloud.domains.v1beta1.ManagementSettings.RenewalMethod[message.renewalMethod] : message.renewalMethod;
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1beta1.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1beta1.TransferLockState[message.transferLockState] : message.transferLockState;
                            return object;
                        };
    
                        /**
                         * Converts this ManagementSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ManagementSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ManagementSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ManagementSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ManagementSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ManagementSettings";
                        };
    
                        /**
                         * RenewalMethod enum.
                         * @name google.cloud.domains.v1beta1.ManagementSettings.RenewalMethod
                         * @enum {number}
                         * @property {number} RENEWAL_METHOD_UNSPECIFIED=0 RENEWAL_METHOD_UNSPECIFIED value
                         * @property {number} AUTOMATIC_RENEWAL=1 AUTOMATIC_RENEWAL value
                         * @property {number} MANUAL_RENEWAL=2 MANUAL_RENEWAL value
                         */
                        ManagementSettings.RenewalMethod = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RENEWAL_METHOD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AUTOMATIC_RENEWAL"] = 1;
                            values[valuesById[2] = "MANUAL_RENEWAL"] = 2;
                            return values;
                        })();
    
                        return ManagementSettings;
                    })();
    
                    v1beta1.DnsSettings = (function() {
    
                        /**
                         * Properties of a DnsSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IDnsSettings
                         * @property {google.cloud.domains.v1beta1.DnsSettings.ICustomDns|null} [customDns] DnsSettings customDns
                         * @property {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns|null} [googleDomainsDns] DnsSettings googleDomainsDns
                         * @property {Array.<google.cloud.domains.v1beta1.DnsSettings.IGlueRecord>|null} [glueRecords] DnsSettings glueRecords
                         */
    
                        /**
                         * Constructs a new DnsSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a DnsSettings.
                         * @implements IDnsSettings
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IDnsSettings=} [properties] Properties to set
                         */
                        function DnsSettings(properties) {
                            this.glueRecords = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DnsSettings customDns.
                         * @member {google.cloud.domains.v1beta1.DnsSettings.ICustomDns|null|undefined} customDns
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.customDns = null;
    
                        /**
                         * DnsSettings googleDomainsDns.
                         * @member {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns|null|undefined} googleDomainsDns
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.googleDomainsDns = null;
    
                        /**
                         * DnsSettings glueRecords.
                         * @member {Array.<google.cloud.domains.v1beta1.DnsSettings.IGlueRecord>} glueRecords
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @instance
                         */
                        DnsSettings.prototype.glueRecords = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DnsSettings dnsProvider.
                         * @member {"customDns"|"googleDomainsDns"|undefined} dnsProvider
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @instance
                         */
                        Object.defineProperty(DnsSettings.prototype, "dnsProvider", {
                            get: $util.oneOfGetter($oneOfFields = ["customDns", "googleDomainsDns"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DnsSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDnsSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.DnsSettings} DnsSettings instance
                         */
                        DnsSettings.create = function create(properties) {
                            return new DnsSettings(properties);
                        };
    
                        /**
                         * Encodes the specified DnsSettings message. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customDns != null && Object.hasOwnProperty.call(message, "customDns"))
                                $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns.encode(message.customDns, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.googleDomainsDns != null && Object.hasOwnProperty.call(message, "googleDomainsDns"))
                                $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.encode(message.googleDomainsDns, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.glueRecords != null && message.glueRecords.length)
                                for (var i = 0; i < message.glueRecords.length; ++i)
                                    $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord.encode(message.glueRecords[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DnsSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDnsSettings} message DnsSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DnsSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DnsSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customDns = $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.googleDomainsDns = $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.glueRecords && message.glueRecords.length))
                                            message.glueRecords = [];
                                        message.glueRecords.push($root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DnsSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.DnsSettings} DnsSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DnsSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DnsSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DnsSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns.verify(message.customDns);
                                    if (error)
                                        return "customDns." + error;
                                }
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                if (properties.dnsProvider === 1)
                                    return "dnsProvider: multiple values";
                                properties.dnsProvider = 1;
                                {
                                    var error = $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.verify(message.googleDomainsDns);
                                    if (error)
                                        return "googleDomainsDns." + error;
                                }
                            }
                            if (message.glueRecords != null && message.hasOwnProperty("glueRecords")) {
                                if (!Array.isArray(message.glueRecords))
                                    return "glueRecords: array expected";
                                for (var i = 0; i < message.glueRecords.length; ++i) {
                                    var error = $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord.verify(message.glueRecords[i]);
                                    if (error)
                                        return "glueRecords." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DnsSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.DnsSettings} DnsSettings
                         */
                        DnsSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.DnsSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.DnsSettings();
                            if (object.customDns != null) {
                                if (typeof object.customDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.customDns: object expected");
                                message.customDns = $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns.fromObject(object.customDns);
                            }
                            if (object.googleDomainsDns != null) {
                                if (typeof object.googleDomainsDns !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.googleDomainsDns: object expected");
                                message.googleDomainsDns = $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.fromObject(object.googleDomainsDns);
                            }
                            if (object.glueRecords) {
                                if (!Array.isArray(object.glueRecords))
                                    throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.glueRecords: array expected");
                                message.glueRecords = [];
                                for (var i = 0; i < object.glueRecords.length; ++i) {
                                    if (typeof object.glueRecords[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.glueRecords: object expected");
                                    message.glueRecords[i] = $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord.fromObject(object.glueRecords[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DnsSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.DnsSettings} message DnsSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DnsSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.glueRecords = [];
                            if (message.customDns != null && message.hasOwnProperty("customDns")) {
                                object.customDns = $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns.toObject(message.customDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "customDns";
                            }
                            if (message.googleDomainsDns != null && message.hasOwnProperty("googleDomainsDns")) {
                                object.googleDomainsDns = $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.toObject(message.googleDomainsDns, options);
                                if (options.oneofs)
                                    object.dnsProvider = "googleDomainsDns";
                            }
                            if (message.glueRecords && message.glueRecords.length) {
                                object.glueRecords = [];
                                for (var j = 0; j < message.glueRecords.length; ++j)
                                    object.glueRecords[j] = $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord.toObject(message.glueRecords[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DnsSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DnsSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DnsSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.DnsSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DnsSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.DnsSettings";
                        };
    
                        DnsSettings.CustomDns = (function() {
    
                            /**
                             * Properties of a CustomDns.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @interface ICustomDns
                             * @property {Array.<string>|null} [nameServers] CustomDns nameServers
                             * @property {Array.<google.cloud.domains.v1beta1.DnsSettings.IDsRecord>|null} [dsRecords] CustomDns dsRecords
                             */
    
                            /**
                             * Constructs a new CustomDns.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @classdesc Represents a CustomDns.
                             * @implements ICustomDns
                             * @constructor
                             * @param {google.cloud.domains.v1beta1.DnsSettings.ICustomDns=} [properties] Properties to set
                             */
                            function CustomDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CustomDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * CustomDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1beta1.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @instance
                             */
                            CustomDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new CustomDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.ICustomDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.CustomDns} CustomDns instance
                             */
                            CustomDns.create = function create(properties) {
                                return new CustomDns(properties);
                            };
    
                            /**
                             * Encodes the specified CustomDns message. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CustomDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.CustomDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.ICustomDns} message CustomDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CustomDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.CustomDns} CustomDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CustomDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CustomDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CustomDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.CustomDns} CustomDns
                             */
                            CustomDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1beta1.DnsSettings.CustomDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.CustomDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.CustomDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.CustomDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CustomDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.CustomDns} message CustomDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CustomDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CustomDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CustomDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CustomDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.CustomDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CustomDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1beta1.DnsSettings.CustomDns";
                            };
    
                            return CustomDns;
                        })();
    
                        DnsSettings.GoogleDomainsDns = (function() {
    
                            /**
                             * Properties of a GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @interface IGoogleDomainsDns
                             * @property {Array.<string>|null} [nameServers] GoogleDomainsDns nameServers
                             * @property {google.cloud.domains.v1beta1.DnsSettings.DsState|null} [dsState] GoogleDomainsDns dsState
                             * @property {Array.<google.cloud.domains.v1beta1.DnsSettings.IDsRecord>|null} [dsRecords] GoogleDomainsDns dsRecords
                             */
    
                            /**
                             * Constructs a new GoogleDomainsDns.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @classdesc Represents a GoogleDomainsDns.
                             * @implements IGoogleDomainsDns
                             * @constructor
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             */
                            function GoogleDomainsDns(properties) {
                                this.nameServers = [];
                                this.dsRecords = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GoogleDomainsDns nameServers.
                             * @member {Array.<string>} nameServers
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.nameServers = $util.emptyArray;
    
                            /**
                             * GoogleDomainsDns dsState.
                             * @member {google.cloud.domains.v1beta1.DnsSettings.DsState} dsState
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsState = 0;
    
                            /**
                             * GoogleDomainsDns dsRecords.
                             * @member {Array.<google.cloud.domains.v1beta1.DnsSettings.IDsRecord>} dsRecords
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @instance
                             */
                            GoogleDomainsDns.prototype.dsRecords = $util.emptyArray;
    
                            /**
                             * Creates a new GoogleDomainsDns instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns instance
                             */
                            GoogleDomainsDns.create = function create(properties) {
                                return new GoogleDomainsDns(properties);
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.nameServers != null && message.nameServers.length)
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.nameServers[i]);
                                if (message.dsState != null && Object.hasOwnProperty.call(message, "dsState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dsState);
                                if (message.dsRecords != null && message.dsRecords.length)
                                    for (var i = 0; i < message.dsRecords.length; ++i)
                                        $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.encode(message.dsRecords[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GoogleDomainsDns message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGoogleDomainsDns} message GoogleDomainsDns message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoogleDomainsDns.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.nameServers && message.nameServers.length))
                                                message.nameServers = [];
                                            message.nameServers.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.dsState = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.dsRecords && message.dsRecords.length))
                                                message.dsRecords = [];
                                            message.dsRecords.push($root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GoogleDomainsDns message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoogleDomainsDns.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GoogleDomainsDns message.
                             * @function verify
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GoogleDomainsDns.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                    if (!Array.isArray(message.nameServers))
                                        return "nameServers: array expected";
                                    for (var i = 0; i < message.nameServers.length; ++i)
                                        if (!$util.isString(message.nameServers[i]))
                                            return "nameServers: string[] expected";
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    switch (message.dsState) {
                                    default:
                                        return "dsState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.dsRecords != null && message.hasOwnProperty("dsRecords")) {
                                    if (!Array.isArray(message.dsRecords))
                                        return "dsRecords: array expected";
                                    for (var i = 0; i < message.dsRecords.length; ++i) {
                                        var error = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.verify(message.dsRecords[i]);
                                        if (error)
                                            return "dsRecords." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GoogleDomainsDns message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns} GoogleDomainsDns
                             */
                            GoogleDomainsDns.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns)
                                    return object;
                                var message = new $root.google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns();
                                if (object.nameServers) {
                                    if (!Array.isArray(object.nameServers))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.nameServers: array expected");
                                    message.nameServers = [];
                                    for (var i = 0; i < object.nameServers.length; ++i)
                                        message.nameServers[i] = String(object.nameServers[i]);
                                }
                                switch (object.dsState) {
                                default:
                                    if (typeof object.dsState === "number") {
                                        message.dsState = object.dsState;
                                        break;
                                    }
                                    break;
                                case "DS_STATE_UNSPECIFIED":
                                case 0:
                                    message.dsState = 0;
                                    break;
                                case "DS_RECORDS_UNPUBLISHED":
                                case 1:
                                    message.dsState = 1;
                                    break;
                                case "DS_RECORDS_PUBLISHED":
                                case 2:
                                    message.dsState = 2;
                                    break;
                                }
                                if (object.dsRecords) {
                                    if (!Array.isArray(object.dsRecords))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.dsRecords: array expected");
                                    message.dsRecords = [];
                                    for (var i = 0; i < object.dsRecords.length; ++i) {
                                        if (typeof object.dsRecords[i] !== "object")
                                            throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns.dsRecords: object expected");
                                        message.dsRecords[i] = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.fromObject(object.dsRecords[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GoogleDomainsDns message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns} message GoogleDomainsDns
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GoogleDomainsDns.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.nameServers = [];
                                    object.dsRecords = [];
                                }
                                if (options.defaults)
                                    object.dsState = options.enums === String ? "DS_STATE_UNSPECIFIED" : 0;
                                if (message.nameServers && message.nameServers.length) {
                                    object.nameServers = [];
                                    for (var j = 0; j < message.nameServers.length; ++j)
                                        object.nameServers[j] = message.nameServers[j];
                                }
                                if (message.dsState != null && message.hasOwnProperty("dsState"))
                                    object.dsState = options.enums === String ? $root.google.cloud.domains.v1beta1.DnsSettings.DsState[message.dsState] === undefined ? message.dsState : $root.google.cloud.domains.v1beta1.DnsSettings.DsState[message.dsState] : message.dsState;
                                if (message.dsRecords && message.dsRecords.length) {
                                    object.dsRecords = [];
                                    for (var j = 0; j < message.dsRecords.length; ++j)
                                        object.dsRecords[j] = $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.toObject(message.dsRecords[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GoogleDomainsDns to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GoogleDomainsDns.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GoogleDomainsDns
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GoogleDomainsDns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1beta1.DnsSettings.GoogleDomainsDns";
                            };
    
                            return GoogleDomainsDns;
                        })();
    
                        DnsSettings.DsRecord = (function() {
    
                            /**
                             * Properties of a DsRecord.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @interface IDsRecord
                             * @property {number|null} [keyTag] DsRecord keyTag
                             * @property {google.cloud.domains.v1beta1.DnsSettings.DsRecord.Algorithm|null} [algorithm] DsRecord algorithm
                             * @property {google.cloud.domains.v1beta1.DnsSettings.DsRecord.DigestType|null} [digestType] DsRecord digestType
                             * @property {string|null} [digest] DsRecord digest
                             */
    
                            /**
                             * Constructs a new DsRecord.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @classdesc Represents a DsRecord.
                             * @implements IDsRecord
                             * @constructor
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IDsRecord=} [properties] Properties to set
                             */
                            function DsRecord(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DsRecord keyTag.
                             * @member {number} keyTag
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.keyTag = 0;
    
                            /**
                             * DsRecord algorithm.
                             * @member {google.cloud.domains.v1beta1.DnsSettings.DsRecord.Algorithm} algorithm
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.algorithm = 0;
    
                            /**
                             * DsRecord digestType.
                             * @member {google.cloud.domains.v1beta1.DnsSettings.DsRecord.DigestType} digestType
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digestType = 0;
    
                            /**
                             * DsRecord digest.
                             * @member {string} digest
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @instance
                             */
                            DsRecord.prototype.digest = "";
    
                            /**
                             * Creates a new DsRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IDsRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.DsRecord} DsRecord instance
                             */
                            DsRecord.create = function create(properties) {
                                return new DsRecord(properties);
                            };
    
                            /**
                             * Encodes the specified DsRecord message. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.keyTag != null && Object.hasOwnProperty.call(message, "keyTag"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keyTag);
                                if (message.algorithm != null && Object.hasOwnProperty.call(message, "algorithm"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.algorithm);
                                if (message.digestType != null && Object.hasOwnProperty.call(message, "digestType"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.digestType);
                                if (message.digest != null && Object.hasOwnProperty.call(message, "digest"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.digest);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DsRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.DsRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IDsRecord} message DsRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DsRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.keyTag = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.algorithm = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.digestType = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.digest = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DsRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.DsRecord} DsRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DsRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DsRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DsRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    if (!$util.isInteger(message.keyTag))
                                        return "keyTag: integer expected";
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    switch (message.algorithm) {
                                    default:
                                        return "algorithm: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 10:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                    case 16:
                                    case 252:
                                    case 253:
                                    case 254:
                                        break;
                                    }
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    switch (message.digestType) {
                                    default:
                                        return "digestType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    if (!$util.isString(message.digest))
                                        return "digest: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DsRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.DsRecord} DsRecord
                             */
                            DsRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord();
                                if (object.keyTag != null)
                                    message.keyTag = object.keyTag | 0;
                                switch (object.algorithm) {
                                default:
                                    if (typeof object.algorithm === "number") {
                                        message.algorithm = object.algorithm;
                                        break;
                                    }
                                    break;
                                case "ALGORITHM_UNSPECIFIED":
                                case 0:
                                    message.algorithm = 0;
                                    break;
                                case "RSAMD5":
                                case 1:
                                    message.algorithm = 1;
                                    break;
                                case "DH":
                                case 2:
                                    message.algorithm = 2;
                                    break;
                                case "DSA":
                                case 3:
                                    message.algorithm = 3;
                                    break;
                                case "ECC":
                                case 4:
                                    message.algorithm = 4;
                                    break;
                                case "RSASHA1":
                                case 5:
                                    message.algorithm = 5;
                                    break;
                                case "DSANSEC3SHA1":
                                case 6:
                                    message.algorithm = 6;
                                    break;
                                case "RSASHA1NSEC3SHA1":
                                case 7:
                                    message.algorithm = 7;
                                    break;
                                case "RSASHA256":
                                case 8:
                                    message.algorithm = 8;
                                    break;
                                case "RSASHA512":
                                case 10:
                                    message.algorithm = 10;
                                    break;
                                case "ECCGOST":
                                case 12:
                                    message.algorithm = 12;
                                    break;
                                case "ECDSAP256SHA256":
                                case 13:
                                    message.algorithm = 13;
                                    break;
                                case "ECDSAP384SHA384":
                                case 14:
                                    message.algorithm = 14;
                                    break;
                                case "ED25519":
                                case 15:
                                    message.algorithm = 15;
                                    break;
                                case "ED448":
                                case 16:
                                    message.algorithm = 16;
                                    break;
                                case "INDIRECT":
                                case 252:
                                    message.algorithm = 252;
                                    break;
                                case "PRIVATEDNS":
                                case 253:
                                    message.algorithm = 253;
                                    break;
                                case "PRIVATEOID":
                                case 254:
                                    message.algorithm = 254;
                                    break;
                                }
                                switch (object.digestType) {
                                default:
                                    if (typeof object.digestType === "number") {
                                        message.digestType = object.digestType;
                                        break;
                                    }
                                    break;
                                case "DIGEST_TYPE_UNSPECIFIED":
                                case 0:
                                    message.digestType = 0;
                                    break;
                                case "SHA1":
                                case 1:
                                    message.digestType = 1;
                                    break;
                                case "SHA256":
                                case 2:
                                    message.digestType = 2;
                                    break;
                                case "GOST3411":
                                case 3:
                                    message.digestType = 3;
                                    break;
                                case "SHA384":
                                case 4:
                                    message.digestType = 4;
                                    break;
                                }
                                if (object.digest != null)
                                    message.digest = String(object.digest);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DsRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.DsRecord} message DsRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DsRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.keyTag = 0;
                                    object.algorithm = options.enums === String ? "ALGORITHM_UNSPECIFIED" : 0;
                                    object.digestType = options.enums === String ? "DIGEST_TYPE_UNSPECIFIED" : 0;
                                    object.digest = "";
                                }
                                if (message.keyTag != null && message.hasOwnProperty("keyTag"))
                                    object.keyTag = message.keyTag;
                                if (message.algorithm != null && message.hasOwnProperty("algorithm"))
                                    object.algorithm = options.enums === String ? $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.Algorithm[message.algorithm] === undefined ? message.algorithm : $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.Algorithm[message.algorithm] : message.algorithm;
                                if (message.digestType != null && message.hasOwnProperty("digestType"))
                                    object.digestType = options.enums === String ? $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.DigestType[message.digestType] === undefined ? message.digestType : $root.google.cloud.domains.v1beta1.DnsSettings.DsRecord.DigestType[message.digestType] : message.digestType;
                                if (message.digest != null && message.hasOwnProperty("digest"))
                                    object.digest = message.digest;
                                return object;
                            };
    
                            /**
                             * Converts this DsRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DsRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DsRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.DsRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DsRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1beta1.DnsSettings.DsRecord";
                            };
    
                            /**
                             * Algorithm enum.
                             * @name google.cloud.domains.v1beta1.DnsSettings.DsRecord.Algorithm
                             * @enum {number}
                             * @property {number} ALGORITHM_UNSPECIFIED=0 ALGORITHM_UNSPECIFIED value
                             * @property {number} RSAMD5=1 RSAMD5 value
                             * @property {number} DH=2 DH value
                             * @property {number} DSA=3 DSA value
                             * @property {number} ECC=4 ECC value
                             * @property {number} RSASHA1=5 RSASHA1 value
                             * @property {number} DSANSEC3SHA1=6 DSANSEC3SHA1 value
                             * @property {number} RSASHA1NSEC3SHA1=7 RSASHA1NSEC3SHA1 value
                             * @property {number} RSASHA256=8 RSASHA256 value
                             * @property {number} RSASHA512=10 RSASHA512 value
                             * @property {number} ECCGOST=12 ECCGOST value
                             * @property {number} ECDSAP256SHA256=13 ECDSAP256SHA256 value
                             * @property {number} ECDSAP384SHA384=14 ECDSAP384SHA384 value
                             * @property {number} ED25519=15 ED25519 value
                             * @property {number} ED448=16 ED448 value
                             * @property {number} INDIRECT=252 INDIRECT value
                             * @property {number} PRIVATEDNS=253 PRIVATEDNS value
                             * @property {number} PRIVATEOID=254 PRIVATEOID value
                             */
                            DsRecord.Algorithm = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ALGORITHM_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RSAMD5"] = 1;
                                values[valuesById[2] = "DH"] = 2;
                                values[valuesById[3] = "DSA"] = 3;
                                values[valuesById[4] = "ECC"] = 4;
                                values[valuesById[5] = "RSASHA1"] = 5;
                                values[valuesById[6] = "DSANSEC3SHA1"] = 6;
                                values[valuesById[7] = "RSASHA1NSEC3SHA1"] = 7;
                                values[valuesById[8] = "RSASHA256"] = 8;
                                values[valuesById[10] = "RSASHA512"] = 10;
                                values[valuesById[12] = "ECCGOST"] = 12;
                                values[valuesById[13] = "ECDSAP256SHA256"] = 13;
                                values[valuesById[14] = "ECDSAP384SHA384"] = 14;
                                values[valuesById[15] = "ED25519"] = 15;
                                values[valuesById[16] = "ED448"] = 16;
                                values[valuesById[252] = "INDIRECT"] = 252;
                                values[valuesById[253] = "PRIVATEDNS"] = 253;
                                values[valuesById[254] = "PRIVATEOID"] = 254;
                                return values;
                            })();
    
                            /**
                             * DigestType enum.
                             * @name google.cloud.domains.v1beta1.DnsSettings.DsRecord.DigestType
                             * @enum {number}
                             * @property {number} DIGEST_TYPE_UNSPECIFIED=0 DIGEST_TYPE_UNSPECIFIED value
                             * @property {number} SHA1=1 SHA1 value
                             * @property {number} SHA256=2 SHA256 value
                             * @property {number} GOST3411=3 GOST3411 value
                             * @property {number} SHA384=4 SHA384 value
                             */
                            DsRecord.DigestType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "DIGEST_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SHA1"] = 1;
                                values[valuesById[2] = "SHA256"] = 2;
                                values[valuesById[3] = "GOST3411"] = 3;
                                values[valuesById[4] = "SHA384"] = 4;
                                return values;
                            })();
    
                            return DsRecord;
                        })();
    
                        DnsSettings.GlueRecord = (function() {
    
                            /**
                             * Properties of a GlueRecord.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @interface IGlueRecord
                             * @property {string|null} [hostName] GlueRecord hostName
                             * @property {Array.<string>|null} [ipv4Addresses] GlueRecord ipv4Addresses
                             * @property {Array.<string>|null} [ipv6Addresses] GlueRecord ipv6Addresses
                             */
    
                            /**
                             * Constructs a new GlueRecord.
                             * @memberof google.cloud.domains.v1beta1.DnsSettings
                             * @classdesc Represents a GlueRecord.
                             * @implements IGlueRecord
                             * @constructor
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGlueRecord=} [properties] Properties to set
                             */
                            function GlueRecord(properties) {
                                this.ipv4Addresses = [];
                                this.ipv6Addresses = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GlueRecord hostName.
                             * @member {string} hostName
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.hostName = "";
    
                            /**
                             * GlueRecord ipv4Addresses.
                             * @member {Array.<string>} ipv4Addresses
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv4Addresses = $util.emptyArray;
    
                            /**
                             * GlueRecord ipv6Addresses.
                             * @member {Array.<string>} ipv6Addresses
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @instance
                             */
                            GlueRecord.prototype.ipv6Addresses = $util.emptyArray;
    
                            /**
                             * Creates a new GlueRecord instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGlueRecord=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GlueRecord} GlueRecord instance
                             */
                            GlueRecord.create = function create(properties) {
                                return new GlueRecord(properties);
                            };
    
                            /**
                             * Encodes the specified GlueRecord message. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hostName != null && Object.hasOwnProperty.call(message, "hostName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostName);
                                if (message.ipv4Addresses != null && message.ipv4Addresses.length)
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.ipv4Addresses[i]);
                                if (message.ipv6Addresses != null && message.ipv6Addresses.length)
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.ipv6Addresses[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GlueRecord message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DnsSettings.GlueRecord.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.IGlueRecord} message GlueRecord message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GlueRecord.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.hostName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.ipv4Addresses && message.ipv4Addresses.length))
                                                message.ipv4Addresses = [];
                                            message.ipv4Addresses.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.ipv6Addresses && message.ipv6Addresses.length))
                                                message.ipv6Addresses = [];
                                            message.ipv6Addresses.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GlueRecord message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GlueRecord} GlueRecord
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GlueRecord.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GlueRecord message.
                             * @function verify
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GlueRecord.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    if (!$util.isString(message.hostName))
                                        return "hostName: string expected";
                                if (message.ipv4Addresses != null && message.hasOwnProperty("ipv4Addresses")) {
                                    if (!Array.isArray(message.ipv4Addresses))
                                        return "ipv4Addresses: array expected";
                                    for (var i = 0; i < message.ipv4Addresses.length; ++i)
                                        if (!$util.isString(message.ipv4Addresses[i]))
                                            return "ipv4Addresses: string[] expected";
                                }
                                if (message.ipv6Addresses != null && message.hasOwnProperty("ipv6Addresses")) {
                                    if (!Array.isArray(message.ipv6Addresses))
                                        return "ipv6Addresses: array expected";
                                    for (var i = 0; i < message.ipv6Addresses.length; ++i)
                                        if (!$util.isString(message.ipv6Addresses[i]))
                                            return "ipv6Addresses: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GlueRecord message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1beta1.DnsSettings.GlueRecord} GlueRecord
                             */
                            GlueRecord.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord)
                                    return object;
                                var message = new $root.google.cloud.domains.v1beta1.DnsSettings.GlueRecord();
                                if (object.hostName != null)
                                    message.hostName = String(object.hostName);
                                if (object.ipv4Addresses) {
                                    if (!Array.isArray(object.ipv4Addresses))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.GlueRecord.ipv4Addresses: array expected");
                                    message.ipv4Addresses = [];
                                    for (var i = 0; i < object.ipv4Addresses.length; ++i)
                                        message.ipv4Addresses[i] = String(object.ipv4Addresses[i]);
                                }
                                if (object.ipv6Addresses) {
                                    if (!Array.isArray(object.ipv6Addresses))
                                        throw TypeError(".google.cloud.domains.v1beta1.DnsSettings.GlueRecord.ipv6Addresses: array expected");
                                    message.ipv6Addresses = [];
                                    for (var i = 0; i < object.ipv6Addresses.length; ++i)
                                        message.ipv6Addresses[i] = String(object.ipv6Addresses[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GlueRecord message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {google.cloud.domains.v1beta1.DnsSettings.GlueRecord} message GlueRecord
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GlueRecord.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.ipv4Addresses = [];
                                    object.ipv6Addresses = [];
                                }
                                if (options.defaults)
                                    object.hostName = "";
                                if (message.hostName != null && message.hasOwnProperty("hostName"))
                                    object.hostName = message.hostName;
                                if (message.ipv4Addresses && message.ipv4Addresses.length) {
                                    object.ipv4Addresses = [];
                                    for (var j = 0; j < message.ipv4Addresses.length; ++j)
                                        object.ipv4Addresses[j] = message.ipv4Addresses[j];
                                }
                                if (message.ipv6Addresses && message.ipv6Addresses.length) {
                                    object.ipv6Addresses = [];
                                    for (var j = 0; j < message.ipv6Addresses.length; ++j)
                                        object.ipv6Addresses[j] = message.ipv6Addresses[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GlueRecord to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GlueRecord.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GlueRecord
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1beta1.DnsSettings.GlueRecord
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GlueRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1beta1.DnsSettings.GlueRecord";
                            };
    
                            return GlueRecord;
                        })();
    
                        /**
                         * DsState enum.
                         * @name google.cloud.domains.v1beta1.DnsSettings.DsState
                         * @enum {number}
                         * @property {number} DS_STATE_UNSPECIFIED=0 DS_STATE_UNSPECIFIED value
                         * @property {number} DS_RECORDS_UNPUBLISHED=1 DS_RECORDS_UNPUBLISHED value
                         * @property {number} DS_RECORDS_PUBLISHED=2 DS_RECORDS_PUBLISHED value
                         */
                        DnsSettings.DsState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DS_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DS_RECORDS_UNPUBLISHED"] = 1;
                            values[valuesById[2] = "DS_RECORDS_PUBLISHED"] = 2;
                            return values;
                        })();
    
                        return DnsSettings;
                    })();
    
                    v1beta1.ContactSettings = (function() {
    
                        /**
                         * Properties of a ContactSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IContactSettings
                         * @property {google.cloud.domains.v1beta1.ContactPrivacy|null} [privacy] ContactSettings privacy
                         * @property {google.cloud.domains.v1beta1.ContactSettings.IContact|null} [registrantContact] ContactSettings registrantContact
                         * @property {google.cloud.domains.v1beta1.ContactSettings.IContact|null} [adminContact] ContactSettings adminContact
                         * @property {google.cloud.domains.v1beta1.ContactSettings.IContact|null} [technicalContact] ContactSettings technicalContact
                         */
    
                        /**
                         * Constructs a new ContactSettings.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ContactSettings.
                         * @implements IContactSettings
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IContactSettings=} [properties] Properties to set
                         */
                        function ContactSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContactSettings privacy.
                         * @member {google.cloud.domains.v1beta1.ContactPrivacy} privacy
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.privacy = 0;
    
                        /**
                         * ContactSettings registrantContact.
                         * @member {google.cloud.domains.v1beta1.ContactSettings.IContact|null|undefined} registrantContact
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.registrantContact = null;
    
                        /**
                         * ContactSettings adminContact.
                         * @member {google.cloud.domains.v1beta1.ContactSettings.IContact|null|undefined} adminContact
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.adminContact = null;
    
                        /**
                         * ContactSettings technicalContact.
                         * @member {google.cloud.domains.v1beta1.ContactSettings.IContact|null|undefined} technicalContact
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @instance
                         */
                        ContactSettings.prototype.technicalContact = null;
    
                        /**
                         * Creates a new ContactSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IContactSettings=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ContactSettings} ContactSettings instance
                         */
                        ContactSettings.create = function create(properties) {
                            return new ContactSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ContactSettings message. Does not implicitly {@link google.cloud.domains.v1beta1.ContactSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privacy != null && Object.hasOwnProperty.call(message, "privacy"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.privacy);
                            if (message.registrantContact != null && Object.hasOwnProperty.call(message, "registrantContact"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.Contact.encode(message.registrantContact, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.adminContact != null && Object.hasOwnProperty.call(message, "adminContact"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.Contact.encode(message.adminContact, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.technicalContact != null && Object.hasOwnProperty.call(message, "technicalContact"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.Contact.encode(message.technicalContact, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContactSettings message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ContactSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.IContactSettings} message ContactSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ContactSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privacy = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.registrantContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.adminContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.technicalContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContactSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ContactSettings} ContactSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContactSettings message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContactSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                switch (message.privacy) {
                                default:
                                    return "privacy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.verify(message.registrantContact);
                                if (error)
                                    return "registrantContact." + error;
                            }
                            if (message.adminContact != null && message.hasOwnProperty("adminContact")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.verify(message.adminContact);
                                if (error)
                                    return "adminContact." + error;
                            }
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.verify(message.technicalContact);
                                if (error)
                                    return "technicalContact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContactSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ContactSettings} ContactSettings
                         */
                        ContactSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ContactSettings)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ContactSettings();
                            switch (object.privacy) {
                            default:
                                if (typeof object.privacy === "number") {
                                    message.privacy = object.privacy;
                                    break;
                                }
                                break;
                            case "CONTACT_PRIVACY_UNSPECIFIED":
                            case 0:
                                message.privacy = 0;
                                break;
                            case "PUBLIC_CONTACT_DATA":
                            case 1:
                                message.privacy = 1;
                                break;
                            case "PRIVATE_CONTACT_DATA":
                            case 2:
                                message.privacy = 2;
                                break;
                            case "REDACTED_CONTACT_DATA":
                            case 3:
                                message.privacy = 3;
                                break;
                            }
                            if (object.registrantContact != null) {
                                if (typeof object.registrantContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ContactSettings.registrantContact: object expected");
                                message.registrantContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.fromObject(object.registrantContact);
                            }
                            if (object.adminContact != null) {
                                if (typeof object.adminContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ContactSettings.adminContact: object expected");
                                message.adminContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.fromObject(object.adminContact);
                            }
                            if (object.technicalContact != null) {
                                if (typeof object.technicalContact !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ContactSettings.technicalContact: object expected");
                                message.technicalContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.fromObject(object.technicalContact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContactSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {google.cloud.domains.v1beta1.ContactSettings} message ContactSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContactSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privacy = options.enums === String ? "CONTACT_PRIVACY_UNSPECIFIED" : 0;
                                object.registrantContact = null;
                                object.adminContact = null;
                                object.technicalContact = null;
                            }
                            if (message.privacy != null && message.hasOwnProperty("privacy"))
                                object.privacy = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactPrivacy[message.privacy] === undefined ? message.privacy : $root.google.cloud.domains.v1beta1.ContactPrivacy[message.privacy] : message.privacy;
                            if (message.registrantContact != null && message.hasOwnProperty("registrantContact"))
                                object.registrantContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.toObject(message.registrantContact, options);
                            if (message.adminContact != null && message.hasOwnProperty("adminContact"))
                                object.adminContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.toObject(message.adminContact, options);
                            if (message.technicalContact != null && message.hasOwnProperty("technicalContact"))
                                object.technicalContact = $root.google.cloud.domains.v1beta1.ContactSettings.Contact.toObject(message.technicalContact, options);
                            return object;
                        };
    
                        /**
                         * Converts this ContactSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContactSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContactSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ContactSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContactSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ContactSettings";
                        };
    
                        ContactSettings.Contact = (function() {
    
                            /**
                             * Properties of a Contact.
                             * @memberof google.cloud.domains.v1beta1.ContactSettings
                             * @interface IContact
                             * @property {google.type.IPostalAddress|null} [postalAddress] Contact postalAddress
                             * @property {string|null} [email] Contact email
                             * @property {string|null} [phoneNumber] Contact phoneNumber
                             * @property {string|null} [faxNumber] Contact faxNumber
                             */
    
                            /**
                             * Constructs a new Contact.
                             * @memberof google.cloud.domains.v1beta1.ContactSettings
                             * @classdesc Represents a Contact.
                             * @implements IContact
                             * @constructor
                             * @param {google.cloud.domains.v1beta1.ContactSettings.IContact=} [properties] Properties to set
                             */
                            function Contact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Contact postalAddress.
                             * @member {google.type.IPostalAddress|null|undefined} postalAddress
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.postalAddress = null;
    
                            /**
                             * Contact email.
                             * @member {string} email
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.email = "";
    
                            /**
                             * Contact phoneNumber.
                             * @member {string} phoneNumber
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.phoneNumber = "";
    
                            /**
                             * Contact faxNumber.
                             * @member {string} faxNumber
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @instance
                             */
                            Contact.prototype.faxNumber = "";
    
                            /**
                             * Creates a new Contact instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1beta1.ContactSettings.IContact=} [properties] Properties to set
                             * @returns {google.cloud.domains.v1beta1.ContactSettings.Contact} Contact instance
                             */
                            Contact.create = function create(properties) {
                                return new Contact(properties);
                            };
    
                            /**
                             * Encodes the specified Contact message. Does not implicitly {@link google.cloud.domains.v1beta1.ContactSettings.Contact.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1beta1.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.postalAddress != null && Object.hasOwnProperty.call(message, "postalAddress"))
                                    $root.google.type.PostalAddress.encode(message.postalAddress, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                                if (message.phoneNumber != null && Object.hasOwnProperty.call(message, "phoneNumber"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.phoneNumber);
                                if (message.faxNumber != null && Object.hasOwnProperty.call(message, "faxNumber"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.faxNumber);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Contact message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ContactSettings.Contact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1beta1.ContactSettings.IContact} message Contact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Contact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.domains.v1beta1.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ContactSettings.Contact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.postalAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.email = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.phoneNumber = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.faxNumber = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Contact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.domains.v1beta1.ContactSettings.Contact} Contact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Contact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Contact message.
                             * @function verify
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Contact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress")) {
                                    var error = $root.google.type.PostalAddress.verify(message.postalAddress);
                                    if (error)
                                        return "postalAddress." + error;
                                }
                                if (message.email != null && message.hasOwnProperty("email"))
                                    if (!$util.isString(message.email))
                                        return "email: string expected";
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    if (!$util.isString(message.phoneNumber))
                                        return "phoneNumber: string expected";
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    if (!$util.isString(message.faxNumber))
                                        return "faxNumber: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Contact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.domains.v1beta1.ContactSettings.Contact} Contact
                             */
                            Contact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.domains.v1beta1.ContactSettings.Contact)
                                    return object;
                                var message = new $root.google.cloud.domains.v1beta1.ContactSettings.Contact();
                                if (object.postalAddress != null) {
                                    if (typeof object.postalAddress !== "object")
                                        throw TypeError(".google.cloud.domains.v1beta1.ContactSettings.Contact.postalAddress: object expected");
                                    message.postalAddress = $root.google.type.PostalAddress.fromObject(object.postalAddress);
                                }
                                if (object.email != null)
                                    message.email = String(object.email);
                                if (object.phoneNumber != null)
                                    message.phoneNumber = String(object.phoneNumber);
                                if (object.faxNumber != null)
                                    message.faxNumber = String(object.faxNumber);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Contact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {google.cloud.domains.v1beta1.ContactSettings.Contact} message Contact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Contact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.postalAddress = null;
                                    object.email = "";
                                    object.phoneNumber = "";
                                    object.faxNumber = "";
                                }
                                if (message.postalAddress != null && message.hasOwnProperty("postalAddress"))
                                    object.postalAddress = $root.google.type.PostalAddress.toObject(message.postalAddress, options);
                                if (message.email != null && message.hasOwnProperty("email"))
                                    object.email = message.email;
                                if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                    object.phoneNumber = message.phoneNumber;
                                if (message.faxNumber != null && message.hasOwnProperty("faxNumber"))
                                    object.faxNumber = message.faxNumber;
                                return object;
                            };
    
                            /**
                             * Converts this Contact to JSON.
                             * @function toJSON
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Contact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Contact
                             * @function getTypeUrl
                             * @memberof google.cloud.domains.v1beta1.ContactSettings.Contact
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Contact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.domains.v1beta1.ContactSettings.Contact";
                            };
    
                            return Contact;
                        })();
    
                        return ContactSettings;
                    })();
    
                    v1beta1.SearchDomainsRequest = (function() {
    
                        /**
                         * Properties of a SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface ISearchDomainsRequest
                         * @property {string|null} [query] SearchDomainsRequest query
                         * @property {string|null} [location] SearchDomainsRequest location
                         */
    
                        /**
                         * Constructs a new SearchDomainsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a SearchDomainsRequest.
                         * @implements ISearchDomainsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest=} [properties] Properties to set
                         */
                        function SearchDomainsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsRequest query.
                         * @member {string} query
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.query = "";
    
                        /**
                         * SearchDomainsRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @instance
                         */
                        SearchDomainsRequest.prototype.location = "";
    
                        /**
                         * Creates a new SearchDomainsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsRequest} SearchDomainsRequest instance
                         */
                        SearchDomainsRequest.create = function create(properties) {
                            return new SearchDomainsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.SearchDomainsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.SearchDomainsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsRequest} message SearchDomainsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.SearchDomainsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsRequest} SearchDomainsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsRequest} SearchDomainsRequest
                         */
                        SearchDomainsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.SearchDomainsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.SearchDomainsRequest();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.SearchDomainsRequest} message SearchDomainsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.query = "";
                                object.location = "";
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.SearchDomainsRequest";
                        };
    
                        return SearchDomainsRequest;
                    })();
    
                    v1beta1.SearchDomainsResponse = (function() {
    
                        /**
                         * Properties of a SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface ISearchDomainsResponse
                         * @property {Array.<google.cloud.domains.v1beta1.IRegisterParameters>|null} [registerParameters] SearchDomainsResponse registerParameters
                         */
    
                        /**
                         * Constructs a new SearchDomainsResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a SearchDomainsResponse.
                         * @implements ISearchDomainsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsResponse=} [properties] Properties to set
                         */
                        function SearchDomainsResponse(properties) {
                            this.registerParameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDomainsResponse registerParameters.
                         * @member {Array.<google.cloud.domains.v1beta1.IRegisterParameters>} registerParameters
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @instance
                         */
                        SearchDomainsResponse.prototype.registerParameters = $util.emptyArray;
    
                        /**
                         * Creates a new SearchDomainsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsResponse} SearchDomainsResponse instance
                         */
                        SearchDomainsResponse.create = function create(properties) {
                            return new SearchDomainsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message. Does not implicitly {@link google.cloud.domains.v1beta1.SearchDomainsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && message.registerParameters.length)
                                for (var i = 0; i < message.registerParameters.length; ++i)
                                    $root.google.cloud.domains.v1beta1.RegisterParameters.encode(message.registerParameters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDomainsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.SearchDomainsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.ISearchDomainsResponse} message SearchDomainsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDomainsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.SearchDomainsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registerParameters && message.registerParameters.length))
                                            message.registerParameters = [];
                                        message.registerParameters.push($root.google.cloud.domains.v1beta1.RegisterParameters.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDomainsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsResponse} SearchDomainsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDomainsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDomainsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDomainsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                if (!Array.isArray(message.registerParameters))
                                    return "registerParameters: array expected";
                                for (var i = 0; i < message.registerParameters.length; ++i) {
                                    var error = $root.google.cloud.domains.v1beta1.RegisterParameters.verify(message.registerParameters[i]);
                                    if (error)
                                        return "registerParameters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchDomainsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.SearchDomainsResponse} SearchDomainsResponse
                         */
                        SearchDomainsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.SearchDomainsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.SearchDomainsResponse();
                            if (object.registerParameters) {
                                if (!Array.isArray(object.registerParameters))
                                    throw TypeError(".google.cloud.domains.v1beta1.SearchDomainsResponse.registerParameters: array expected");
                                message.registerParameters = [];
                                for (var i = 0; i < object.registerParameters.length; ++i) {
                                    if (typeof object.registerParameters[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1beta1.SearchDomainsResponse.registerParameters: object expected");
                                    message.registerParameters[i] = $root.google.cloud.domains.v1beta1.RegisterParameters.fromObject(object.registerParameters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDomainsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.SearchDomainsResponse} message SearchDomainsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDomainsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registerParameters = [];
                            if (message.registerParameters && message.registerParameters.length) {
                                object.registerParameters = [];
                                for (var j = 0; j < message.registerParameters.length; ++j)
                                    object.registerParameters[j] = $root.google.cloud.domains.v1beta1.RegisterParameters.toObject(message.registerParameters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchDomainsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDomainsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDomainsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.SearchDomainsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDomainsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.SearchDomainsResponse";
                        };
    
                        return SearchDomainsResponse;
                    })();
    
                    v1beta1.RetrieveRegisterParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRetrieveRegisterParametersRequest
                         * @property {string|null} [domainName] RetrieveRegisterParametersRequest domainName
                         * @property {string|null} [location] RetrieveRegisterParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RetrieveRegisterParametersRequest.
                         * @implements IRetrieveRegisterParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveRegisterParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @instance
                         */
                        RetrieveRegisterParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveRegisterParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest instance
                         */
                        RetrieveRegisterParametersRequest.create = function create(properties) {
                            return new RetrieveRegisterParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest} RetrieveRegisterParametersRequest
                         */
                        RetrieveRegisterParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest} message RetrieveRegisterParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RetrieveRegisterParametersRequest";
                        };
    
                        return RetrieveRegisterParametersRequest;
                    })();
    
                    v1beta1.RetrieveRegisterParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRetrieveRegisterParametersResponse
                         * @property {google.cloud.domains.v1beta1.IRegisterParameters|null} [registerParameters] RetrieveRegisterParametersResponse registerParameters
                         */
    
                        /**
                         * Constructs a new RetrieveRegisterParametersResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RetrieveRegisterParametersResponse.
                         * @implements IRetrieveRegisterParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveRegisterParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveRegisterParametersResponse registerParameters.
                         * @member {google.cloud.domains.v1beta1.IRegisterParameters|null|undefined} registerParameters
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @instance
                         */
                        RetrieveRegisterParametersResponse.prototype.registerParameters = null;
    
                        /**
                         * Creates a new RetrieveRegisterParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse instance
                         */
                        RetrieveRegisterParametersResponse.create = function create(properties) {
                            return new RetrieveRegisterParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registerParameters != null && Object.hasOwnProperty.call(message, "registerParameters"))
                                $root.google.cloud.domains.v1beta1.RegisterParameters.encode(message.registerParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveRegisterParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveRegisterParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registerParameters = $root.google.cloud.domains.v1beta1.RegisterParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveRegisterParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveRegisterParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveRegisterParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveRegisterParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters")) {
                                var error = $root.google.cloud.domains.v1beta1.RegisterParameters.verify(message.registerParameters);
                                if (error)
                                    return "registerParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveRegisterParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} RetrieveRegisterParametersResponse
                         */
                        RetrieveRegisterParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse();
                            if (object.registerParameters != null) {
                                if (typeof object.registerParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse.registerParameters: object expected");
                                message.registerParameters = $root.google.cloud.domains.v1beta1.RegisterParameters.fromObject(object.registerParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveRegisterParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse} message RetrieveRegisterParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveRegisterParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registerParameters = null;
                            if (message.registerParameters != null && message.hasOwnProperty("registerParameters"))
                                object.registerParameters = $root.google.cloud.domains.v1beta1.RegisterParameters.toObject(message.registerParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveRegisterParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveRegisterParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveRegisterParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveRegisterParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RetrieveRegisterParametersResponse";
                        };
    
                        return RetrieveRegisterParametersResponse;
                    })();
    
                    v1beta1.RegisterDomainRequest = (function() {
    
                        /**
                         * Properties of a RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRegisterDomainRequest
                         * @property {string|null} [parent] RegisterDomainRequest parent
                         * @property {google.cloud.domains.v1beta1.IRegistration|null} [registration] RegisterDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1beta1.DomainNotice>|null} [domainNotices] RegisterDomainRequest domainNotices
                         * @property {Array.<google.cloud.domains.v1beta1.ContactNotice>|null} [contactNotices] RegisterDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterDomainRequest yearlyPrice
                         * @property {boolean|null} [validateOnly] RegisterDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new RegisterDomainRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RegisterDomainRequest.
                         * @implements IRegisterDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest=} [properties] Properties to set
                         */
                        function RegisterDomainRequest(properties) {
                            this.domainNotices = [];
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.parent = "";
    
                        /**
                         * RegisterDomainRequest registration.
                         * @member {google.cloud.domains.v1beta1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.registration = null;
    
                        /**
                         * RegisterDomainRequest domainNotices.
                         * @member {Array.<google.cloud.domains.v1beta1.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * RegisterDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * RegisterDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         */
                        RegisterDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new RegisterDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RegisterDomainRequest} RegisterDomainRequest instance
                         */
                        RegisterDomainRequest.create = function create(properties) {
                            return new RegisterDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.RegisterDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1beta1.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RegisterDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterDomainRequest} message RegisterDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RegisterDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1beta1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RegisterDomainRequest} RegisterDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1beta1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RegisterDomainRequest} RegisterDomainRequest
                         */
                        RegisterDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RegisterDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RegisterDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1beta1.Registration.fromObject(object.registration);
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterDomainRequest.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.RegisterDomainRequest} message RegisterDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.domainNotices = [];
                                object.contactNotices = [];
                            }
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1beta1.Registration.toObject(message.registration, options);
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1beta1.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RegisterDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RegisterDomainRequest";
                        };
    
                        return RegisterDomainRequest;
                    })();
    
                    v1beta1.RetrieveTransferParametersRequest = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRetrieveTransferParametersRequest
                         * @property {string|null} [domainName] RetrieveTransferParametersRequest domainName
                         * @property {string|null} [location] RetrieveTransferParametersRequest location
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RetrieveTransferParametersRequest.
                         * @implements IRetrieveTransferParametersRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersRequest domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.domainName = "";
    
                        /**
                         * RetrieveTransferParametersRequest location.
                         * @member {string} location
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @instance
                         */
                        RetrieveTransferParametersRequest.prototype.location = "";
    
                        /**
                         * Creates a new RetrieveTransferParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest instance
                         */
                        RetrieveTransferParametersRequest.create = function create(properties) {
                            return new RetrieveTransferParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveTransferParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersRequest} message RetrieveTransferParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RetrieveTransferParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersRequest} RetrieveTransferParametersRequest
                         */
                        RetrieveTransferParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RetrieveTransferParametersRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RetrieveTransferParametersRequest();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.RetrieveTransferParametersRequest} message RetrieveTransferParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domainName = "";
                                object.location = "";
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RetrieveTransferParametersRequest";
                        };
    
                        return RetrieveTransferParametersRequest;
                    })();
    
                    v1beta1.RetrieveTransferParametersResponse = (function() {
    
                        /**
                         * Properties of a RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRetrieveTransferParametersResponse
                         * @property {google.cloud.domains.v1beta1.ITransferParameters|null} [transferParameters] RetrieveTransferParametersResponse transferParameters
                         */
    
                        /**
                         * Constructs a new RetrieveTransferParametersResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RetrieveTransferParametersResponse.
                         * @implements IRetrieveTransferParametersResponse
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         */
                        function RetrieveTransferParametersResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveTransferParametersResponse transferParameters.
                         * @member {google.cloud.domains.v1beta1.ITransferParameters|null|undefined} transferParameters
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @instance
                         */
                        RetrieveTransferParametersResponse.prototype.transferParameters = null;
    
                        /**
                         * Creates a new RetrieveTransferParametersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse instance
                         */
                        RetrieveTransferParametersResponse.create = function create(properties) {
                            return new RetrieveTransferParametersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferParameters != null && Object.hasOwnProperty.call(message, "transferParameters"))
                                $root.google.cloud.domains.v1beta1.TransferParameters.encode(message.transferParameters, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveTransferParametersResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveTransferParametersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveTransferParametersResponse} message RetrieveTransferParametersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveTransferParametersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RetrieveTransferParametersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.transferParameters = $root.google.cloud.domains.v1beta1.TransferParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveTransferParametersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveTransferParametersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveTransferParametersResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveTransferParametersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters")) {
                                var error = $root.google.cloud.domains.v1beta1.TransferParameters.verify(message.transferParameters);
                                if (error)
                                    return "transferParameters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveTransferParametersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} RetrieveTransferParametersResponse
                         */
                        RetrieveTransferParametersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RetrieveTransferParametersResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RetrieveTransferParametersResponse();
                            if (object.transferParameters != null) {
                                if (typeof object.transferParameters !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.RetrieveTransferParametersResponse.transferParameters: object expected");
                                message.transferParameters = $root.google.cloud.domains.v1beta1.TransferParameters.fromObject(object.transferParameters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveTransferParametersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.RetrieveTransferParametersResponse} message RetrieveTransferParametersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveTransferParametersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.transferParameters = null;
                            if (message.transferParameters != null && message.hasOwnProperty("transferParameters"))
                                object.transferParameters = $root.google.cloud.domains.v1beta1.TransferParameters.toObject(message.transferParameters, options);
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveTransferParametersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveTransferParametersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveTransferParametersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RetrieveTransferParametersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveTransferParametersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RetrieveTransferParametersResponse";
                        };
    
                        return RetrieveTransferParametersResponse;
                    })();
    
                    v1beta1.TransferDomainRequest = (function() {
    
                        /**
                         * Properties of a TransferDomainRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface ITransferDomainRequest
                         * @property {string|null} [parent] TransferDomainRequest parent
                         * @property {google.cloud.domains.v1beta1.IRegistration|null} [registration] TransferDomainRequest registration
                         * @property {Array.<google.cloud.domains.v1beta1.ContactNotice>|null} [contactNotices] TransferDomainRequest contactNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferDomainRequest yearlyPrice
                         * @property {google.cloud.domains.v1beta1.IAuthorizationCode|null} [authorizationCode] TransferDomainRequest authorizationCode
                         * @property {boolean|null} [validateOnly] TransferDomainRequest validateOnly
                         */
    
                        /**
                         * Constructs a new TransferDomainRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a TransferDomainRequest.
                         * @implements ITransferDomainRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest=} [properties] Properties to set
                         */
                        function TransferDomainRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferDomainRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.parent = "";
    
                        /**
                         * TransferDomainRequest registration.
                         * @member {google.cloud.domains.v1beta1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.registration = null;
    
                        /**
                         * TransferDomainRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * TransferDomainRequest yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.yearlyPrice = null;
    
                        /**
                         * TransferDomainRequest authorizationCode.
                         * @member {google.cloud.domains.v1beta1.IAuthorizationCode|null|undefined} authorizationCode
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.authorizationCode = null;
    
                        /**
                         * TransferDomainRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         */
                        TransferDomainRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new TransferDomainRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.TransferDomainRequest} TransferDomainRequest instance
                         */
                        TransferDomainRequest.create = function create(properties) {
                            return new TransferDomainRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.TransferDomainRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1beta1.Registration.encode(message.registration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.authorizationCode != null && Object.hasOwnProperty.call(message, "authorizationCode"))
                                $root.google.cloud.domains.v1beta1.AuthorizationCode.encode(message.authorizationCode, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferDomainRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.TransferDomainRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferDomainRequest} message TransferDomainRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferDomainRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.TransferDomainRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.registration = $root.google.cloud.domains.v1beta1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.authorizationCode = $root.google.cloud.domains.v1beta1.AuthorizationCode.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferDomainRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.TransferDomainRequest} TransferDomainRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferDomainRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferDomainRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferDomainRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1beta1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode")) {
                                var error = $root.google.cloud.domains.v1beta1.AuthorizationCode.verify(message.authorizationCode);
                                if (error)
                                    return "authorizationCode." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransferDomainRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.TransferDomainRequest} TransferDomainRequest
                         */
                        TransferDomainRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.TransferDomainRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.TransferDomainRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferDomainRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1beta1.Registration.fromObject(object.registration);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferDomainRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferDomainRequest.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            if (object.authorizationCode != null) {
                                if (typeof object.authorizationCode !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferDomainRequest.authorizationCode: object expected");
                                message.authorizationCode = $root.google.cloud.domains.v1beta1.AuthorizationCode.fromObject(object.authorizationCode);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferDomainRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.TransferDomainRequest} message TransferDomainRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferDomainRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.registration = null;
                                object.yearlyPrice = null;
                                object.authorizationCode = null;
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1beta1.Registration.toObject(message.registration, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            if (message.authorizationCode != null && message.hasOwnProperty("authorizationCode"))
                                object.authorizationCode = $root.google.cloud.domains.v1beta1.AuthorizationCode.toObject(message.authorizationCode, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this TransferDomainRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferDomainRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferDomainRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.TransferDomainRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferDomainRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.TransferDomainRequest";
                        };
    
                        return TransferDomainRequest;
                    })();
    
                    v1beta1.ListRegistrationsRequest = (function() {
    
                        /**
                         * Properties of a ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IListRegistrationsRequest
                         * @property {string|null} [parent] ListRegistrationsRequest parent
                         * @property {number|null} [pageSize] ListRegistrationsRequest pageSize
                         * @property {string|null} [pageToken] ListRegistrationsRequest pageToken
                         * @property {string|null} [filter] ListRegistrationsRequest filter
                         */
    
                        /**
                         * Constructs a new ListRegistrationsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ListRegistrationsRequest.
                         * @implements IListRegistrationsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest=} [properties] Properties to set
                         */
                        function ListRegistrationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.parent = "";
    
                        /**
                         * ListRegistrationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRegistrationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListRegistrationsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @instance
                         */
                        ListRegistrationsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRegistrationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsRequest} ListRegistrationsRequest instance
                         */
                        ListRegistrationsRequest.create = function create(properties) {
                            return new ListRegistrationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ListRegistrationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ListRegistrationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsRequest} message ListRegistrationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ListRegistrationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsRequest} ListRegistrationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsRequest} ListRegistrationsRequest
                         */
                        ListRegistrationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ListRegistrationsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ListRegistrationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ListRegistrationsRequest} message ListRegistrationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ListRegistrationsRequest";
                        };
    
                        return ListRegistrationsRequest;
                    })();
    
                    v1beta1.ListRegistrationsResponse = (function() {
    
                        /**
                         * Properties of a ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IListRegistrationsResponse
                         * @property {Array.<google.cloud.domains.v1beta1.IRegistration>|null} [registrations] ListRegistrationsResponse registrations
                         * @property {string|null} [nextPageToken] ListRegistrationsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRegistrationsResponse.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ListRegistrationsResponse.
                         * @implements IListRegistrationsResponse
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsResponse=} [properties] Properties to set
                         */
                        function ListRegistrationsResponse(properties) {
                            this.registrations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRegistrationsResponse registrations.
                         * @member {Array.<google.cloud.domains.v1beta1.IRegistration>} registrations
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.registrations = $util.emptyArray;
    
                        /**
                         * ListRegistrationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @instance
                         */
                        ListRegistrationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRegistrationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsResponse} ListRegistrationsResponse instance
                         */
                        ListRegistrationsResponse.create = function create(properties) {
                            return new ListRegistrationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message. Does not implicitly {@link google.cloud.domains.v1beta1.ListRegistrationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registrations != null && message.registrations.length)
                                for (var i = 0; i < message.registrations.length; ++i)
                                    $root.google.cloud.domains.v1beta1.Registration.encode(message.registrations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRegistrationsResponse message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ListRegistrationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.IListRegistrationsResponse} message ListRegistrationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRegistrationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ListRegistrationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.registrations && message.registrations.length))
                                            message.registrations = [];
                                        message.registrations.push($root.google.cloud.domains.v1beta1.Registration.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRegistrationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsResponse} ListRegistrationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRegistrationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRegistrationsResponse message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRegistrationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registrations != null && message.hasOwnProperty("registrations")) {
                                if (!Array.isArray(message.registrations))
                                    return "registrations: array expected";
                                for (var i = 0; i < message.registrations.length; ++i) {
                                    var error = $root.google.cloud.domains.v1beta1.Registration.verify(message.registrations[i]);
                                    if (error)
                                        return "registrations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRegistrationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ListRegistrationsResponse} ListRegistrationsResponse
                         */
                        ListRegistrationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ListRegistrationsResponse)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ListRegistrationsResponse();
                            if (object.registrations) {
                                if (!Array.isArray(object.registrations))
                                    throw TypeError(".google.cloud.domains.v1beta1.ListRegistrationsResponse.registrations: array expected");
                                message.registrations = [];
                                for (var i = 0; i < object.registrations.length; ++i) {
                                    if (typeof object.registrations[i] !== "object")
                                        throw TypeError(".google.cloud.domains.v1beta1.ListRegistrationsResponse.registrations: object expected");
                                    message.registrations[i] = $root.google.cloud.domains.v1beta1.Registration.fromObject(object.registrations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRegistrationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {google.cloud.domains.v1beta1.ListRegistrationsResponse} message ListRegistrationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRegistrationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.registrations = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.registrations && message.registrations.length) {
                                object.registrations = [];
                                for (var j = 0; j < message.registrations.length; ++j)
                                    object.registrations[j] = $root.google.cloud.domains.v1beta1.Registration.toObject(message.registrations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRegistrationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRegistrationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRegistrationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ListRegistrationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRegistrationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ListRegistrationsResponse";
                        };
    
                        return ListRegistrationsResponse;
                    })();
    
                    v1beta1.GetRegistrationRequest = (function() {
    
                        /**
                         * Properties of a GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IGetRegistrationRequest
                         * @property {string|null} [name] GetRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new GetRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a GetRegistrationRequest.
                         * @implements IGetRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest=} [properties] Properties to set
                         */
                        function GetRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @instance
                         */
                        GetRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.GetRegistrationRequest} GetRegistrationRequest instance
                         */
                        GetRegistrationRequest.create = function create(properties) {
                            return new GetRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.GetRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.GetRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IGetRegistrationRequest} message GetRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.GetRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.GetRegistrationRequest} GetRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.GetRegistrationRequest} GetRegistrationRequest
                         */
                        GetRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.GetRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.GetRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.GetRegistrationRequest} message GetRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.GetRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.GetRegistrationRequest";
                        };
    
                        return GetRegistrationRequest;
                    })();
    
                    v1beta1.UpdateRegistrationRequest = (function() {
    
                        /**
                         * Properties of an UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IUpdateRegistrationRequest
                         * @property {google.cloud.domains.v1beta1.IRegistration|null} [registration] UpdateRegistrationRequest registration
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRegistrationRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents an UpdateRegistrationRequest.
                         * @implements IUpdateRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest=} [properties] Properties to set
                         */
                        function UpdateRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRegistrationRequest registration.
                         * @member {google.cloud.domains.v1beta1.IRegistration|null|undefined} registration
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.registration = null;
    
                        /**
                         * UpdateRegistrationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @instance
                         */
                        UpdateRegistrationRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.UpdateRegistrationRequest} UpdateRegistrationRequest instance
                         */
                        UpdateRegistrationRequest.create = function create(properties) {
                            return new UpdateRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                $root.google.cloud.domains.v1beta1.Registration.encode(message.registration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.UpdateRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IUpdateRegistrationRequest} message UpdateRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.UpdateRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = $root.google.cloud.domains.v1beta1.Registration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration")) {
                                var error = $root.google.cloud.domains.v1beta1.Registration.verify(message.registration);
                                if (error)
                                    return "registration." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.UpdateRegistrationRequest} UpdateRegistrationRequest
                         */
                        UpdateRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.UpdateRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.UpdateRegistrationRequest();
                            if (object.registration != null) {
                                if (typeof object.registration !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.UpdateRegistrationRequest.registration: object expected");
                                message.registration = $root.google.cloud.domains.v1beta1.Registration.fromObject(object.registration);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.UpdateRegistrationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.UpdateRegistrationRequest} message UpdateRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = $root.google.cloud.domains.v1beta1.Registration.toObject(message.registration, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.UpdateRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.UpdateRegistrationRequest";
                        };
    
                        return UpdateRegistrationRequest;
                    })();
    
                    v1beta1.ConfigureManagementSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IConfigureManagementSettingsRequest
                         * @property {string|null} [registration] ConfigureManagementSettingsRequest registration
                         * @property {google.cloud.domains.v1beta1.IManagementSettings|null} [managementSettings] ConfigureManagementSettingsRequest managementSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureManagementSettingsRequest updateMask
                         */
    
                        /**
                         * Constructs a new ConfigureManagementSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ConfigureManagementSettingsRequest.
                         * @implements IConfigureManagementSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureManagementSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureManagementSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureManagementSettingsRequest managementSettings.
                         * @member {google.cloud.domains.v1beta1.IManagementSettings|null|undefined} managementSettings
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.managementSettings = null;
    
                        /**
                         * ConfigureManagementSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @instance
                         */
                        ConfigureManagementSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new ConfigureManagementSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest instance
                         */
                        ConfigureManagementSettingsRequest.create = function create(properties) {
                            return new ConfigureManagementSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.managementSettings != null && Object.hasOwnProperty.call(message, "managementSettings"))
                                $root.google.cloud.domains.v1beta1.ManagementSettings.encode(message.managementSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureManagementSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureManagementSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureManagementSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureManagementSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureManagementSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureManagementSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.ManagementSettings.verify(message.managementSettings);
                                if (error)
                                    return "managementSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureManagementSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest} ConfigureManagementSettingsRequest
                         */
                        ConfigureManagementSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.managementSettings != null) {
                                if (typeof object.managementSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest.managementSettings: object expected");
                                message.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.fromObject(object.managementSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureManagementSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest} message ConfigureManagementSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureManagementSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.managementSettings = null;
                                object.updateMask = null;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.managementSettings != null && message.hasOwnProperty("managementSettings"))
                                object.managementSettings = $root.google.cloud.domains.v1beta1.ManagementSettings.toObject(message.managementSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureManagementSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureManagementSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureManagementSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureManagementSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ConfigureManagementSettingsRequest";
                        };
    
                        return ConfigureManagementSettingsRequest;
                    })();
    
                    v1beta1.ConfigureDnsSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IConfigureDnsSettingsRequest
                         * @property {string|null} [registration] ConfigureDnsSettingsRequest registration
                         * @property {google.cloud.domains.v1beta1.IDnsSettings|null} [dnsSettings] ConfigureDnsSettingsRequest dnsSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureDnsSettingsRequest updateMask
                         * @property {boolean|null} [validateOnly] ConfigureDnsSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureDnsSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ConfigureDnsSettingsRequest.
                         * @implements IConfigureDnsSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureDnsSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureDnsSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureDnsSettingsRequest dnsSettings.
                         * @member {google.cloud.domains.v1beta1.IDnsSettings|null|undefined} dnsSettings
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.dnsSettings = null;
    
                        /**
                         * ConfigureDnsSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureDnsSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @instance
                         */
                        ConfigureDnsSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureDnsSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest instance
                         */
                        ConfigureDnsSettingsRequest.create = function create(properties) {
                            return new ConfigureDnsSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.dnsSettings != null && Object.hasOwnProperty.call(message, "dnsSettings"))
                                $root.google.cloud.domains.v1beta1.DnsSettings.encode(message.dnsSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureDnsSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureDnsSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureDnsSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureDnsSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureDnsSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureDnsSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.DnsSettings.verify(message.dnsSettings);
                                if (error)
                                    return "dnsSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureDnsSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest} ConfigureDnsSettingsRequest
                         */
                        ConfigureDnsSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.dnsSettings != null) {
                                if (typeof object.dnsSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest.dnsSettings: object expected");
                                message.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.fromObject(object.dnsSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureDnsSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest} message ConfigureDnsSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureDnsSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.registration = "";
                                object.dnsSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.dnsSettings != null && message.hasOwnProperty("dnsSettings"))
                                object.dnsSettings = $root.google.cloud.domains.v1beta1.DnsSettings.toObject(message.dnsSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureDnsSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureDnsSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureDnsSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureDnsSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ConfigureDnsSettingsRequest";
                        };
    
                        return ConfigureDnsSettingsRequest;
                    })();
    
                    v1beta1.ConfigureContactSettingsRequest = (function() {
    
                        /**
                         * Properties of a ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IConfigureContactSettingsRequest
                         * @property {string|null} [registration] ConfigureContactSettingsRequest registration
                         * @property {google.cloud.domains.v1beta1.IContactSettings|null} [contactSettings] ConfigureContactSettingsRequest contactSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] ConfigureContactSettingsRequest updateMask
                         * @property {Array.<google.cloud.domains.v1beta1.ContactNotice>|null} [contactNotices] ConfigureContactSettingsRequest contactNotices
                         * @property {boolean|null} [validateOnly] ConfigureContactSettingsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ConfigureContactSettingsRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ConfigureContactSettingsRequest.
                         * @implements IConfigureContactSettingsRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest=} [properties] Properties to set
                         */
                        function ConfigureContactSettingsRequest(properties) {
                            this.contactNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfigureContactSettingsRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.registration = "";
    
                        /**
                         * ConfigureContactSettingsRequest contactSettings.
                         * @member {google.cloud.domains.v1beta1.IContactSettings|null|undefined} contactSettings
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactSettings = null;
    
                        /**
                         * ConfigureContactSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * ConfigureContactSettingsRequest contactNotices.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactNotice>} contactNotices
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.contactNotices = $util.emptyArray;
    
                        /**
                         * ConfigureContactSettingsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         */
                        ConfigureContactSettingsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ConfigureContactSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest instance
                         */
                        ConfigureContactSettingsRequest.create = function create(properties) {
                            return new ConfigureContactSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            if (message.contactSettings != null && Object.hasOwnProperty.call(message, "contactSettings"))
                                $root.google.cloud.domains.v1beta1.ContactSettings.encode(message.contactSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.contactNotices != null && message.contactNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    writer.int32(message.contactNotices[i]);
                                writer.ldelim();
                            }
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfigureContactSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ConfigureContactSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IConfigureContactSettingsRequest} message ConfigureContactSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfigureContactSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ConfigureContactSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.contactNotices && message.contactNotices.length))
                                            message.contactNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.contactNotices.push(reader.int32());
                                        } else
                                            message.contactNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfigureContactSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfigureContactSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfigureContactSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfigureContactSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings")) {
                                var error = $root.google.cloud.domains.v1beta1.ContactSettings.verify(message.contactSettings);
                                if (error)
                                    return "contactSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.contactNotices != null && message.hasOwnProperty("contactNotices")) {
                                if (!Array.isArray(message.contactNotices))
                                    return "contactNotices: array expected";
                                for (var i = 0; i < message.contactNotices.length; ++i)
                                    switch (message.contactNotices[i]) {
                                    default:
                                        return "contactNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfigureContactSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ConfigureContactSettingsRequest} ConfigureContactSettingsRequest
                         */
                        ConfigureContactSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ConfigureContactSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ConfigureContactSettingsRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            if (object.contactSettings != null) {
                                if (typeof object.contactSettings !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureContactSettingsRequest.contactSettings: object expected");
                                message.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.fromObject(object.contactSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureContactSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.contactNotices) {
                                if (!Array.isArray(object.contactNotices))
                                    throw TypeError(".google.cloud.domains.v1beta1.ConfigureContactSettingsRequest.contactNotices: array expected");
                                message.contactNotices = [];
                                for (var i = 0; i < object.contactNotices.length; ++i)
                                    switch (object.contactNotices[i]) {
                                    default:
                                        if (typeof object.contactNotices[i] === "number") {
                                            message.contactNotices[i] = object.contactNotices[i];
                                            break;
                                        }
                                    case "CONTACT_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.contactNotices[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
                                    case 1:
                                        message.contactNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfigureContactSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ConfigureContactSettingsRequest} message ConfigureContactSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfigureContactSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.contactNotices = [];
                            if (options.defaults) {
                                object.registration = "";
                                object.contactSettings = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            if (message.contactSettings != null && message.hasOwnProperty("contactSettings"))
                                object.contactSettings = $root.google.cloud.domains.v1beta1.ContactSettings.toObject(message.contactSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.contactNotices && message.contactNotices.length) {
                                object.contactNotices = [];
                                for (var j = 0; j < message.contactNotices.length; ++j)
                                    object.contactNotices[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] === undefined ? message.contactNotices[j] : $root.google.cloud.domains.v1beta1.ContactNotice[message.contactNotices[j]] : message.contactNotices[j];
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ConfigureContactSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfigureContactSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfigureContactSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ConfigureContactSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfigureContactSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ConfigureContactSettingsRequest";
                        };
    
                        return ConfigureContactSettingsRequest;
                    })();
    
                    v1beta1.ExportRegistrationRequest = (function() {
    
                        /**
                         * Properties of an ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IExportRegistrationRequest
                         * @property {string|null} [name] ExportRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new ExportRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents an ExportRegistrationRequest.
                         * @implements IExportRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest=} [properties] Properties to set
                         */
                        function ExportRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @instance
                         */
                        ExportRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new ExportRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ExportRegistrationRequest} ExportRegistrationRequest instance
                         */
                        ExportRegistrationRequest.create = function create(properties) {
                            return new ExportRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ExportRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ExportRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IExportRegistrationRequest} message ExportRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ExportRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ExportRegistrationRequest} ExportRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExportRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ExportRegistrationRequest} ExportRegistrationRequest
                         */
                        ExportRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ExportRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ExportRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ExportRegistrationRequest} message ExportRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ExportRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExportRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ExportRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExportRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ExportRegistrationRequest";
                        };
    
                        return ExportRegistrationRequest;
                    })();
    
                    v1beta1.DeleteRegistrationRequest = (function() {
    
                        /**
                         * Properties of a DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IDeleteRegistrationRequest
                         * @property {string|null} [name] DeleteRegistrationRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRegistrationRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a DeleteRegistrationRequest.
                         * @implements IDeleteRegistrationRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest=} [properties] Properties to set
                         */
                        function DeleteRegistrationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRegistrationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @instance
                         */
                        DeleteRegistrationRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRegistrationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.DeleteRegistrationRequest} DeleteRegistrationRequest instance
                         */
                        DeleteRegistrationRequest.create = function create(properties) {
                            return new DeleteRegistrationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRegistrationRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.DeleteRegistrationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IDeleteRegistrationRequest} message DeleteRegistrationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRegistrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.DeleteRegistrationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRegistrationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRegistrationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRegistrationRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRegistrationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRegistrationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.DeleteRegistrationRequest} DeleteRegistrationRequest
                         */
                        DeleteRegistrationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.DeleteRegistrationRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.DeleteRegistrationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRegistrationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.DeleteRegistrationRequest} message DeleteRegistrationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRegistrationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRegistrationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRegistrationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRegistrationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.DeleteRegistrationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRegistrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.DeleteRegistrationRequest";
                        };
    
                        return DeleteRegistrationRequest;
                    })();
    
                    v1beta1.RetrieveAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRetrieveAuthorizationCodeRequest
                         * @property {string|null} [registration] RetrieveAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new RetrieveAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RetrieveAuthorizationCodeRequest.
                         * @implements IRetrieveAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function RetrieveAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetrieveAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @instance
                         */
                        RetrieveAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new RetrieveAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest instance
                         */
                        RetrieveAuthorizationCodeRequest.create = function create(properties) {
                            return new RetrieveAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetrieveAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetrieveAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetrieveAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetrieveAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetrieveAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetrieveAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetrieveAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest} RetrieveAuthorizationCodeRequest
                         */
                        RetrieveAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetrieveAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest} message RetrieveAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetrieveAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this RetrieveAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetrieveAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetrieveAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetrieveAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RetrieveAuthorizationCodeRequest";
                        };
    
                        return RetrieveAuthorizationCodeRequest;
                    })();
    
                    v1beta1.ResetAuthorizationCodeRequest = (function() {
    
                        /**
                         * Properties of a ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IResetAuthorizationCodeRequest
                         * @property {string|null} [registration] ResetAuthorizationCodeRequest registration
                         */
    
                        /**
                         * Constructs a new ResetAuthorizationCodeRequest.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a ResetAuthorizationCodeRequest.
                         * @implements IResetAuthorizationCodeRequest
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         */
                        function ResetAuthorizationCodeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetAuthorizationCodeRequest registration.
                         * @member {string} registration
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @instance
                         */
                        ResetAuthorizationCodeRequest.prototype.registration = "";
    
                        /**
                         * Creates a new ResetAuthorizationCodeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest instance
                         */
                        ResetAuthorizationCodeRequest.create = function create(properties) {
                            return new ResetAuthorizationCodeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message. Does not implicitly {@link google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.registration != null && Object.hasOwnProperty.call(message, "registration"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.registration);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetAuthorizationCodeRequest message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.IResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetAuthorizationCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.registration = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetAuthorizationCodeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetAuthorizationCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetAuthorizationCodeRequest message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetAuthorizationCodeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                if (!$util.isString(message.registration))
                                    return "registration: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetAuthorizationCodeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest} ResetAuthorizationCodeRequest
                         */
                        ResetAuthorizationCodeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest();
                            if (object.registration != null)
                                message.registration = String(object.registration);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetAuthorizationCodeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest} message ResetAuthorizationCodeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetAuthorizationCodeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.registration = "";
                            if (message.registration != null && message.hasOwnProperty("registration"))
                                object.registration = message.registration;
                            return object;
                        };
    
                        /**
                         * Converts this ResetAuthorizationCodeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetAuthorizationCodeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetAuthorizationCodeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetAuthorizationCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.ResetAuthorizationCodeRequest";
                        };
    
                        return ResetAuthorizationCodeRequest;
                    })();
    
                    v1beta1.RegisterParameters = (function() {
    
                        /**
                         * Properties of a RegisterParameters.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IRegisterParameters
                         * @property {string|null} [domainName] RegisterParameters domainName
                         * @property {google.cloud.domains.v1beta1.RegisterParameters.Availability|null} [availability] RegisterParameters availability
                         * @property {Array.<google.cloud.domains.v1beta1.ContactPrivacy>|null} [supportedPrivacy] RegisterParameters supportedPrivacy
                         * @property {Array.<google.cloud.domains.v1beta1.DomainNotice>|null} [domainNotices] RegisterParameters domainNotices
                         * @property {google.type.IMoney|null} [yearlyPrice] RegisterParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new RegisterParameters.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a RegisterParameters.
                         * @implements IRegisterParameters
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IRegisterParameters=} [properties] Properties to set
                         */
                        function RegisterParameters(properties) {
                            this.supportedPrivacy = [];
                            this.domainNotices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainName = "";
    
                        /**
                         * RegisterParameters availability.
                         * @member {google.cloud.domains.v1beta1.RegisterParameters.Availability} availability
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.availability = 0;
    
                        /**
                         * RegisterParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * RegisterParameters domainNotices.
                         * @member {Array.<google.cloud.domains.v1beta1.DomainNotice>} domainNotices
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.domainNotices = $util.emptyArray;
    
                        /**
                         * RegisterParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         */
                        RegisterParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new RegisterParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.RegisterParameters} RegisterParameters instance
                         */
                        RegisterParameters.create = function create(properties) {
                            return new RegisterParameters(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message. Does not implicitly {@link google.cloud.domains.v1beta1.RegisterParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.availability != null && Object.hasOwnProperty.call(message, "availability"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.availability);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.domainNotices != null && message.domainNotices.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    writer.int32(message.domainNotices[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.RegisterParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.IRegisterParameters} message RegisterParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.RegisterParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.availability = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.domainNotices && message.domainNotices.length))
                                            message.domainNotices = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.domainNotices.push(reader.int32());
                                        } else
                                            message.domainNotices.push(reader.int32());
                                        break;
                                    }
                                case 5: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.RegisterParameters} RegisterParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                switch (message.availability) {
                                default:
                                    return "availability: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.domainNotices != null && message.hasOwnProperty("domainNotices")) {
                                if (!Array.isArray(message.domainNotices))
                                    return "domainNotices: array expected";
                                for (var i = 0; i < message.domainNotices.length; ++i)
                                    switch (message.domainNotices[i]) {
                                    default:
                                        return "domainNotices: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RegisterParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.RegisterParameters} RegisterParameters
                         */
                        RegisterParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.RegisterParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.RegisterParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            switch (object.availability) {
                            default:
                                if (typeof object.availability === "number") {
                                    message.availability = object.availability;
                                    break;
                                }
                                break;
                            case "AVAILABILITY_UNSPECIFIED":
                            case 0:
                                message.availability = 0;
                                break;
                            case "AVAILABLE":
                            case 1:
                                message.availability = 1;
                                break;
                            case "UNAVAILABLE":
                            case 2:
                                message.availability = 2;
                                break;
                            case "UNSUPPORTED":
                            case 3:
                                message.availability = 3;
                                break;
                            case "UNKNOWN":
                            case 4:
                                message.availability = 4;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.domainNotices) {
                                if (!Array.isArray(object.domainNotices))
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterParameters.domainNotices: array expected");
                                message.domainNotices = [];
                                for (var i = 0; i < object.domainNotices.length; ++i)
                                    switch (object.domainNotices[i]) {
                                    default:
                                        if (typeof object.domainNotices[i] === "number") {
                                            message.domainNotices[i] = object.domainNotices[i];
                                            break;
                                        }
                                    case "DOMAIN_NOTICE_UNSPECIFIED":
                                    case 0:
                                        message.domainNotices[i] = 0;
                                        break;
                                    case "HSTS_PRELOADED":
                                    case 1:
                                        message.domainNotices[i] = 1;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.RegisterParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.RegisterParameters} message RegisterParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.supportedPrivacy = [];
                                object.domainNotices = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.availability = options.enums === String ? "AVAILABILITY_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.availability != null && message.hasOwnProperty("availability"))
                                object.availability = options.enums === String ? $root.google.cloud.domains.v1beta1.RegisterParameters.Availability[message.availability] === undefined ? message.availability : $root.google.cloud.domains.v1beta1.RegisterParameters.Availability[message.availability] : message.availability;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.domainNotices && message.domainNotices.length) {
                                object.domainNotices = [];
                                for (var j = 0; j < message.domainNotices.length; ++j)
                                    object.domainNotices[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.DomainNotice[message.domainNotices[j]] === undefined ? message.domainNotices[j] : $root.google.cloud.domains.v1beta1.DomainNotice[message.domainNotices[j]] : message.domainNotices[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this RegisterParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.RegisterParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.RegisterParameters";
                        };
    
                        /**
                         * Availability enum.
                         * @name google.cloud.domains.v1beta1.RegisterParameters.Availability
                         * @enum {number}
                         * @property {number} AVAILABILITY_UNSPECIFIED=0 AVAILABILITY_UNSPECIFIED value
                         * @property {number} AVAILABLE=1 AVAILABLE value
                         * @property {number} UNAVAILABLE=2 UNAVAILABLE value
                         * @property {number} UNSUPPORTED=3 UNSUPPORTED value
                         * @property {number} UNKNOWN=4 UNKNOWN value
                         */
                        RegisterParameters.Availability = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "AVAILABILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVAILABLE"] = 1;
                            values[valuesById[2] = "UNAVAILABLE"] = 2;
                            values[valuesById[3] = "UNSUPPORTED"] = 3;
                            values[valuesById[4] = "UNKNOWN"] = 4;
                            return values;
                        })();
    
                        return RegisterParameters;
                    })();
    
                    v1beta1.TransferParameters = (function() {
    
                        /**
                         * Properties of a TransferParameters.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface ITransferParameters
                         * @property {string|null} [domainName] TransferParameters domainName
                         * @property {string|null} [currentRegistrar] TransferParameters currentRegistrar
                         * @property {Array.<string>|null} [nameServers] TransferParameters nameServers
                         * @property {google.cloud.domains.v1beta1.TransferLockState|null} [transferLockState] TransferParameters transferLockState
                         * @property {Array.<google.cloud.domains.v1beta1.ContactPrivacy>|null} [supportedPrivacy] TransferParameters supportedPrivacy
                         * @property {google.type.IMoney|null} [yearlyPrice] TransferParameters yearlyPrice
                         */
    
                        /**
                         * Constructs a new TransferParameters.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents a TransferParameters.
                         * @implements ITransferParameters
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.ITransferParameters=} [properties] Properties to set
                         */
                        function TransferParameters(properties) {
                            this.nameServers = [];
                            this.supportedPrivacy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferParameters domainName.
                         * @member {string} domainName
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.domainName = "";
    
                        /**
                         * TransferParameters currentRegistrar.
                         * @member {string} currentRegistrar
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.currentRegistrar = "";
    
                        /**
                         * TransferParameters nameServers.
                         * @member {Array.<string>} nameServers
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.nameServers = $util.emptyArray;
    
                        /**
                         * TransferParameters transferLockState.
                         * @member {google.cloud.domains.v1beta1.TransferLockState} transferLockState
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.transferLockState = 0;
    
                        /**
                         * TransferParameters supportedPrivacy.
                         * @member {Array.<google.cloud.domains.v1beta1.ContactPrivacy>} supportedPrivacy
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.supportedPrivacy = $util.emptyArray;
    
                        /**
                         * TransferParameters yearlyPrice.
                         * @member {google.type.IMoney|null|undefined} yearlyPrice
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         */
                        TransferParameters.prototype.yearlyPrice = null;
    
                        /**
                         * Creates a new TransferParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferParameters=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.TransferParameters} TransferParameters instance
                         */
                        TransferParameters.create = function create(properties) {
                            return new TransferParameters(properties);
                        };
    
                        /**
                         * Encodes the specified TransferParameters message. Does not implicitly {@link google.cloud.domains.v1beta1.TransferParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domainName != null && Object.hasOwnProperty.call(message, "domainName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domainName);
                            if (message.currentRegistrar != null && Object.hasOwnProperty.call(message, "currentRegistrar"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.currentRegistrar);
                            if (message.nameServers != null && message.nameServers.length)
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameServers[i]);
                            if (message.transferLockState != null && Object.hasOwnProperty.call(message, "transferLockState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.transferLockState);
                            if (message.supportedPrivacy != null && message.supportedPrivacy.length) {
                                writer.uint32(/* id 5, wireType 2 =*/42).fork();
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    writer.int32(message.supportedPrivacy[i]);
                                writer.ldelim();
                            }
                            if (message.yearlyPrice != null && Object.hasOwnProperty.call(message, "yearlyPrice"))
                                $root.google.type.Money.encode(message.yearlyPrice, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferParameters message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.TransferParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.ITransferParameters} message TransferParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.TransferParameters();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.domainName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.currentRegistrar = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.nameServers && message.nameServers.length))
                                            message.nameServers = [];
                                        message.nameServers.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.transferLockState = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.supportedPrivacy && message.supportedPrivacy.length))
                                            message.supportedPrivacy = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.supportedPrivacy.push(reader.int32());
                                        } else
                                            message.supportedPrivacy.push(reader.int32());
                                        break;
                                    }
                                case 6: {
                                        message.yearlyPrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.TransferParameters} TransferParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferParameters message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                if (!$util.isString(message.domainName))
                                    return "domainName: string expected";
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                if (!$util.isString(message.currentRegistrar))
                                    return "currentRegistrar: string expected";
                            if (message.nameServers != null && message.hasOwnProperty("nameServers")) {
                                if (!Array.isArray(message.nameServers))
                                    return "nameServers: array expected";
                                for (var i = 0; i < message.nameServers.length; ++i)
                                    if (!$util.isString(message.nameServers[i]))
                                        return "nameServers: string[] expected";
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                switch (message.transferLockState) {
                                default:
                                    return "transferLockState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.supportedPrivacy != null && message.hasOwnProperty("supportedPrivacy")) {
                                if (!Array.isArray(message.supportedPrivacy))
                                    return "supportedPrivacy: array expected";
                                for (var i = 0; i < message.supportedPrivacy.length; ++i)
                                    switch (message.supportedPrivacy[i]) {
                                    default:
                                        return "supportedPrivacy: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice")) {
                                var error = $root.google.type.Money.verify(message.yearlyPrice);
                                if (error)
                                    return "yearlyPrice." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.TransferParameters} TransferParameters
                         */
                        TransferParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.TransferParameters)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.TransferParameters();
                            if (object.domainName != null)
                                message.domainName = String(object.domainName);
                            if (object.currentRegistrar != null)
                                message.currentRegistrar = String(object.currentRegistrar);
                            if (object.nameServers) {
                                if (!Array.isArray(object.nameServers))
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferParameters.nameServers: array expected");
                                message.nameServers = [];
                                for (var i = 0; i < object.nameServers.length; ++i)
                                    message.nameServers[i] = String(object.nameServers[i]);
                            }
                            switch (object.transferLockState) {
                            default:
                                if (typeof object.transferLockState === "number") {
                                    message.transferLockState = object.transferLockState;
                                    break;
                                }
                                break;
                            case "TRANSFER_LOCK_STATE_UNSPECIFIED":
                            case 0:
                                message.transferLockState = 0;
                                break;
                            case "UNLOCKED":
                            case 1:
                                message.transferLockState = 1;
                                break;
                            case "LOCKED":
                            case 2:
                                message.transferLockState = 2;
                                break;
                            }
                            if (object.supportedPrivacy) {
                                if (!Array.isArray(object.supportedPrivacy))
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferParameters.supportedPrivacy: array expected");
                                message.supportedPrivacy = [];
                                for (var i = 0; i < object.supportedPrivacy.length; ++i)
                                    switch (object.supportedPrivacy[i]) {
                                    default:
                                        if (typeof object.supportedPrivacy[i] === "number") {
                                            message.supportedPrivacy[i] = object.supportedPrivacy[i];
                                            break;
                                        }
                                    case "CONTACT_PRIVACY_UNSPECIFIED":
                                    case 0:
                                        message.supportedPrivacy[i] = 0;
                                        break;
                                    case "PUBLIC_CONTACT_DATA":
                                    case 1:
                                        message.supportedPrivacy[i] = 1;
                                        break;
                                    case "PRIVATE_CONTACT_DATA":
                                    case 2:
                                        message.supportedPrivacy[i] = 2;
                                        break;
                                    case "REDACTED_CONTACT_DATA":
                                    case 3:
                                        message.supportedPrivacy[i] = 3;
                                        break;
                                    }
                            }
                            if (object.yearlyPrice != null) {
                                if (typeof object.yearlyPrice !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.TransferParameters.yearlyPrice: object expected");
                                message.yearlyPrice = $root.google.type.Money.fromObject(object.yearlyPrice);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {google.cloud.domains.v1beta1.TransferParameters} message TransferParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.nameServers = [];
                                object.supportedPrivacy = [];
                            }
                            if (options.defaults) {
                                object.domainName = "";
                                object.currentRegistrar = "";
                                object.transferLockState = options.enums === String ? "TRANSFER_LOCK_STATE_UNSPECIFIED" : 0;
                                object.yearlyPrice = null;
                            }
                            if (message.domainName != null && message.hasOwnProperty("domainName"))
                                object.domainName = message.domainName;
                            if (message.currentRegistrar != null && message.hasOwnProperty("currentRegistrar"))
                                object.currentRegistrar = message.currentRegistrar;
                            if (message.nameServers && message.nameServers.length) {
                                object.nameServers = [];
                                for (var j = 0; j < message.nameServers.length; ++j)
                                    object.nameServers[j] = message.nameServers[j];
                            }
                            if (message.transferLockState != null && message.hasOwnProperty("transferLockState"))
                                object.transferLockState = options.enums === String ? $root.google.cloud.domains.v1beta1.TransferLockState[message.transferLockState] === undefined ? message.transferLockState : $root.google.cloud.domains.v1beta1.TransferLockState[message.transferLockState] : message.transferLockState;
                            if (message.supportedPrivacy && message.supportedPrivacy.length) {
                                object.supportedPrivacy = [];
                                for (var j = 0; j < message.supportedPrivacy.length; ++j)
                                    object.supportedPrivacy[j] = options.enums === String ? $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] === undefined ? message.supportedPrivacy[j] : $root.google.cloud.domains.v1beta1.ContactPrivacy[message.supportedPrivacy[j]] : message.supportedPrivacy[j];
                            }
                            if (message.yearlyPrice != null && message.hasOwnProperty("yearlyPrice"))
                                object.yearlyPrice = $root.google.type.Money.toObject(message.yearlyPrice, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransferParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.TransferParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.TransferParameters";
                        };
    
                        return TransferParameters;
                    })();
    
                    v1beta1.AuthorizationCode = (function() {
    
                        /**
                         * Properties of an AuthorizationCode.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IAuthorizationCode
                         * @property {string|null} [code] AuthorizationCode code
                         */
    
                        /**
                         * Constructs a new AuthorizationCode.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents an AuthorizationCode.
                         * @implements IAuthorizationCode
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IAuthorizationCode=} [properties] Properties to set
                         */
                        function AuthorizationCode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuthorizationCode code.
                         * @member {string} code
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @instance
                         */
                        AuthorizationCode.prototype.code = "";
    
                        /**
                         * Creates a new AuthorizationCode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1beta1.IAuthorizationCode=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.AuthorizationCode} AuthorizationCode instance
                         */
                        AuthorizationCode.create = function create(properties) {
                            return new AuthorizationCode(properties);
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message. Does not implicitly {@link google.cloud.domains.v1beta1.AuthorizationCode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1beta1.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuthorizationCode message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.AuthorizationCode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1beta1.IAuthorizationCode} message AuthorizationCode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuthorizationCode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.AuthorizationCode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.code = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuthorizationCode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.AuthorizationCode} AuthorizationCode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuthorizationCode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuthorizationCode message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuthorizationCode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AuthorizationCode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.AuthorizationCode} AuthorizationCode
                         */
                        AuthorizationCode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.AuthorizationCode)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.AuthorizationCode();
                            if (object.code != null)
                                message.code = String(object.code);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuthorizationCode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {google.cloud.domains.v1beta1.AuthorizationCode} message AuthorizationCode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuthorizationCode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.code = "";
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            return object;
                        };
    
                        /**
                         * Converts this AuthorizationCode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuthorizationCode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuthorizationCode
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.AuthorizationCode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuthorizationCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.AuthorizationCode";
                        };
    
                        return AuthorizationCode;
                    })();
    
                    v1beta1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.domains.v1beta1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.domains.v1beta1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.domains.v1beta1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1beta1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.domains.v1beta1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.domains.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.domains.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.domains.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.domains.v1beta1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.domains.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.domains.v1beta1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.domains.v1beta1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.domains.v1beta1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.domains.v1beta1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.domains.v1beta1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.domains.v1beta1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.domains.v1beta1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    /**
                     * ContactPrivacy enum.
                     * @name google.cloud.domains.v1beta1.ContactPrivacy
                     * @enum {number}
                     * @property {number} CONTACT_PRIVACY_UNSPECIFIED=0 CONTACT_PRIVACY_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA=1 PUBLIC_CONTACT_DATA value
                     * @property {number} PRIVATE_CONTACT_DATA=2 PRIVATE_CONTACT_DATA value
                     * @property {number} REDACTED_CONTACT_DATA=3 REDACTED_CONTACT_DATA value
                     */
                    v1beta1.ContactPrivacy = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_PRIVACY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA"] = 1;
                        values[valuesById[2] = "PRIVATE_CONTACT_DATA"] = 2;
                        values[valuesById[3] = "REDACTED_CONTACT_DATA"] = 3;
                        return values;
                    })();
    
                    /**
                     * DomainNotice enum.
                     * @name google.cloud.domains.v1beta1.DomainNotice
                     * @enum {number}
                     * @property {number} DOMAIN_NOTICE_UNSPECIFIED=0 DOMAIN_NOTICE_UNSPECIFIED value
                     * @property {number} HSTS_PRELOADED=1 HSTS_PRELOADED value
                     */
                    v1beta1.DomainNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DOMAIN_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HSTS_PRELOADED"] = 1;
                        return values;
                    })();
    
                    /**
                     * ContactNotice enum.
                     * @name google.cloud.domains.v1beta1.ContactNotice
                     * @enum {number}
                     * @property {number} CONTACT_NOTICE_UNSPECIFIED=0 CONTACT_NOTICE_UNSPECIFIED value
                     * @property {number} PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT=1 PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT value
                     */
                    v1beta1.ContactNotice = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_NOTICE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"] = 1;
                        return values;
                    })();
    
                    /**
                     * TransferLockState enum.
                     * @name google.cloud.domains.v1beta1.TransferLockState
                     * @enum {number}
                     * @property {number} TRANSFER_LOCK_STATE_UNSPECIFIED=0 TRANSFER_LOCK_STATE_UNSPECIFIED value
                     * @property {number} UNLOCKED=1 UNLOCKED value
                     * @property {number} LOCKED=2 LOCKED value
                     */
                    v1beta1.TransferLockState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRANSFER_LOCK_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UNLOCKED"] = 1;
                        values[valuesById[2] = "LOCKED"] = 2;
                        return values;
                    })();
    
                    return v1beta1;
                })();
    
                return domains;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.currencyCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.units = reader.int64();
                                break;
                            }
                        case 3: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Money
                 * @function getTypeUrl
                 * @memberof google.type.Money
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Money.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Money";
                };
    
                return Money;
            })();
    
            type.PostalAddress = (function() {
    
                /**
                 * Properties of a PostalAddress.
                 * @memberof google.type
                 * @interface IPostalAddress
                 * @property {number|null} [revision] PostalAddress revision
                 * @property {string|null} [regionCode] PostalAddress regionCode
                 * @property {string|null} [languageCode] PostalAddress languageCode
                 * @property {string|null} [postalCode] PostalAddress postalCode
                 * @property {string|null} [sortingCode] PostalAddress sortingCode
                 * @property {string|null} [administrativeArea] PostalAddress administrativeArea
                 * @property {string|null} [locality] PostalAddress locality
                 * @property {string|null} [sublocality] PostalAddress sublocality
                 * @property {Array.<string>|null} [addressLines] PostalAddress addressLines
                 * @property {Array.<string>|null} [recipients] PostalAddress recipients
                 * @property {string|null} [organization] PostalAddress organization
                 */
    
                /**
                 * Constructs a new PostalAddress.
                 * @memberof google.type
                 * @classdesc Represents a PostalAddress.
                 * @implements IPostalAddress
                 * @constructor
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 */
                function PostalAddress(properties) {
                    this.addressLines = [];
                    this.recipients = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PostalAddress revision.
                 * @member {number} revision
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.revision = 0;
    
                /**
                 * PostalAddress regionCode.
                 * @member {string} regionCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.regionCode = "";
    
                /**
                 * PostalAddress languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.languageCode = "";
    
                /**
                 * PostalAddress postalCode.
                 * @member {string} postalCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.postalCode = "";
    
                /**
                 * PostalAddress sortingCode.
                 * @member {string} sortingCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sortingCode = "";
    
                /**
                 * PostalAddress administrativeArea.
                 * @member {string} administrativeArea
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.administrativeArea = "";
    
                /**
                 * PostalAddress locality.
                 * @member {string} locality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.locality = "";
    
                /**
                 * PostalAddress sublocality.
                 * @member {string} sublocality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sublocality = "";
    
                /**
                 * PostalAddress addressLines.
                 * @member {Array.<string>} addressLines
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.addressLines = $util.emptyArray;
    
                /**
                 * PostalAddress recipients.
                 * @member {Array.<string>} recipients
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.recipients = $util.emptyArray;
    
                /**
                 * PostalAddress organization.
                 * @member {string} organization
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.organization = "";
    
                /**
                 * Creates a new PostalAddress instance using the specified properties.
                 * @function create
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 * @returns {google.type.PostalAddress} PostalAddress instance
                 */
                PostalAddress.create = function create(properties) {
                    return new PostalAddress(properties);
                };
    
                /**
                 * Encodes the specified PostalAddress message. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                    if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCode);
                    if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.postalCode);
                    if (message.sortingCode != null && Object.hasOwnProperty.call(message, "sortingCode"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.sortingCode);
                    if (message.administrativeArea != null && Object.hasOwnProperty.call(message, "administrativeArea"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.administrativeArea);
                    if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.locality);
                    if (message.sublocality != null && Object.hasOwnProperty.call(message, "sublocality"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.sublocality);
                    if (message.addressLines != null && message.addressLines.length)
                        for (var i = 0; i < message.addressLines.length; ++i)
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.addressLines[i]);
                    if (message.recipients != null && message.recipients.length)
                        for (var i = 0; i < message.recipients.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.recipients[i]);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.organization);
                    return writer;
                };
    
                /**
                 * Encodes the specified PostalAddress message, length delimited. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.PostalAddress();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.revision = reader.int32();
                                break;
                            }
                        case 2: {
                                message.regionCode = reader.string();
                                break;
                            }
                        case 3: {
                                message.languageCode = reader.string();
                                break;
                            }
                        case 4: {
                                message.postalCode = reader.string();
                                break;
                            }
                        case 5: {
                                message.sortingCode = reader.string();
                                break;
                            }
                        case 6: {
                                message.administrativeArea = reader.string();
                                break;
                            }
                        case 7: {
                                message.locality = reader.string();
                                break;
                            }
                        case 8: {
                                message.sublocality = reader.string();
                                break;
                            }
                        case 9: {
                                if (!(message.addressLines && message.addressLines.length))
                                    message.addressLines = [];
                                message.addressLines.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.recipients && message.recipients.length))
                                    message.recipients = [];
                                message.recipients.push(reader.string());
                                break;
                            }
                        case 11: {
                                message.organization = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PostalAddress message.
                 * @function verify
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PostalAddress.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        if (!$util.isInteger(message.revision))
                            return "revision: integer expected";
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        if (!$util.isString(message.regionCode))
                            return "regionCode: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        if (!$util.isString(message.postalCode))
                            return "postalCode: string expected";
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        if (!$util.isString(message.sortingCode))
                            return "sortingCode: string expected";
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        if (!$util.isString(message.administrativeArea))
                            return "administrativeArea: string expected";
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        if (!$util.isString(message.locality))
                            return "locality: string expected";
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        if (!$util.isString(message.sublocality))
                            return "sublocality: string expected";
                    if (message.addressLines != null && message.hasOwnProperty("addressLines")) {
                        if (!Array.isArray(message.addressLines))
                            return "addressLines: array expected";
                        for (var i = 0; i < message.addressLines.length; ++i)
                            if (!$util.isString(message.addressLines[i]))
                                return "addressLines: string[] expected";
                    }
                    if (message.recipients != null && message.hasOwnProperty("recipients")) {
                        if (!Array.isArray(message.recipients))
                            return "recipients: array expected";
                        for (var i = 0; i < message.recipients.length; ++i)
                            if (!$util.isString(message.recipients[i]))
                                return "recipients: string[] expected";
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        if (!$util.isString(message.organization))
                            return "organization: string expected";
                    return null;
                };
    
                /**
                 * Creates a PostalAddress message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.PostalAddress} PostalAddress
                 */
                PostalAddress.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.PostalAddress)
                        return object;
                    var message = new $root.google.type.PostalAddress();
                    if (object.revision != null)
                        message.revision = object.revision | 0;
                    if (object.regionCode != null)
                        message.regionCode = String(object.regionCode);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    if (object.postalCode != null)
                        message.postalCode = String(object.postalCode);
                    if (object.sortingCode != null)
                        message.sortingCode = String(object.sortingCode);
                    if (object.administrativeArea != null)
                        message.administrativeArea = String(object.administrativeArea);
                    if (object.locality != null)
                        message.locality = String(object.locality);
                    if (object.sublocality != null)
                        message.sublocality = String(object.sublocality);
                    if (object.addressLines) {
                        if (!Array.isArray(object.addressLines))
                            throw TypeError(".google.type.PostalAddress.addressLines: array expected");
                        message.addressLines = [];
                        for (var i = 0; i < object.addressLines.length; ++i)
                            message.addressLines[i] = String(object.addressLines[i]);
                    }
                    if (object.recipients) {
                        if (!Array.isArray(object.recipients))
                            throw TypeError(".google.type.PostalAddress.recipients: array expected");
                        message.recipients = [];
                        for (var i = 0; i < object.recipients.length; ++i)
                            message.recipients[i] = String(object.recipients[i]);
                    }
                    if (object.organization != null)
                        message.organization = String(object.organization);
                    return message;
                };
    
                /**
                 * Creates a plain object from a PostalAddress message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.PostalAddress} message PostalAddress
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PostalAddress.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.addressLines = [];
                        object.recipients = [];
                    }
                    if (options.defaults) {
                        object.revision = 0;
                        object.regionCode = "";
                        object.languageCode = "";
                        object.postalCode = "";
                        object.sortingCode = "";
                        object.administrativeArea = "";
                        object.locality = "";
                        object.sublocality = "";
                        object.organization = "";
                    }
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        object.revision = message.revision;
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        object.regionCode = message.regionCode;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        object.postalCode = message.postalCode;
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        object.sortingCode = message.sortingCode;
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        object.administrativeArea = message.administrativeArea;
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        object.locality = message.locality;
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        object.sublocality = message.sublocality;
                    if (message.addressLines && message.addressLines.length) {
                        object.addressLines = [];
                        for (var j = 0; j < message.addressLines.length; ++j)
                            object.addressLines[j] = message.addressLines[j];
                    }
                    if (message.recipients && message.recipients.length) {
                        object.recipients = [];
                        for (var j = 0; j < message.recipients.length; ++j)
                            object.recipients[j] = message.recipients[j];
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = message.organization;
                    return object;
                };
    
                /**
                 * Converts this PostalAddress to JSON.
                 * @function toJSON
                 * @memberof google.type.PostalAddress
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PostalAddress.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PostalAddress
                 * @function getTypeUrl
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PostalAddress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.PostalAddress";
                };
    
                return PostalAddress;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
