{
  "nested": {
    "google": {
      "nested": {
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19,
                  "options": {
                    "packed": false
                  }
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  9995,
                  9999
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        },
        "analytics": {
          "nested": {
            "data": {
              "nested": {
                "v1alpha": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/analytics/data/v1alpha;data",
                    "java_multiple_files": true,
                    "java_outer_classname": "ReportingApiProto",
                    "java_package": "com.google.analytics.data.v1alpha",
                    "(google.api.resource_definition).type": "analyticsadmin.googleapis.com/Property",
                    "(google.api.resource_definition).pattern": "properties/{property}"
                  },
                  "nested": {
                    "AlphaAnalyticsData": {
                      "options": {
                        "(google.api.default_host)": "analyticsdata.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/analytics,https://www.googleapis.com/auth/analytics.readonly,https://www.googleapis.com/auth/drive,https://www.googleapis.com/auth/drive.file,https://www.googleapis.com/auth/spreadsheets"
                      },
                      "methods": {
                        "RunFunnelReport": {
                          "requestType": "RunFunnelReportRequest",
                          "responseType": "RunFunnelReportResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{property=properties/*}:runFunnelReport",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{property=properties/*}:runFunnelReport",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CreateAudienceList": {
                          "requestType": "CreateAudienceListRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=properties/*}/audienceLists",
                            "(google.api.http).body": "audience_list",
                            "(google.api.method_signature)": "parent,audience_list",
                            "(google.longrunning.operation_info).response_type": "AudienceList",
                            "(google.longrunning.operation_info).metadata_type": "AudienceListMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=properties/*}/audienceLists",
                                "body": "audience_list"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,audience_list"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "AudienceList",
                                "metadata_type": "AudienceListMetadata"
                              }
                            }
                          ]
                        },
                        "QueryAudienceList": {
                          "requestType": "QueryAudienceListRequest",
                          "responseType": "QueryAudienceListResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{name=properties/*/audienceLists/*}:query",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{name=properties/*/audienceLists/*}:query",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "SheetExportAudienceList": {
                          "requestType": "SheetExportAudienceListRequest",
                          "responseType": "SheetExportAudienceListResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{name=properties/*/audienceLists/*}:exportSheet",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{name=properties/*/audienceLists/*}:exportSheet",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetAudienceList": {
                          "requestType": "GetAudienceListRequest",
                          "responseType": "AudienceList",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=properties/*/audienceLists/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=properties/*/audienceLists/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAudienceLists": {
                          "requestType": "ListAudienceListsRequest",
                          "responseType": "ListAudienceListsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=properties/*}/audienceLists",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=properties/*}/audienceLists"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateRecurringAudienceList": {
                          "requestType": "CreateRecurringAudienceListRequest",
                          "responseType": "RecurringAudienceList",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=properties/*}/recurringAudienceLists",
                            "(google.api.http).body": "recurring_audience_list",
                            "(google.api.method_signature)": "parent,recurring_audience_list"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=properties/*}/recurringAudienceLists",
                                "body": "recurring_audience_list"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,recurring_audience_list"
                            }
                          ]
                        },
                        "GetRecurringAudienceList": {
                          "requestType": "GetRecurringAudienceListRequest",
                          "responseType": "RecurringAudienceList",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=properties/*/recurringAudienceLists/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=properties/*/recurringAudienceLists/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListRecurringAudienceLists": {
                          "requestType": "ListRecurringAudienceListsRequest",
                          "responseType": "ListRecurringAudienceListsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=properties/*}/recurringAudienceLists",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=properties/*}/recurringAudienceLists"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateReportTask": {
                          "requestType": "CreateReportTaskRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=properties/*}/reportTasks",
                            "(google.api.http).body": "report_task",
                            "(google.api.method_signature)": "parent,report_task",
                            "(google.longrunning.operation_info).response_type": "ReportTask",
                            "(google.longrunning.operation_info).metadata_type": "ReportTaskMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=properties/*}/reportTasks",
                                "body": "report_task"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,report_task"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ReportTask",
                                "metadata_type": "ReportTaskMetadata"
                              }
                            }
                          ]
                        },
                        "QueryReportTask": {
                          "requestType": "QueryReportTaskRequest",
                          "responseType": "QueryReportTaskResponse",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{name=properties/*/reportTasks/*}:query",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{name=properties/*/reportTasks/*}:query",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetReportTask": {
                          "requestType": "GetReportTaskRequest",
                          "responseType": "ReportTask",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=properties/*/reportTasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=properties/*/reportTasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListReportTasks": {
                          "requestType": "ListReportTasksRequest",
                          "responseType": "ListReportTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=properties/*}/reportTasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=properties/*}/reportTasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateRecurringAudienceListRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/RecurringAudienceList"
                          }
                        },
                        "recurringAudienceList": {
                          "type": "RecurringAudienceList",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "RecurringAudienceList": {
                      "options": {
                        "(google.api.resource).type": "analyticsdata.googleapis.com/RecurringAudienceList",
                        "(google.api.resource).pattern": "properties/{property}/recurringAudienceLists/{recurring_audience_list}",
                        "(google.api.resource).plural": "recurringAudienceLists",
                        "(google.api.resource).singular": "recurringAudienceList"
                      },
                      "oneofs": {
                        "_activeDaysRemaining": {
                          "oneof": [
                            "activeDaysRemaining"
                          ]
                        },
                        "_webhookNotification": {
                          "oneof": [
                            "webhookNotification"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "audience": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "audienceDisplayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "AudienceDimension",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "activeDaysRemaining": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "audienceLists": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "webhookNotification": {
                          "type": "WebhookNotification",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "WebhookNotification": {
                      "oneofs": {
                        "_uri": {
                          "oneof": [
                            "uri"
                          ]
                        },
                        "_channelToken": {
                          "oneof": [
                            "channelToken"
                          ]
                        }
                      },
                      "fields": {
                        "uri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "channelToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "GetRecurringAudienceListRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/RecurringAudienceList"
                          }
                        }
                      }
                    },
                    "ListRecurringAudienceListsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/RecurringAudienceList"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListRecurringAudienceListsResponse": {
                      "oneofs": {
                        "_nextPageToken": {
                          "oneof": [
                            "nextPageToken"
                          ]
                        }
                      },
                      "fields": {
                        "recurringAudienceLists": {
                          "rule": "repeated",
                          "type": "RecurringAudienceList",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "GetAudienceListRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/AudienceList"
                          }
                        }
                      }
                    },
                    "ListAudienceListsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/AudienceList"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListAudienceListsResponse": {
                      "oneofs": {
                        "_nextPageToken": {
                          "oneof": [
                            "nextPageToken"
                          ]
                        }
                      },
                      "fields": {
                        "audienceLists": {
                          "rule": "repeated",
                          "type": "AudienceList",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "CreateAudienceListRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/AudienceList"
                          }
                        },
                        "audienceList": {
                          "type": "AudienceList",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AudienceList": {
                      "options": {
                        "(google.api.resource).type": "analyticsdata.googleapis.com/AudienceList",
                        "(google.api.resource).pattern": "properties/{property}/audienceLists/{audience_list}",
                        "(google.api.resource).plural": "audienceLists",
                        "(google.api.resource).singular": "audienceList"
                      },
                      "oneofs": {
                        "_state": {
                          "oneof": [
                            "state"
                          ]
                        },
                        "_beginCreatingTime": {
                          "oneof": [
                            "beginCreatingTime"
                          ]
                        },
                        "_rowCount": {
                          "oneof": [
                            "rowCount"
                          ]
                        },
                        "_errorMessage": {
                          "oneof": [
                            "errorMessage"
                          ]
                        },
                        "_percentageCompleted": {
                          "oneof": [
                            "percentageCompleted"
                          ]
                        },
                        "_recurringAudienceList": {
                          "oneof": [
                            "recurringAudienceList"
                          ]
                        },
                        "_webhookNotification": {
                          "oneof": [
                            "webhookNotification"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "audience": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "audienceDisplayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "AudienceDimension",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "beginCreatingTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "creationQuotaTokensCharged": {
                          "type": "int32",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "percentageCompleted": {
                          "type": "double",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "recurringAudienceList": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "webhookNotification": {
                          "type": "WebhookNotification",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "FAILED": 3
                          }
                        }
                      }
                    },
                    "AudienceListMetadata": {
                      "fields": {}
                    },
                    "QueryAudienceListRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "offset": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "limit": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "QueryAudienceListResponse": {
                      "oneofs": {
                        "_audienceList": {
                          "oneof": [
                            "audienceList"
                          ]
                        },
                        "_rowCount": {
                          "oneof": [
                            "rowCount"
                          ]
                        }
                      },
                      "fields": {
                        "audienceList": {
                          "type": "AudienceList",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "audienceRows": {
                          "rule": "repeated",
                          "type": "AudienceRow",
                          "id": 2
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "SheetExportAudienceListRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/AudienceList"
                          }
                        },
                        "offset": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "limit": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SheetExportAudienceListResponse": {
                      "oneofs": {
                        "_spreadsheetUri": {
                          "oneof": [
                            "spreadsheetUri"
                          ]
                        },
                        "_spreadsheetId": {
                          "oneof": [
                            "spreadsheetId"
                          ]
                        },
                        "_rowCount": {
                          "oneof": [
                            "rowCount"
                          ]
                        },
                        "_audienceList": {
                          "oneof": [
                            "audienceList"
                          ]
                        }
                      },
                      "fields": {
                        "spreadsheetUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "spreadsheetId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "audienceList": {
                          "type": "AudienceList",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "AudienceRow": {
                      "fields": {
                        "dimensionValues": {
                          "rule": "repeated",
                          "type": "AudienceDimensionValue",
                          "id": 1
                        }
                      }
                    },
                    "AudienceDimension": {
                      "fields": {
                        "dimensionName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "AudienceDimensionValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "RunFunnelReportRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dateRanges": {
                          "rule": "repeated",
                          "type": "DateRange",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "funnel": {
                          "type": "Funnel",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "funnelBreakdown": {
                          "type": "FunnelBreakdown",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "funnelNextAction": {
                          "type": "FunnelNextAction",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "funnelVisualizationType": {
                          "type": "FunnelVisualizationType",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "segments": {
                          "rule": "repeated",
                          "type": "Segment",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "limit": {
                          "type": "int64",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dimensionFilter": {
                          "type": "FilterExpression",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "returnPropertyQuota": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "FunnelVisualizationType": {
                          "values": {
                            "FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED": 0,
                            "STANDARD_FUNNEL": 1,
                            "TRENDED_FUNNEL": 2
                          }
                        }
                      }
                    },
                    "RunFunnelReportResponse": {
                      "fields": {
                        "funnelTable": {
                          "type": "FunnelSubReport",
                          "id": 1
                        },
                        "funnelVisualization": {
                          "type": "FunnelSubReport",
                          "id": 2
                        },
                        "propertyQuota": {
                          "type": "PropertyQuota",
                          "id": 3
                        },
                        "kind": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ReportTask": {
                      "options": {
                        "(google.api.resource).type": "analyticsdata.googleapis.com/ReportTask",
                        "(google.api.resource).pattern": "properties/{property}/reportTasks/{report_task}",
                        "(google.api.resource).plural": "reportTasks",
                        "(google.api.resource).singular": "reportTask"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reportDefinition": {
                          "type": "ReportDefinition",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reportMetadata": {
                          "type": "ReportMetadata",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ReportDefinition": {
                          "fields": {
                            "dimensions": {
                              "rule": "repeated",
                              "type": "Dimension",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "metrics": {
                              "rule": "repeated",
                              "type": "Metric",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "dateRanges": {
                              "rule": "repeated",
                              "type": "DateRange",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "dimensionFilter": {
                              "type": "FilterExpression",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "metricFilter": {
                              "type": "FilterExpression",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "offset": {
                              "type": "int64",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "limit": {
                              "type": "int64",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "metricAggregations": {
                              "rule": "repeated",
                              "type": "MetricAggregation",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "orderBys": {
                              "rule": "repeated",
                              "type": "OrderBy",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "currencyCode": {
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "cohortSpec": {
                              "type": "CohortSpec",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "keepEmptyRows": {
                              "type": "bool",
                              "id": 13,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ReportMetadata": {
                          "oneofs": {
                            "_state": {
                              "oneof": [
                                "state"
                              ]
                            },
                            "_beginCreatingTime": {
                              "oneof": [
                                "beginCreatingTime"
                              ]
                            },
                            "_taskRowCount": {
                              "oneof": [
                                "taskRowCount"
                              ]
                            },
                            "_errorMessage": {
                              "oneof": [
                                "errorMessage"
                              ]
                            },
                            "_totalRowCount": {
                              "oneof": [
                                "totalRowCount"
                              ]
                            }
                          },
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "proto3_optional": true
                              }
                            },
                            "beginCreatingTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "proto3_optional": true
                              }
                            },
                            "creationQuotaTokensCharged": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "taskRowCount": {
                              "type": "int32",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "proto3_optional": true
                              }
                            },
                            "errorMessage": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "proto3_optional": true
                              }
                            },
                            "totalRowCount": {
                              "type": "int32",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "proto3_optional": true
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "CREATING": 1,
                                "ACTIVE": 2,
                                "FAILED": 3
                              }
                            }
                          }
                        }
                      }
                    },
                    "CreateReportTaskRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/ReportTask"
                          }
                        },
                        "reportTask": {
                          "type": "ReportTask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ReportTaskMetadata": {
                      "fields": {}
                    },
                    "QueryReportTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "offset": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "limit": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "QueryReportTaskResponse": {
                      "fields": {
                        "dimensionHeaders": {
                          "rule": "repeated",
                          "type": "DimensionHeader",
                          "id": 1
                        },
                        "metricHeaders": {
                          "rule": "repeated",
                          "type": "MetricHeader",
                          "id": 2
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 3
                        },
                        "totals": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 4
                        },
                        "maximums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 5
                        },
                        "minimums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 6
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "metadata": {
                          "type": "ResponseMetaData",
                          "id": 8
                        }
                      }
                    },
                    "GetReportTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/ReportTask"
                          }
                        }
                      }
                    },
                    "ListReportTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/ReportTask"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListReportTasksResponse": {
                      "oneofs": {
                        "_nextPageToken": {
                          "oneof": [
                            "nextPageToken"
                          ]
                        }
                      },
                      "fields": {
                        "reportTasks": {
                          "rule": "repeated",
                          "type": "ReportTask",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "DateRange": {
                      "fields": {
                        "startDate": {
                          "type": "string",
                          "id": 1
                        },
                        "endDate": {
                          "type": "string",
                          "id": 2
                        },
                        "name": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Dimension": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensionExpression": {
                          "type": "DimensionExpression",
                          "id": 2
                        }
                      }
                    },
                    "DimensionExpression": {
                      "oneofs": {
                        "oneExpression": {
                          "oneof": [
                            "lowerCase",
                            "upperCase",
                            "concatenate"
                          ]
                        }
                      },
                      "fields": {
                        "lowerCase": {
                          "type": "CaseExpression",
                          "id": 4
                        },
                        "upperCase": {
                          "type": "CaseExpression",
                          "id": 5
                        },
                        "concatenate": {
                          "type": "ConcatenateExpression",
                          "id": 6
                        }
                      },
                      "nested": {
                        "CaseExpression": {
                          "fields": {
                            "dimensionName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ConcatenateExpression": {
                          "fields": {
                            "dimensionNames": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "delimiter": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "Metric": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "expression": {
                          "type": "string",
                          "id": 2
                        },
                        "invisible": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "FilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "filter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "FilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "FilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "FilterExpression",
                          "id": 3
                        },
                        "filter": {
                          "type": "Filter",
                          "id": 4
                        }
                      }
                    },
                    "FilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "FilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "Filter": {
                      "oneofs": {
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "fieldName": {
                          "type": "string",
                          "id": 1
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 2
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 3
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 4
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 5
                        }
                      }
                    },
                    "StringFilter": {
                      "fields": {
                        "matchType": {
                          "type": "MatchType",
                          "id": 1
                        },
                        "value": {
                          "type": "string",
                          "id": 2
                        },
                        "caseSensitive": {
                          "type": "bool",
                          "id": 3
                        }
                      },
                      "nested": {
                        "MatchType": {
                          "values": {
                            "MATCH_TYPE_UNSPECIFIED": 0,
                            "EXACT": 1,
                            "BEGINS_WITH": 2,
                            "ENDS_WITH": 3,
                            "CONTAINS": 4,
                            "FULL_REGEXP": 5,
                            "PARTIAL_REGEXP": 6
                          }
                        }
                      }
                    },
                    "InListFilter": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "caseSensitive": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "NumericFilter": {
                      "fields": {
                        "operation": {
                          "type": "Operation",
                          "id": 1
                        },
                        "value": {
                          "type": "NumericValue",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Operation": {
                          "values": {
                            "OPERATION_UNSPECIFIED": 0,
                            "EQUAL": 1,
                            "LESS_THAN": 2,
                            "LESS_THAN_OR_EQUAL": 3,
                            "GREATER_THAN": 4,
                            "GREATER_THAN_OR_EQUAL": 5
                          }
                        }
                      }
                    },
                    "OrderBy": {
                      "oneofs": {
                        "oneOrderBy": {
                          "oneof": [
                            "metric",
                            "dimension"
                          ]
                        }
                      },
                      "fields": {
                        "metric": {
                          "type": "MetricOrderBy",
                          "id": 1
                        },
                        "dimension": {
                          "type": "DimensionOrderBy",
                          "id": 2
                        },
                        "desc": {
                          "type": "bool",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MetricOrderBy": {
                          "fields": {
                            "metricName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "DimensionOrderBy": {
                          "fields": {
                            "dimensionName": {
                              "type": "string",
                              "id": 1
                            },
                            "orderType": {
                              "type": "OrderType",
                              "id": 2
                            }
                          },
                          "nested": {
                            "OrderType": {
                              "values": {
                                "ORDER_TYPE_UNSPECIFIED": 0,
                                "ALPHANUMERIC": 1,
                                "CASE_INSENSITIVE_ALPHANUMERIC": 2,
                                "NUMERIC": 3
                              }
                            }
                          }
                        }
                      }
                    },
                    "BetweenFilter": {
                      "fields": {
                        "fromValue": {
                          "type": "NumericValue",
                          "id": 1
                        },
                        "toValue": {
                          "type": "NumericValue",
                          "id": 2
                        }
                      }
                    },
                    "NumericValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "int64Value",
                            "doubleValue"
                          ]
                        }
                      },
                      "fields": {
                        "int64Value": {
                          "type": "int64",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        }
                      }
                    },
                    "CohortSpec": {
                      "fields": {
                        "cohorts": {
                          "rule": "repeated",
                          "type": "Cohort",
                          "id": 1
                        },
                        "cohortsRange": {
                          "type": "CohortsRange",
                          "id": 2
                        },
                        "cohortReportSettings": {
                          "type": "CohortReportSettings",
                          "id": 3
                        }
                      }
                    },
                    "Cohort": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "dimension": {
                          "type": "string",
                          "id": 2
                        },
                        "dateRange": {
                          "type": "DateRange",
                          "id": 3
                        }
                      }
                    },
                    "CohortsRange": {
                      "fields": {
                        "granularity": {
                          "type": "Granularity",
                          "id": 1
                        },
                        "startOffset": {
                          "type": "int32",
                          "id": 2
                        },
                        "endOffset": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Granularity": {
                          "values": {
                            "GRANULARITY_UNSPECIFIED": 0,
                            "DAILY": 1,
                            "WEEKLY": 2,
                            "MONTHLY": 3
                          }
                        }
                      }
                    },
                    "CohortReportSettings": {
                      "fields": {
                        "accumulate": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "ResponseMetaData": {
                      "oneofs": {
                        "_schemaRestrictionResponse": {
                          "oneof": [
                            "schemaRestrictionResponse"
                          ]
                        },
                        "_currencyCode": {
                          "oneof": [
                            "currencyCode"
                          ]
                        },
                        "_timeZone": {
                          "oneof": [
                            "timeZone"
                          ]
                        },
                        "_emptyReason": {
                          "oneof": [
                            "emptyReason"
                          ]
                        },
                        "_subjectToThresholding": {
                          "oneof": [
                            "subjectToThresholding"
                          ]
                        }
                      },
                      "fields": {
                        "dataLossFromOtherRow": {
                          "type": "bool",
                          "id": 3
                        },
                        "schemaRestrictionResponse": {
                          "type": "SchemaRestrictionResponse",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "timeZone": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "emptyReason": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "subjectToThresholding": {
                          "type": "bool",
                          "id": 8,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "SchemaRestrictionResponse": {
                          "fields": {
                            "activeMetricRestrictions": {
                              "rule": "repeated",
                              "type": "ActiveMetricRestriction",
                              "id": 1
                            }
                          },
                          "nested": {
                            "ActiveMetricRestriction": {
                              "oneofs": {
                                "_metricName": {
                                  "oneof": [
                                    "metricName"
                                  ]
                                }
                              },
                              "fields": {
                                "metricName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                },
                                "restrictedMetricTypes": {
                                  "rule": "repeated",
                                  "type": "RestrictedMetricType",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "DimensionHeader": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MetricHeader": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "MetricType",
                          "id": 2
                        }
                      }
                    },
                    "Row": {
                      "fields": {
                        "dimensionValues": {
                          "rule": "repeated",
                          "type": "DimensionValue",
                          "id": 1
                        },
                        "metricValues": {
                          "rule": "repeated",
                          "type": "MetricValue",
                          "id": 2
                        }
                      }
                    },
                    "DimensionValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MetricValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "PropertyQuota": {
                      "fields": {
                        "tokensPerDay": {
                          "type": "QuotaStatus",
                          "id": 1
                        },
                        "tokensPerHour": {
                          "type": "QuotaStatus",
                          "id": 2
                        },
                        "concurrentRequests": {
                          "type": "QuotaStatus",
                          "id": 3
                        },
                        "serverErrorsPerProjectPerHour": {
                          "type": "QuotaStatus",
                          "id": 4
                        },
                        "potentiallyThresholdedRequestsPerHour": {
                          "type": "QuotaStatus",
                          "id": 5
                        },
                        "tokensPerProjectPerHour": {
                          "type": "QuotaStatus",
                          "id": 6
                        }
                      }
                    },
                    "QuotaStatus": {
                      "fields": {
                        "consumed": {
                          "type": "int32",
                          "id": 1
                        },
                        "remaining": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "FunnelBreakdown": {
                      "oneofs": {
                        "_limit": {
                          "oneof": [
                            "limit"
                          ]
                        }
                      },
                      "fields": {
                        "breakdownDimension": {
                          "type": "Dimension",
                          "id": 1
                        },
                        "limit": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "FunnelNextAction": {
                      "oneofs": {
                        "_limit": {
                          "oneof": [
                            "limit"
                          ]
                        }
                      },
                      "fields": {
                        "nextActionDimension": {
                          "type": "Dimension",
                          "id": 1
                        },
                        "limit": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "Funnel": {
                      "fields": {
                        "isOpenFunnel": {
                          "type": "bool",
                          "id": 1
                        },
                        "steps": {
                          "rule": "repeated",
                          "type": "FunnelStep",
                          "id": 2
                        }
                      }
                    },
                    "FunnelStep": {
                      "oneofs": {
                        "_withinDurationFromPriorStep": {
                          "oneof": [
                            "withinDurationFromPriorStep"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "isDirectlyFollowedBy": {
                          "type": "bool",
                          "id": 2
                        },
                        "withinDurationFromPriorStep": {
                          "type": "google.protobuf.Duration",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "filterExpression": {
                          "type": "FunnelFilterExpression",
                          "id": 4
                        }
                      }
                    },
                    "FunnelSubReport": {
                      "fields": {
                        "dimensionHeaders": {
                          "rule": "repeated",
                          "type": "DimensionHeader",
                          "id": 1
                        },
                        "metricHeaders": {
                          "rule": "repeated",
                          "type": "MetricHeader",
                          "id": 2
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 3
                        },
                        "metadata": {
                          "type": "FunnelResponseMetadata",
                          "id": 4
                        }
                      }
                    },
                    "UserSegment": {
                      "fields": {
                        "userInclusionCriteria": {
                          "type": "UserSegmentCriteria",
                          "id": 1
                        },
                        "exclusion": {
                          "type": "UserSegmentExclusion",
                          "id": 2
                        }
                      }
                    },
                    "UserSegmentCriteria": {
                      "fields": {
                        "andConditionGroups": {
                          "rule": "repeated",
                          "type": "UserSegmentConditionGroup",
                          "id": 1
                        },
                        "andSequenceGroups": {
                          "rule": "repeated",
                          "type": "UserSegmentSequenceGroup",
                          "id": 2
                        }
                      }
                    },
                    "UserCriteriaScoping": {
                      "values": {
                        "USER_CRITERIA_SCOPING_UNSPECIFIED": 0,
                        "USER_CRITERIA_WITHIN_SAME_EVENT": 1,
                        "USER_CRITERIA_WITHIN_SAME_SESSION": 2,
                        "USER_CRITERIA_ACROSS_ALL_SESSIONS": 3
                      }
                    },
                    "UserSegmentConditionGroup": {
                      "fields": {
                        "conditionScoping": {
                          "type": "UserCriteriaScoping",
                          "id": 1
                        },
                        "segmentFilterExpression": {
                          "type": "SegmentFilterExpression",
                          "id": 2
                        }
                      }
                    },
                    "UserSegmentSequenceGroup": {
                      "fields": {
                        "sequenceScoping": {
                          "type": "UserCriteriaScoping",
                          "id": 1
                        },
                        "sequenceMaximumDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "userSequenceSteps": {
                          "rule": "repeated",
                          "type": "UserSequenceStep",
                          "id": 3
                        }
                      }
                    },
                    "UserSequenceStep": {
                      "fields": {
                        "isDirectlyFollowedBy": {
                          "type": "bool",
                          "id": 1
                        },
                        "stepScoping": {
                          "type": "UserCriteriaScoping",
                          "id": 2
                        },
                        "segmentFilterExpression": {
                          "type": "SegmentFilterExpression",
                          "id": 3
                        }
                      }
                    },
                    "UserSegmentExclusion": {
                      "fields": {
                        "userExclusionDuration": {
                          "type": "UserExclusionDuration",
                          "id": 1
                        },
                        "userExclusionCriteria": {
                          "type": "UserSegmentCriteria",
                          "id": 2
                        }
                      }
                    },
                    "UserExclusionDuration": {
                      "values": {
                        "USER_EXCLUSION_DURATION_UNSPECIFIED": 0,
                        "USER_EXCLUSION_TEMPORARY": 1,
                        "USER_EXCLUSION_PERMANENT": 2
                      }
                    },
                    "SessionSegment": {
                      "fields": {
                        "sessionInclusionCriteria": {
                          "type": "SessionSegmentCriteria",
                          "id": 1
                        },
                        "exclusion": {
                          "type": "SessionSegmentExclusion",
                          "id": 2
                        }
                      }
                    },
                    "SessionSegmentCriteria": {
                      "fields": {
                        "andConditionGroups": {
                          "rule": "repeated",
                          "type": "SessionSegmentConditionGroup",
                          "id": 1
                        }
                      }
                    },
                    "SessionCriteriaScoping": {
                      "values": {
                        "SESSION_CRITERIA_SCOPING_UNSPECIFIED": 0,
                        "SESSION_CRITERIA_WITHIN_SAME_EVENT": 1,
                        "SESSION_CRITERIA_WITHIN_SAME_SESSION": 2
                      }
                    },
                    "SessionSegmentConditionGroup": {
                      "fields": {
                        "conditionScoping": {
                          "type": "SessionCriteriaScoping",
                          "id": 1
                        },
                        "segmentFilterExpression": {
                          "type": "SegmentFilterExpression",
                          "id": 2
                        }
                      }
                    },
                    "SessionSegmentExclusion": {
                      "fields": {
                        "sessionExclusionDuration": {
                          "type": "SessionExclusionDuration",
                          "id": 1
                        },
                        "sessionExclusionCriteria": {
                          "type": "SessionSegmentCriteria",
                          "id": 2
                        }
                      }
                    },
                    "SessionExclusionDuration": {
                      "values": {
                        "SESSION_EXCLUSION_DURATION_UNSPECIFIED": 0,
                        "SESSION_EXCLUSION_TEMPORARY": 1,
                        "SESSION_EXCLUSION_PERMANENT": 2
                      }
                    },
                    "EventSegment": {
                      "fields": {
                        "eventInclusionCriteria": {
                          "type": "EventSegmentCriteria",
                          "id": 1
                        },
                        "exclusion": {
                          "type": "EventSegmentExclusion",
                          "id": 2
                        }
                      }
                    },
                    "EventSegmentCriteria": {
                      "fields": {
                        "andConditionGroups": {
                          "rule": "repeated",
                          "type": "EventSegmentConditionGroup",
                          "id": 1
                        }
                      }
                    },
                    "EventCriteriaScoping": {
                      "values": {
                        "EVENT_CRITERIA_SCOPING_UNSPECIFIED": 0,
                        "EVENT_CRITERIA_WITHIN_SAME_EVENT": 1
                      }
                    },
                    "EventSegmentConditionGroup": {
                      "fields": {
                        "conditionScoping": {
                          "type": "EventCriteriaScoping",
                          "id": 1
                        },
                        "segmentFilterExpression": {
                          "type": "SegmentFilterExpression",
                          "id": 2
                        }
                      }
                    },
                    "EventSegmentExclusion": {
                      "fields": {
                        "eventExclusionDuration": {
                          "type": "EventExclusionDuration",
                          "id": 1
                        },
                        "eventExclusionCriteria": {
                          "type": "EventSegmentCriteria",
                          "id": 2
                        }
                      }
                    },
                    "EventExclusionDuration": {
                      "values": {
                        "EVENT_EXCLUSION_DURATION_UNSPECIFIED": 0,
                        "EVENT_EXCLUSION_PERMANENT": 1
                      }
                    },
                    "Segment": {
                      "oneofs": {
                        "oneSegmentScope": {
                          "oneof": [
                            "userSegment",
                            "sessionSegment",
                            "eventSegment"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "userSegment": {
                          "type": "UserSegment",
                          "id": 2
                        },
                        "sessionSegment": {
                          "type": "SessionSegment",
                          "id": 3
                        },
                        "eventSegment": {
                          "type": "EventSegment",
                          "id": 4
                        }
                      }
                    },
                    "SegmentFilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "segmentFilter",
                            "segmentEventFilter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "SegmentFilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "SegmentFilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "SegmentFilterExpression",
                          "id": 3
                        },
                        "segmentFilter": {
                          "type": "SegmentFilter",
                          "id": 4
                        },
                        "segmentEventFilter": {
                          "type": "SegmentEventFilter",
                          "id": 5
                        }
                      }
                    },
                    "SegmentFilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "SegmentFilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "SegmentFilter": {
                      "oneofs": {
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "fieldName": {
                          "type": "string",
                          "id": 1
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 4
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 5
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 6
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 7
                        },
                        "filterScoping": {
                          "type": "SegmentFilterScoping",
                          "id": 8
                        }
                      }
                    },
                    "SegmentFilterScoping": {
                      "oneofs": {
                        "_atAnyPointInTime": {
                          "oneof": [
                            "atAnyPointInTime"
                          ]
                        }
                      },
                      "fields": {
                        "atAnyPointInTime": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "SegmentEventFilter": {
                      "oneofs": {
                        "_eventName": {
                          "oneof": [
                            "eventName"
                          ]
                        },
                        "_segmentParameterFilterExpression": {
                          "oneof": [
                            "segmentParameterFilterExpression"
                          ]
                        }
                      },
                      "fields": {
                        "eventName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "segmentParameterFilterExpression": {
                          "type": "SegmentParameterFilterExpression",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "SegmentParameterFilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "segmentParameterFilter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "SegmentParameterFilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "SegmentParameterFilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "SegmentParameterFilterExpression",
                          "id": 3
                        },
                        "segmentParameterFilter": {
                          "type": "SegmentParameterFilter",
                          "id": 4
                        }
                      }
                    },
                    "SegmentParameterFilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "SegmentParameterFilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "SegmentParameterFilter": {
                      "oneofs": {
                        "oneParameter": {
                          "oneof": [
                            "eventParameterName",
                            "itemParameterName"
                          ]
                        },
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "eventParameterName": {
                          "type": "string",
                          "id": 1
                        },
                        "itemParameterName": {
                          "type": "string",
                          "id": 2
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 4
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 5
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 6
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 7
                        },
                        "filterScoping": {
                          "type": "SegmentParameterFilterScoping",
                          "id": 8
                        }
                      }
                    },
                    "SegmentParameterFilterScoping": {
                      "oneofs": {
                        "_inAnyNDayPeriod": {
                          "oneof": [
                            "inAnyNDayPeriod"
                          ]
                        }
                      },
                      "fields": {
                        "inAnyNDayPeriod": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "FunnelFilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "funnelFieldFilter",
                            "funnelEventFilter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "FunnelFilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "FunnelFilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "FunnelFilterExpression",
                          "id": 3
                        },
                        "funnelFieldFilter": {
                          "type": "FunnelFieldFilter",
                          "id": 4
                        },
                        "funnelEventFilter": {
                          "type": "FunnelEventFilter",
                          "id": 5
                        }
                      }
                    },
                    "FunnelFilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "FunnelFilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "FunnelFieldFilter": {
                      "oneofs": {
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "fieldName": {
                          "type": "string",
                          "id": 1
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 4
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 5
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 6
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 7
                        }
                      }
                    },
                    "FunnelEventFilter": {
                      "oneofs": {
                        "_eventName": {
                          "oneof": [
                            "eventName"
                          ]
                        },
                        "_funnelParameterFilterExpression": {
                          "oneof": [
                            "funnelParameterFilterExpression"
                          ]
                        }
                      },
                      "fields": {
                        "eventName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "funnelParameterFilterExpression": {
                          "type": "FunnelParameterFilterExpression",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "FunnelParameterFilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "funnelParameterFilter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "FunnelParameterFilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "FunnelParameterFilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "FunnelParameterFilterExpression",
                          "id": 3
                        },
                        "funnelParameterFilter": {
                          "type": "FunnelParameterFilter",
                          "id": 4
                        }
                      }
                    },
                    "FunnelParameterFilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "FunnelParameterFilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "FunnelParameterFilter": {
                      "oneofs": {
                        "oneParameter": {
                          "oneof": [
                            "eventParameterName",
                            "itemParameterName"
                          ]
                        },
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "eventParameterName": {
                          "type": "string",
                          "id": 1
                        },
                        "itemParameterName": {
                          "type": "string",
                          "id": 2
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 4
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 5
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 6
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 7
                        }
                      }
                    },
                    "FunnelResponseMetadata": {
                      "fields": {
                        "samplingMetadatas": {
                          "rule": "repeated",
                          "type": "SamplingMetadata",
                          "id": 1
                        }
                      }
                    },
                    "SamplingMetadata": {
                      "fields": {
                        "samplesReadCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "samplingSpaceSize": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "MetricAggregation": {
                      "values": {
                        "METRIC_AGGREGATION_UNSPECIFIED": 0,
                        "TOTAL": 1,
                        "MINIMUM": 5,
                        "MAXIMUM": 6,
                        "COUNT": 4
                      }
                    },
                    "MetricType": {
                      "values": {
                        "METRIC_TYPE_UNSPECIFIED": 0,
                        "TYPE_INTEGER": 1,
                        "TYPE_FLOAT": 2,
                        "TYPE_SECONDS": 4,
                        "TYPE_MILLISECONDS": 5,
                        "TYPE_MINUTES": 6,
                        "TYPE_HOURS": 7,
                        "TYPE_STANDARD": 8,
                        "TYPE_CURRENCY": 9,
                        "TYPE_FEET": 10,
                        "TYPE_MILES": 11,
                        "TYPE_METERS": 12,
                        "TYPE_KILOMETERS": 13
                      }
                    },
                    "RestrictedMetricType": {
                      "values": {
                        "RESTRICTED_METRIC_TYPE_UNSPECIFIED": 0,
                        "COST_DATA": 1,
                        "REVENUE_DATA": 2
                      }
                    }
                  }
                },
                "v1beta": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/analytics/data/v1beta;data",
                    "java_multiple_files": true,
                    "java_outer_classname": "ReportingApiProto",
                    "java_package": "com.google.analytics.data.v1beta",
                    "(google.api.resource_definition).type": "analyticsadmin.googleapis.com/Property",
                    "(google.api.resource_definition).pattern": "properties/{property}"
                  },
                  "nested": {
                    "BetaAnalyticsData": {
                      "options": {
                        "(google.api.default_host)": "analyticsdata.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/analytics,https://www.googleapis.com/auth/analytics.readonly"
                      },
                      "methods": {
                        "RunReport": {
                          "requestType": "RunReportRequest",
                          "responseType": "RunReportResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:runReport",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:runReport",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "RunPivotReport": {
                          "requestType": "RunPivotReportRequest",
                          "responseType": "RunPivotReportResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:runPivotReport",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:runPivotReport",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "BatchRunReports": {
                          "requestType": "BatchRunReportsRequest",
                          "responseType": "BatchRunReportsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:batchRunReports",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:batchRunReports",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "BatchRunPivotReports": {
                          "requestType": "BatchRunPivotReportsRequest",
                          "responseType": "BatchRunPivotReportsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:batchRunPivotReports",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:batchRunPivotReports",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GetMetadata": {
                          "requestType": "GetMetadataRequest",
                          "responseType": "Metadata",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=properties/*/metadata}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=properties/*/metadata}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "RunRealtimeReport": {
                          "requestType": "RunRealtimeReportRequest",
                          "responseType": "RunRealtimeReportResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:runRealtimeReport",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:runRealtimeReport",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CheckCompatibility": {
                          "requestType": "CheckCompatibilityRequest",
                          "responseType": "CheckCompatibilityResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{property=properties/*}:checkCompatibility",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{property=properties/*}:checkCompatibility",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CreateAudienceExport": {
                          "requestType": "CreateAudienceExportRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta/{parent=properties/*}/audienceExports",
                            "(google.api.http).body": "audience_export",
                            "(google.api.method_signature)": "parent,audience_export",
                            "(google.longrunning.operation_info).response_type": "AudienceExport",
                            "(google.longrunning.operation_info).metadata_type": "AudienceExportMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{parent=properties/*}/audienceExports",
                                "body": "audience_export"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,audience_export"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "AudienceExport",
                                "metadata_type": "AudienceExportMetadata"
                              }
                            }
                          ]
                        },
                        "QueryAudienceExport": {
                          "requestType": "QueryAudienceExportRequest",
                          "responseType": "QueryAudienceExportResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta/{name=properties/*/audienceExports/*}:query",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta/{name=properties/*/audienceExports/*}:query",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetAudienceExport": {
                          "requestType": "GetAudienceExportRequest",
                          "responseType": "AudienceExport",
                          "options": {
                            "(google.api.http).get": "/v1beta/{name=properties/*/audienceExports/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{name=properties/*/audienceExports/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAudienceExports": {
                          "requestType": "ListAudienceExportsRequest",
                          "responseType": "ListAudienceExportsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta/{parent=properties/*}/audienceExports",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta/{parent=properties/*}/audienceExports"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CheckCompatibilityRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "Dimension",
                          "id": 2
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3
                        },
                        "dimensionFilter": {
                          "type": "FilterExpression",
                          "id": 4
                        },
                        "metricFilter": {
                          "type": "FilterExpression",
                          "id": 5
                        },
                        "compatibilityFilter": {
                          "type": "Compatibility",
                          "id": 6
                        }
                      }
                    },
                    "CheckCompatibilityResponse": {
                      "fields": {
                        "dimensionCompatibilities": {
                          "rule": "repeated",
                          "type": "DimensionCompatibility",
                          "id": 1
                        },
                        "metricCompatibilities": {
                          "rule": "repeated",
                          "type": "MetricCompatibility",
                          "id": 2
                        }
                      }
                    },
                    "Metadata": {
                      "options": {
                        "(google.api.resource).type": "analyticsdata.googleapis.com/Metadata",
                        "(google.api.resource).pattern": "properties/{property}/metadata"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 3
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "DimensionMetadata",
                          "id": 1
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "MetricMetadata",
                          "id": 2
                        }
                      }
                    },
                    "RunReportRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "Dimension",
                          "id": 2
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3
                        },
                        "dateRanges": {
                          "rule": "repeated",
                          "type": "DateRange",
                          "id": 4
                        },
                        "dimensionFilter": {
                          "type": "FilterExpression",
                          "id": 5
                        },
                        "metricFilter": {
                          "type": "FilterExpression",
                          "id": 6
                        },
                        "offset": {
                          "type": "int64",
                          "id": 7
                        },
                        "limit": {
                          "type": "int64",
                          "id": 8
                        },
                        "metricAggregations": {
                          "rule": "repeated",
                          "type": "MetricAggregation",
                          "id": 9
                        },
                        "orderBys": {
                          "rule": "repeated",
                          "type": "OrderBy",
                          "id": 10
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 11
                        },
                        "cohortSpec": {
                          "type": "CohortSpec",
                          "id": 12
                        },
                        "keepEmptyRows": {
                          "type": "bool",
                          "id": 13
                        },
                        "returnPropertyQuota": {
                          "type": "bool",
                          "id": 14
                        }
                      }
                    },
                    "RunReportResponse": {
                      "fields": {
                        "dimensionHeaders": {
                          "rule": "repeated",
                          "type": "DimensionHeader",
                          "id": 1
                        },
                        "metricHeaders": {
                          "rule": "repeated",
                          "type": "MetricHeader",
                          "id": 2
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 3
                        },
                        "totals": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 4
                        },
                        "maximums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 5
                        },
                        "minimums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 6
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "metadata": {
                          "type": "ResponseMetaData",
                          "id": 8
                        },
                        "propertyQuota": {
                          "type": "PropertyQuota",
                          "id": 9
                        },
                        "kind": {
                          "type": "string",
                          "id": 10
                        }
                      }
                    },
                    "RunPivotReportRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "Dimension",
                          "id": 2
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3
                        },
                        "dateRanges": {
                          "rule": "repeated",
                          "type": "DateRange",
                          "id": 4
                        },
                        "pivots": {
                          "rule": "repeated",
                          "type": "Pivot",
                          "id": 5
                        },
                        "dimensionFilter": {
                          "type": "FilterExpression",
                          "id": 6
                        },
                        "metricFilter": {
                          "type": "FilterExpression",
                          "id": 7
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 8
                        },
                        "cohortSpec": {
                          "type": "CohortSpec",
                          "id": 9
                        },
                        "keepEmptyRows": {
                          "type": "bool",
                          "id": 10
                        },
                        "returnPropertyQuota": {
                          "type": "bool",
                          "id": 11
                        }
                      }
                    },
                    "RunPivotReportResponse": {
                      "fields": {
                        "pivotHeaders": {
                          "rule": "repeated",
                          "type": "PivotHeader",
                          "id": 1
                        },
                        "dimensionHeaders": {
                          "rule": "repeated",
                          "type": "DimensionHeader",
                          "id": 2
                        },
                        "metricHeaders": {
                          "rule": "repeated",
                          "type": "MetricHeader",
                          "id": 3
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 4
                        },
                        "aggregates": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 5
                        },
                        "metadata": {
                          "type": "ResponseMetaData",
                          "id": 6
                        },
                        "propertyQuota": {
                          "type": "PropertyQuota",
                          "id": 7
                        },
                        "kind": {
                          "type": "string",
                          "id": 8
                        }
                      }
                    },
                    "BatchRunReportsRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "RunReportRequest",
                          "id": 2
                        }
                      }
                    },
                    "BatchRunReportsResponse": {
                      "fields": {
                        "reports": {
                          "rule": "repeated",
                          "type": "RunReportResponse",
                          "id": 1
                        },
                        "kind": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "BatchRunPivotReportsRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "RunPivotReportRequest",
                          "id": 2
                        }
                      }
                    },
                    "BatchRunPivotReportsResponse": {
                      "fields": {
                        "pivotReports": {
                          "rule": "repeated",
                          "type": "RunPivotReportResponse",
                          "id": 1
                        },
                        "kind": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetMetadataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/Metadata"
                          }
                        }
                      }
                    },
                    "RunRealtimeReportRequest": {
                      "fields": {
                        "property": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "Dimension",
                          "id": 2
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3
                        },
                        "dimensionFilter": {
                          "type": "FilterExpression",
                          "id": 4
                        },
                        "metricFilter": {
                          "type": "FilterExpression",
                          "id": 5
                        },
                        "limit": {
                          "type": "int64",
                          "id": 6
                        },
                        "metricAggregations": {
                          "rule": "repeated",
                          "type": "MetricAggregation",
                          "id": 7
                        },
                        "orderBys": {
                          "rule": "repeated",
                          "type": "OrderBy",
                          "id": 8
                        },
                        "returnPropertyQuota": {
                          "type": "bool",
                          "id": 9
                        },
                        "minuteRanges": {
                          "rule": "repeated",
                          "type": "MinuteRange",
                          "id": 10
                        }
                      }
                    },
                    "RunRealtimeReportResponse": {
                      "fields": {
                        "dimensionHeaders": {
                          "rule": "repeated",
                          "type": "DimensionHeader",
                          "id": 1
                        },
                        "metricHeaders": {
                          "rule": "repeated",
                          "type": "MetricHeader",
                          "id": 2
                        },
                        "rows": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 3
                        },
                        "totals": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 4
                        },
                        "maximums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 5
                        },
                        "minimums": {
                          "rule": "repeated",
                          "type": "Row",
                          "id": 6
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "propertyQuota": {
                          "type": "PropertyQuota",
                          "id": 8
                        },
                        "kind": {
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "GetAudienceExportRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "analyticsdata.googleapis.com/AudienceExport"
                          }
                        }
                      }
                    },
                    "ListAudienceExportsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/AudienceExport"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListAudienceExportsResponse": {
                      "oneofs": {
                        "_nextPageToken": {
                          "oneof": [
                            "nextPageToken"
                          ]
                        }
                      },
                      "fields": {
                        "audienceExports": {
                          "rule": "repeated",
                          "type": "AudienceExport",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "CreateAudienceExportRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "analyticsdata.googleapis.com/AudienceExport"
                          }
                        },
                        "audienceExport": {
                          "type": "AudienceExport",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AudienceExport": {
                      "options": {
                        "(google.api.resource).type": "analyticsdata.googleapis.com/AudienceExport",
                        "(google.api.resource).pattern": "properties/{property}/audienceExports/{audience_export}",
                        "(google.api.resource).plural": "audienceExports",
                        "(google.api.resource).singular": "audienceExport"
                      },
                      "oneofs": {
                        "_state": {
                          "oneof": [
                            "state"
                          ]
                        },
                        "_beginCreatingTime": {
                          "oneof": [
                            "beginCreatingTime"
                          ]
                        },
                        "_rowCount": {
                          "oneof": [
                            "rowCount"
                          ]
                        },
                        "_errorMessage": {
                          "oneof": [
                            "errorMessage"
                          ]
                        },
                        "_percentageCompleted": {
                          "oneof": [
                            "percentageCompleted"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "audience": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "audienceDisplayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dimensions": {
                          "rule": "repeated",
                          "type": "AudienceDimension",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "beginCreatingTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "creationQuotaTokensCharged": {
                          "type": "int32",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "percentageCompleted": {
                          "type": "double",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "ACTIVE": 2,
                            "FAILED": 3
                          }
                        }
                      }
                    },
                    "AudienceExportMetadata": {
                      "fields": {}
                    },
                    "QueryAudienceExportRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "offset": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "limit": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "QueryAudienceExportResponse": {
                      "oneofs": {
                        "_audienceExport": {
                          "oneof": [
                            "audienceExport"
                          ]
                        },
                        "_rowCount": {
                          "oneof": [
                            "rowCount"
                          ]
                        }
                      },
                      "fields": {
                        "audienceExport": {
                          "type": "AudienceExport",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "audienceRows": {
                          "rule": "repeated",
                          "type": "AudienceRow",
                          "id": 2
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "AudienceRow": {
                      "fields": {
                        "dimensionValues": {
                          "rule": "repeated",
                          "type": "AudienceDimensionValue",
                          "id": 1
                        }
                      }
                    },
                    "AudienceDimension": {
                      "fields": {
                        "dimensionName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "AudienceDimensionValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "DateRange": {
                      "fields": {
                        "startDate": {
                          "type": "string",
                          "id": 1
                        },
                        "endDate": {
                          "type": "string",
                          "id": 2
                        },
                        "name": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "MinuteRange": {
                      "oneofs": {
                        "_startMinutesAgo": {
                          "oneof": [
                            "startMinutesAgo"
                          ]
                        },
                        "_endMinutesAgo": {
                          "oneof": [
                            "endMinutesAgo"
                          ]
                        }
                      },
                      "fields": {
                        "startMinutesAgo": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "endMinutesAgo": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Dimension": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "dimensionExpression": {
                          "type": "DimensionExpression",
                          "id": 2
                        }
                      }
                    },
                    "DimensionExpression": {
                      "oneofs": {
                        "oneExpression": {
                          "oneof": [
                            "lowerCase",
                            "upperCase",
                            "concatenate"
                          ]
                        }
                      },
                      "fields": {
                        "lowerCase": {
                          "type": "CaseExpression",
                          "id": 4
                        },
                        "upperCase": {
                          "type": "CaseExpression",
                          "id": 5
                        },
                        "concatenate": {
                          "type": "ConcatenateExpression",
                          "id": 6
                        }
                      },
                      "nested": {
                        "CaseExpression": {
                          "fields": {
                            "dimensionName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ConcatenateExpression": {
                          "fields": {
                            "dimensionNames": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "delimiter": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "Metric": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "expression": {
                          "type": "string",
                          "id": 2
                        },
                        "invisible": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "FilterExpression": {
                      "oneofs": {
                        "expr": {
                          "oneof": [
                            "andGroup",
                            "orGroup",
                            "notExpression",
                            "filter"
                          ]
                        }
                      },
                      "fields": {
                        "andGroup": {
                          "type": "FilterExpressionList",
                          "id": 1
                        },
                        "orGroup": {
                          "type": "FilterExpressionList",
                          "id": 2
                        },
                        "notExpression": {
                          "type": "FilterExpression",
                          "id": 3
                        },
                        "filter": {
                          "type": "Filter",
                          "id": 4
                        }
                      }
                    },
                    "FilterExpressionList": {
                      "fields": {
                        "expressions": {
                          "rule": "repeated",
                          "type": "FilterExpression",
                          "id": 1
                        }
                      }
                    },
                    "Filter": {
                      "oneofs": {
                        "oneFilter": {
                          "oneof": [
                            "stringFilter",
                            "inListFilter",
                            "numericFilter",
                            "betweenFilter"
                          ]
                        }
                      },
                      "fields": {
                        "fieldName": {
                          "type": "string",
                          "id": 1
                        },
                        "stringFilter": {
                          "type": "StringFilter",
                          "id": 3
                        },
                        "inListFilter": {
                          "type": "InListFilter",
                          "id": 4
                        },
                        "numericFilter": {
                          "type": "NumericFilter",
                          "id": 5
                        },
                        "betweenFilter": {
                          "type": "BetweenFilter",
                          "id": 6
                        }
                      },
                      "nested": {
                        "StringFilter": {
                          "fields": {
                            "matchType": {
                              "type": "MatchType",
                              "id": 1
                            },
                            "value": {
                              "type": "string",
                              "id": 2
                            },
                            "caseSensitive": {
                              "type": "bool",
                              "id": 3
                            }
                          },
                          "nested": {
                            "MatchType": {
                              "values": {
                                "MATCH_TYPE_UNSPECIFIED": 0,
                                "EXACT": 1,
                                "BEGINS_WITH": 2,
                                "ENDS_WITH": 3,
                                "CONTAINS": 4,
                                "FULL_REGEXP": 5,
                                "PARTIAL_REGEXP": 6
                              }
                            }
                          }
                        },
                        "InListFilter": {
                          "fields": {
                            "values": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "caseSensitive": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "NumericFilter": {
                          "fields": {
                            "operation": {
                              "type": "Operation",
                              "id": 1
                            },
                            "value": {
                              "type": "NumericValue",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Operation": {
                              "values": {
                                "OPERATION_UNSPECIFIED": 0,
                                "EQUAL": 1,
                                "LESS_THAN": 2,
                                "LESS_THAN_OR_EQUAL": 3,
                                "GREATER_THAN": 4,
                                "GREATER_THAN_OR_EQUAL": 5
                              }
                            }
                          }
                        },
                        "BetweenFilter": {
                          "fields": {
                            "fromValue": {
                              "type": "NumericValue",
                              "id": 1
                            },
                            "toValue": {
                              "type": "NumericValue",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "OrderBy": {
                      "oneofs": {
                        "oneOrderBy": {
                          "oneof": [
                            "metric",
                            "dimension",
                            "pivot"
                          ]
                        }
                      },
                      "fields": {
                        "metric": {
                          "type": "MetricOrderBy",
                          "id": 1
                        },
                        "dimension": {
                          "type": "DimensionOrderBy",
                          "id": 2
                        },
                        "pivot": {
                          "type": "PivotOrderBy",
                          "id": 3
                        },
                        "desc": {
                          "type": "bool",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MetricOrderBy": {
                          "fields": {
                            "metricName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "DimensionOrderBy": {
                          "fields": {
                            "dimensionName": {
                              "type": "string",
                              "id": 1
                            },
                            "orderType": {
                              "type": "OrderType",
                              "id": 2
                            }
                          },
                          "nested": {
                            "OrderType": {
                              "values": {
                                "ORDER_TYPE_UNSPECIFIED": 0,
                                "ALPHANUMERIC": 1,
                                "CASE_INSENSITIVE_ALPHANUMERIC": 2,
                                "NUMERIC": 3
                              }
                            }
                          }
                        },
                        "PivotOrderBy": {
                          "fields": {
                            "metricName": {
                              "type": "string",
                              "id": 1
                            },
                            "pivotSelections": {
                              "rule": "repeated",
                              "type": "PivotSelection",
                              "id": 2
                            }
                          },
                          "nested": {
                            "PivotSelection": {
                              "fields": {
                                "dimensionName": {
                                  "type": "string",
                                  "id": 1
                                },
                                "dimensionValue": {
                                  "type": "string",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Pivot": {
                      "fields": {
                        "fieldNames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "orderBys": {
                          "rule": "repeated",
                          "type": "OrderBy",
                          "id": 2
                        },
                        "offset": {
                          "type": "int64",
                          "id": 3
                        },
                        "limit": {
                          "type": "int64",
                          "id": 4
                        },
                        "metricAggregations": {
                          "rule": "repeated",
                          "type": "MetricAggregation",
                          "id": 5
                        }
                      }
                    },
                    "CohortSpec": {
                      "fields": {
                        "cohorts": {
                          "rule": "repeated",
                          "type": "Cohort",
                          "id": 1
                        },
                        "cohortsRange": {
                          "type": "CohortsRange",
                          "id": 2
                        },
                        "cohortReportSettings": {
                          "type": "CohortReportSettings",
                          "id": 3
                        }
                      }
                    },
                    "Cohort": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "dimension": {
                          "type": "string",
                          "id": 2
                        },
                        "dateRange": {
                          "type": "DateRange",
                          "id": 3
                        }
                      }
                    },
                    "CohortsRange": {
                      "fields": {
                        "granularity": {
                          "type": "Granularity",
                          "id": 1
                        },
                        "startOffset": {
                          "type": "int32",
                          "id": 2
                        },
                        "endOffset": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Granularity": {
                          "values": {
                            "GRANULARITY_UNSPECIFIED": 0,
                            "DAILY": 1,
                            "WEEKLY": 2,
                            "MONTHLY": 3
                          }
                        }
                      }
                    },
                    "CohortReportSettings": {
                      "fields": {
                        "accumulate": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "ResponseMetaData": {
                      "oneofs": {
                        "_schemaRestrictionResponse": {
                          "oneof": [
                            "schemaRestrictionResponse"
                          ]
                        },
                        "_currencyCode": {
                          "oneof": [
                            "currencyCode"
                          ]
                        },
                        "_timeZone": {
                          "oneof": [
                            "timeZone"
                          ]
                        },
                        "_emptyReason": {
                          "oneof": [
                            "emptyReason"
                          ]
                        },
                        "_subjectToThresholding": {
                          "oneof": [
                            "subjectToThresholding"
                          ]
                        }
                      },
                      "fields": {
                        "dataLossFromOtherRow": {
                          "type": "bool",
                          "id": 3
                        },
                        "schemaRestrictionResponse": {
                          "type": "SchemaRestrictionResponse",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "currencyCode": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "timeZone": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "emptyReason": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "subjectToThresholding": {
                          "type": "bool",
                          "id": 8,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "samplingMetadatas": {
                          "rule": "repeated",
                          "type": "SamplingMetadata",
                          "id": 9
                        }
                      },
                      "nested": {
                        "SchemaRestrictionResponse": {
                          "fields": {
                            "activeMetricRestrictions": {
                              "rule": "repeated",
                              "type": "ActiveMetricRestriction",
                              "id": 1
                            }
                          },
                          "nested": {
                            "ActiveMetricRestriction": {
                              "oneofs": {
                                "_metricName": {
                                  "oneof": [
                                    "metricName"
                                  ]
                                }
                              },
                              "fields": {
                                "metricName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                },
                                "restrictedMetricTypes": {
                                  "rule": "repeated",
                                  "type": "RestrictedMetricType",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "SamplingMetadata": {
                      "fields": {
                        "samplesReadCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "samplingSpaceSize": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "DimensionHeader": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MetricHeader": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "MetricType",
                          "id": 2
                        }
                      }
                    },
                    "PivotHeader": {
                      "fields": {
                        "pivotDimensionHeaders": {
                          "rule": "repeated",
                          "type": "PivotDimensionHeader",
                          "id": 1
                        },
                        "rowCount": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "PivotDimensionHeader": {
                      "fields": {
                        "dimensionValues": {
                          "rule": "repeated",
                          "type": "DimensionValue",
                          "id": 1
                        }
                      }
                    },
                    "Row": {
                      "fields": {
                        "dimensionValues": {
                          "rule": "repeated",
                          "type": "DimensionValue",
                          "id": 1
                        },
                        "metricValues": {
                          "rule": "repeated",
                          "type": "MetricValue",
                          "id": 2
                        }
                      }
                    },
                    "DimensionValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "MetricValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "NumericValue": {
                      "oneofs": {
                        "oneValue": {
                          "oneof": [
                            "int64Value",
                            "doubleValue"
                          ]
                        }
                      },
                      "fields": {
                        "int64Value": {
                          "type": "int64",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        }
                      }
                    },
                    "PropertyQuota": {
                      "fields": {
                        "tokensPerDay": {
                          "type": "QuotaStatus",
                          "id": 1
                        },
                        "tokensPerHour": {
                          "type": "QuotaStatus",
                          "id": 2
                        },
                        "concurrentRequests": {
                          "type": "QuotaStatus",
                          "id": 3
                        },
                        "serverErrorsPerProjectPerHour": {
                          "type": "QuotaStatus",
                          "id": 4
                        },
                        "potentiallyThresholdedRequestsPerHour": {
                          "type": "QuotaStatus",
                          "id": 5
                        },
                        "tokensPerProjectPerHour": {
                          "type": "QuotaStatus",
                          "id": 6
                        }
                      }
                    },
                    "QuotaStatus": {
                      "oneofs": {
                        "_consumed": {
                          "oneof": [
                            "consumed"
                          ]
                        },
                        "_remaining": {
                          "oneof": [
                            "remaining"
                          ]
                        }
                      },
                      "fields": {
                        "consumed": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "remaining": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "DimensionMetadata": {
                      "fields": {
                        "apiName": {
                          "type": "string",
                          "id": 1
                        },
                        "uiName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deprecatedApiNames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "customDefinition": {
                          "type": "bool",
                          "id": 5
                        },
                        "category": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "MetricMetadata": {
                      "fields": {
                        "apiName": {
                          "type": "string",
                          "id": 1
                        },
                        "uiName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deprecatedApiNames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "type": {
                          "type": "MetricType",
                          "id": 5
                        },
                        "expression": {
                          "type": "string",
                          "id": 6
                        },
                        "customDefinition": {
                          "type": "bool",
                          "id": 7
                        },
                        "blockedReasons": {
                          "rule": "repeated",
                          "type": "BlockedReason",
                          "id": 8
                        },
                        "category": {
                          "type": "string",
                          "id": 10
                        }
                      },
                      "nested": {
                        "BlockedReason": {
                          "values": {
                            "BLOCKED_REASON_UNSPECIFIED": 0,
                            "NO_REVENUE_METRICS": 1,
                            "NO_COST_METRICS": 2
                          }
                        }
                      }
                    },
                    "DimensionCompatibility": {
                      "oneofs": {
                        "_dimensionMetadata": {
                          "oneof": [
                            "dimensionMetadata"
                          ]
                        },
                        "_compatibility": {
                          "oneof": [
                            "compatibility"
                          ]
                        }
                      },
                      "fields": {
                        "dimensionMetadata": {
                          "type": "DimensionMetadata",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "compatibility": {
                          "type": "Compatibility",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "MetricCompatibility": {
                      "oneofs": {
                        "_metricMetadata": {
                          "oneof": [
                            "metricMetadata"
                          ]
                        },
                        "_compatibility": {
                          "oneof": [
                            "compatibility"
                          ]
                        }
                      },
                      "fields": {
                        "metricMetadata": {
                          "type": "MetricMetadata",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "compatibility": {
                          "type": "Compatibility",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "MetricAggregation": {
                      "values": {
                        "METRIC_AGGREGATION_UNSPECIFIED": 0,
                        "TOTAL": 1,
                        "MINIMUM": 5,
                        "MAXIMUM": 6,
                        "COUNT": 4
                      }
                    },
                    "MetricType": {
                      "values": {
                        "METRIC_TYPE_UNSPECIFIED": 0,
                        "TYPE_INTEGER": 1,
                        "TYPE_FLOAT": 2,
                        "TYPE_SECONDS": 4,
                        "TYPE_MILLISECONDS": 5,
                        "TYPE_MINUTES": 6,
                        "TYPE_HOURS": 7,
                        "TYPE_STANDARD": 8,
                        "TYPE_CURRENCY": 9,
                        "TYPE_FEET": 10,
                        "TYPE_MILES": 11,
                        "TYPE_METERS": 12,
                        "TYPE_KILOMETERS": 13
                      }
                    },
                    "RestrictedMetricType": {
                      "values": {
                        "RESTRICTED_METRIC_TYPE_UNSPECIFIED": 0,
                        "COST_DATA": 1,
                        "REVENUE_DATA": 2
                      }
                    },
                    "Compatibility": {
                      "values": {
                        "COMPATIBILITY_UNSPECIFIED": 0,
                        "COMPATIBLE": 1,
                        "INCOMPATIBLE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}