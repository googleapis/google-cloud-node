// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_analytics_data_protos || ($protobuf.roots._google_analytics_data_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        google.analytics = (function() {
    
            /**
             * Namespace analytics.
             * @memberof google
             * @namespace
             */
            var analytics = {};
    
            analytics.data = (function() {
    
                /**
                 * Namespace data.
                 * @memberof google.analytics
                 * @namespace
                 */
                var data = {};
    
                data.v1alpha = (function() {
    
                    /**
                     * Namespace v1alpha.
                     * @memberof google.analytics.data
                     * @namespace
                     */
                    var v1alpha = {};
    
                    v1alpha.AlphaAnalyticsData = (function() {
    
                        /**
                         * Constructs a new AlphaAnalyticsData service.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an AlphaAnalyticsData
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function AlphaAnalyticsData(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (AlphaAnalyticsData.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = AlphaAnalyticsData;
    
                        /**
                         * Creates new AlphaAnalyticsData service using the specified rpc implementation.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.AlphaAnalyticsData
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {AlphaAnalyticsData} RPC service. Useful where requests and/or responses are streamed.
                         */
                        AlphaAnalyticsData.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1alpha.AlphaAnalyticsData|runFunnelReport}.
                         * @memberof google.analytics.data.v1alpha.AlphaAnalyticsData
                         * @typedef RunFunnelReportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1alpha.RunFunnelReportResponse} [response] RunFunnelReportResponse
                         */
    
                        /**
                         * Calls RunFunnelReport.
                         * @function runFunnelReport
                         * @memberof google.analytics.data.v1alpha.AlphaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest} request RunFunnelReportRequest message or plain object
                         * @param {google.analytics.data.v1alpha.AlphaAnalyticsData.RunFunnelReportCallback} callback Node-style callback called with the error, if any, and RunFunnelReportResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AlphaAnalyticsData.prototype.runFunnelReport = function runFunnelReport(request, callback) {
                            return this.rpcCall(runFunnelReport, $root.google.analytics.data.v1alpha.RunFunnelReportRequest, $root.google.analytics.data.v1alpha.RunFunnelReportResponse, request, callback);
                        }, "name", { value: "RunFunnelReport" });
    
                        /**
                         * Calls RunFunnelReport.
                         * @function runFunnelReport
                         * @memberof google.analytics.data.v1alpha.AlphaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest} request RunFunnelReportRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1alpha.RunFunnelReportResponse>} Promise
                         * @variation 2
                         */
    
                        return AlphaAnalyticsData;
                    })();
    
                    v1alpha.RunFunnelReportRequest = (function() {
    
                        /**
                         * Properties of a RunFunnelReportRequest.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IRunFunnelReportRequest
                         * @property {string|null} [property] RunFunnelReportRequest property
                         * @property {Array.<google.analytics.data.v1alpha.IDateRange>|null} [dateRanges] RunFunnelReportRequest dateRanges
                         * @property {google.analytics.data.v1alpha.IFunnel|null} [funnel] RunFunnelReportRequest funnel
                         * @property {google.analytics.data.v1alpha.IFunnelBreakdown|null} [funnelBreakdown] RunFunnelReportRequest funnelBreakdown
                         * @property {google.analytics.data.v1alpha.IFunnelNextAction|null} [funnelNextAction] RunFunnelReportRequest funnelNextAction
                         * @property {google.analytics.data.v1alpha.RunFunnelReportRequest.FunnelVisualizationType|null} [funnelVisualizationType] RunFunnelReportRequest funnelVisualizationType
                         * @property {Array.<google.analytics.data.v1alpha.ISegment>|null} [segments] RunFunnelReportRequest segments
                         * @property {number|Long|null} [limit] RunFunnelReportRequest limit
                         * @property {google.analytics.data.v1alpha.IFilterExpression|null} [dimensionFilter] RunFunnelReportRequest dimensionFilter
                         * @property {boolean|null} [returnPropertyQuota] RunFunnelReportRequest returnPropertyQuota
                         */
    
                        /**
                         * Constructs a new RunFunnelReportRequest.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a RunFunnelReportRequest.
                         * @implements IRunFunnelReportRequest
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest=} [properties] Properties to set
                         */
                        function RunFunnelReportRequest(properties) {
                            this.dateRanges = [];
                            this.segments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunFunnelReportRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.property = "";
    
                        /**
                         * RunFunnelReportRequest dateRanges.
                         * @member {Array.<google.analytics.data.v1alpha.IDateRange>} dateRanges
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.dateRanges = $util.emptyArray;
    
                        /**
                         * RunFunnelReportRequest funnel.
                         * @member {google.analytics.data.v1alpha.IFunnel|null|undefined} funnel
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.funnel = null;
    
                        /**
                         * RunFunnelReportRequest funnelBreakdown.
                         * @member {google.analytics.data.v1alpha.IFunnelBreakdown|null|undefined} funnelBreakdown
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.funnelBreakdown = null;
    
                        /**
                         * RunFunnelReportRequest funnelNextAction.
                         * @member {google.analytics.data.v1alpha.IFunnelNextAction|null|undefined} funnelNextAction
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.funnelNextAction = null;
    
                        /**
                         * RunFunnelReportRequest funnelVisualizationType.
                         * @member {google.analytics.data.v1alpha.RunFunnelReportRequest.FunnelVisualizationType} funnelVisualizationType
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.funnelVisualizationType = 0;
    
                        /**
                         * RunFunnelReportRequest segments.
                         * @member {Array.<google.analytics.data.v1alpha.ISegment>} segments
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.segments = $util.emptyArray;
    
                        /**
                         * RunFunnelReportRequest limit.
                         * @member {number|Long} limit
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RunFunnelReportRequest dimensionFilter.
                         * @member {google.analytics.data.v1alpha.IFilterExpression|null|undefined} dimensionFilter
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.dimensionFilter = null;
    
                        /**
                         * RunFunnelReportRequest returnPropertyQuota.
                         * @member {boolean} returnPropertyQuota
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         */
                        RunFunnelReportRequest.prototype.returnPropertyQuota = false;
    
                        /**
                         * Creates a new RunFunnelReportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportRequest} RunFunnelReportRequest instance
                         */
                        RunFunnelReportRequest.create = function create(properties) {
                            return new RunFunnelReportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunFunnelReportRequest message. Does not implicitly {@link google.analytics.data.v1alpha.RunFunnelReportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest} message RunFunnelReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunFunnelReportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.dateRanges != null && message.dateRanges.length)
                                for (var i = 0; i < message.dateRanges.length; ++i)
                                    $root.google.analytics.data.v1alpha.DateRange.encode(message.dateRanges[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.funnel != null && Object.hasOwnProperty.call(message, "funnel"))
                                $root.google.analytics.data.v1alpha.Funnel.encode(message.funnel, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.funnelBreakdown != null && Object.hasOwnProperty.call(message, "funnelBreakdown"))
                                $root.google.analytics.data.v1alpha.FunnelBreakdown.encode(message.funnelBreakdown, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.funnelNextAction != null && Object.hasOwnProperty.call(message, "funnelNextAction"))
                                $root.google.analytics.data.v1alpha.FunnelNextAction.encode(message.funnelNextAction, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.funnelVisualizationType != null && Object.hasOwnProperty.call(message, "funnelVisualizationType"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.funnelVisualizationType);
                            if (message.segments != null && message.segments.length)
                                for (var i = 0; i < message.segments.length; ++i)
                                    $root.google.analytics.data.v1alpha.Segment.encode(message.segments[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int64(message.limit);
                            if (message.dimensionFilter != null && Object.hasOwnProperty.call(message, "dimensionFilter"))
                                $root.google.analytics.data.v1alpha.FilterExpression.encode(message.dimensionFilter, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.returnPropertyQuota != null && Object.hasOwnProperty.call(message, "returnPropertyQuota"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.returnPropertyQuota);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunFunnelReportRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.RunFunnelReportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportRequest} message RunFunnelReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunFunnelReportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunFunnelReportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportRequest} RunFunnelReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunFunnelReportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.RunFunnelReportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dateRanges && message.dateRanges.length))
                                            message.dateRanges = [];
                                        message.dateRanges.push($root.google.analytics.data.v1alpha.DateRange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.funnel = $root.google.analytics.data.v1alpha.Funnel.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.funnelBreakdown = $root.google.analytics.data.v1alpha.FunnelBreakdown.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.funnelNextAction = $root.google.analytics.data.v1alpha.FunnelNextAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.funnelVisualizationType = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.segments && message.segments.length))
                                            message.segments = [];
                                        message.segments.push($root.google.analytics.data.v1alpha.Segment.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                case 10: {
                                        message.dimensionFilter = $root.google.analytics.data.v1alpha.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.returnPropertyQuota = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunFunnelReportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportRequest} RunFunnelReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunFunnelReportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunFunnelReportRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunFunnelReportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.dateRanges != null && message.hasOwnProperty("dateRanges")) {
                                if (!Array.isArray(message.dateRanges))
                                    return "dateRanges: array expected";
                                for (var i = 0; i < message.dateRanges.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.DateRange.verify(message.dateRanges[i]);
                                    if (error)
                                        return "dateRanges." + error;
                                }
                            }
                            if (message.funnel != null && message.hasOwnProperty("funnel")) {
                                var error = $root.google.analytics.data.v1alpha.Funnel.verify(message.funnel);
                                if (error)
                                    return "funnel." + error;
                            }
                            if (message.funnelBreakdown != null && message.hasOwnProperty("funnelBreakdown")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelBreakdown.verify(message.funnelBreakdown);
                                if (error)
                                    return "funnelBreakdown." + error;
                            }
                            if (message.funnelNextAction != null && message.hasOwnProperty("funnelNextAction")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelNextAction.verify(message.funnelNextAction);
                                if (error)
                                    return "funnelNextAction." + error;
                            }
                            if (message.funnelVisualizationType != null && message.hasOwnProperty("funnelVisualizationType"))
                                switch (message.funnelVisualizationType) {
                                default:
                                    return "funnelVisualizationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.segments != null && message.hasOwnProperty("segments")) {
                                if (!Array.isArray(message.segments))
                                    return "segments: array expected";
                                for (var i = 0; i < message.segments.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.Segment.verify(message.segments[i]);
                                    if (error)
                                        return "segments." + error;
                                }
                            }
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter")) {
                                var error = $root.google.analytics.data.v1alpha.FilterExpression.verify(message.dimensionFilter);
                                if (error)
                                    return "dimensionFilter." + error;
                            }
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                if (typeof message.returnPropertyQuota !== "boolean")
                                    return "returnPropertyQuota: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunFunnelReportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportRequest} RunFunnelReportRequest
                         */
                        RunFunnelReportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.RunFunnelReportRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.RunFunnelReportRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.dateRanges) {
                                if (!Array.isArray(object.dateRanges))
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.dateRanges: array expected");
                                message.dateRanges = [];
                                for (var i = 0; i < object.dateRanges.length; ++i) {
                                    if (typeof object.dateRanges[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.dateRanges: object expected");
                                    message.dateRanges[i] = $root.google.analytics.data.v1alpha.DateRange.fromObject(object.dateRanges[i]);
                                }
                            }
                            if (object.funnel != null) {
                                if (typeof object.funnel !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.funnel: object expected");
                                message.funnel = $root.google.analytics.data.v1alpha.Funnel.fromObject(object.funnel);
                            }
                            if (object.funnelBreakdown != null) {
                                if (typeof object.funnelBreakdown !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.funnelBreakdown: object expected");
                                message.funnelBreakdown = $root.google.analytics.data.v1alpha.FunnelBreakdown.fromObject(object.funnelBreakdown);
                            }
                            if (object.funnelNextAction != null) {
                                if (typeof object.funnelNextAction !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.funnelNextAction: object expected");
                                message.funnelNextAction = $root.google.analytics.data.v1alpha.FunnelNextAction.fromObject(object.funnelNextAction);
                            }
                            switch (object.funnelVisualizationType) {
                            default:
                                if (typeof object.funnelVisualizationType === "number") {
                                    message.funnelVisualizationType = object.funnelVisualizationType;
                                    break;
                                }
                                break;
                            case "FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.funnelVisualizationType = 0;
                                break;
                            case "STANDARD_FUNNEL":
                            case 1:
                                message.funnelVisualizationType = 1;
                                break;
                            case "TRENDED_FUNNEL":
                            case 2:
                                message.funnelVisualizationType = 2;
                                break;
                            }
                            if (object.segments) {
                                if (!Array.isArray(object.segments))
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.segments: array expected");
                                message.segments = [];
                                for (var i = 0; i < object.segments.length; ++i) {
                                    if (typeof object.segments[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.segments: object expected");
                                    message.segments[i] = $root.google.analytics.data.v1alpha.Segment.fromObject(object.segments[i]);
                                }
                            }
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            if (object.dimensionFilter != null) {
                                if (typeof object.dimensionFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportRequest.dimensionFilter: object expected");
                                message.dimensionFilter = $root.google.analytics.data.v1alpha.FilterExpression.fromObject(object.dimensionFilter);
                            }
                            if (object.returnPropertyQuota != null)
                                message.returnPropertyQuota = Boolean(object.returnPropertyQuota);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunFunnelReportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {google.analytics.data.v1alpha.RunFunnelReportRequest} message RunFunnelReportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunFunnelReportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dateRanges = [];
                                object.segments = [];
                            }
                            if (options.defaults) {
                                object.property = "";
                                object.funnel = null;
                                object.funnelBreakdown = null;
                                object.funnelNextAction = null;
                                object.funnelVisualizationType = options.enums === String ? "FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.limit = options.longs === String ? "0" : 0;
                                object.dimensionFilter = null;
                                object.returnPropertyQuota = false;
                            }
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.dateRanges && message.dateRanges.length) {
                                object.dateRanges = [];
                                for (var j = 0; j < message.dateRanges.length; ++j)
                                    object.dateRanges[j] = $root.google.analytics.data.v1alpha.DateRange.toObject(message.dateRanges[j], options);
                            }
                            if (message.funnel != null && message.hasOwnProperty("funnel"))
                                object.funnel = $root.google.analytics.data.v1alpha.Funnel.toObject(message.funnel, options);
                            if (message.funnelBreakdown != null && message.hasOwnProperty("funnelBreakdown"))
                                object.funnelBreakdown = $root.google.analytics.data.v1alpha.FunnelBreakdown.toObject(message.funnelBreakdown, options);
                            if (message.funnelNextAction != null && message.hasOwnProperty("funnelNextAction"))
                                object.funnelNextAction = $root.google.analytics.data.v1alpha.FunnelNextAction.toObject(message.funnelNextAction, options);
                            if (message.funnelVisualizationType != null && message.hasOwnProperty("funnelVisualizationType"))
                                object.funnelVisualizationType = options.enums === String ? $root.google.analytics.data.v1alpha.RunFunnelReportRequest.FunnelVisualizationType[message.funnelVisualizationType] === undefined ? message.funnelVisualizationType : $root.google.analytics.data.v1alpha.RunFunnelReportRequest.FunnelVisualizationType[message.funnelVisualizationType] : message.funnelVisualizationType;
                            if (message.segments && message.segments.length) {
                                object.segments = [];
                                for (var j = 0; j < message.segments.length; ++j)
                                    object.segments[j] = $root.google.analytics.data.v1alpha.Segment.toObject(message.segments[j], options);
                            }
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter"))
                                object.dimensionFilter = $root.google.analytics.data.v1alpha.FilterExpression.toObject(message.dimensionFilter, options);
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                object.returnPropertyQuota = message.returnPropertyQuota;
                            return object;
                        };
    
                        /**
                         * Converts this RunFunnelReportRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunFunnelReportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunFunnelReportRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunFunnelReportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.RunFunnelReportRequest";
                        };
    
                        /**
                         * FunnelVisualizationType enum.
                         * @name google.analytics.data.v1alpha.RunFunnelReportRequest.FunnelVisualizationType
                         * @enum {number}
                         * @property {number} FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED=0 FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED value
                         * @property {number} STANDARD_FUNNEL=1 STANDARD_FUNNEL value
                         * @property {number} TRENDED_FUNNEL=2 TRENDED_FUNNEL value
                         */
                        RunFunnelReportRequest.FunnelVisualizationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FUNNEL_VISUALIZATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STANDARD_FUNNEL"] = 1;
                            values[valuesById[2] = "TRENDED_FUNNEL"] = 2;
                            return values;
                        })();
    
                        return RunFunnelReportRequest;
                    })();
    
                    v1alpha.RunFunnelReportResponse = (function() {
    
                        /**
                         * Properties of a RunFunnelReportResponse.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IRunFunnelReportResponse
                         * @property {google.analytics.data.v1alpha.IFunnelSubReport|null} [funnelTable] RunFunnelReportResponse funnelTable
                         * @property {google.analytics.data.v1alpha.IFunnelSubReport|null} [funnelVisualization] RunFunnelReportResponse funnelVisualization
                         * @property {google.analytics.data.v1alpha.IPropertyQuota|null} [propertyQuota] RunFunnelReportResponse propertyQuota
                         * @property {string|null} [kind] RunFunnelReportResponse kind
                         */
    
                        /**
                         * Constructs a new RunFunnelReportResponse.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a RunFunnelReportResponse.
                         * @implements IRunFunnelReportResponse
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportResponse=} [properties] Properties to set
                         */
                        function RunFunnelReportResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunFunnelReportResponse funnelTable.
                         * @member {google.analytics.data.v1alpha.IFunnelSubReport|null|undefined} funnelTable
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @instance
                         */
                        RunFunnelReportResponse.prototype.funnelTable = null;
    
                        /**
                         * RunFunnelReportResponse funnelVisualization.
                         * @member {google.analytics.data.v1alpha.IFunnelSubReport|null|undefined} funnelVisualization
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @instance
                         */
                        RunFunnelReportResponse.prototype.funnelVisualization = null;
    
                        /**
                         * RunFunnelReportResponse propertyQuota.
                         * @member {google.analytics.data.v1alpha.IPropertyQuota|null|undefined} propertyQuota
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @instance
                         */
                        RunFunnelReportResponse.prototype.propertyQuota = null;
    
                        /**
                         * RunFunnelReportResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @instance
                         */
                        RunFunnelReportResponse.prototype.kind = "";
    
                        /**
                         * Creates a new RunFunnelReportResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportResponse} RunFunnelReportResponse instance
                         */
                        RunFunnelReportResponse.create = function create(properties) {
                            return new RunFunnelReportResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RunFunnelReportResponse message. Does not implicitly {@link google.analytics.data.v1alpha.RunFunnelReportResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportResponse} message RunFunnelReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunFunnelReportResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.funnelTable != null && Object.hasOwnProperty.call(message, "funnelTable"))
                                $root.google.analytics.data.v1alpha.FunnelSubReport.encode(message.funnelTable, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.funnelVisualization != null && Object.hasOwnProperty.call(message, "funnelVisualization"))
                                $root.google.analytics.data.v1alpha.FunnelSubReport.encode(message.funnelVisualization, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.propertyQuota != null && Object.hasOwnProperty.call(message, "propertyQuota"))
                                $root.google.analytics.data.v1alpha.PropertyQuota.encode(message.propertyQuota, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunFunnelReportResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.RunFunnelReportResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {google.analytics.data.v1alpha.IRunFunnelReportResponse} message RunFunnelReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunFunnelReportResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunFunnelReportResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportResponse} RunFunnelReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunFunnelReportResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.RunFunnelReportResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.funnelTable = $root.google.analytics.data.v1alpha.FunnelSubReport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.funnelVisualization = $root.google.analytics.data.v1alpha.FunnelSubReport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.propertyQuota = $root.google.analytics.data.v1alpha.PropertyQuota.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunFunnelReportResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportResponse} RunFunnelReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunFunnelReportResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunFunnelReportResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunFunnelReportResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.funnelTable != null && message.hasOwnProperty("funnelTable")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelSubReport.verify(message.funnelTable);
                                if (error)
                                    return "funnelTable." + error;
                            }
                            if (message.funnelVisualization != null && message.hasOwnProperty("funnelVisualization")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelSubReport.verify(message.funnelVisualization);
                                if (error)
                                    return "funnelVisualization." + error;
                            }
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota")) {
                                var error = $root.google.analytics.data.v1alpha.PropertyQuota.verify(message.propertyQuota);
                                if (error)
                                    return "propertyQuota." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunFunnelReportResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.RunFunnelReportResponse} RunFunnelReportResponse
                         */
                        RunFunnelReportResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.RunFunnelReportResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.RunFunnelReportResponse();
                            if (object.funnelTable != null) {
                                if (typeof object.funnelTable !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportResponse.funnelTable: object expected");
                                message.funnelTable = $root.google.analytics.data.v1alpha.FunnelSubReport.fromObject(object.funnelTable);
                            }
                            if (object.funnelVisualization != null) {
                                if (typeof object.funnelVisualization !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportResponse.funnelVisualization: object expected");
                                message.funnelVisualization = $root.google.analytics.data.v1alpha.FunnelSubReport.fromObject(object.funnelVisualization);
                            }
                            if (object.propertyQuota != null) {
                                if (typeof object.propertyQuota !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.RunFunnelReportResponse.propertyQuota: object expected");
                                message.propertyQuota = $root.google.analytics.data.v1alpha.PropertyQuota.fromObject(object.propertyQuota);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunFunnelReportResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {google.analytics.data.v1alpha.RunFunnelReportResponse} message RunFunnelReportResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunFunnelReportResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.funnelTable = null;
                                object.funnelVisualization = null;
                                object.propertyQuota = null;
                                object.kind = "";
                            }
                            if (message.funnelTable != null && message.hasOwnProperty("funnelTable"))
                                object.funnelTable = $root.google.analytics.data.v1alpha.FunnelSubReport.toObject(message.funnelTable, options);
                            if (message.funnelVisualization != null && message.hasOwnProperty("funnelVisualization"))
                                object.funnelVisualization = $root.google.analytics.data.v1alpha.FunnelSubReport.toObject(message.funnelVisualization, options);
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota"))
                                object.propertyQuota = $root.google.analytics.data.v1alpha.PropertyQuota.toObject(message.propertyQuota, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this RunFunnelReportResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunFunnelReportResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunFunnelReportResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.RunFunnelReportResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunFunnelReportResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.RunFunnelReportResponse";
                        };
    
                        return RunFunnelReportResponse;
                    })();
    
                    v1alpha.DateRange = (function() {
    
                        /**
                         * Properties of a DateRange.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IDateRange
                         * @property {string|null} [startDate] DateRange startDate
                         * @property {string|null} [endDate] DateRange endDate
                         * @property {string|null} [name] DateRange name
                         */
    
                        /**
                         * Constructs a new DateRange.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a DateRange.
                         * @implements IDateRange
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IDateRange=} [properties] Properties to set
                         */
                        function DateRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DateRange startDate.
                         * @member {string} startDate
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @instance
                         */
                        DateRange.prototype.startDate = "";
    
                        /**
                         * DateRange endDate.
                         * @member {string} endDate
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @instance
                         */
                        DateRange.prototype.endDate = "";
    
                        /**
                         * DateRange name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @instance
                         */
                        DateRange.prototype.name = "";
    
                        /**
                         * Creates a new DateRange instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {google.analytics.data.v1alpha.IDateRange=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.DateRange} DateRange instance
                         */
                        DateRange.create = function create(properties) {
                            return new DateRange(properties);
                        };
    
                        /**
                         * Encodes the specified DateRange message. Does not implicitly {@link google.analytics.data.v1alpha.DateRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {google.analytics.data.v1alpha.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && Object.hasOwnProperty.call(message, "startDate"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.startDate);
                            if (message.endDate != null && Object.hasOwnProperty.call(message, "endDate"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.endDate);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DateRange message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DateRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {google.analytics.data.v1alpha.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DateRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startDate = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.endDate = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DateRange message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DateRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                if (!$util.isString(message.startDate))
                                    return "startDate: string expected";
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                if (!$util.isString(message.endDate))
                                    return "endDate: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DateRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.DateRange} DateRange
                         */
                        DateRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.DateRange)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.DateRange();
                            if (object.startDate != null)
                                message.startDate = String(object.startDate);
                            if (object.endDate != null)
                                message.endDate = String(object.endDate);
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DateRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {google.analytics.data.v1alpha.DateRange} message DateRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DateRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = "";
                                object.endDate = "";
                                object.name = "";
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = message.startDate;
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = message.endDate;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DateRange to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DateRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DateRange
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.DateRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DateRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.DateRange";
                        };
    
                        return DateRange;
                    })();
    
                    v1alpha.Dimension = (function() {
    
                        /**
                         * Properties of a Dimension.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IDimension
                         * @property {string|null} [name] Dimension name
                         * @property {google.analytics.data.v1alpha.IDimensionExpression|null} [dimensionExpression] Dimension dimensionExpression
                         */
    
                        /**
                         * Constructs a new Dimension.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a Dimension.
                         * @implements IDimension
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IDimension=} [properties] Properties to set
                         */
                        function Dimension(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Dimension name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @instance
                         */
                        Dimension.prototype.name = "";
    
                        /**
                         * Dimension dimensionExpression.
                         * @member {google.analytics.data.v1alpha.IDimensionExpression|null|undefined} dimensionExpression
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @instance
                         */
                        Dimension.prototype.dimensionExpression = null;
    
                        /**
                         * Creates a new Dimension instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimension=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.Dimension} Dimension instance
                         */
                        Dimension.create = function create(properties) {
                            return new Dimension(properties);
                        };
    
                        /**
                         * Encodes the specified Dimension message. Does not implicitly {@link google.analytics.data.v1alpha.Dimension.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimension} message Dimension message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dimension.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.dimensionExpression != null && Object.hasOwnProperty.call(message, "dimensionExpression"))
                                $root.google.analytics.data.v1alpha.DimensionExpression.encode(message.dimensionExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Dimension message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.Dimension.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimension} message Dimension message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dimension.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Dimension message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.Dimension} Dimension
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dimension.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.Dimension();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dimensionExpression = $root.google.analytics.data.v1alpha.DimensionExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Dimension message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.Dimension} Dimension
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dimension.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Dimension message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Dimension.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.dimensionExpression != null && message.hasOwnProperty("dimensionExpression")) {
                                var error = $root.google.analytics.data.v1alpha.DimensionExpression.verify(message.dimensionExpression);
                                if (error)
                                    return "dimensionExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Dimension message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.Dimension} Dimension
                         */
                        Dimension.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.Dimension)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.Dimension();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.dimensionExpression != null) {
                                if (typeof object.dimensionExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Dimension.dimensionExpression: object expected");
                                message.dimensionExpression = $root.google.analytics.data.v1alpha.DimensionExpression.fromObject(object.dimensionExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Dimension message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {google.analytics.data.v1alpha.Dimension} message Dimension
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Dimension.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.dimensionExpression = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.dimensionExpression != null && message.hasOwnProperty("dimensionExpression"))
                                object.dimensionExpression = $root.google.analytics.data.v1alpha.DimensionExpression.toObject(message.dimensionExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this Dimension to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Dimension.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Dimension
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.Dimension
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Dimension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.Dimension";
                        };
    
                        return Dimension;
                    })();
    
                    v1alpha.DimensionExpression = (function() {
    
                        /**
                         * Properties of a DimensionExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IDimensionExpression
                         * @property {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression|null} [lowerCase] DimensionExpression lowerCase
                         * @property {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression|null} [upperCase] DimensionExpression upperCase
                         * @property {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression|null} [concatenate] DimensionExpression concatenate
                         */
    
                        /**
                         * Constructs a new DimensionExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a DimensionExpression.
                         * @implements IDimensionExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IDimensionExpression=} [properties] Properties to set
                         */
                        function DimensionExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionExpression lowerCase.
                         * @member {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression|null|undefined} lowerCase
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.lowerCase = null;
    
                        /**
                         * DimensionExpression upperCase.
                         * @member {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression|null|undefined} upperCase
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.upperCase = null;
    
                        /**
                         * DimensionExpression concatenate.
                         * @member {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression|null|undefined} concatenate
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.concatenate = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DimensionExpression oneExpression.
                         * @member {"lowerCase"|"upperCase"|"concatenate"|undefined} oneExpression
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @instance
                         */
                        Object.defineProperty(DimensionExpression.prototype, "oneExpression", {
                            get: $util.oneOfGetter($oneOfFields = ["lowerCase", "upperCase", "concatenate"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DimensionExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.DimensionExpression} DimensionExpression instance
                         */
                        DimensionExpression.create = function create(properties) {
                            return new DimensionExpression(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionExpression message. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionExpression} message DimensionExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.lowerCase != null && Object.hasOwnProperty.call(message, "lowerCase"))
                                $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.encode(message.lowerCase, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.upperCase != null && Object.hasOwnProperty.call(message, "upperCase"))
                                $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.encode(message.upperCase, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.concatenate != null && Object.hasOwnProperty.call(message, "concatenate"))
                                $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.encode(message.concatenate, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionExpression} message DimensionExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.DimensionExpression} DimensionExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DimensionExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.lowerCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.upperCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.concatenate = $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.DimensionExpression} DimensionExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.lowerCase != null && message.hasOwnProperty("lowerCase")) {
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.verify(message.lowerCase);
                                    if (error)
                                        return "lowerCase." + error;
                                }
                            }
                            if (message.upperCase != null && message.hasOwnProperty("upperCase")) {
                                if (properties.oneExpression === 1)
                                    return "oneExpression: multiple values";
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.verify(message.upperCase);
                                    if (error)
                                        return "upperCase." + error;
                                }
                            }
                            if (message.concatenate != null && message.hasOwnProperty("concatenate")) {
                                if (properties.oneExpression === 1)
                                    return "oneExpression: multiple values";
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.verify(message.concatenate);
                                    if (error)
                                        return "concatenate." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DimensionExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.DimensionExpression} DimensionExpression
                         */
                        DimensionExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.DimensionExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.DimensionExpression();
                            if (object.lowerCase != null) {
                                if (typeof object.lowerCase !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.DimensionExpression.lowerCase: object expected");
                                message.lowerCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.fromObject(object.lowerCase);
                            }
                            if (object.upperCase != null) {
                                if (typeof object.upperCase !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.DimensionExpression.upperCase: object expected");
                                message.upperCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.fromObject(object.upperCase);
                            }
                            if (object.concatenate != null) {
                                if (typeof object.concatenate !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.DimensionExpression.concatenate: object expected");
                                message.concatenate = $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.fromObject(object.concatenate);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.DimensionExpression} message DimensionExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.lowerCase != null && message.hasOwnProperty("lowerCase")) {
                                object.lowerCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.toObject(message.lowerCase, options);
                                if (options.oneofs)
                                    object.oneExpression = "lowerCase";
                            }
                            if (message.upperCase != null && message.hasOwnProperty("upperCase")) {
                                object.upperCase = $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression.toObject(message.upperCase, options);
                                if (options.oneofs)
                                    object.oneExpression = "upperCase";
                            }
                            if (message.concatenate != null && message.hasOwnProperty("concatenate")) {
                                object.concatenate = $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.toObject(message.concatenate, options);
                                if (options.oneofs)
                                    object.oneExpression = "concatenate";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DimensionExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.DimensionExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.DimensionExpression";
                        };
    
                        DimensionExpression.CaseExpression = (function() {
    
                            /**
                             * Properties of a CaseExpression.
                             * @memberof google.analytics.data.v1alpha.DimensionExpression
                             * @interface ICaseExpression
                             * @property {string|null} [dimensionName] CaseExpression dimensionName
                             */
    
                            /**
                             * Constructs a new CaseExpression.
                             * @memberof google.analytics.data.v1alpha.DimensionExpression
                             * @classdesc Represents a CaseExpression.
                             * @implements ICaseExpression
                             * @constructor
                             * @param {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression=} [properties] Properties to set
                             */
                            function CaseExpression(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CaseExpression dimensionName.
                             * @member {string} dimensionName
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @instance
                             */
                            CaseExpression.prototype.dimensionName = "";
    
                            /**
                             * Creates a new CaseExpression instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression=} [properties] Properties to set
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.CaseExpression} CaseExpression instance
                             */
                            CaseExpression.create = function create(properties) {
                                return new CaseExpression(properties);
                            };
    
                            /**
                             * Encodes the specified CaseExpression message. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.CaseExpression.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression} message CaseExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaseExpression.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dimensionName != null && Object.hasOwnProperty.call(message, "dimensionName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CaseExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.CaseExpression.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.ICaseExpression} message CaseExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaseExpression.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CaseExpression message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.CaseExpression} CaseExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaseExpression.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.dimensionName = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CaseExpression message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.CaseExpression} CaseExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaseExpression.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CaseExpression message.
                             * @function verify
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CaseExpression.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    if (!$util.isString(message.dimensionName))
                                        return "dimensionName: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CaseExpression message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.CaseExpression} CaseExpression
                             */
                            CaseExpression.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression)
                                    return object;
                                var message = new $root.google.analytics.data.v1alpha.DimensionExpression.CaseExpression();
                                if (object.dimensionName != null)
                                    message.dimensionName = String(object.dimensionName);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CaseExpression message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.CaseExpression} message CaseExpression
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CaseExpression.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.dimensionName = "";
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    object.dimensionName = message.dimensionName;
                                return object;
                            };
    
                            /**
                             * Converts this CaseExpression to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CaseExpression.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CaseExpression
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.CaseExpression
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CaseExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1alpha.DimensionExpression.CaseExpression";
                            };
    
                            return CaseExpression;
                        })();
    
                        DimensionExpression.ConcatenateExpression = (function() {
    
                            /**
                             * Properties of a ConcatenateExpression.
                             * @memberof google.analytics.data.v1alpha.DimensionExpression
                             * @interface IConcatenateExpression
                             * @property {Array.<string>|null} [dimensionNames] ConcatenateExpression dimensionNames
                             * @property {string|null} [delimiter] ConcatenateExpression delimiter
                             */
    
                            /**
                             * Constructs a new ConcatenateExpression.
                             * @memberof google.analytics.data.v1alpha.DimensionExpression
                             * @classdesc Represents a ConcatenateExpression.
                             * @implements IConcatenateExpression
                             * @constructor
                             * @param {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression=} [properties] Properties to set
                             */
                            function ConcatenateExpression(properties) {
                                this.dimensionNames = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConcatenateExpression dimensionNames.
                             * @member {Array.<string>} dimensionNames
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @instance
                             */
                            ConcatenateExpression.prototype.dimensionNames = $util.emptyArray;
    
                            /**
                             * ConcatenateExpression delimiter.
                             * @member {string} delimiter
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @instance
                             */
                            ConcatenateExpression.prototype.delimiter = "";
    
                            /**
                             * Creates a new ConcatenateExpression instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression=} [properties] Properties to set
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression} ConcatenateExpression instance
                             */
                            ConcatenateExpression.create = function create(properties) {
                                return new ConcatenateExpression(properties);
                            };
    
                            /**
                             * Encodes the specified ConcatenateExpression message. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression} message ConcatenateExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConcatenateExpression.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dimensionNames != null && message.dimensionNames.length)
                                    for (var i = 0; i < message.dimensionNames.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionNames[i]);
                                if (message.delimiter != null && Object.hasOwnProperty.call(message, "delimiter"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.delimiter);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConcatenateExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.IConcatenateExpression} message ConcatenateExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConcatenateExpression.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConcatenateExpression message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConcatenateExpression.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.dimensionNames && message.dimensionNames.length))
                                                message.dimensionNames = [];
                                            message.dimensionNames.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.delimiter = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConcatenateExpression message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConcatenateExpression.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConcatenateExpression message.
                             * @function verify
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConcatenateExpression.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dimensionNames != null && message.hasOwnProperty("dimensionNames")) {
                                    if (!Array.isArray(message.dimensionNames))
                                        return "dimensionNames: array expected";
                                    for (var i = 0; i < message.dimensionNames.length; ++i)
                                        if (!$util.isString(message.dimensionNames[i]))
                                            return "dimensionNames: string[] expected";
                                }
                                if (message.delimiter != null && message.hasOwnProperty("delimiter"))
                                    if (!$util.isString(message.delimiter))
                                        return "delimiter: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConcatenateExpression message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             */
                            ConcatenateExpression.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression)
                                    return object;
                                var message = new $root.google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression();
                                if (object.dimensionNames) {
                                    if (!Array.isArray(object.dimensionNames))
                                        throw TypeError(".google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression.dimensionNames: array expected");
                                    message.dimensionNames = [];
                                    for (var i = 0; i < object.dimensionNames.length; ++i)
                                        message.dimensionNames[i] = String(object.dimensionNames[i]);
                                }
                                if (object.delimiter != null)
                                    message.delimiter = String(object.delimiter);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConcatenateExpression message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression} message ConcatenateExpression
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConcatenateExpression.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.dimensionNames = [];
                                if (options.defaults)
                                    object.delimiter = "";
                                if (message.dimensionNames && message.dimensionNames.length) {
                                    object.dimensionNames = [];
                                    for (var j = 0; j < message.dimensionNames.length; ++j)
                                        object.dimensionNames[j] = message.dimensionNames[j];
                                }
                                if (message.delimiter != null && message.hasOwnProperty("delimiter"))
                                    object.delimiter = message.delimiter;
                                return object;
                            };
    
                            /**
                             * Converts this ConcatenateExpression to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConcatenateExpression.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ConcatenateExpression
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ConcatenateExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1alpha.DimensionExpression.ConcatenateExpression";
                            };
    
                            return ConcatenateExpression;
                        })();
    
                        return DimensionExpression;
                    })();
    
                    v1alpha.FilterExpression = (function() {
    
                        /**
                         * Properties of a FilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFilterExpression
                         * @property {google.analytics.data.v1alpha.IFilterExpressionList|null} [andGroup] FilterExpression andGroup
                         * @property {google.analytics.data.v1alpha.IFilterExpressionList|null} [orGroup] FilterExpression orGroup
                         * @property {google.analytics.data.v1alpha.IFilterExpression|null} [notExpression] FilterExpression notExpression
                         * @property {google.analytics.data.v1alpha.IFilter|null} [filter] FilterExpression filter
                         */
    
                        /**
                         * Constructs a new FilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FilterExpression.
                         * @implements IFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFilterExpression=} [properties] Properties to set
                         */
                        function FilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FilterExpression andGroup.
                         * @member {google.analytics.data.v1alpha.IFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.andGroup = null;
    
                        /**
                         * FilterExpression orGroup.
                         * @member {google.analytics.data.v1alpha.IFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.orGroup = null;
    
                        /**
                         * FilterExpression notExpression.
                         * @member {google.analytics.data.v1alpha.IFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.notExpression = null;
    
                        /**
                         * FilterExpression filter.
                         * @member {google.analytics.data.v1alpha.IFilter|null|undefined} filter
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.filter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"filter"|undefined} expr
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         */
                        Object.defineProperty(FilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "filter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FilterExpression} FilterExpression instance
                         */
                        FilterExpression.create = function create(properties) {
                            return new FilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified FilterExpression message. Does not implicitly {@link google.analytics.data.v1alpha.FilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpression} message FilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1alpha.FilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1alpha.FilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1alpha.FilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                $root.google.analytics.data.v1alpha.Filter.encode(message.filter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpression} message FilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FilterExpression} FilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1alpha.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.filter = $root.google.analytics.data.v1alpha.Filter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FilterExpression} FilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.filter != null && message.hasOwnProperty("filter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.Filter.verify(message.filter);
                                    if (error)
                                        return "filter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FilterExpression} FilterExpression
                         */
                        FilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1alpha.FilterExpression.fromObject(object.notExpression);
                            }
                            if (object.filter != null) {
                                if (typeof object.filter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FilterExpression.filter: object expected");
                                message.filter = $root.google.analytics.data.v1alpha.Filter.fromObject(object.filter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.FilterExpression} message FilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1alpha.FilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1alpha.FilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.filter != null && message.hasOwnProperty("filter")) {
                                object.filter = $root.google.analytics.data.v1alpha.Filter.toObject(message.filter, options);
                                if (options.oneofs)
                                    object.expr = "filter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FilterExpression";
                        };
    
                        return FilterExpression;
                    })();
    
                    v1alpha.FilterExpressionList = (function() {
    
                        /**
                         * Properties of a FilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFilterExpressionList
                         * @property {Array.<google.analytics.data.v1alpha.IFilterExpression>|null} [expressions] FilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new FilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FilterExpressionList.
                         * @implements IFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFilterExpressionList=} [properties] Properties to set
                         */
                        function FilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1alpha.IFilterExpression>} expressions
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @instance
                         */
                        FilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new FilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FilterExpressionList} FilterExpressionList instance
                         */
                        FilterExpressionList.create = function create(properties) {
                            return new FilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified FilterExpressionList message. Does not implicitly {@link google.analytics.data.v1alpha.FilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpressionList} message FilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1alpha.FilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilterExpressionList} message FilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FilterExpressionList} FilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1alpha.FilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FilterExpressionList} FilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.FilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FilterExpressionList} FilterExpressionList
                         */
                        FilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1alpha.FilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1alpha.FilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.FilterExpressionList} message FilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1alpha.FilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FilterExpressionList";
                        };
    
                        return FilterExpressionList;
                    })();
    
                    v1alpha.Filter = (function() {
    
                        /**
                         * Properties of a Filter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFilter
                         * @property {string|null} [fieldName] Filter fieldName
                         * @property {google.analytics.data.v1alpha.IStringFilter|null} [stringFilter] Filter stringFilter
                         * @property {google.analytics.data.v1alpha.IInListFilter|null} [inListFilter] Filter inListFilter
                         * @property {google.analytics.data.v1alpha.INumericFilter|null} [numericFilter] Filter numericFilter
                         * @property {google.analytics.data.v1alpha.IBetweenFilter|null} [betweenFilter] Filter betweenFilter
                         */
    
                        /**
                         * Constructs a new Filter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a Filter.
                         * @implements IFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFilter=} [properties] Properties to set
                         */
                        function Filter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Filter fieldName.
                         * @member {string} fieldName
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Filter.prototype.fieldName = "";
    
                        /**
                         * Filter stringFilter.
                         * @member {google.analytics.data.v1alpha.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Filter.prototype.stringFilter = null;
    
                        /**
                         * Filter inListFilter.
                         * @member {google.analytics.data.v1alpha.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Filter.prototype.inListFilter = null;
    
                        /**
                         * Filter numericFilter.
                         * @member {google.analytics.data.v1alpha.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Filter.prototype.numericFilter = null;
    
                        /**
                         * Filter betweenFilter.
                         * @member {google.analytics.data.v1alpha.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Filter.prototype.betweenFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Filter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         */
                        Object.defineProperty(Filter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Filter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.Filter} Filter instance
                         */
                        Filter.create = function create(properties) {
                            return new Filter(properties);
                        };
    
                        /**
                         * Encodes the specified Filter message. Does not implicitly {@link google.analytics.data.v1alpha.Filter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1alpha.StringFilter.encode(message.stringFilter, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1alpha.InListFilter.encode(message.inListFilter, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1alpha.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1alpha.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Filter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.Filter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.Filter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fieldName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Filter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Filter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                if (!$util.isString(message.fieldName))
                                    return "fieldName: string expected";
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Filter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.Filter} Filter
                         */
                        Filter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.Filter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.Filter();
                            if (object.fieldName != null)
                                message.fieldName = String(object.fieldName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Filter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Filter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Filter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Filter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Filter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {google.analytics.data.v1alpha.Filter} message Filter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Filter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.fieldName = "";
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                object.fieldName = message.fieldName;
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Filter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Filter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Filter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.Filter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Filter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.Filter";
                        };
    
                        return Filter;
                    })();
    
                    v1alpha.StringFilter = (function() {
    
                        /**
                         * Properties of a StringFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IStringFilter
                         * @property {google.analytics.data.v1alpha.StringFilter.MatchType|null} [matchType] StringFilter matchType
                         * @property {string|null} [value] StringFilter value
                         * @property {boolean|null} [caseSensitive] StringFilter caseSensitive
                         */
    
                        /**
                         * Constructs a new StringFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a StringFilter.
                         * @implements IStringFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IStringFilter=} [properties] Properties to set
                         */
                        function StringFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StringFilter matchType.
                         * @member {google.analytics.data.v1alpha.StringFilter.MatchType} matchType
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @instance
                         */
                        StringFilter.prototype.matchType = 0;
    
                        /**
                         * StringFilter value.
                         * @member {string} value
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @instance
                         */
                        StringFilter.prototype.value = "";
    
                        /**
                         * StringFilter caseSensitive.
                         * @member {boolean} caseSensitive
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @instance
                         */
                        StringFilter.prototype.caseSensitive = false;
    
                        /**
                         * Creates a new StringFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IStringFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.StringFilter} StringFilter instance
                         */
                        StringFilter.create = function create(properties) {
                            return new StringFilter(properties);
                        };
    
                        /**
                         * Encodes the specified StringFilter message. Does not implicitly {@link google.analytics.data.v1alpha.StringFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IStringFilter} message StringFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StringFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.matchType != null && Object.hasOwnProperty.call(message, "matchType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.matchType);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            if (message.caseSensitive != null && Object.hasOwnProperty.call(message, "caseSensitive"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.caseSensitive);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StringFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.StringFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IStringFilter} message StringFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StringFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StringFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.StringFilter} StringFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StringFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.StringFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.matchType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.caseSensitive = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StringFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.StringFilter} StringFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StringFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StringFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StringFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.matchType != null && message.hasOwnProperty("matchType"))
                                switch (message.matchType) {
                                default:
                                    return "matchType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                if (typeof message.caseSensitive !== "boolean")
                                    return "caseSensitive: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a StringFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.StringFilter} StringFilter
                         */
                        StringFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.StringFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.StringFilter();
                            switch (object.matchType) {
                            default:
                                if (typeof object.matchType === "number") {
                                    message.matchType = object.matchType;
                                    break;
                                }
                                break;
                            case "MATCH_TYPE_UNSPECIFIED":
                            case 0:
                                message.matchType = 0;
                                break;
                            case "EXACT":
                            case 1:
                                message.matchType = 1;
                                break;
                            case "BEGINS_WITH":
                            case 2:
                                message.matchType = 2;
                                break;
                            case "ENDS_WITH":
                            case 3:
                                message.matchType = 3;
                                break;
                            case "CONTAINS":
                            case 4:
                                message.matchType = 4;
                                break;
                            case "FULL_REGEXP":
                            case 5:
                                message.matchType = 5;
                                break;
                            case "PARTIAL_REGEXP":
                            case 6:
                                message.matchType = 6;
                                break;
                            }
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.caseSensitive != null)
                                message.caseSensitive = Boolean(object.caseSensitive);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StringFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.StringFilter} message StringFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StringFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.matchType = options.enums === String ? "MATCH_TYPE_UNSPECIFIED" : 0;
                                object.value = "";
                                object.caseSensitive = false;
                            }
                            if (message.matchType != null && message.hasOwnProperty("matchType"))
                                object.matchType = options.enums === String ? $root.google.analytics.data.v1alpha.StringFilter.MatchType[message.matchType] === undefined ? message.matchType : $root.google.analytics.data.v1alpha.StringFilter.MatchType[message.matchType] : message.matchType;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                object.caseSensitive = message.caseSensitive;
                            return object;
                        };
    
                        /**
                         * Converts this StringFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StringFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StringFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.StringFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StringFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.StringFilter";
                        };
    
                        /**
                         * MatchType enum.
                         * @name google.analytics.data.v1alpha.StringFilter.MatchType
                         * @enum {number}
                         * @property {number} MATCH_TYPE_UNSPECIFIED=0 MATCH_TYPE_UNSPECIFIED value
                         * @property {number} EXACT=1 EXACT value
                         * @property {number} BEGINS_WITH=2 BEGINS_WITH value
                         * @property {number} ENDS_WITH=3 ENDS_WITH value
                         * @property {number} CONTAINS=4 CONTAINS value
                         * @property {number} FULL_REGEXP=5 FULL_REGEXP value
                         * @property {number} PARTIAL_REGEXP=6 PARTIAL_REGEXP value
                         */
                        StringFilter.MatchType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MATCH_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "EXACT"] = 1;
                            values[valuesById[2] = "BEGINS_WITH"] = 2;
                            values[valuesById[3] = "ENDS_WITH"] = 3;
                            values[valuesById[4] = "CONTAINS"] = 4;
                            values[valuesById[5] = "FULL_REGEXP"] = 5;
                            values[valuesById[6] = "PARTIAL_REGEXP"] = 6;
                            return values;
                        })();
    
                        return StringFilter;
                    })();
    
                    v1alpha.InListFilter = (function() {
    
                        /**
                         * Properties of an InListFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IInListFilter
                         * @property {Array.<string>|null} [values] InListFilter values
                         * @property {boolean|null} [caseSensitive] InListFilter caseSensitive
                         */
    
                        /**
                         * Constructs a new InListFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an InListFilter.
                         * @implements IInListFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IInListFilter=} [properties] Properties to set
                         */
                        function InListFilter(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InListFilter values.
                         * @member {Array.<string>} values
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @instance
                         */
                        InListFilter.prototype.values = $util.emptyArray;
    
                        /**
                         * InListFilter caseSensitive.
                         * @member {boolean} caseSensitive
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @instance
                         */
                        InListFilter.prototype.caseSensitive = false;
    
                        /**
                         * Creates a new InListFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IInListFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.InListFilter} InListFilter instance
                         */
                        InListFilter.create = function create(properties) {
                            return new InListFilter(properties);
                        };
    
                        /**
                         * Encodes the specified InListFilter message. Does not implicitly {@link google.analytics.data.v1alpha.InListFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IInListFilter} message InListFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InListFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                            if (message.caseSensitive != null && Object.hasOwnProperty.call(message, "caseSensitive"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.caseSensitive);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InListFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.InListFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IInListFilter} message InListFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InListFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InListFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.InListFilter} InListFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InListFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.InListFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.caseSensitive = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InListFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.InListFilter} InListFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InListFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InListFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InListFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                if (typeof message.caseSensitive !== "boolean")
                                    return "caseSensitive: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an InListFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.InListFilter} InListFilter
                         */
                        InListFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.InListFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.InListFilter();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.analytics.data.v1alpha.InListFilter.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            if (object.caseSensitive != null)
                                message.caseSensitive = Boolean(object.caseSensitive);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InListFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.InListFilter} message InListFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InListFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (options.defaults)
                                object.caseSensitive = false;
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                object.caseSensitive = message.caseSensitive;
                            return object;
                        };
    
                        /**
                         * Converts this InListFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InListFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InListFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.InListFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InListFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.InListFilter";
                        };
    
                        return InListFilter;
                    })();
    
                    v1alpha.NumericFilter = (function() {
    
                        /**
                         * Properties of a NumericFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface INumericFilter
                         * @property {google.analytics.data.v1alpha.NumericFilter.Operation|null} [operation] NumericFilter operation
                         * @property {google.analytics.data.v1alpha.INumericValue|null} [value] NumericFilter value
                         */
    
                        /**
                         * Constructs a new NumericFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a NumericFilter.
                         * @implements INumericFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.INumericFilter=} [properties] Properties to set
                         */
                        function NumericFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NumericFilter operation.
                         * @member {google.analytics.data.v1alpha.NumericFilter.Operation} operation
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @instance
                         */
                        NumericFilter.prototype.operation = 0;
    
                        /**
                         * NumericFilter value.
                         * @member {google.analytics.data.v1alpha.INumericValue|null|undefined} value
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @instance
                         */
                        NumericFilter.prototype.value = null;
    
                        /**
                         * Creates a new NumericFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.NumericFilter} NumericFilter instance
                         */
                        NumericFilter.create = function create(properties) {
                            return new NumericFilter(properties);
                        };
    
                        /**
                         * Encodes the specified NumericFilter message. Does not implicitly {@link google.analytics.data.v1alpha.NumericFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericFilter} message NumericFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.operation);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                $root.google.analytics.data.v1alpha.NumericValue.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NumericFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.NumericFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericFilter} message NumericFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NumericFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.NumericFilter} NumericFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.NumericFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.operation = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.value = $root.google.analytics.data.v1alpha.NumericValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NumericFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.NumericFilter} NumericFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NumericFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NumericFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                switch (message.operation) {
                                default:
                                    return "operation: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.value != null && message.hasOwnProperty("value")) {
                                var error = $root.google.analytics.data.v1alpha.NumericValue.verify(message.value);
                                if (error)
                                    return "value." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NumericFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.NumericFilter} NumericFilter
                         */
                        NumericFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.NumericFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.NumericFilter();
                            switch (object.operation) {
                            default:
                                if (typeof object.operation === "number") {
                                    message.operation = object.operation;
                                    break;
                                }
                                break;
                            case "OPERATION_UNSPECIFIED":
                            case 0:
                                message.operation = 0;
                                break;
                            case "EQUAL":
                            case 1:
                                message.operation = 1;
                                break;
                            case "LESS_THAN":
                            case 2:
                                message.operation = 2;
                                break;
                            case "LESS_THAN_OR_EQUAL":
                            case 3:
                                message.operation = 3;
                                break;
                            case "GREATER_THAN":
                            case 4:
                                message.operation = 4;
                                break;
                            case "GREATER_THAN_OR_EQUAL":
                            case 5:
                                message.operation = 5;
                                break;
                            }
                            if (object.value != null) {
                                if (typeof object.value !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.NumericFilter.value: object expected");
                                message.value = $root.google.analytics.data.v1alpha.NumericValue.fromObject(object.value);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NumericFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.NumericFilter} message NumericFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NumericFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.operation = options.enums === String ? "OPERATION_UNSPECIFIED" : 0;
                                object.value = null;
                            }
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = options.enums === String ? $root.google.analytics.data.v1alpha.NumericFilter.Operation[message.operation] === undefined ? message.operation : $root.google.analytics.data.v1alpha.NumericFilter.Operation[message.operation] : message.operation;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = $root.google.analytics.data.v1alpha.NumericValue.toObject(message.value, options);
                            return object;
                        };
    
                        /**
                         * Converts this NumericFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NumericFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NumericFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.NumericFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NumericFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.NumericFilter";
                        };
    
                        /**
                         * Operation enum.
                         * @name google.analytics.data.v1alpha.NumericFilter.Operation
                         * @enum {number}
                         * @property {number} OPERATION_UNSPECIFIED=0 OPERATION_UNSPECIFIED value
                         * @property {number} EQUAL=1 EQUAL value
                         * @property {number} LESS_THAN=2 LESS_THAN value
                         * @property {number} LESS_THAN_OR_EQUAL=3 LESS_THAN_OR_EQUAL value
                         * @property {number} GREATER_THAN=4 GREATER_THAN value
                         * @property {number} GREATER_THAN_OR_EQUAL=5 GREATER_THAN_OR_EQUAL value
                         */
                        NumericFilter.Operation = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "OPERATION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "EQUAL"] = 1;
                            values[valuesById[2] = "LESS_THAN"] = 2;
                            values[valuesById[3] = "LESS_THAN_OR_EQUAL"] = 3;
                            values[valuesById[4] = "GREATER_THAN"] = 4;
                            values[valuesById[5] = "GREATER_THAN_OR_EQUAL"] = 5;
                            return values;
                        })();
    
                        return NumericFilter;
                    })();
    
                    v1alpha.BetweenFilter = (function() {
    
                        /**
                         * Properties of a BetweenFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IBetweenFilter
                         * @property {google.analytics.data.v1alpha.INumericValue|null} [fromValue] BetweenFilter fromValue
                         * @property {google.analytics.data.v1alpha.INumericValue|null} [toValue] BetweenFilter toValue
                         */
    
                        /**
                         * Constructs a new BetweenFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a BetweenFilter.
                         * @implements IBetweenFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IBetweenFilter=} [properties] Properties to set
                         */
                        function BetweenFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BetweenFilter fromValue.
                         * @member {google.analytics.data.v1alpha.INumericValue|null|undefined} fromValue
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @instance
                         */
                        BetweenFilter.prototype.fromValue = null;
    
                        /**
                         * BetweenFilter toValue.
                         * @member {google.analytics.data.v1alpha.INumericValue|null|undefined} toValue
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @instance
                         */
                        BetweenFilter.prototype.toValue = null;
    
                        /**
                         * Creates a new BetweenFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IBetweenFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.BetweenFilter} BetweenFilter instance
                         */
                        BetweenFilter.create = function create(properties) {
                            return new BetweenFilter(properties);
                        };
    
                        /**
                         * Encodes the specified BetweenFilter message. Does not implicitly {@link google.analytics.data.v1alpha.BetweenFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IBetweenFilter} message BetweenFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BetweenFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fromValue != null && Object.hasOwnProperty.call(message, "fromValue"))
                                $root.google.analytics.data.v1alpha.NumericValue.encode(message.fromValue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.toValue != null && Object.hasOwnProperty.call(message, "toValue"))
                                $root.google.analytics.data.v1alpha.NumericValue.encode(message.toValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BetweenFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.BetweenFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IBetweenFilter} message BetweenFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BetweenFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BetweenFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.BetweenFilter} BetweenFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BetweenFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.BetweenFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fromValue = $root.google.analytics.data.v1alpha.NumericValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.toValue = $root.google.analytics.data.v1alpha.NumericValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BetweenFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.BetweenFilter} BetweenFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BetweenFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BetweenFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BetweenFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.fromValue != null && message.hasOwnProperty("fromValue")) {
                                var error = $root.google.analytics.data.v1alpha.NumericValue.verify(message.fromValue);
                                if (error)
                                    return "fromValue." + error;
                            }
                            if (message.toValue != null && message.hasOwnProperty("toValue")) {
                                var error = $root.google.analytics.data.v1alpha.NumericValue.verify(message.toValue);
                                if (error)
                                    return "toValue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BetweenFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.BetweenFilter} BetweenFilter
                         */
                        BetweenFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.BetweenFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.BetweenFilter();
                            if (object.fromValue != null) {
                                if (typeof object.fromValue !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.BetweenFilter.fromValue: object expected");
                                message.fromValue = $root.google.analytics.data.v1alpha.NumericValue.fromObject(object.fromValue);
                            }
                            if (object.toValue != null) {
                                if (typeof object.toValue !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.BetweenFilter.toValue: object expected");
                                message.toValue = $root.google.analytics.data.v1alpha.NumericValue.fromObject(object.toValue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BetweenFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.BetweenFilter} message BetweenFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BetweenFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.fromValue = null;
                                object.toValue = null;
                            }
                            if (message.fromValue != null && message.hasOwnProperty("fromValue"))
                                object.fromValue = $root.google.analytics.data.v1alpha.NumericValue.toObject(message.fromValue, options);
                            if (message.toValue != null && message.hasOwnProperty("toValue"))
                                object.toValue = $root.google.analytics.data.v1alpha.NumericValue.toObject(message.toValue, options);
                            return object;
                        };
    
                        /**
                         * Converts this BetweenFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BetweenFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BetweenFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.BetweenFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BetweenFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.BetweenFilter";
                        };
    
                        return BetweenFilter;
                    })();
    
                    v1alpha.NumericValue = (function() {
    
                        /**
                         * Properties of a NumericValue.
                         * @memberof google.analytics.data.v1alpha
                         * @interface INumericValue
                         * @property {number|Long|null} [int64Value] NumericValue int64Value
                         * @property {number|null} [doubleValue] NumericValue doubleValue
                         */
    
                        /**
                         * Constructs a new NumericValue.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a NumericValue.
                         * @implements INumericValue
                         * @constructor
                         * @param {google.analytics.data.v1alpha.INumericValue=} [properties] Properties to set
                         */
                        function NumericValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NumericValue int64Value.
                         * @member {number|Long|null|undefined} int64Value
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @instance
                         */
                        NumericValue.prototype.int64Value = null;
    
                        /**
                         * NumericValue doubleValue.
                         * @member {number|null|undefined} doubleValue
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @instance
                         */
                        NumericValue.prototype.doubleValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * NumericValue oneValue.
                         * @member {"int64Value"|"doubleValue"|undefined} oneValue
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @instance
                         */
                        Object.defineProperty(NumericValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["int64Value", "doubleValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new NumericValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.NumericValue} NumericValue instance
                         */
                        NumericValue.create = function create(properties) {
                            return new NumericValue(properties);
                        };
    
                        /**
                         * Encodes the specified NumericValue message. Does not implicitly {@link google.analytics.data.v1alpha.NumericValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericValue} message NumericValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.int64Value != null && Object.hasOwnProperty.call(message, "int64Value"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.int64Value);
                            if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.doubleValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NumericValue message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.NumericValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {google.analytics.data.v1alpha.INumericValue} message NumericValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NumericValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.NumericValue} NumericValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.NumericValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.int64Value = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.doubleValue = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NumericValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.NumericValue} NumericValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NumericValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NumericValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                properties.oneValue = 1;
                                if (!$util.isInteger(message.int64Value) && !(message.int64Value && $util.isInteger(message.int64Value.low) && $util.isInteger(message.int64Value.high)))
                                    return "int64Value: integer|Long expected";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                if (properties.oneValue === 1)
                                    return "oneValue: multiple values";
                                properties.oneValue = 1;
                                if (typeof message.doubleValue !== "number")
                                    return "doubleValue: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NumericValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.NumericValue} NumericValue
                         */
                        NumericValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.NumericValue)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.NumericValue();
                            if (object.int64Value != null)
                                if ($util.Long)
                                    (message.int64Value = $util.Long.fromValue(object.int64Value)).unsigned = false;
                                else if (typeof object.int64Value === "string")
                                    message.int64Value = parseInt(object.int64Value, 10);
                                else if (typeof object.int64Value === "number")
                                    message.int64Value = object.int64Value;
                                else if (typeof object.int64Value === "object")
                                    message.int64Value = new $util.LongBits(object.int64Value.low >>> 0, object.int64Value.high >>> 0).toNumber();
                            if (object.doubleValue != null)
                                message.doubleValue = Number(object.doubleValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NumericValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {google.analytics.data.v1alpha.NumericValue} message NumericValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NumericValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                if (typeof message.int64Value === "number")
                                    object.int64Value = options.longs === String ? String(message.int64Value) : message.int64Value;
                                else
                                    object.int64Value = options.longs === String ? $util.Long.prototype.toString.call(message.int64Value) : options.longs === Number ? new $util.LongBits(message.int64Value.low >>> 0, message.int64Value.high >>> 0).toNumber() : message.int64Value;
                                if (options.oneofs)
                                    object.oneValue = "int64Value";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                                if (options.oneofs)
                                    object.oneValue = "doubleValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NumericValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NumericValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NumericValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.NumericValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NumericValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.NumericValue";
                        };
    
                        return NumericValue;
                    })();
    
                    v1alpha.DimensionHeader = (function() {
    
                        /**
                         * Properties of a DimensionHeader.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IDimensionHeader
                         * @property {string|null} [name] DimensionHeader name
                         */
    
                        /**
                         * Constructs a new DimensionHeader.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a DimensionHeader.
                         * @implements IDimensionHeader
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IDimensionHeader=} [properties] Properties to set
                         */
                        function DimensionHeader(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionHeader name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @instance
                         */
                        DimensionHeader.prototype.name = "";
    
                        /**
                         * Creates a new DimensionHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.DimensionHeader} DimensionHeader instance
                         */
                        DimensionHeader.create = function create(properties) {
                            return new DimensionHeader(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionHeader message. Does not implicitly {@link google.analytics.data.v1alpha.DimensionHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionHeader} message DimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DimensionHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionHeader} message DimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.DimensionHeader} DimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DimensionHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.DimensionHeader} DimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DimensionHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.DimensionHeader} DimensionHeader
                         */
                        DimensionHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.DimensionHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.DimensionHeader();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.DimensionHeader} message DimensionHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DimensionHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.DimensionHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.DimensionHeader";
                        };
    
                        return DimensionHeader;
                    })();
    
                    v1alpha.MetricHeader = (function() {
    
                        /**
                         * Properties of a MetricHeader.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IMetricHeader
                         * @property {string|null} [name] MetricHeader name
                         * @property {google.analytics.data.v1alpha.MetricType|null} [type] MetricHeader type
                         */
    
                        /**
                         * Constructs a new MetricHeader.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a MetricHeader.
                         * @implements IMetricHeader
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IMetricHeader=} [properties] Properties to set
                         */
                        function MetricHeader(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricHeader name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @instance
                         */
                        MetricHeader.prototype.name = "";
    
                        /**
                         * MetricHeader type.
                         * @member {google.analytics.data.v1alpha.MetricType} type
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @instance
                         */
                        MetricHeader.prototype.type = 0;
    
                        /**
                         * Creates a new MetricHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.MetricHeader} MetricHeader instance
                         */
                        MetricHeader.create = function create(properties) {
                            return new MetricHeader(properties);
                        };
    
                        /**
                         * Encodes the specified MetricHeader message. Does not implicitly {@link google.analytics.data.v1alpha.MetricHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricHeader} message MetricHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.MetricHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricHeader} message MetricHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.MetricHeader} MetricHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.MetricHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.MetricHeader} MetricHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetricHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.MetricHeader} MetricHeader
                         */
                        MetricHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.MetricHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.MetricHeader();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "METRIC_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_INTEGER":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_FLOAT":
                            case 2:
                                message.type = 2;
                                break;
                            case "TYPE_SECONDS":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_MILLISECONDS":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_MINUTES":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_HOURS":
                            case 7:
                                message.type = 7;
                                break;
                            case "TYPE_STANDARD":
                            case 8:
                                message.type = 8;
                                break;
                            case "TYPE_CURRENCY":
                            case 9:
                                message.type = 9;
                                break;
                            case "TYPE_FEET":
                            case 10:
                                message.type = 10;
                                break;
                            case "TYPE_MILES":
                            case 11:
                                message.type = 11;
                                break;
                            case "TYPE_METERS":
                            case 12:
                                message.type = 12;
                                break;
                            case "TYPE_KILOMETERS":
                            case 13:
                                message.type = 13;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1alpha.MetricHeader} message MetricHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "METRIC_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.analytics.data.v1alpha.MetricType[message.type] === undefined ? message.type : $root.google.analytics.data.v1alpha.MetricType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this MetricHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.MetricHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.MetricHeader";
                        };
    
                        return MetricHeader;
                    })();
    
                    v1alpha.Row = (function() {
    
                        /**
                         * Properties of a Row.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IRow
                         * @property {Array.<google.analytics.data.v1alpha.IDimensionValue>|null} [dimensionValues] Row dimensionValues
                         * @property {Array.<google.analytics.data.v1alpha.IMetricValue>|null} [metricValues] Row metricValues
                         */
    
                        /**
                         * Constructs a new Row.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a Row.
                         * @implements IRow
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IRow=} [properties] Properties to set
                         */
                        function Row(properties) {
                            this.dimensionValues = [];
                            this.metricValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Row dimensionValues.
                         * @member {Array.<google.analytics.data.v1alpha.IDimensionValue>} dimensionValues
                         * @memberof google.analytics.data.v1alpha.Row
                         * @instance
                         */
                        Row.prototype.dimensionValues = $util.emptyArray;
    
                        /**
                         * Row metricValues.
                         * @member {Array.<google.analytics.data.v1alpha.IMetricValue>} metricValues
                         * @memberof google.analytics.data.v1alpha.Row
                         * @instance
                         */
                        Row.prototype.metricValues = $util.emptyArray;
    
                        /**
                         * Creates a new Row instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {google.analytics.data.v1alpha.IRow=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.Row} Row instance
                         */
                        Row.create = function create(properties) {
                            return new Row(properties);
                        };
    
                        /**
                         * Encodes the specified Row message. Does not implicitly {@link google.analytics.data.v1alpha.Row.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {google.analytics.data.v1alpha.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionValues != null && message.dimensionValues.length)
                                for (var i = 0; i < message.dimensionValues.length; ++i)
                                    $root.google.analytics.data.v1alpha.DimensionValue.encode(message.dimensionValues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricValues != null && message.metricValues.length)
                                for (var i = 0; i < message.metricValues.length; ++i)
                                    $root.google.analytics.data.v1alpha.MetricValue.encode(message.metricValues[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Row message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.Row.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {google.analytics.data.v1alpha.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.Row();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionValues && message.dimensionValues.length))
                                            message.dimensionValues = [];
                                        message.dimensionValues.push($root.google.analytics.data.v1alpha.DimensionValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricValues && message.metricValues.length))
                                            message.metricValues = [];
                                        message.metricValues.push($root.google.analytics.data.v1alpha.MetricValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Row message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Row.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionValues != null && message.hasOwnProperty("dimensionValues")) {
                                if (!Array.isArray(message.dimensionValues))
                                    return "dimensionValues: array expected";
                                for (var i = 0; i < message.dimensionValues.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.DimensionValue.verify(message.dimensionValues[i]);
                                    if (error)
                                        return "dimensionValues." + error;
                                }
                            }
                            if (message.metricValues != null && message.hasOwnProperty("metricValues")) {
                                if (!Array.isArray(message.metricValues))
                                    return "metricValues: array expected";
                                for (var i = 0; i < message.metricValues.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.MetricValue.verify(message.metricValues[i]);
                                    if (error)
                                        return "metricValues." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Row message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.Row} Row
                         */
                        Row.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.Row)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.Row();
                            if (object.dimensionValues) {
                                if (!Array.isArray(object.dimensionValues))
                                    throw TypeError(".google.analytics.data.v1alpha.Row.dimensionValues: array expected");
                                message.dimensionValues = [];
                                for (var i = 0; i < object.dimensionValues.length; ++i) {
                                    if (typeof object.dimensionValues[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.Row.dimensionValues: object expected");
                                    message.dimensionValues[i] = $root.google.analytics.data.v1alpha.DimensionValue.fromObject(object.dimensionValues[i]);
                                }
                            }
                            if (object.metricValues) {
                                if (!Array.isArray(object.metricValues))
                                    throw TypeError(".google.analytics.data.v1alpha.Row.metricValues: array expected");
                                message.metricValues = [];
                                for (var i = 0; i < object.metricValues.length; ++i) {
                                    if (typeof object.metricValues[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.Row.metricValues: object expected");
                                    message.metricValues[i] = $root.google.analytics.data.v1alpha.MetricValue.fromObject(object.metricValues[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Row message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {google.analytics.data.v1alpha.Row} message Row
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Row.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionValues = [];
                                object.metricValues = [];
                            }
                            if (message.dimensionValues && message.dimensionValues.length) {
                                object.dimensionValues = [];
                                for (var j = 0; j < message.dimensionValues.length; ++j)
                                    object.dimensionValues[j] = $root.google.analytics.data.v1alpha.DimensionValue.toObject(message.dimensionValues[j], options);
                            }
                            if (message.metricValues && message.metricValues.length) {
                                object.metricValues = [];
                                for (var j = 0; j < message.metricValues.length; ++j)
                                    object.metricValues[j] = $root.google.analytics.data.v1alpha.MetricValue.toObject(message.metricValues[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Row to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.Row
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Row.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Row
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.Row
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Row.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.Row";
                        };
    
                        return Row;
                    })();
    
                    v1alpha.DimensionValue = (function() {
    
                        /**
                         * Properties of a DimensionValue.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IDimensionValue
                         * @property {string|null} [value] DimensionValue value
                         */
    
                        /**
                         * Constructs a new DimensionValue.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a DimensionValue.
                         * @implements IDimensionValue
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IDimensionValue=} [properties] Properties to set
                         */
                        function DimensionValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionValue value.
                         * @member {string|null|undefined} value
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @instance
                         */
                        DimensionValue.prototype.value = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DimensionValue oneValue.
                         * @member {"value"|undefined} oneValue
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @instance
                         */
                        Object.defineProperty(DimensionValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DimensionValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.DimensionValue} DimensionValue instance
                         */
                        DimensionValue.create = function create(properties) {
                            return new DimensionValue(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionValue message. Does not implicitly {@link google.analytics.data.v1alpha.DimensionValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionValue} message DimensionValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionValue message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.DimensionValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IDimensionValue} message DimensionValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.DimensionValue} DimensionValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.DimensionValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.DimensionValue} DimensionValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties.oneValue = 1;
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DimensionValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.DimensionValue} DimensionValue
                         */
                        DimensionValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.DimensionValue)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.DimensionValue();
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1alpha.DimensionValue} message DimensionValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = message.value;
                                if (options.oneofs)
                                    object.oneValue = "value";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DimensionValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.DimensionValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.DimensionValue";
                        };
    
                        return DimensionValue;
                    })();
    
                    v1alpha.MetricValue = (function() {
    
                        /**
                         * Properties of a MetricValue.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IMetricValue
                         * @property {string|null} [value] MetricValue value
                         */
    
                        /**
                         * Constructs a new MetricValue.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a MetricValue.
                         * @implements IMetricValue
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IMetricValue=} [properties] Properties to set
                         */
                        function MetricValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricValue value.
                         * @member {string|null|undefined} value
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @instance
                         */
                        MetricValue.prototype.value = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetricValue oneValue.
                         * @member {"value"|undefined} oneValue
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @instance
                         */
                        Object.defineProperty(MetricValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetricValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.MetricValue} MetricValue instance
                         */
                        MetricValue.create = function create(properties) {
                            return new MetricValue(properties);
                        };
    
                        /**
                         * Encodes the specified MetricValue message. Does not implicitly {@link google.analytics.data.v1alpha.MetricValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricValue} message MetricValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricValue message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.MetricValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {google.analytics.data.v1alpha.IMetricValue} message MetricValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.MetricValue} MetricValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.MetricValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.MetricValue} MetricValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties.oneValue = 1;
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetricValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.MetricValue} MetricValue
                         */
                        MetricValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.MetricValue)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.MetricValue();
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {google.analytics.data.v1alpha.MetricValue} message MetricValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = message.value;
                                if (options.oneofs)
                                    object.oneValue = "value";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetricValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.MetricValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.MetricValue";
                        };
    
                        return MetricValue;
                    })();
    
                    v1alpha.PropertyQuota = (function() {
    
                        /**
                         * Properties of a PropertyQuota.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IPropertyQuota
                         * @property {google.analytics.data.v1alpha.IQuotaStatus|null} [tokensPerDay] PropertyQuota tokensPerDay
                         * @property {google.analytics.data.v1alpha.IQuotaStatus|null} [tokensPerHour] PropertyQuota tokensPerHour
                         * @property {google.analytics.data.v1alpha.IQuotaStatus|null} [concurrentRequests] PropertyQuota concurrentRequests
                         * @property {google.analytics.data.v1alpha.IQuotaStatus|null} [serverErrorsPerProjectPerHour] PropertyQuota serverErrorsPerProjectPerHour
                         * @property {google.analytics.data.v1alpha.IQuotaStatus|null} [potentiallyThresholdedRequestsPerHour] PropertyQuota potentiallyThresholdedRequestsPerHour
                         */
    
                        /**
                         * Constructs a new PropertyQuota.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a PropertyQuota.
                         * @implements IPropertyQuota
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IPropertyQuota=} [properties] Properties to set
                         */
                        function PropertyQuota(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyQuota tokensPerDay.
                         * @member {google.analytics.data.v1alpha.IQuotaStatus|null|undefined} tokensPerDay
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.tokensPerDay = null;
    
                        /**
                         * PropertyQuota tokensPerHour.
                         * @member {google.analytics.data.v1alpha.IQuotaStatus|null|undefined} tokensPerHour
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.tokensPerHour = null;
    
                        /**
                         * PropertyQuota concurrentRequests.
                         * @member {google.analytics.data.v1alpha.IQuotaStatus|null|undefined} concurrentRequests
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.concurrentRequests = null;
    
                        /**
                         * PropertyQuota serverErrorsPerProjectPerHour.
                         * @member {google.analytics.data.v1alpha.IQuotaStatus|null|undefined} serverErrorsPerProjectPerHour
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.serverErrorsPerProjectPerHour = null;
    
                        /**
                         * PropertyQuota potentiallyThresholdedRequestsPerHour.
                         * @member {google.analytics.data.v1alpha.IQuotaStatus|null|undefined} potentiallyThresholdedRequestsPerHour
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.potentiallyThresholdedRequestsPerHour = null;
    
                        /**
                         * Creates a new PropertyQuota instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1alpha.IPropertyQuota=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.PropertyQuota} PropertyQuota instance
                         */
                        PropertyQuota.create = function create(properties) {
                            return new PropertyQuota(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyQuota message. Does not implicitly {@link google.analytics.data.v1alpha.PropertyQuota.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1alpha.IPropertyQuota} message PropertyQuota message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyQuota.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tokensPerDay != null && Object.hasOwnProperty.call(message, "tokensPerDay"))
                                $root.google.analytics.data.v1alpha.QuotaStatus.encode(message.tokensPerDay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.tokensPerHour != null && Object.hasOwnProperty.call(message, "tokensPerHour"))
                                $root.google.analytics.data.v1alpha.QuotaStatus.encode(message.tokensPerHour, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.concurrentRequests != null && Object.hasOwnProperty.call(message, "concurrentRequests"))
                                $root.google.analytics.data.v1alpha.QuotaStatus.encode(message.concurrentRequests, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.serverErrorsPerProjectPerHour != null && Object.hasOwnProperty.call(message, "serverErrorsPerProjectPerHour"))
                                $root.google.analytics.data.v1alpha.QuotaStatus.encode(message.serverErrorsPerProjectPerHour, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.potentiallyThresholdedRequestsPerHour != null && Object.hasOwnProperty.call(message, "potentiallyThresholdedRequestsPerHour"))
                                $root.google.analytics.data.v1alpha.QuotaStatus.encode(message.potentiallyThresholdedRequestsPerHour, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyQuota message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.PropertyQuota.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1alpha.IPropertyQuota} message PropertyQuota message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyQuota.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyQuota message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.PropertyQuota} PropertyQuota
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyQuota.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.PropertyQuota();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tokensPerDay = $root.google.analytics.data.v1alpha.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.tokensPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.concurrentRequests = $root.google.analytics.data.v1alpha.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyQuota message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.PropertyQuota} PropertyQuota
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyQuota.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyQuota message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyQuota.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tokensPerDay != null && message.hasOwnProperty("tokensPerDay")) {
                                var error = $root.google.analytics.data.v1alpha.QuotaStatus.verify(message.tokensPerDay);
                                if (error)
                                    return "tokensPerDay." + error;
                            }
                            if (message.tokensPerHour != null && message.hasOwnProperty("tokensPerHour")) {
                                var error = $root.google.analytics.data.v1alpha.QuotaStatus.verify(message.tokensPerHour);
                                if (error)
                                    return "tokensPerHour." + error;
                            }
                            if (message.concurrentRequests != null && message.hasOwnProperty("concurrentRequests")) {
                                var error = $root.google.analytics.data.v1alpha.QuotaStatus.verify(message.concurrentRequests);
                                if (error)
                                    return "concurrentRequests." + error;
                            }
                            if (message.serverErrorsPerProjectPerHour != null && message.hasOwnProperty("serverErrorsPerProjectPerHour")) {
                                var error = $root.google.analytics.data.v1alpha.QuotaStatus.verify(message.serverErrorsPerProjectPerHour);
                                if (error)
                                    return "serverErrorsPerProjectPerHour." + error;
                            }
                            if (message.potentiallyThresholdedRequestsPerHour != null && message.hasOwnProperty("potentiallyThresholdedRequestsPerHour")) {
                                var error = $root.google.analytics.data.v1alpha.QuotaStatus.verify(message.potentiallyThresholdedRequestsPerHour);
                                if (error)
                                    return "potentiallyThresholdedRequestsPerHour." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PropertyQuota message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.PropertyQuota} PropertyQuota
                         */
                        PropertyQuota.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.PropertyQuota)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.PropertyQuota();
                            if (object.tokensPerDay != null) {
                                if (typeof object.tokensPerDay !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.PropertyQuota.tokensPerDay: object expected");
                                message.tokensPerDay = $root.google.analytics.data.v1alpha.QuotaStatus.fromObject(object.tokensPerDay);
                            }
                            if (object.tokensPerHour != null) {
                                if (typeof object.tokensPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.PropertyQuota.tokensPerHour: object expected");
                                message.tokensPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.fromObject(object.tokensPerHour);
                            }
                            if (object.concurrentRequests != null) {
                                if (typeof object.concurrentRequests !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.PropertyQuota.concurrentRequests: object expected");
                                message.concurrentRequests = $root.google.analytics.data.v1alpha.QuotaStatus.fromObject(object.concurrentRequests);
                            }
                            if (object.serverErrorsPerProjectPerHour != null) {
                                if (typeof object.serverErrorsPerProjectPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.PropertyQuota.serverErrorsPerProjectPerHour: object expected");
                                message.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.fromObject(object.serverErrorsPerProjectPerHour);
                            }
                            if (object.potentiallyThresholdedRequestsPerHour != null) {
                                if (typeof object.potentiallyThresholdedRequestsPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.PropertyQuota.potentiallyThresholdedRequestsPerHour: object expected");
                                message.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.fromObject(object.potentiallyThresholdedRequestsPerHour);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyQuota message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1alpha.PropertyQuota} message PropertyQuota
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyQuota.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.tokensPerDay = null;
                                object.tokensPerHour = null;
                                object.concurrentRequests = null;
                                object.serverErrorsPerProjectPerHour = null;
                                object.potentiallyThresholdedRequestsPerHour = null;
                            }
                            if (message.tokensPerDay != null && message.hasOwnProperty("tokensPerDay"))
                                object.tokensPerDay = $root.google.analytics.data.v1alpha.QuotaStatus.toObject(message.tokensPerDay, options);
                            if (message.tokensPerHour != null && message.hasOwnProperty("tokensPerHour"))
                                object.tokensPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.toObject(message.tokensPerHour, options);
                            if (message.concurrentRequests != null && message.hasOwnProperty("concurrentRequests"))
                                object.concurrentRequests = $root.google.analytics.data.v1alpha.QuotaStatus.toObject(message.concurrentRequests, options);
                            if (message.serverErrorsPerProjectPerHour != null && message.hasOwnProperty("serverErrorsPerProjectPerHour"))
                                object.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.toObject(message.serverErrorsPerProjectPerHour, options);
                            if (message.potentiallyThresholdedRequestsPerHour != null && message.hasOwnProperty("potentiallyThresholdedRequestsPerHour"))
                                object.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1alpha.QuotaStatus.toObject(message.potentiallyThresholdedRequestsPerHour, options);
                            return object;
                        };
    
                        /**
                         * Converts this PropertyQuota to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyQuota.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyQuota
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.PropertyQuota
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyQuota.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.PropertyQuota";
                        };
    
                        return PropertyQuota;
                    })();
    
                    v1alpha.QuotaStatus = (function() {
    
                        /**
                         * Properties of a QuotaStatus.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IQuotaStatus
                         * @property {number|null} [consumed] QuotaStatus consumed
                         * @property {number|null} [remaining] QuotaStatus remaining
                         */
    
                        /**
                         * Constructs a new QuotaStatus.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a QuotaStatus.
                         * @implements IQuotaStatus
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IQuotaStatus=} [properties] Properties to set
                         */
                        function QuotaStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QuotaStatus consumed.
                         * @member {number} consumed
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @instance
                         */
                        QuotaStatus.prototype.consumed = 0;
    
                        /**
                         * QuotaStatus remaining.
                         * @member {number} remaining
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @instance
                         */
                        QuotaStatus.prototype.remaining = 0;
    
                        /**
                         * Creates a new QuotaStatus instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1alpha.IQuotaStatus=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.QuotaStatus} QuotaStatus instance
                         */
                        QuotaStatus.create = function create(properties) {
                            return new QuotaStatus(properties);
                        };
    
                        /**
                         * Encodes the specified QuotaStatus message. Does not implicitly {@link google.analytics.data.v1alpha.QuotaStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1alpha.IQuotaStatus} message QuotaStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QuotaStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumed != null && Object.hasOwnProperty.call(message, "consumed"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumed);
                            if (message.remaining != null && Object.hasOwnProperty.call(message, "remaining"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.remaining);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QuotaStatus message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.QuotaStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1alpha.IQuotaStatus} message QuotaStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QuotaStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QuotaStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.QuotaStatus} QuotaStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QuotaStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.QuotaStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.consumed = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.remaining = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QuotaStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.QuotaStatus} QuotaStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QuotaStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QuotaStatus message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QuotaStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumed != null && message.hasOwnProperty("consumed"))
                                if (!$util.isInteger(message.consumed))
                                    return "consumed: integer expected";
                            if (message.remaining != null && message.hasOwnProperty("remaining"))
                                if (!$util.isInteger(message.remaining))
                                    return "remaining: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a QuotaStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.QuotaStatus} QuotaStatus
                         */
                        QuotaStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.QuotaStatus)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.QuotaStatus();
                            if (object.consumed != null)
                                message.consumed = object.consumed | 0;
                            if (object.remaining != null)
                                message.remaining = object.remaining | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QuotaStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1alpha.QuotaStatus} message QuotaStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QuotaStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.consumed = 0;
                                object.remaining = 0;
                            }
                            if (message.consumed != null && message.hasOwnProperty("consumed"))
                                object.consumed = message.consumed;
                            if (message.remaining != null && message.hasOwnProperty("remaining"))
                                object.remaining = message.remaining;
                            return object;
                        };
    
                        /**
                         * Converts this QuotaStatus to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QuotaStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QuotaStatus
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.QuotaStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QuotaStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.QuotaStatus";
                        };
    
                        return QuotaStatus;
                    })();
    
                    v1alpha.FunnelBreakdown = (function() {
    
                        /**
                         * Properties of a FunnelBreakdown.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelBreakdown
                         * @property {google.analytics.data.v1alpha.IDimension|null} [breakdownDimension] FunnelBreakdown breakdownDimension
                         * @property {number|Long|null} [limit] FunnelBreakdown limit
                         */
    
                        /**
                         * Constructs a new FunnelBreakdown.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelBreakdown.
                         * @implements IFunnelBreakdown
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelBreakdown=} [properties] Properties to set
                         */
                        function FunnelBreakdown(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelBreakdown breakdownDimension.
                         * @member {google.analytics.data.v1alpha.IDimension|null|undefined} breakdownDimension
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @instance
                         */
                        FunnelBreakdown.prototype.breakdownDimension = null;
    
                        /**
                         * FunnelBreakdown limit.
                         * @member {number|Long|null|undefined} limit
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @instance
                         */
                        FunnelBreakdown.prototype.limit = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelBreakdown _limit.
                         * @member {"limit"|undefined} _limit
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @instance
                         */
                        Object.defineProperty(FunnelBreakdown.prototype, "_limit", {
                            get: $util.oneOfGetter($oneOfFields = ["limit"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelBreakdown instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelBreakdown=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelBreakdown} FunnelBreakdown instance
                         */
                        FunnelBreakdown.create = function create(properties) {
                            return new FunnelBreakdown(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelBreakdown message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelBreakdown.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelBreakdown} message FunnelBreakdown message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelBreakdown.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.breakdownDimension != null && Object.hasOwnProperty.call(message, "breakdownDimension"))
                                $root.google.analytics.data.v1alpha.Dimension.encode(message.breakdownDimension, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.limit);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelBreakdown message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelBreakdown.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelBreakdown} message FunnelBreakdown message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelBreakdown.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelBreakdown message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelBreakdown} FunnelBreakdown
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelBreakdown.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelBreakdown();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.breakdownDimension = $root.google.analytics.data.v1alpha.Dimension.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelBreakdown message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelBreakdown} FunnelBreakdown
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelBreakdown.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelBreakdown message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelBreakdown.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.breakdownDimension != null && message.hasOwnProperty("breakdownDimension")) {
                                var error = $root.google.analytics.data.v1alpha.Dimension.verify(message.breakdownDimension);
                                if (error)
                                    return "breakdownDimension." + error;
                            }
                            if (message.limit != null && message.hasOwnProperty("limit")) {
                                properties._limit = 1;
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelBreakdown message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelBreakdown} FunnelBreakdown
                         */
                        FunnelBreakdown.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelBreakdown)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelBreakdown();
                            if (object.breakdownDimension != null) {
                                if (typeof object.breakdownDimension !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelBreakdown.breakdownDimension: object expected");
                                message.breakdownDimension = $root.google.analytics.data.v1alpha.Dimension.fromObject(object.breakdownDimension);
                            }
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelBreakdown message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelBreakdown} message FunnelBreakdown
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelBreakdown.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.breakdownDimension = null;
                            if (message.breakdownDimension != null && message.hasOwnProperty("breakdownDimension"))
                                object.breakdownDimension = $root.google.analytics.data.v1alpha.Dimension.toObject(message.breakdownDimension, options);
                            if (message.limit != null && message.hasOwnProperty("limit")) {
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                                if (options.oneofs)
                                    object._limit = "limit";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelBreakdown to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelBreakdown.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelBreakdown
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelBreakdown
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelBreakdown.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelBreakdown";
                        };
    
                        return FunnelBreakdown;
                    })();
    
                    v1alpha.FunnelNextAction = (function() {
    
                        /**
                         * Properties of a FunnelNextAction.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelNextAction
                         * @property {google.analytics.data.v1alpha.IDimension|null} [nextActionDimension] FunnelNextAction nextActionDimension
                         * @property {number|Long|null} [limit] FunnelNextAction limit
                         */
    
                        /**
                         * Constructs a new FunnelNextAction.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelNextAction.
                         * @implements IFunnelNextAction
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelNextAction=} [properties] Properties to set
                         */
                        function FunnelNextAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelNextAction nextActionDimension.
                         * @member {google.analytics.data.v1alpha.IDimension|null|undefined} nextActionDimension
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @instance
                         */
                        FunnelNextAction.prototype.nextActionDimension = null;
    
                        /**
                         * FunnelNextAction limit.
                         * @member {number|Long|null|undefined} limit
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @instance
                         */
                        FunnelNextAction.prototype.limit = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelNextAction _limit.
                         * @member {"limit"|undefined} _limit
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @instance
                         */
                        Object.defineProperty(FunnelNextAction.prototype, "_limit", {
                            get: $util.oneOfGetter($oneOfFields = ["limit"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelNextAction instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelNextAction=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelNextAction} FunnelNextAction instance
                         */
                        FunnelNextAction.create = function create(properties) {
                            return new FunnelNextAction(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelNextAction message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelNextAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelNextAction} message FunnelNextAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelNextAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nextActionDimension != null && Object.hasOwnProperty.call(message, "nextActionDimension"))
                                $root.google.analytics.data.v1alpha.Dimension.encode(message.nextActionDimension, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.limit);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelNextAction message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelNextAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelNextAction} message FunnelNextAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelNextAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelNextAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelNextAction} FunnelNextAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelNextAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelNextAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nextActionDimension = $root.google.analytics.data.v1alpha.Dimension.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelNextAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelNextAction} FunnelNextAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelNextAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelNextAction message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelNextAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.nextActionDimension != null && message.hasOwnProperty("nextActionDimension")) {
                                var error = $root.google.analytics.data.v1alpha.Dimension.verify(message.nextActionDimension);
                                if (error)
                                    return "nextActionDimension." + error;
                            }
                            if (message.limit != null && message.hasOwnProperty("limit")) {
                                properties._limit = 1;
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelNextAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelNextAction} FunnelNextAction
                         */
                        FunnelNextAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelNextAction)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelNextAction();
                            if (object.nextActionDimension != null) {
                                if (typeof object.nextActionDimension !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelNextAction.nextActionDimension: object expected");
                                message.nextActionDimension = $root.google.analytics.data.v1alpha.Dimension.fromObject(object.nextActionDimension);
                            }
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelNextAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelNextAction} message FunnelNextAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelNextAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.nextActionDimension = null;
                            if (message.nextActionDimension != null && message.hasOwnProperty("nextActionDimension"))
                                object.nextActionDimension = $root.google.analytics.data.v1alpha.Dimension.toObject(message.nextActionDimension, options);
                            if (message.limit != null && message.hasOwnProperty("limit")) {
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                                if (options.oneofs)
                                    object._limit = "limit";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelNextAction to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelNextAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelNextAction
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelNextAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelNextAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelNextAction";
                        };
    
                        return FunnelNextAction;
                    })();
    
                    v1alpha.Funnel = (function() {
    
                        /**
                         * Properties of a Funnel.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnel
                         * @property {boolean|null} [isOpenFunnel] Funnel isOpenFunnel
                         * @property {Array.<google.analytics.data.v1alpha.IFunnelStep>|null} [steps] Funnel steps
                         */
    
                        /**
                         * Constructs a new Funnel.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a Funnel.
                         * @implements IFunnel
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnel=} [properties] Properties to set
                         */
                        function Funnel(properties) {
                            this.steps = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Funnel isOpenFunnel.
                         * @member {boolean} isOpenFunnel
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @instance
                         */
                        Funnel.prototype.isOpenFunnel = false;
    
                        /**
                         * Funnel steps.
                         * @member {Array.<google.analytics.data.v1alpha.IFunnelStep>} steps
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @instance
                         */
                        Funnel.prototype.steps = $util.emptyArray;
    
                        /**
                         * Creates a new Funnel instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnel=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.Funnel} Funnel instance
                         */
                        Funnel.create = function create(properties) {
                            return new Funnel(properties);
                        };
    
                        /**
                         * Encodes the specified Funnel message. Does not implicitly {@link google.analytics.data.v1alpha.Funnel.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnel} message Funnel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Funnel.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.isOpenFunnel != null && Object.hasOwnProperty.call(message, "isOpenFunnel"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.isOpenFunnel);
                            if (message.steps != null && message.steps.length)
                                for (var i = 0; i < message.steps.length; ++i)
                                    $root.google.analytics.data.v1alpha.FunnelStep.encode(message.steps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Funnel message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.Funnel.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnel} message Funnel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Funnel.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Funnel message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.Funnel} Funnel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Funnel.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.Funnel();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.isOpenFunnel = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.steps && message.steps.length))
                                            message.steps = [];
                                        message.steps.push($root.google.analytics.data.v1alpha.FunnelStep.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Funnel message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.Funnel} Funnel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Funnel.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Funnel message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Funnel.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.isOpenFunnel != null && message.hasOwnProperty("isOpenFunnel"))
                                if (typeof message.isOpenFunnel !== "boolean")
                                    return "isOpenFunnel: boolean expected";
                            if (message.steps != null && message.hasOwnProperty("steps")) {
                                if (!Array.isArray(message.steps))
                                    return "steps: array expected";
                                for (var i = 0; i < message.steps.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.FunnelStep.verify(message.steps[i]);
                                    if (error)
                                        return "steps." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Funnel message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.Funnel} Funnel
                         */
                        Funnel.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.Funnel)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.Funnel();
                            if (object.isOpenFunnel != null)
                                message.isOpenFunnel = Boolean(object.isOpenFunnel);
                            if (object.steps) {
                                if (!Array.isArray(object.steps))
                                    throw TypeError(".google.analytics.data.v1alpha.Funnel.steps: array expected");
                                message.steps = [];
                                for (var i = 0; i < object.steps.length; ++i) {
                                    if (typeof object.steps[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.Funnel.steps: object expected");
                                    message.steps[i] = $root.google.analytics.data.v1alpha.FunnelStep.fromObject(object.steps[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Funnel message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {google.analytics.data.v1alpha.Funnel} message Funnel
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Funnel.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.steps = [];
                            if (options.defaults)
                                object.isOpenFunnel = false;
                            if (message.isOpenFunnel != null && message.hasOwnProperty("isOpenFunnel"))
                                object.isOpenFunnel = message.isOpenFunnel;
                            if (message.steps && message.steps.length) {
                                object.steps = [];
                                for (var j = 0; j < message.steps.length; ++j)
                                    object.steps[j] = $root.google.analytics.data.v1alpha.FunnelStep.toObject(message.steps[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Funnel to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Funnel.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Funnel
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.Funnel
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Funnel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.Funnel";
                        };
    
                        return Funnel;
                    })();
    
                    v1alpha.FunnelStep = (function() {
    
                        /**
                         * Properties of a FunnelStep.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelStep
                         * @property {string|null} [name] FunnelStep name
                         * @property {boolean|null} [isDirectlyFollowedBy] FunnelStep isDirectlyFollowedBy
                         * @property {google.protobuf.IDuration|null} [withinDurationFromPriorStep] FunnelStep withinDurationFromPriorStep
                         * @property {google.analytics.data.v1alpha.IFunnelFilterExpression|null} [filterExpression] FunnelStep filterExpression
                         */
    
                        /**
                         * Constructs a new FunnelStep.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelStep.
                         * @implements IFunnelStep
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelStep=} [properties] Properties to set
                         */
                        function FunnelStep(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelStep name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         */
                        FunnelStep.prototype.name = "";
    
                        /**
                         * FunnelStep isDirectlyFollowedBy.
                         * @member {boolean} isDirectlyFollowedBy
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         */
                        FunnelStep.prototype.isDirectlyFollowedBy = false;
    
                        /**
                         * FunnelStep withinDurationFromPriorStep.
                         * @member {google.protobuf.IDuration|null|undefined} withinDurationFromPriorStep
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         */
                        FunnelStep.prototype.withinDurationFromPriorStep = null;
    
                        /**
                         * FunnelStep filterExpression.
                         * @member {google.analytics.data.v1alpha.IFunnelFilterExpression|null|undefined} filterExpression
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         */
                        FunnelStep.prototype.filterExpression = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelStep _withinDurationFromPriorStep.
                         * @member {"withinDurationFromPriorStep"|undefined} _withinDurationFromPriorStep
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         */
                        Object.defineProperty(FunnelStep.prototype, "_withinDurationFromPriorStep", {
                            get: $util.oneOfGetter($oneOfFields = ["withinDurationFromPriorStep"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelStep instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelStep=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelStep} FunnelStep instance
                         */
                        FunnelStep.create = function create(properties) {
                            return new FunnelStep(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelStep message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelStep.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelStep} message FunnelStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelStep.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.isDirectlyFollowedBy != null && Object.hasOwnProperty.call(message, "isDirectlyFollowedBy"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isDirectlyFollowedBy);
                            if (message.withinDurationFromPriorStep != null && Object.hasOwnProperty.call(message, "withinDurationFromPriorStep"))
                                $root.google.protobuf.Duration.encode(message.withinDurationFromPriorStep, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.filterExpression != null && Object.hasOwnProperty.call(message, "filterExpression"))
                                $root.google.analytics.data.v1alpha.FunnelFilterExpression.encode(message.filterExpression, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelStep message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelStep.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelStep} message FunnelStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelStep.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelStep message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelStep} FunnelStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelStep.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelStep();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.isDirectlyFollowedBy = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.withinDurationFromPriorStep = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.filterExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelStep message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelStep} FunnelStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelStep.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelStep message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelStep.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.isDirectlyFollowedBy != null && message.hasOwnProperty("isDirectlyFollowedBy"))
                                if (typeof message.isDirectlyFollowedBy !== "boolean")
                                    return "isDirectlyFollowedBy: boolean expected";
                            if (message.withinDurationFromPriorStep != null && message.hasOwnProperty("withinDurationFromPriorStep")) {
                                properties._withinDurationFromPriorStep = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.withinDurationFromPriorStep);
                                    if (error)
                                        return "withinDurationFromPriorStep." + error;
                                }
                            }
                            if (message.filterExpression != null && message.hasOwnProperty("filterExpression")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelFilterExpression.verify(message.filterExpression);
                                if (error)
                                    return "filterExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelStep message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelStep} FunnelStep
                         */
                        FunnelStep.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelStep)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelStep();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.isDirectlyFollowedBy != null)
                                message.isDirectlyFollowedBy = Boolean(object.isDirectlyFollowedBy);
                            if (object.withinDurationFromPriorStep != null) {
                                if (typeof object.withinDurationFromPriorStep !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelStep.withinDurationFromPriorStep: object expected");
                                message.withinDurationFromPriorStep = $root.google.protobuf.Duration.fromObject(object.withinDurationFromPriorStep);
                            }
                            if (object.filterExpression != null) {
                                if (typeof object.filterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelStep.filterExpression: object expected");
                                message.filterExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.fromObject(object.filterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelStep message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelStep} message FunnelStep
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelStep.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.isDirectlyFollowedBy = false;
                                object.filterExpression = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.isDirectlyFollowedBy != null && message.hasOwnProperty("isDirectlyFollowedBy"))
                                object.isDirectlyFollowedBy = message.isDirectlyFollowedBy;
                            if (message.withinDurationFromPriorStep != null && message.hasOwnProperty("withinDurationFromPriorStep")) {
                                object.withinDurationFromPriorStep = $root.google.protobuf.Duration.toObject(message.withinDurationFromPriorStep, options);
                                if (options.oneofs)
                                    object._withinDurationFromPriorStep = "withinDurationFromPriorStep";
                            }
                            if (message.filterExpression != null && message.hasOwnProperty("filterExpression"))
                                object.filterExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.toObject(message.filterExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this FunnelStep to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelStep.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelStep
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelStep
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelStep.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelStep";
                        };
    
                        return FunnelStep;
                    })();
    
                    v1alpha.FunnelSubReport = (function() {
    
                        /**
                         * Properties of a FunnelSubReport.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelSubReport
                         * @property {Array.<google.analytics.data.v1alpha.IDimensionHeader>|null} [dimensionHeaders] FunnelSubReport dimensionHeaders
                         * @property {Array.<google.analytics.data.v1alpha.IMetricHeader>|null} [metricHeaders] FunnelSubReport metricHeaders
                         * @property {Array.<google.analytics.data.v1alpha.IRow>|null} [rows] FunnelSubReport rows
                         * @property {google.analytics.data.v1alpha.IFunnelResponseMetadata|null} [metadata] FunnelSubReport metadata
                         */
    
                        /**
                         * Constructs a new FunnelSubReport.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelSubReport.
                         * @implements IFunnelSubReport
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelSubReport=} [properties] Properties to set
                         */
                        function FunnelSubReport(properties) {
                            this.dimensionHeaders = [];
                            this.metricHeaders = [];
                            this.rows = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelSubReport dimensionHeaders.
                         * @member {Array.<google.analytics.data.v1alpha.IDimensionHeader>} dimensionHeaders
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @instance
                         */
                        FunnelSubReport.prototype.dimensionHeaders = $util.emptyArray;
    
                        /**
                         * FunnelSubReport metricHeaders.
                         * @member {Array.<google.analytics.data.v1alpha.IMetricHeader>} metricHeaders
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @instance
                         */
                        FunnelSubReport.prototype.metricHeaders = $util.emptyArray;
    
                        /**
                         * FunnelSubReport rows.
                         * @member {Array.<google.analytics.data.v1alpha.IRow>} rows
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @instance
                         */
                        FunnelSubReport.prototype.rows = $util.emptyArray;
    
                        /**
                         * FunnelSubReport metadata.
                         * @member {google.analytics.data.v1alpha.IFunnelResponseMetadata|null|undefined} metadata
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @instance
                         */
                        FunnelSubReport.prototype.metadata = null;
    
                        /**
                         * Creates a new FunnelSubReport instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelSubReport=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelSubReport} FunnelSubReport instance
                         */
                        FunnelSubReport.create = function create(properties) {
                            return new FunnelSubReport(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelSubReport message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelSubReport.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelSubReport} message FunnelSubReport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelSubReport.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionHeaders != null && message.dimensionHeaders.length)
                                for (var i = 0; i < message.dimensionHeaders.length; ++i)
                                    $root.google.analytics.data.v1alpha.DimensionHeader.encode(message.dimensionHeaders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricHeaders != null && message.metricHeaders.length)
                                for (var i = 0; i < message.metricHeaders.length; ++i)
                                    $root.google.analytics.data.v1alpha.MetricHeader.encode(message.metricHeaders[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rows != null && message.rows.length)
                                for (var i = 0; i < message.rows.length; ++i)
                                    $root.google.analytics.data.v1alpha.Row.encode(message.rows[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.analytics.data.v1alpha.FunnelResponseMetadata.encode(message.metadata, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelSubReport message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelSubReport.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelSubReport} message FunnelSubReport message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelSubReport.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelSubReport message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelSubReport} FunnelSubReport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelSubReport.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelSubReport();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionHeaders && message.dimensionHeaders.length))
                                            message.dimensionHeaders = [];
                                        message.dimensionHeaders.push($root.google.analytics.data.v1alpha.DimensionHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricHeaders && message.metricHeaders.length))
                                            message.metricHeaders = [];
                                        message.metricHeaders.push($root.google.analytics.data.v1alpha.MetricHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.rows && message.rows.length))
                                            message.rows = [];
                                        message.rows.push($root.google.analytics.data.v1alpha.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.metadata = $root.google.analytics.data.v1alpha.FunnelResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelSubReport message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelSubReport} FunnelSubReport
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelSubReport.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelSubReport message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelSubReport.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionHeaders != null && message.hasOwnProperty("dimensionHeaders")) {
                                if (!Array.isArray(message.dimensionHeaders))
                                    return "dimensionHeaders: array expected";
                                for (var i = 0; i < message.dimensionHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.DimensionHeader.verify(message.dimensionHeaders[i]);
                                    if (error)
                                        return "dimensionHeaders." + error;
                                }
                            }
                            if (message.metricHeaders != null && message.hasOwnProperty("metricHeaders")) {
                                if (!Array.isArray(message.metricHeaders))
                                    return "metricHeaders: array expected";
                                for (var i = 0; i < message.metricHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.MetricHeader.verify(message.metricHeaders[i]);
                                    if (error)
                                        return "metricHeaders." + error;
                                }
                            }
                            if (message.rows != null && message.hasOwnProperty("rows")) {
                                if (!Array.isArray(message.rows))
                                    return "rows: array expected";
                                for (var i = 0; i < message.rows.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.Row.verify(message.rows[i]);
                                    if (error)
                                        return "rows." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.analytics.data.v1alpha.FunnelResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelSubReport message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelSubReport} FunnelSubReport
                         */
                        FunnelSubReport.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelSubReport)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelSubReport();
                            if (object.dimensionHeaders) {
                                if (!Array.isArray(object.dimensionHeaders))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.dimensionHeaders: array expected");
                                message.dimensionHeaders = [];
                                for (var i = 0; i < object.dimensionHeaders.length; ++i) {
                                    if (typeof object.dimensionHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.dimensionHeaders: object expected");
                                    message.dimensionHeaders[i] = $root.google.analytics.data.v1alpha.DimensionHeader.fromObject(object.dimensionHeaders[i]);
                                }
                            }
                            if (object.metricHeaders) {
                                if (!Array.isArray(object.metricHeaders))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.metricHeaders: array expected");
                                message.metricHeaders = [];
                                for (var i = 0; i < object.metricHeaders.length; ++i) {
                                    if (typeof object.metricHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.metricHeaders: object expected");
                                    message.metricHeaders[i] = $root.google.analytics.data.v1alpha.MetricHeader.fromObject(object.metricHeaders[i]);
                                }
                            }
                            if (object.rows) {
                                if (!Array.isArray(object.rows))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.rows: array expected");
                                message.rows = [];
                                for (var i = 0; i < object.rows.length; ++i) {
                                    if (typeof object.rows[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.rows: object expected");
                                    message.rows[i] = $root.google.analytics.data.v1alpha.Row.fromObject(object.rows[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelSubReport.metadata: object expected");
                                message.metadata = $root.google.analytics.data.v1alpha.FunnelResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelSubReport message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelSubReport} message FunnelSubReport
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelSubReport.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionHeaders = [];
                                object.metricHeaders = [];
                                object.rows = [];
                            }
                            if (options.defaults)
                                object.metadata = null;
                            if (message.dimensionHeaders && message.dimensionHeaders.length) {
                                object.dimensionHeaders = [];
                                for (var j = 0; j < message.dimensionHeaders.length; ++j)
                                    object.dimensionHeaders[j] = $root.google.analytics.data.v1alpha.DimensionHeader.toObject(message.dimensionHeaders[j], options);
                            }
                            if (message.metricHeaders && message.metricHeaders.length) {
                                object.metricHeaders = [];
                                for (var j = 0; j < message.metricHeaders.length; ++j)
                                    object.metricHeaders[j] = $root.google.analytics.data.v1alpha.MetricHeader.toObject(message.metricHeaders[j], options);
                            }
                            if (message.rows && message.rows.length) {
                                object.rows = [];
                                for (var j = 0; j < message.rows.length; ++j)
                                    object.rows[j] = $root.google.analytics.data.v1alpha.Row.toObject(message.rows[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.analytics.data.v1alpha.FunnelResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this FunnelSubReport to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelSubReport.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelSubReport
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelSubReport
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelSubReport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelSubReport";
                        };
    
                        return FunnelSubReport;
                    })();
    
                    v1alpha.UserSegment = (function() {
    
                        /**
                         * Properties of a UserSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSegment
                         * @property {google.analytics.data.v1alpha.IUserSegmentCriteria|null} [userInclusionCriteria] UserSegment userInclusionCriteria
                         * @property {google.analytics.data.v1alpha.IUserSegmentExclusion|null} [exclusion] UserSegment exclusion
                         */
    
                        /**
                         * Constructs a new UserSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSegment.
                         * @implements IUserSegment
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSegment=} [properties] Properties to set
                         */
                        function UserSegment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSegment userInclusionCriteria.
                         * @member {google.analytics.data.v1alpha.IUserSegmentCriteria|null|undefined} userInclusionCriteria
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @instance
                         */
                        UserSegment.prototype.userInclusionCriteria = null;
    
                        /**
                         * UserSegment exclusion.
                         * @member {google.analytics.data.v1alpha.IUserSegmentExclusion|null|undefined} exclusion
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @instance
                         */
                        UserSegment.prototype.exclusion = null;
    
                        /**
                         * Creates a new UserSegment instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegment=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSegment} UserSegment instance
                         */
                        UserSegment.create = function create(properties) {
                            return new UserSegment(properties);
                        };
    
                        /**
                         * Encodes the specified UserSegment message. Does not implicitly {@link google.analytics.data.v1alpha.UserSegment.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegment} message UserSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userInclusionCriteria != null && Object.hasOwnProperty.call(message, "userInclusionCriteria"))
                                $root.google.analytics.data.v1alpha.UserSegmentCriteria.encode(message.userInclusionCriteria, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.exclusion != null && Object.hasOwnProperty.call(message, "exclusion"))
                                $root.google.analytics.data.v1alpha.UserSegmentExclusion.encode(message.exclusion, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSegment message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSegment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegment} message UserSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSegment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSegment} UserSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSegment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.userInclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.exclusion = $root.google.analytics.data.v1alpha.UserSegmentExclusion.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSegment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSegment} UserSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSegment message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSegment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userInclusionCriteria != null && message.hasOwnProperty("userInclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.UserSegmentCriteria.verify(message.userInclusionCriteria);
                                if (error)
                                    return "userInclusionCriteria." + error;
                            }
                            if (message.exclusion != null && message.hasOwnProperty("exclusion")) {
                                var error = $root.google.analytics.data.v1alpha.UserSegmentExclusion.verify(message.exclusion);
                                if (error)
                                    return "exclusion." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSegment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSegment} UserSegment
                         */
                        UserSegment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSegment)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSegment();
                            if (object.userInclusionCriteria != null) {
                                if (typeof object.userInclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegment.userInclusionCriteria: object expected");
                                message.userInclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.fromObject(object.userInclusionCriteria);
                            }
                            if (object.exclusion != null) {
                                if (typeof object.exclusion !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegment.exclusion: object expected");
                                message.exclusion = $root.google.analytics.data.v1alpha.UserSegmentExclusion.fromObject(object.exclusion);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSegment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSegment} message UserSegment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSegment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.userInclusionCriteria = null;
                                object.exclusion = null;
                            }
                            if (message.userInclusionCriteria != null && message.hasOwnProperty("userInclusionCriteria"))
                                object.userInclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.toObject(message.userInclusionCriteria, options);
                            if (message.exclusion != null && message.hasOwnProperty("exclusion"))
                                object.exclusion = $root.google.analytics.data.v1alpha.UserSegmentExclusion.toObject(message.exclusion, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserSegment to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSegment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSegment
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSegment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSegment";
                        };
    
                        return UserSegment;
                    })();
    
                    v1alpha.UserSegmentCriteria = (function() {
    
                        /**
                         * Properties of a UserSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSegmentCriteria
                         * @property {Array.<google.analytics.data.v1alpha.IUserSegmentConditionGroup>|null} [andConditionGroups] UserSegmentCriteria andConditionGroups
                         * @property {Array.<google.analytics.data.v1alpha.IUserSegmentSequenceGroup>|null} [andSequenceGroups] UserSegmentCriteria andSequenceGroups
                         */
    
                        /**
                         * Constructs a new UserSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSegmentCriteria.
                         * @implements IUserSegmentCriteria
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSegmentCriteria=} [properties] Properties to set
                         */
                        function UserSegmentCriteria(properties) {
                            this.andConditionGroups = [];
                            this.andSequenceGroups = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSegmentCriteria andConditionGroups.
                         * @member {Array.<google.analytics.data.v1alpha.IUserSegmentConditionGroup>} andConditionGroups
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @instance
                         */
                        UserSegmentCriteria.prototype.andConditionGroups = $util.emptyArray;
    
                        /**
                         * UserSegmentCriteria andSequenceGroups.
                         * @member {Array.<google.analytics.data.v1alpha.IUserSegmentSequenceGroup>} andSequenceGroups
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @instance
                         */
                        UserSegmentCriteria.prototype.andSequenceGroups = $util.emptyArray;
    
                        /**
                         * Creates a new UserSegmentCriteria instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentCriteria=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSegmentCriteria} UserSegmentCriteria instance
                         */
                        UserSegmentCriteria.create = function create(properties) {
                            return new UserSegmentCriteria(properties);
                        };
    
                        /**
                         * Encodes the specified UserSegmentCriteria message. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentCriteria.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentCriteria} message UserSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentCriteria.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andConditionGroups != null && message.andConditionGroups.length)
                                for (var i = 0; i < message.andConditionGroups.length; ++i)
                                    $root.google.analytics.data.v1alpha.UserSegmentConditionGroup.encode(message.andConditionGroups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.andSequenceGroups != null && message.andSequenceGroups.length)
                                for (var i = 0; i < message.andSequenceGroups.length; ++i)
                                    $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup.encode(message.andSequenceGroups[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSegmentCriteria message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentCriteria.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentCriteria} message UserSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentCriteria.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSegmentCriteria message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSegmentCriteria} UserSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentCriteria.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSegmentCriteria();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.andConditionGroups && message.andConditionGroups.length))
                                            message.andConditionGroups = [];
                                        message.andConditionGroups.push($root.google.analytics.data.v1alpha.UserSegmentConditionGroup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.andSequenceGroups && message.andSequenceGroups.length))
                                            message.andSequenceGroups = [];
                                        message.andSequenceGroups.push($root.google.analytics.data.v1alpha.UserSegmentSequenceGroup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSegmentCriteria message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSegmentCriteria} UserSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentCriteria.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSegmentCriteria message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSegmentCriteria.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.andConditionGroups != null && message.hasOwnProperty("andConditionGroups")) {
                                if (!Array.isArray(message.andConditionGroups))
                                    return "andConditionGroups: array expected";
                                for (var i = 0; i < message.andConditionGroups.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.UserSegmentConditionGroup.verify(message.andConditionGroups[i]);
                                    if (error)
                                        return "andConditionGroups." + error;
                                }
                            }
                            if (message.andSequenceGroups != null && message.hasOwnProperty("andSequenceGroups")) {
                                if (!Array.isArray(message.andSequenceGroups))
                                    return "andSequenceGroups: array expected";
                                for (var i = 0; i < message.andSequenceGroups.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup.verify(message.andSequenceGroups[i]);
                                    if (error)
                                        return "andSequenceGroups." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSegmentCriteria message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSegmentCriteria} UserSegmentCriteria
                         */
                        UserSegmentCriteria.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSegmentCriteria)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSegmentCriteria();
                            if (object.andConditionGroups) {
                                if (!Array.isArray(object.andConditionGroups))
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentCriteria.andConditionGroups: array expected");
                                message.andConditionGroups = [];
                                for (var i = 0; i < object.andConditionGroups.length; ++i) {
                                    if (typeof object.andConditionGroups[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.UserSegmentCriteria.andConditionGroups: object expected");
                                    message.andConditionGroups[i] = $root.google.analytics.data.v1alpha.UserSegmentConditionGroup.fromObject(object.andConditionGroups[i]);
                                }
                            }
                            if (object.andSequenceGroups) {
                                if (!Array.isArray(object.andSequenceGroups))
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentCriteria.andSequenceGroups: array expected");
                                message.andSequenceGroups = [];
                                for (var i = 0; i < object.andSequenceGroups.length; ++i) {
                                    if (typeof object.andSequenceGroups[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.UserSegmentCriteria.andSequenceGroups: object expected");
                                    message.andSequenceGroups[i] = $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup.fromObject(object.andSequenceGroups[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSegmentCriteria message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSegmentCriteria} message UserSegmentCriteria
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSegmentCriteria.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.andConditionGroups = [];
                                object.andSequenceGroups = [];
                            }
                            if (message.andConditionGroups && message.andConditionGroups.length) {
                                object.andConditionGroups = [];
                                for (var j = 0; j < message.andConditionGroups.length; ++j)
                                    object.andConditionGroups[j] = $root.google.analytics.data.v1alpha.UserSegmentConditionGroup.toObject(message.andConditionGroups[j], options);
                            }
                            if (message.andSequenceGroups && message.andSequenceGroups.length) {
                                object.andSequenceGroups = [];
                                for (var j = 0; j < message.andSequenceGroups.length; ++j)
                                    object.andSequenceGroups[j] = $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup.toObject(message.andSequenceGroups[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UserSegmentCriteria to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSegmentCriteria.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSegmentCriteria
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSegmentCriteria
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSegmentCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSegmentCriteria";
                        };
    
                        return UserSegmentCriteria;
                    })();
    
                    /**
                     * UserCriteriaScoping enum.
                     * @name google.analytics.data.v1alpha.UserCriteriaScoping
                     * @enum {number}
                     * @property {number} USER_CRITERIA_SCOPING_UNSPECIFIED=0 USER_CRITERIA_SCOPING_UNSPECIFIED value
                     * @property {number} USER_CRITERIA_WITHIN_SAME_EVENT=1 USER_CRITERIA_WITHIN_SAME_EVENT value
                     * @property {number} USER_CRITERIA_WITHIN_SAME_SESSION=2 USER_CRITERIA_WITHIN_SAME_SESSION value
                     * @property {number} USER_CRITERIA_ACROSS_ALL_SESSIONS=3 USER_CRITERIA_ACROSS_ALL_SESSIONS value
                     */
                    v1alpha.UserCriteriaScoping = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "USER_CRITERIA_SCOPING_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "USER_CRITERIA_WITHIN_SAME_EVENT"] = 1;
                        values[valuesById[2] = "USER_CRITERIA_WITHIN_SAME_SESSION"] = 2;
                        values[valuesById[3] = "USER_CRITERIA_ACROSS_ALL_SESSIONS"] = 3;
                        return values;
                    })();
    
                    v1alpha.UserSegmentConditionGroup = (function() {
    
                        /**
                         * Properties of a UserSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSegmentConditionGroup
                         * @property {google.analytics.data.v1alpha.UserCriteriaScoping|null} [conditionScoping] UserSegmentConditionGroup conditionScoping
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpression|null} [segmentFilterExpression] UserSegmentConditionGroup segmentFilterExpression
                         */
    
                        /**
                         * Constructs a new UserSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSegmentConditionGroup.
                         * @implements IUserSegmentConditionGroup
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSegmentConditionGroup=} [properties] Properties to set
                         */
                        function UserSegmentConditionGroup(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSegmentConditionGroup conditionScoping.
                         * @member {google.analytics.data.v1alpha.UserCriteriaScoping} conditionScoping
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @instance
                         */
                        UserSegmentConditionGroup.prototype.conditionScoping = 0;
    
                        /**
                         * UserSegmentConditionGroup segmentFilterExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpression|null|undefined} segmentFilterExpression
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @instance
                         */
                        UserSegmentConditionGroup.prototype.segmentFilterExpression = null;
    
                        /**
                         * Creates a new UserSegmentConditionGroup instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentConditionGroup=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSegmentConditionGroup} UserSegmentConditionGroup instance
                         */
                        UserSegmentConditionGroup.create = function create(properties) {
                            return new UserSegmentConditionGroup(properties);
                        };
    
                        /**
                         * Encodes the specified UserSegmentConditionGroup message. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentConditionGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentConditionGroup} message UserSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentConditionGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.conditionScoping != null && Object.hasOwnProperty.call(message, "conditionScoping"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.conditionScoping);
                            if (message.segmentFilterExpression != null && Object.hasOwnProperty.call(message, "segmentFilterExpression"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.segmentFilterExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSegmentConditionGroup message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentConditionGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentConditionGroup} message UserSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentConditionGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSegmentConditionGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSegmentConditionGroup} UserSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentConditionGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSegmentConditionGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.conditionScoping = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSegmentConditionGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSegmentConditionGroup} UserSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentConditionGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSegmentConditionGroup message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSegmentConditionGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                switch (message.conditionScoping) {
                                default:
                                    return "conditionScoping: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.segmentFilterExpression);
                                if (error)
                                    return "segmentFilterExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSegmentConditionGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSegmentConditionGroup} UserSegmentConditionGroup
                         */
                        UserSegmentConditionGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSegmentConditionGroup)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSegmentConditionGroup();
                            switch (object.conditionScoping) {
                            default:
                                if (typeof object.conditionScoping === "number") {
                                    message.conditionScoping = object.conditionScoping;
                                    break;
                                }
                                break;
                            case "USER_CRITERIA_SCOPING_UNSPECIFIED":
                            case 0:
                                message.conditionScoping = 0;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_EVENT":
                            case 1:
                                message.conditionScoping = 1;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_SESSION":
                            case 2:
                                message.conditionScoping = 2;
                                break;
                            case "USER_CRITERIA_ACROSS_ALL_SESSIONS":
                            case 3:
                                message.conditionScoping = 3;
                                break;
                            }
                            if (object.segmentFilterExpression != null) {
                                if (typeof object.segmentFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentConditionGroup.segmentFilterExpression: object expected");
                                message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.segmentFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSegmentConditionGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSegmentConditionGroup} message UserSegmentConditionGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSegmentConditionGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.conditionScoping = options.enums === String ? "USER_CRITERIA_SCOPING_UNSPECIFIED" : 0;
                                object.segmentFilterExpression = null;
                            }
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                object.conditionScoping = options.enums === String ? $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.conditionScoping] === undefined ? message.conditionScoping : $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.conditionScoping] : message.conditionScoping;
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression"))
                                object.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.segmentFilterExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserSegmentConditionGroup to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSegmentConditionGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSegmentConditionGroup
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSegmentConditionGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSegmentConditionGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSegmentConditionGroup";
                        };
    
                        return UserSegmentConditionGroup;
                    })();
    
                    v1alpha.UserSegmentSequenceGroup = (function() {
    
                        /**
                         * Properties of a UserSegmentSequenceGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSegmentSequenceGroup
                         * @property {google.analytics.data.v1alpha.UserCriteriaScoping|null} [sequenceScoping] UserSegmentSequenceGroup sequenceScoping
                         * @property {google.protobuf.IDuration|null} [sequenceMaximumDuration] UserSegmentSequenceGroup sequenceMaximumDuration
                         * @property {Array.<google.analytics.data.v1alpha.IUserSequenceStep>|null} [userSequenceSteps] UserSegmentSequenceGroup userSequenceSteps
                         */
    
                        /**
                         * Constructs a new UserSegmentSequenceGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSegmentSequenceGroup.
                         * @implements IUserSegmentSequenceGroup
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSegmentSequenceGroup=} [properties] Properties to set
                         */
                        function UserSegmentSequenceGroup(properties) {
                            this.userSequenceSteps = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSegmentSequenceGroup sequenceScoping.
                         * @member {google.analytics.data.v1alpha.UserCriteriaScoping} sequenceScoping
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @instance
                         */
                        UserSegmentSequenceGroup.prototype.sequenceScoping = 0;
    
                        /**
                         * UserSegmentSequenceGroup sequenceMaximumDuration.
                         * @member {google.protobuf.IDuration|null|undefined} sequenceMaximumDuration
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @instance
                         */
                        UserSegmentSequenceGroup.prototype.sequenceMaximumDuration = null;
    
                        /**
                         * UserSegmentSequenceGroup userSequenceSteps.
                         * @member {Array.<google.analytics.data.v1alpha.IUserSequenceStep>} userSequenceSteps
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @instance
                         */
                        UserSegmentSequenceGroup.prototype.userSequenceSteps = $util.emptyArray;
    
                        /**
                         * Creates a new UserSegmentSequenceGroup instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentSequenceGroup=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSegmentSequenceGroup} UserSegmentSequenceGroup instance
                         */
                        UserSegmentSequenceGroup.create = function create(properties) {
                            return new UserSegmentSequenceGroup(properties);
                        };
    
                        /**
                         * Encodes the specified UserSegmentSequenceGroup message. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentSequenceGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentSequenceGroup} message UserSegmentSequenceGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentSequenceGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sequenceScoping != null && Object.hasOwnProperty.call(message, "sequenceScoping"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sequenceScoping);
                            if (message.sequenceMaximumDuration != null && Object.hasOwnProperty.call(message, "sequenceMaximumDuration"))
                                $root.google.protobuf.Duration.encode(message.sequenceMaximumDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.userSequenceSteps != null && message.userSequenceSteps.length)
                                for (var i = 0; i < message.userSequenceSteps.length; ++i)
                                    $root.google.analytics.data.v1alpha.UserSequenceStep.encode(message.userSequenceSteps[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSegmentSequenceGroup message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentSequenceGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentSequenceGroup} message UserSegmentSequenceGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentSequenceGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSegmentSequenceGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSegmentSequenceGroup} UserSegmentSequenceGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentSequenceGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sequenceScoping = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.sequenceMaximumDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.userSequenceSteps && message.userSequenceSteps.length))
                                            message.userSequenceSteps = [];
                                        message.userSequenceSteps.push($root.google.analytics.data.v1alpha.UserSequenceStep.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSegmentSequenceGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSegmentSequenceGroup} UserSegmentSequenceGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentSequenceGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSegmentSequenceGroup message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSegmentSequenceGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sequenceScoping != null && message.hasOwnProperty("sequenceScoping"))
                                switch (message.sequenceScoping) {
                                default:
                                    return "sequenceScoping: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.sequenceMaximumDuration != null && message.hasOwnProperty("sequenceMaximumDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.sequenceMaximumDuration);
                                if (error)
                                    return "sequenceMaximumDuration." + error;
                            }
                            if (message.userSequenceSteps != null && message.hasOwnProperty("userSequenceSteps")) {
                                if (!Array.isArray(message.userSequenceSteps))
                                    return "userSequenceSteps: array expected";
                                for (var i = 0; i < message.userSequenceSteps.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.UserSequenceStep.verify(message.userSequenceSteps[i]);
                                    if (error)
                                        return "userSequenceSteps." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSegmentSequenceGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSegmentSequenceGroup} UserSegmentSequenceGroup
                         */
                        UserSegmentSequenceGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSegmentSequenceGroup();
                            switch (object.sequenceScoping) {
                            default:
                                if (typeof object.sequenceScoping === "number") {
                                    message.sequenceScoping = object.sequenceScoping;
                                    break;
                                }
                                break;
                            case "USER_CRITERIA_SCOPING_UNSPECIFIED":
                            case 0:
                                message.sequenceScoping = 0;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_EVENT":
                            case 1:
                                message.sequenceScoping = 1;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_SESSION":
                            case 2:
                                message.sequenceScoping = 2;
                                break;
                            case "USER_CRITERIA_ACROSS_ALL_SESSIONS":
                            case 3:
                                message.sequenceScoping = 3;
                                break;
                            }
                            if (object.sequenceMaximumDuration != null) {
                                if (typeof object.sequenceMaximumDuration !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentSequenceGroup.sequenceMaximumDuration: object expected");
                                message.sequenceMaximumDuration = $root.google.protobuf.Duration.fromObject(object.sequenceMaximumDuration);
                            }
                            if (object.userSequenceSteps) {
                                if (!Array.isArray(object.userSequenceSteps))
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentSequenceGroup.userSequenceSteps: array expected");
                                message.userSequenceSteps = [];
                                for (var i = 0; i < object.userSequenceSteps.length; ++i) {
                                    if (typeof object.userSequenceSteps[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.UserSegmentSequenceGroup.userSequenceSteps: object expected");
                                    message.userSequenceSteps[i] = $root.google.analytics.data.v1alpha.UserSequenceStep.fromObject(object.userSequenceSteps[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSegmentSequenceGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSegmentSequenceGroup} message UserSegmentSequenceGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSegmentSequenceGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.userSequenceSteps = [];
                            if (options.defaults) {
                                object.sequenceScoping = options.enums === String ? "USER_CRITERIA_SCOPING_UNSPECIFIED" : 0;
                                object.sequenceMaximumDuration = null;
                            }
                            if (message.sequenceScoping != null && message.hasOwnProperty("sequenceScoping"))
                                object.sequenceScoping = options.enums === String ? $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.sequenceScoping] === undefined ? message.sequenceScoping : $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.sequenceScoping] : message.sequenceScoping;
                            if (message.sequenceMaximumDuration != null && message.hasOwnProperty("sequenceMaximumDuration"))
                                object.sequenceMaximumDuration = $root.google.protobuf.Duration.toObject(message.sequenceMaximumDuration, options);
                            if (message.userSequenceSteps && message.userSequenceSteps.length) {
                                object.userSequenceSteps = [];
                                for (var j = 0; j < message.userSequenceSteps.length; ++j)
                                    object.userSequenceSteps[j] = $root.google.analytics.data.v1alpha.UserSequenceStep.toObject(message.userSequenceSteps[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UserSegmentSequenceGroup to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSegmentSequenceGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSegmentSequenceGroup
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSegmentSequenceGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSegmentSequenceGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSegmentSequenceGroup";
                        };
    
                        return UserSegmentSequenceGroup;
                    })();
    
                    v1alpha.UserSequenceStep = (function() {
    
                        /**
                         * Properties of a UserSequenceStep.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSequenceStep
                         * @property {boolean|null} [isDirectlyFollowedBy] UserSequenceStep isDirectlyFollowedBy
                         * @property {google.analytics.data.v1alpha.UserCriteriaScoping|null} [stepScoping] UserSequenceStep stepScoping
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpression|null} [segmentFilterExpression] UserSequenceStep segmentFilterExpression
                         */
    
                        /**
                         * Constructs a new UserSequenceStep.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSequenceStep.
                         * @implements IUserSequenceStep
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSequenceStep=} [properties] Properties to set
                         */
                        function UserSequenceStep(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSequenceStep isDirectlyFollowedBy.
                         * @member {boolean} isDirectlyFollowedBy
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @instance
                         */
                        UserSequenceStep.prototype.isDirectlyFollowedBy = false;
    
                        /**
                         * UserSequenceStep stepScoping.
                         * @member {google.analytics.data.v1alpha.UserCriteriaScoping} stepScoping
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @instance
                         */
                        UserSequenceStep.prototype.stepScoping = 0;
    
                        /**
                         * UserSequenceStep segmentFilterExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpression|null|undefined} segmentFilterExpression
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @instance
                         */
                        UserSequenceStep.prototype.segmentFilterExpression = null;
    
                        /**
                         * Creates a new UserSequenceStep instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSequenceStep=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSequenceStep} UserSequenceStep instance
                         */
                        UserSequenceStep.create = function create(properties) {
                            return new UserSequenceStep(properties);
                        };
    
                        /**
                         * Encodes the specified UserSequenceStep message. Does not implicitly {@link google.analytics.data.v1alpha.UserSequenceStep.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSequenceStep} message UserSequenceStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSequenceStep.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.isDirectlyFollowedBy != null && Object.hasOwnProperty.call(message, "isDirectlyFollowedBy"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.isDirectlyFollowedBy);
                            if (message.stepScoping != null && Object.hasOwnProperty.call(message, "stepScoping"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepScoping);
                            if (message.segmentFilterExpression != null && Object.hasOwnProperty.call(message, "segmentFilterExpression"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.segmentFilterExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSequenceStep message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSequenceStep.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSequenceStep} message UserSequenceStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSequenceStep.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSequenceStep message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSequenceStep} UserSequenceStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSequenceStep.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSequenceStep();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.isDirectlyFollowedBy = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.stepScoping = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSequenceStep message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSequenceStep} UserSequenceStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSequenceStep.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSequenceStep message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSequenceStep.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.isDirectlyFollowedBy != null && message.hasOwnProperty("isDirectlyFollowedBy"))
                                if (typeof message.isDirectlyFollowedBy !== "boolean")
                                    return "isDirectlyFollowedBy: boolean expected";
                            if (message.stepScoping != null && message.hasOwnProperty("stepScoping"))
                                switch (message.stepScoping) {
                                default:
                                    return "stepScoping: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.segmentFilterExpression);
                                if (error)
                                    return "segmentFilterExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSequenceStep message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSequenceStep} UserSequenceStep
                         */
                        UserSequenceStep.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSequenceStep)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSequenceStep();
                            if (object.isDirectlyFollowedBy != null)
                                message.isDirectlyFollowedBy = Boolean(object.isDirectlyFollowedBy);
                            switch (object.stepScoping) {
                            default:
                                if (typeof object.stepScoping === "number") {
                                    message.stepScoping = object.stepScoping;
                                    break;
                                }
                                break;
                            case "USER_CRITERIA_SCOPING_UNSPECIFIED":
                            case 0:
                                message.stepScoping = 0;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_EVENT":
                            case 1:
                                message.stepScoping = 1;
                                break;
                            case "USER_CRITERIA_WITHIN_SAME_SESSION":
                            case 2:
                                message.stepScoping = 2;
                                break;
                            case "USER_CRITERIA_ACROSS_ALL_SESSIONS":
                            case 3:
                                message.stepScoping = 3;
                                break;
                            }
                            if (object.segmentFilterExpression != null) {
                                if (typeof object.segmentFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSequenceStep.segmentFilterExpression: object expected");
                                message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.segmentFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSequenceStep message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSequenceStep} message UserSequenceStep
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSequenceStep.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.isDirectlyFollowedBy = false;
                                object.stepScoping = options.enums === String ? "USER_CRITERIA_SCOPING_UNSPECIFIED" : 0;
                                object.segmentFilterExpression = null;
                            }
                            if (message.isDirectlyFollowedBy != null && message.hasOwnProperty("isDirectlyFollowedBy"))
                                object.isDirectlyFollowedBy = message.isDirectlyFollowedBy;
                            if (message.stepScoping != null && message.hasOwnProperty("stepScoping"))
                                object.stepScoping = options.enums === String ? $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.stepScoping] === undefined ? message.stepScoping : $root.google.analytics.data.v1alpha.UserCriteriaScoping[message.stepScoping] : message.stepScoping;
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression"))
                                object.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.segmentFilterExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserSequenceStep to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSequenceStep.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSequenceStep
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSequenceStep
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSequenceStep.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSequenceStep";
                        };
    
                        return UserSequenceStep;
                    })();
    
                    v1alpha.UserSegmentExclusion = (function() {
    
                        /**
                         * Properties of a UserSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IUserSegmentExclusion
                         * @property {google.analytics.data.v1alpha.UserExclusionDuration|null} [userExclusionDuration] UserSegmentExclusion userExclusionDuration
                         * @property {google.analytics.data.v1alpha.IUserSegmentCriteria|null} [userExclusionCriteria] UserSegmentExclusion userExclusionCriteria
                         */
    
                        /**
                         * Constructs a new UserSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a UserSegmentExclusion.
                         * @implements IUserSegmentExclusion
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IUserSegmentExclusion=} [properties] Properties to set
                         */
                        function UserSegmentExclusion(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserSegmentExclusion userExclusionDuration.
                         * @member {google.analytics.data.v1alpha.UserExclusionDuration} userExclusionDuration
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @instance
                         */
                        UserSegmentExclusion.prototype.userExclusionDuration = 0;
    
                        /**
                         * UserSegmentExclusion userExclusionCriteria.
                         * @member {google.analytics.data.v1alpha.IUserSegmentCriteria|null|undefined} userExclusionCriteria
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @instance
                         */
                        UserSegmentExclusion.prototype.userExclusionCriteria = null;
    
                        /**
                         * Creates a new UserSegmentExclusion instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentExclusion=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.UserSegmentExclusion} UserSegmentExclusion instance
                         */
                        UserSegmentExclusion.create = function create(properties) {
                            return new UserSegmentExclusion(properties);
                        };
    
                        /**
                         * Encodes the specified UserSegmentExclusion message. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentExclusion.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentExclusion} message UserSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentExclusion.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userExclusionDuration != null && Object.hasOwnProperty.call(message, "userExclusionDuration"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userExclusionDuration);
                            if (message.userExclusionCriteria != null && Object.hasOwnProperty.call(message, "userExclusionCriteria"))
                                $root.google.analytics.data.v1alpha.UserSegmentCriteria.encode(message.userExclusionCriteria, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserSegmentExclusion message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.UserSegmentExclusion.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IUserSegmentExclusion} message UserSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserSegmentExclusion.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserSegmentExclusion message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.UserSegmentExclusion} UserSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentExclusion.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.UserSegmentExclusion();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.userExclusionDuration = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.userExclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserSegmentExclusion message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.UserSegmentExclusion} UserSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserSegmentExclusion.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserSegmentExclusion message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserSegmentExclusion.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userExclusionDuration != null && message.hasOwnProperty("userExclusionDuration"))
                                switch (message.userExclusionDuration) {
                                default:
                                    return "userExclusionDuration: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.userExclusionCriteria != null && message.hasOwnProperty("userExclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.UserSegmentCriteria.verify(message.userExclusionCriteria);
                                if (error)
                                    return "userExclusionCriteria." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserSegmentExclusion message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.UserSegmentExclusion} UserSegmentExclusion
                         */
                        UserSegmentExclusion.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.UserSegmentExclusion)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.UserSegmentExclusion();
                            switch (object.userExclusionDuration) {
                            default:
                                if (typeof object.userExclusionDuration === "number") {
                                    message.userExclusionDuration = object.userExclusionDuration;
                                    break;
                                }
                                break;
                            case "USER_EXCLUSION_DURATION_UNSPECIFIED":
                            case 0:
                                message.userExclusionDuration = 0;
                                break;
                            case "USER_EXCLUSION_TEMPORARY":
                            case 1:
                                message.userExclusionDuration = 1;
                                break;
                            case "USER_EXCLUSION_PERMANENT":
                            case 2:
                                message.userExclusionDuration = 2;
                                break;
                            }
                            if (object.userExclusionCriteria != null) {
                                if (typeof object.userExclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.UserSegmentExclusion.userExclusionCriteria: object expected");
                                message.userExclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.fromObject(object.userExclusionCriteria);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserSegmentExclusion message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.UserSegmentExclusion} message UserSegmentExclusion
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserSegmentExclusion.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.userExclusionDuration = options.enums === String ? "USER_EXCLUSION_DURATION_UNSPECIFIED" : 0;
                                object.userExclusionCriteria = null;
                            }
                            if (message.userExclusionDuration != null && message.hasOwnProperty("userExclusionDuration"))
                                object.userExclusionDuration = options.enums === String ? $root.google.analytics.data.v1alpha.UserExclusionDuration[message.userExclusionDuration] === undefined ? message.userExclusionDuration : $root.google.analytics.data.v1alpha.UserExclusionDuration[message.userExclusionDuration] : message.userExclusionDuration;
                            if (message.userExclusionCriteria != null && message.hasOwnProperty("userExclusionCriteria"))
                                object.userExclusionCriteria = $root.google.analytics.data.v1alpha.UserSegmentCriteria.toObject(message.userExclusionCriteria, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserSegmentExclusion to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserSegmentExclusion.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserSegmentExclusion
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.UserSegmentExclusion
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserSegmentExclusion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.UserSegmentExclusion";
                        };
    
                        return UserSegmentExclusion;
                    })();
    
                    /**
                     * UserExclusionDuration enum.
                     * @name google.analytics.data.v1alpha.UserExclusionDuration
                     * @enum {number}
                     * @property {number} USER_EXCLUSION_DURATION_UNSPECIFIED=0 USER_EXCLUSION_DURATION_UNSPECIFIED value
                     * @property {number} USER_EXCLUSION_TEMPORARY=1 USER_EXCLUSION_TEMPORARY value
                     * @property {number} USER_EXCLUSION_PERMANENT=2 USER_EXCLUSION_PERMANENT value
                     */
                    v1alpha.UserExclusionDuration = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "USER_EXCLUSION_DURATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "USER_EXCLUSION_TEMPORARY"] = 1;
                        values[valuesById[2] = "USER_EXCLUSION_PERMANENT"] = 2;
                        return values;
                    })();
    
                    v1alpha.SessionSegment = (function() {
    
                        /**
                         * Properties of a SessionSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISessionSegment
                         * @property {google.analytics.data.v1alpha.ISessionSegmentCriteria|null} [sessionInclusionCriteria] SessionSegment sessionInclusionCriteria
                         * @property {google.analytics.data.v1alpha.ISessionSegmentExclusion|null} [exclusion] SessionSegment exclusion
                         */
    
                        /**
                         * Constructs a new SessionSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SessionSegment.
                         * @implements ISessionSegment
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISessionSegment=} [properties] Properties to set
                         */
                        function SessionSegment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SessionSegment sessionInclusionCriteria.
                         * @member {google.analytics.data.v1alpha.ISessionSegmentCriteria|null|undefined} sessionInclusionCriteria
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @instance
                         */
                        SessionSegment.prototype.sessionInclusionCriteria = null;
    
                        /**
                         * SessionSegment exclusion.
                         * @member {google.analytics.data.v1alpha.ISessionSegmentExclusion|null|undefined} exclusion
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @instance
                         */
                        SessionSegment.prototype.exclusion = null;
    
                        /**
                         * Creates a new SessionSegment instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegment=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SessionSegment} SessionSegment instance
                         */
                        SessionSegment.create = function create(properties) {
                            return new SessionSegment(properties);
                        };
    
                        /**
                         * Encodes the specified SessionSegment message. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegment.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegment} message SessionSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sessionInclusionCriteria != null && Object.hasOwnProperty.call(message, "sessionInclusionCriteria"))
                                $root.google.analytics.data.v1alpha.SessionSegmentCriteria.encode(message.sessionInclusionCriteria, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.exclusion != null && Object.hasOwnProperty.call(message, "exclusion"))
                                $root.google.analytics.data.v1alpha.SessionSegmentExclusion.encode(message.exclusion, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SessionSegment message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegment} message SessionSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SessionSegment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SessionSegment} SessionSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SessionSegment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sessionInclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.exclusion = $root.google.analytics.data.v1alpha.SessionSegmentExclusion.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SessionSegment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SessionSegment} SessionSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SessionSegment message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SessionSegment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sessionInclusionCriteria != null && message.hasOwnProperty("sessionInclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.verify(message.sessionInclusionCriteria);
                                if (error)
                                    return "sessionInclusionCriteria." + error;
                            }
                            if (message.exclusion != null && message.hasOwnProperty("exclusion")) {
                                var error = $root.google.analytics.data.v1alpha.SessionSegmentExclusion.verify(message.exclusion);
                                if (error)
                                    return "exclusion." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SessionSegment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SessionSegment} SessionSegment
                         */
                        SessionSegment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SessionSegment)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SessionSegment();
                            if (object.sessionInclusionCriteria != null) {
                                if (typeof object.sessionInclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SessionSegment.sessionInclusionCriteria: object expected");
                                message.sessionInclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.fromObject(object.sessionInclusionCriteria);
                            }
                            if (object.exclusion != null) {
                                if (typeof object.exclusion !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SessionSegment.exclusion: object expected");
                                message.exclusion = $root.google.analytics.data.v1alpha.SessionSegmentExclusion.fromObject(object.exclusion);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SessionSegment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.SessionSegment} message SessionSegment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SessionSegment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.sessionInclusionCriteria = null;
                                object.exclusion = null;
                            }
                            if (message.sessionInclusionCriteria != null && message.hasOwnProperty("sessionInclusionCriteria"))
                                object.sessionInclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.toObject(message.sessionInclusionCriteria, options);
                            if (message.exclusion != null && message.hasOwnProperty("exclusion"))
                                object.exclusion = $root.google.analytics.data.v1alpha.SessionSegmentExclusion.toObject(message.exclusion, options);
                            return object;
                        };
    
                        /**
                         * Converts this SessionSegment to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SessionSegment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SessionSegment
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SessionSegment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SessionSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SessionSegment";
                        };
    
                        return SessionSegment;
                    })();
    
                    v1alpha.SessionSegmentCriteria = (function() {
    
                        /**
                         * Properties of a SessionSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISessionSegmentCriteria
                         * @property {Array.<google.analytics.data.v1alpha.ISessionSegmentConditionGroup>|null} [andConditionGroups] SessionSegmentCriteria andConditionGroups
                         */
    
                        /**
                         * Constructs a new SessionSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SessionSegmentCriteria.
                         * @implements ISessionSegmentCriteria
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISessionSegmentCriteria=} [properties] Properties to set
                         */
                        function SessionSegmentCriteria(properties) {
                            this.andConditionGroups = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SessionSegmentCriteria andConditionGroups.
                         * @member {Array.<google.analytics.data.v1alpha.ISessionSegmentConditionGroup>} andConditionGroups
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @instance
                         */
                        SessionSegmentCriteria.prototype.andConditionGroups = $util.emptyArray;
    
                        /**
                         * Creates a new SessionSegmentCriteria instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentCriteria=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SessionSegmentCriteria} SessionSegmentCriteria instance
                         */
                        SessionSegmentCriteria.create = function create(properties) {
                            return new SessionSegmentCriteria(properties);
                        };
    
                        /**
                         * Encodes the specified SessionSegmentCriteria message. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentCriteria.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentCriteria} message SessionSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentCriteria.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andConditionGroups != null && message.andConditionGroups.length)
                                for (var i = 0; i < message.andConditionGroups.length; ++i)
                                    $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup.encode(message.andConditionGroups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SessionSegmentCriteria message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentCriteria.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentCriteria} message SessionSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentCriteria.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SessionSegmentCriteria message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SessionSegmentCriteria} SessionSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentCriteria.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SessionSegmentCriteria();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.andConditionGroups && message.andConditionGroups.length))
                                            message.andConditionGroups = [];
                                        message.andConditionGroups.push($root.google.analytics.data.v1alpha.SessionSegmentConditionGroup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SessionSegmentCriteria message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SessionSegmentCriteria} SessionSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentCriteria.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SessionSegmentCriteria message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SessionSegmentCriteria.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.andConditionGroups != null && message.hasOwnProperty("andConditionGroups")) {
                                if (!Array.isArray(message.andConditionGroups))
                                    return "andConditionGroups: array expected";
                                for (var i = 0; i < message.andConditionGroups.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup.verify(message.andConditionGroups[i]);
                                    if (error)
                                        return "andConditionGroups." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SessionSegmentCriteria message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SessionSegmentCriteria} SessionSegmentCriteria
                         */
                        SessionSegmentCriteria.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SessionSegmentCriteria)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SessionSegmentCriteria();
                            if (object.andConditionGroups) {
                                if (!Array.isArray(object.andConditionGroups))
                                    throw TypeError(".google.analytics.data.v1alpha.SessionSegmentCriteria.andConditionGroups: array expected");
                                message.andConditionGroups = [];
                                for (var i = 0; i < object.andConditionGroups.length; ++i) {
                                    if (typeof object.andConditionGroups[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.SessionSegmentCriteria.andConditionGroups: object expected");
                                    message.andConditionGroups[i] = $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup.fromObject(object.andConditionGroups[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SessionSegmentCriteria message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.SessionSegmentCriteria} message SessionSegmentCriteria
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SessionSegmentCriteria.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.andConditionGroups = [];
                            if (message.andConditionGroups && message.andConditionGroups.length) {
                                object.andConditionGroups = [];
                                for (var j = 0; j < message.andConditionGroups.length; ++j)
                                    object.andConditionGroups[j] = $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup.toObject(message.andConditionGroups[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SessionSegmentCriteria to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SessionSegmentCriteria.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SessionSegmentCriteria
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SessionSegmentCriteria
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SessionSegmentCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SessionSegmentCriteria";
                        };
    
                        return SessionSegmentCriteria;
                    })();
    
                    /**
                     * SessionCriteriaScoping enum.
                     * @name google.analytics.data.v1alpha.SessionCriteriaScoping
                     * @enum {number}
                     * @property {number} SESSION_CRITERIA_SCOPING_UNSPECIFIED=0 SESSION_CRITERIA_SCOPING_UNSPECIFIED value
                     * @property {number} SESSION_CRITERIA_WITHIN_SAME_EVENT=1 SESSION_CRITERIA_WITHIN_SAME_EVENT value
                     * @property {number} SESSION_CRITERIA_WITHIN_SAME_SESSION=2 SESSION_CRITERIA_WITHIN_SAME_SESSION value
                     */
                    v1alpha.SessionCriteriaScoping = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SESSION_CRITERIA_SCOPING_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SESSION_CRITERIA_WITHIN_SAME_EVENT"] = 1;
                        values[valuesById[2] = "SESSION_CRITERIA_WITHIN_SAME_SESSION"] = 2;
                        return values;
                    })();
    
                    v1alpha.SessionSegmentConditionGroup = (function() {
    
                        /**
                         * Properties of a SessionSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISessionSegmentConditionGroup
                         * @property {google.analytics.data.v1alpha.SessionCriteriaScoping|null} [conditionScoping] SessionSegmentConditionGroup conditionScoping
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpression|null} [segmentFilterExpression] SessionSegmentConditionGroup segmentFilterExpression
                         */
    
                        /**
                         * Constructs a new SessionSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SessionSegmentConditionGroup.
                         * @implements ISessionSegmentConditionGroup
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISessionSegmentConditionGroup=} [properties] Properties to set
                         */
                        function SessionSegmentConditionGroup(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SessionSegmentConditionGroup conditionScoping.
                         * @member {google.analytics.data.v1alpha.SessionCriteriaScoping} conditionScoping
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @instance
                         */
                        SessionSegmentConditionGroup.prototype.conditionScoping = 0;
    
                        /**
                         * SessionSegmentConditionGroup segmentFilterExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpression|null|undefined} segmentFilterExpression
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @instance
                         */
                        SessionSegmentConditionGroup.prototype.segmentFilterExpression = null;
    
                        /**
                         * Creates a new SessionSegmentConditionGroup instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentConditionGroup=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SessionSegmentConditionGroup} SessionSegmentConditionGroup instance
                         */
                        SessionSegmentConditionGroup.create = function create(properties) {
                            return new SessionSegmentConditionGroup(properties);
                        };
    
                        /**
                         * Encodes the specified SessionSegmentConditionGroup message. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentConditionGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentConditionGroup} message SessionSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentConditionGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.conditionScoping != null && Object.hasOwnProperty.call(message, "conditionScoping"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.conditionScoping);
                            if (message.segmentFilterExpression != null && Object.hasOwnProperty.call(message, "segmentFilterExpression"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.segmentFilterExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SessionSegmentConditionGroup message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentConditionGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentConditionGroup} message SessionSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentConditionGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SessionSegmentConditionGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SessionSegmentConditionGroup} SessionSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentConditionGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.conditionScoping = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SessionSegmentConditionGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SessionSegmentConditionGroup} SessionSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentConditionGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SessionSegmentConditionGroup message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SessionSegmentConditionGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                switch (message.conditionScoping) {
                                default:
                                    return "conditionScoping: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.segmentFilterExpression);
                                if (error)
                                    return "segmentFilterExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SessionSegmentConditionGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SessionSegmentConditionGroup} SessionSegmentConditionGroup
                         */
                        SessionSegmentConditionGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SessionSegmentConditionGroup();
                            switch (object.conditionScoping) {
                            default:
                                if (typeof object.conditionScoping === "number") {
                                    message.conditionScoping = object.conditionScoping;
                                    break;
                                }
                                break;
                            case "SESSION_CRITERIA_SCOPING_UNSPECIFIED":
                            case 0:
                                message.conditionScoping = 0;
                                break;
                            case "SESSION_CRITERIA_WITHIN_SAME_EVENT":
                            case 1:
                                message.conditionScoping = 1;
                                break;
                            case "SESSION_CRITERIA_WITHIN_SAME_SESSION":
                            case 2:
                                message.conditionScoping = 2;
                                break;
                            }
                            if (object.segmentFilterExpression != null) {
                                if (typeof object.segmentFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SessionSegmentConditionGroup.segmentFilterExpression: object expected");
                                message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.segmentFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SessionSegmentConditionGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.SessionSegmentConditionGroup} message SessionSegmentConditionGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SessionSegmentConditionGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.conditionScoping = options.enums === String ? "SESSION_CRITERIA_SCOPING_UNSPECIFIED" : 0;
                                object.segmentFilterExpression = null;
                            }
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                object.conditionScoping = options.enums === String ? $root.google.analytics.data.v1alpha.SessionCriteriaScoping[message.conditionScoping] === undefined ? message.conditionScoping : $root.google.analytics.data.v1alpha.SessionCriteriaScoping[message.conditionScoping] : message.conditionScoping;
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression"))
                                object.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.segmentFilterExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this SessionSegmentConditionGroup to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SessionSegmentConditionGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SessionSegmentConditionGroup
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SessionSegmentConditionGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SessionSegmentConditionGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SessionSegmentConditionGroup";
                        };
    
                        return SessionSegmentConditionGroup;
                    })();
    
                    v1alpha.SessionSegmentExclusion = (function() {
    
                        /**
                         * Properties of a SessionSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISessionSegmentExclusion
                         * @property {google.analytics.data.v1alpha.SessionExclusionDuration|null} [sessionExclusionDuration] SessionSegmentExclusion sessionExclusionDuration
                         * @property {google.analytics.data.v1alpha.ISessionSegmentCriteria|null} [sessionExclusionCriteria] SessionSegmentExclusion sessionExclusionCriteria
                         */
    
                        /**
                         * Constructs a new SessionSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SessionSegmentExclusion.
                         * @implements ISessionSegmentExclusion
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISessionSegmentExclusion=} [properties] Properties to set
                         */
                        function SessionSegmentExclusion(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SessionSegmentExclusion sessionExclusionDuration.
                         * @member {google.analytics.data.v1alpha.SessionExclusionDuration} sessionExclusionDuration
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @instance
                         */
                        SessionSegmentExclusion.prototype.sessionExclusionDuration = 0;
    
                        /**
                         * SessionSegmentExclusion sessionExclusionCriteria.
                         * @member {google.analytics.data.v1alpha.ISessionSegmentCriteria|null|undefined} sessionExclusionCriteria
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @instance
                         */
                        SessionSegmentExclusion.prototype.sessionExclusionCriteria = null;
    
                        /**
                         * Creates a new SessionSegmentExclusion instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentExclusion=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SessionSegmentExclusion} SessionSegmentExclusion instance
                         */
                        SessionSegmentExclusion.create = function create(properties) {
                            return new SessionSegmentExclusion(properties);
                        };
    
                        /**
                         * Encodes the specified SessionSegmentExclusion message. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentExclusion.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentExclusion} message SessionSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentExclusion.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sessionExclusionDuration != null && Object.hasOwnProperty.call(message, "sessionExclusionDuration"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sessionExclusionDuration);
                            if (message.sessionExclusionCriteria != null && Object.hasOwnProperty.call(message, "sessionExclusionCriteria"))
                                $root.google.analytics.data.v1alpha.SessionSegmentCriteria.encode(message.sessionExclusionCriteria, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SessionSegmentExclusion message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SessionSegmentExclusion.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.ISessionSegmentExclusion} message SessionSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SessionSegmentExclusion.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SessionSegmentExclusion message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SessionSegmentExclusion} SessionSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentExclusion.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SessionSegmentExclusion();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sessionExclusionDuration = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.sessionExclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SessionSegmentExclusion message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SessionSegmentExclusion} SessionSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SessionSegmentExclusion.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SessionSegmentExclusion message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SessionSegmentExclusion.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sessionExclusionDuration != null && message.hasOwnProperty("sessionExclusionDuration"))
                                switch (message.sessionExclusionDuration) {
                                default:
                                    return "sessionExclusionDuration: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.sessionExclusionCriteria != null && message.hasOwnProperty("sessionExclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.verify(message.sessionExclusionCriteria);
                                if (error)
                                    return "sessionExclusionCriteria." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SessionSegmentExclusion message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SessionSegmentExclusion} SessionSegmentExclusion
                         */
                        SessionSegmentExclusion.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SessionSegmentExclusion)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SessionSegmentExclusion();
                            switch (object.sessionExclusionDuration) {
                            default:
                                if (typeof object.sessionExclusionDuration === "number") {
                                    message.sessionExclusionDuration = object.sessionExclusionDuration;
                                    break;
                                }
                                break;
                            case "SESSION_EXCLUSION_DURATION_UNSPECIFIED":
                            case 0:
                                message.sessionExclusionDuration = 0;
                                break;
                            case "SESSION_EXCLUSION_TEMPORARY":
                            case 1:
                                message.sessionExclusionDuration = 1;
                                break;
                            case "SESSION_EXCLUSION_PERMANENT":
                            case 2:
                                message.sessionExclusionDuration = 2;
                                break;
                            }
                            if (object.sessionExclusionCriteria != null) {
                                if (typeof object.sessionExclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SessionSegmentExclusion.sessionExclusionCriteria: object expected");
                                message.sessionExclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.fromObject(object.sessionExclusionCriteria);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SessionSegmentExclusion message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.SessionSegmentExclusion} message SessionSegmentExclusion
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SessionSegmentExclusion.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.sessionExclusionDuration = options.enums === String ? "SESSION_EXCLUSION_DURATION_UNSPECIFIED" : 0;
                                object.sessionExclusionCriteria = null;
                            }
                            if (message.sessionExclusionDuration != null && message.hasOwnProperty("sessionExclusionDuration"))
                                object.sessionExclusionDuration = options.enums === String ? $root.google.analytics.data.v1alpha.SessionExclusionDuration[message.sessionExclusionDuration] === undefined ? message.sessionExclusionDuration : $root.google.analytics.data.v1alpha.SessionExclusionDuration[message.sessionExclusionDuration] : message.sessionExclusionDuration;
                            if (message.sessionExclusionCriteria != null && message.hasOwnProperty("sessionExclusionCriteria"))
                                object.sessionExclusionCriteria = $root.google.analytics.data.v1alpha.SessionSegmentCriteria.toObject(message.sessionExclusionCriteria, options);
                            return object;
                        };
    
                        /**
                         * Converts this SessionSegmentExclusion to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SessionSegmentExclusion.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SessionSegmentExclusion
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SessionSegmentExclusion
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SessionSegmentExclusion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SessionSegmentExclusion";
                        };
    
                        return SessionSegmentExclusion;
                    })();
    
                    /**
                     * SessionExclusionDuration enum.
                     * @name google.analytics.data.v1alpha.SessionExclusionDuration
                     * @enum {number}
                     * @property {number} SESSION_EXCLUSION_DURATION_UNSPECIFIED=0 SESSION_EXCLUSION_DURATION_UNSPECIFIED value
                     * @property {number} SESSION_EXCLUSION_TEMPORARY=1 SESSION_EXCLUSION_TEMPORARY value
                     * @property {number} SESSION_EXCLUSION_PERMANENT=2 SESSION_EXCLUSION_PERMANENT value
                     */
                    v1alpha.SessionExclusionDuration = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SESSION_EXCLUSION_DURATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SESSION_EXCLUSION_TEMPORARY"] = 1;
                        values[valuesById[2] = "SESSION_EXCLUSION_PERMANENT"] = 2;
                        return values;
                    })();
    
                    v1alpha.EventSegment = (function() {
    
                        /**
                         * Properties of an EventSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IEventSegment
                         * @property {google.analytics.data.v1alpha.IEventSegmentCriteria|null} [eventInclusionCriteria] EventSegment eventInclusionCriteria
                         * @property {google.analytics.data.v1alpha.IEventSegmentExclusion|null} [exclusion] EventSegment exclusion
                         */
    
                        /**
                         * Constructs a new EventSegment.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an EventSegment.
                         * @implements IEventSegment
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IEventSegment=} [properties] Properties to set
                         */
                        function EventSegment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventSegment eventInclusionCriteria.
                         * @member {google.analytics.data.v1alpha.IEventSegmentCriteria|null|undefined} eventInclusionCriteria
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @instance
                         */
                        EventSegment.prototype.eventInclusionCriteria = null;
    
                        /**
                         * EventSegment exclusion.
                         * @member {google.analytics.data.v1alpha.IEventSegmentExclusion|null|undefined} exclusion
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @instance
                         */
                        EventSegment.prototype.exclusion = null;
    
                        /**
                         * Creates a new EventSegment instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegment=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.EventSegment} EventSegment instance
                         */
                        EventSegment.create = function create(properties) {
                            return new EventSegment(properties);
                        };
    
                        /**
                         * Encodes the specified EventSegment message. Does not implicitly {@link google.analytics.data.v1alpha.EventSegment.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegment} message EventSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventInclusionCriteria != null && Object.hasOwnProperty.call(message, "eventInclusionCriteria"))
                                $root.google.analytics.data.v1alpha.EventSegmentCriteria.encode(message.eventInclusionCriteria, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.exclusion != null && Object.hasOwnProperty.call(message, "exclusion"))
                                $root.google.analytics.data.v1alpha.EventSegmentExclusion.encode(message.exclusion, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventSegment message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.EventSegment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegment} message EventSegment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventSegment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.EventSegment} EventSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.EventSegment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventInclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.exclusion = $root.google.analytics.data.v1alpha.EventSegmentExclusion.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventSegment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.EventSegment} EventSegment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventSegment message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventSegment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventInclusionCriteria != null && message.hasOwnProperty("eventInclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.EventSegmentCriteria.verify(message.eventInclusionCriteria);
                                if (error)
                                    return "eventInclusionCriteria." + error;
                            }
                            if (message.exclusion != null && message.hasOwnProperty("exclusion")) {
                                var error = $root.google.analytics.data.v1alpha.EventSegmentExclusion.verify(message.exclusion);
                                if (error)
                                    return "exclusion." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EventSegment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.EventSegment} EventSegment
                         */
                        EventSegment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.EventSegment)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.EventSegment();
                            if (object.eventInclusionCriteria != null) {
                                if (typeof object.eventInclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.EventSegment.eventInclusionCriteria: object expected");
                                message.eventInclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.fromObject(object.eventInclusionCriteria);
                            }
                            if (object.exclusion != null) {
                                if (typeof object.exclusion !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.EventSegment.exclusion: object expected");
                                message.exclusion = $root.google.analytics.data.v1alpha.EventSegmentExclusion.fromObject(object.exclusion);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventSegment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {google.analytics.data.v1alpha.EventSegment} message EventSegment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventSegment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.eventInclusionCriteria = null;
                                object.exclusion = null;
                            }
                            if (message.eventInclusionCriteria != null && message.hasOwnProperty("eventInclusionCriteria"))
                                object.eventInclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.toObject(message.eventInclusionCriteria, options);
                            if (message.exclusion != null && message.hasOwnProperty("exclusion"))
                                object.exclusion = $root.google.analytics.data.v1alpha.EventSegmentExclusion.toObject(message.exclusion, options);
                            return object;
                        };
    
                        /**
                         * Converts this EventSegment to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventSegment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventSegment
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.EventSegment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.EventSegment";
                        };
    
                        return EventSegment;
                    })();
    
                    v1alpha.EventSegmentCriteria = (function() {
    
                        /**
                         * Properties of an EventSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IEventSegmentCriteria
                         * @property {Array.<google.analytics.data.v1alpha.IEventSegmentConditionGroup>|null} [andConditionGroups] EventSegmentCriteria andConditionGroups
                         */
    
                        /**
                         * Constructs a new EventSegmentCriteria.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an EventSegmentCriteria.
                         * @implements IEventSegmentCriteria
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IEventSegmentCriteria=} [properties] Properties to set
                         */
                        function EventSegmentCriteria(properties) {
                            this.andConditionGroups = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventSegmentCriteria andConditionGroups.
                         * @member {Array.<google.analytics.data.v1alpha.IEventSegmentConditionGroup>} andConditionGroups
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @instance
                         */
                        EventSegmentCriteria.prototype.andConditionGroups = $util.emptyArray;
    
                        /**
                         * Creates a new EventSegmentCriteria instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentCriteria=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.EventSegmentCriteria} EventSegmentCriteria instance
                         */
                        EventSegmentCriteria.create = function create(properties) {
                            return new EventSegmentCriteria(properties);
                        };
    
                        /**
                         * Encodes the specified EventSegmentCriteria message. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentCriteria.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentCriteria} message EventSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentCriteria.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andConditionGroups != null && message.andConditionGroups.length)
                                for (var i = 0; i < message.andConditionGroups.length; ++i)
                                    $root.google.analytics.data.v1alpha.EventSegmentConditionGroup.encode(message.andConditionGroups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventSegmentCriteria message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentCriteria.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentCriteria} message EventSegmentCriteria message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentCriteria.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventSegmentCriteria message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.EventSegmentCriteria} EventSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentCriteria.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.EventSegmentCriteria();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.andConditionGroups && message.andConditionGroups.length))
                                            message.andConditionGroups = [];
                                        message.andConditionGroups.push($root.google.analytics.data.v1alpha.EventSegmentConditionGroup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventSegmentCriteria message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.EventSegmentCriteria} EventSegmentCriteria
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentCriteria.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventSegmentCriteria message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventSegmentCriteria.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.andConditionGroups != null && message.hasOwnProperty("andConditionGroups")) {
                                if (!Array.isArray(message.andConditionGroups))
                                    return "andConditionGroups: array expected";
                                for (var i = 0; i < message.andConditionGroups.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.EventSegmentConditionGroup.verify(message.andConditionGroups[i]);
                                    if (error)
                                        return "andConditionGroups." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EventSegmentCriteria message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.EventSegmentCriteria} EventSegmentCriteria
                         */
                        EventSegmentCriteria.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.EventSegmentCriteria)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.EventSegmentCriteria();
                            if (object.andConditionGroups) {
                                if (!Array.isArray(object.andConditionGroups))
                                    throw TypeError(".google.analytics.data.v1alpha.EventSegmentCriteria.andConditionGroups: array expected");
                                message.andConditionGroups = [];
                                for (var i = 0; i < object.andConditionGroups.length; ++i) {
                                    if (typeof object.andConditionGroups[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.EventSegmentCriteria.andConditionGroups: object expected");
                                    message.andConditionGroups[i] = $root.google.analytics.data.v1alpha.EventSegmentConditionGroup.fromObject(object.andConditionGroups[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventSegmentCriteria message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {google.analytics.data.v1alpha.EventSegmentCriteria} message EventSegmentCriteria
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventSegmentCriteria.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.andConditionGroups = [];
                            if (message.andConditionGroups && message.andConditionGroups.length) {
                                object.andConditionGroups = [];
                                for (var j = 0; j < message.andConditionGroups.length; ++j)
                                    object.andConditionGroups[j] = $root.google.analytics.data.v1alpha.EventSegmentConditionGroup.toObject(message.andConditionGroups[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EventSegmentCriteria to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventSegmentCriteria.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventSegmentCriteria
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.EventSegmentCriteria
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventSegmentCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.EventSegmentCriteria";
                        };
    
                        return EventSegmentCriteria;
                    })();
    
                    /**
                     * EventCriteriaScoping enum.
                     * @name google.analytics.data.v1alpha.EventCriteriaScoping
                     * @enum {number}
                     * @property {number} EVENT_CRITERIA_SCOPING_UNSPECIFIED=0 EVENT_CRITERIA_SCOPING_UNSPECIFIED value
                     * @property {number} EVENT_CRITERIA_WITHIN_SAME_EVENT=1 EVENT_CRITERIA_WITHIN_SAME_EVENT value
                     */
                    v1alpha.EventCriteriaScoping = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EVENT_CRITERIA_SCOPING_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "EVENT_CRITERIA_WITHIN_SAME_EVENT"] = 1;
                        return values;
                    })();
    
                    v1alpha.EventSegmentConditionGroup = (function() {
    
                        /**
                         * Properties of an EventSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IEventSegmentConditionGroup
                         * @property {google.analytics.data.v1alpha.EventCriteriaScoping|null} [conditionScoping] EventSegmentConditionGroup conditionScoping
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpression|null} [segmentFilterExpression] EventSegmentConditionGroup segmentFilterExpression
                         */
    
                        /**
                         * Constructs a new EventSegmentConditionGroup.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an EventSegmentConditionGroup.
                         * @implements IEventSegmentConditionGroup
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IEventSegmentConditionGroup=} [properties] Properties to set
                         */
                        function EventSegmentConditionGroup(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventSegmentConditionGroup conditionScoping.
                         * @member {google.analytics.data.v1alpha.EventCriteriaScoping} conditionScoping
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @instance
                         */
                        EventSegmentConditionGroup.prototype.conditionScoping = 0;
    
                        /**
                         * EventSegmentConditionGroup segmentFilterExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpression|null|undefined} segmentFilterExpression
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @instance
                         */
                        EventSegmentConditionGroup.prototype.segmentFilterExpression = null;
    
                        /**
                         * Creates a new EventSegmentConditionGroup instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentConditionGroup=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.EventSegmentConditionGroup} EventSegmentConditionGroup instance
                         */
                        EventSegmentConditionGroup.create = function create(properties) {
                            return new EventSegmentConditionGroup(properties);
                        };
    
                        /**
                         * Encodes the specified EventSegmentConditionGroup message. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentConditionGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentConditionGroup} message EventSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentConditionGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.conditionScoping != null && Object.hasOwnProperty.call(message, "conditionScoping"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.conditionScoping);
                            if (message.segmentFilterExpression != null && Object.hasOwnProperty.call(message, "segmentFilterExpression"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.segmentFilterExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventSegmentConditionGroup message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentConditionGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentConditionGroup} message EventSegmentConditionGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentConditionGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventSegmentConditionGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.EventSegmentConditionGroup} EventSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentConditionGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.EventSegmentConditionGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.conditionScoping = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventSegmentConditionGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.EventSegmentConditionGroup} EventSegmentConditionGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentConditionGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventSegmentConditionGroup message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventSegmentConditionGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                switch (message.conditionScoping) {
                                default:
                                    return "conditionScoping: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.segmentFilterExpression);
                                if (error)
                                    return "segmentFilterExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EventSegmentConditionGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.EventSegmentConditionGroup} EventSegmentConditionGroup
                         */
                        EventSegmentConditionGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.EventSegmentConditionGroup)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.EventSegmentConditionGroup();
                            switch (object.conditionScoping) {
                            default:
                                if (typeof object.conditionScoping === "number") {
                                    message.conditionScoping = object.conditionScoping;
                                    break;
                                }
                                break;
                            case "EVENT_CRITERIA_SCOPING_UNSPECIFIED":
                            case 0:
                                message.conditionScoping = 0;
                                break;
                            case "EVENT_CRITERIA_WITHIN_SAME_EVENT":
                            case 1:
                                message.conditionScoping = 1;
                                break;
                            }
                            if (object.segmentFilterExpression != null) {
                                if (typeof object.segmentFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.EventSegmentConditionGroup.segmentFilterExpression: object expected");
                                message.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.segmentFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventSegmentConditionGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {google.analytics.data.v1alpha.EventSegmentConditionGroup} message EventSegmentConditionGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventSegmentConditionGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.conditionScoping = options.enums === String ? "EVENT_CRITERIA_SCOPING_UNSPECIFIED" : 0;
                                object.segmentFilterExpression = null;
                            }
                            if (message.conditionScoping != null && message.hasOwnProperty("conditionScoping"))
                                object.conditionScoping = options.enums === String ? $root.google.analytics.data.v1alpha.EventCriteriaScoping[message.conditionScoping] === undefined ? message.conditionScoping : $root.google.analytics.data.v1alpha.EventCriteriaScoping[message.conditionScoping] : message.conditionScoping;
                            if (message.segmentFilterExpression != null && message.hasOwnProperty("segmentFilterExpression"))
                                object.segmentFilterExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.segmentFilterExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this EventSegmentConditionGroup to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventSegmentConditionGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventSegmentConditionGroup
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.EventSegmentConditionGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventSegmentConditionGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.EventSegmentConditionGroup";
                        };
    
                        return EventSegmentConditionGroup;
                    })();
    
                    v1alpha.EventSegmentExclusion = (function() {
    
                        /**
                         * Properties of an EventSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IEventSegmentExclusion
                         * @property {google.analytics.data.v1alpha.EventExclusionDuration|null} [eventExclusionDuration] EventSegmentExclusion eventExclusionDuration
                         * @property {google.analytics.data.v1alpha.IEventSegmentCriteria|null} [eventExclusionCriteria] EventSegmentExclusion eventExclusionCriteria
                         */
    
                        /**
                         * Constructs a new EventSegmentExclusion.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents an EventSegmentExclusion.
                         * @implements IEventSegmentExclusion
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IEventSegmentExclusion=} [properties] Properties to set
                         */
                        function EventSegmentExclusion(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventSegmentExclusion eventExclusionDuration.
                         * @member {google.analytics.data.v1alpha.EventExclusionDuration} eventExclusionDuration
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @instance
                         */
                        EventSegmentExclusion.prototype.eventExclusionDuration = 0;
    
                        /**
                         * EventSegmentExclusion eventExclusionCriteria.
                         * @member {google.analytics.data.v1alpha.IEventSegmentCriteria|null|undefined} eventExclusionCriteria
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @instance
                         */
                        EventSegmentExclusion.prototype.eventExclusionCriteria = null;
    
                        /**
                         * Creates a new EventSegmentExclusion instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentExclusion=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.EventSegmentExclusion} EventSegmentExclusion instance
                         */
                        EventSegmentExclusion.create = function create(properties) {
                            return new EventSegmentExclusion(properties);
                        };
    
                        /**
                         * Encodes the specified EventSegmentExclusion message. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentExclusion.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentExclusion} message EventSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentExclusion.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventExclusionDuration != null && Object.hasOwnProperty.call(message, "eventExclusionDuration"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eventExclusionDuration);
                            if (message.eventExclusionCriteria != null && Object.hasOwnProperty.call(message, "eventExclusionCriteria"))
                                $root.google.analytics.data.v1alpha.EventSegmentCriteria.encode(message.eventExclusionCriteria, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventSegmentExclusion message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.EventSegmentExclusion.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.IEventSegmentExclusion} message EventSegmentExclusion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventSegmentExclusion.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventSegmentExclusion message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.EventSegmentExclusion} EventSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentExclusion.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.EventSegmentExclusion();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventExclusionDuration = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.eventExclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventSegmentExclusion message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.EventSegmentExclusion} EventSegmentExclusion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventSegmentExclusion.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventSegmentExclusion message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventSegmentExclusion.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventExclusionDuration != null && message.hasOwnProperty("eventExclusionDuration"))
                                switch (message.eventExclusionDuration) {
                                default:
                                    return "eventExclusionDuration: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.eventExclusionCriteria != null && message.hasOwnProperty("eventExclusionCriteria")) {
                                var error = $root.google.analytics.data.v1alpha.EventSegmentCriteria.verify(message.eventExclusionCriteria);
                                if (error)
                                    return "eventExclusionCriteria." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EventSegmentExclusion message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.EventSegmentExclusion} EventSegmentExclusion
                         */
                        EventSegmentExclusion.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.EventSegmentExclusion)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.EventSegmentExclusion();
                            switch (object.eventExclusionDuration) {
                            default:
                                if (typeof object.eventExclusionDuration === "number") {
                                    message.eventExclusionDuration = object.eventExclusionDuration;
                                    break;
                                }
                                break;
                            case "EVENT_EXCLUSION_DURATION_UNSPECIFIED":
                            case 0:
                                message.eventExclusionDuration = 0;
                                break;
                            case "EVENT_EXCLUSION_PERMANENT":
                            case 1:
                                message.eventExclusionDuration = 1;
                                break;
                            }
                            if (object.eventExclusionCriteria != null) {
                                if (typeof object.eventExclusionCriteria !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.EventSegmentExclusion.eventExclusionCriteria: object expected");
                                message.eventExclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.fromObject(object.eventExclusionCriteria);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventSegmentExclusion message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {google.analytics.data.v1alpha.EventSegmentExclusion} message EventSegmentExclusion
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventSegmentExclusion.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.eventExclusionDuration = options.enums === String ? "EVENT_EXCLUSION_DURATION_UNSPECIFIED" : 0;
                                object.eventExclusionCriteria = null;
                            }
                            if (message.eventExclusionDuration != null && message.hasOwnProperty("eventExclusionDuration"))
                                object.eventExclusionDuration = options.enums === String ? $root.google.analytics.data.v1alpha.EventExclusionDuration[message.eventExclusionDuration] === undefined ? message.eventExclusionDuration : $root.google.analytics.data.v1alpha.EventExclusionDuration[message.eventExclusionDuration] : message.eventExclusionDuration;
                            if (message.eventExclusionCriteria != null && message.hasOwnProperty("eventExclusionCriteria"))
                                object.eventExclusionCriteria = $root.google.analytics.data.v1alpha.EventSegmentCriteria.toObject(message.eventExclusionCriteria, options);
                            return object;
                        };
    
                        /**
                         * Converts this EventSegmentExclusion to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventSegmentExclusion.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventSegmentExclusion
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.EventSegmentExclusion
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventSegmentExclusion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.EventSegmentExclusion";
                        };
    
                        return EventSegmentExclusion;
                    })();
    
                    /**
                     * EventExclusionDuration enum.
                     * @name google.analytics.data.v1alpha.EventExclusionDuration
                     * @enum {number}
                     * @property {number} EVENT_EXCLUSION_DURATION_UNSPECIFIED=0 EVENT_EXCLUSION_DURATION_UNSPECIFIED value
                     * @property {number} EVENT_EXCLUSION_PERMANENT=1 EVENT_EXCLUSION_PERMANENT value
                     */
                    v1alpha.EventExclusionDuration = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EVENT_EXCLUSION_DURATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "EVENT_EXCLUSION_PERMANENT"] = 1;
                        return values;
                    })();
    
                    v1alpha.Segment = (function() {
    
                        /**
                         * Properties of a Segment.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegment
                         * @property {string|null} [name] Segment name
                         * @property {google.analytics.data.v1alpha.IUserSegment|null} [userSegment] Segment userSegment
                         * @property {google.analytics.data.v1alpha.ISessionSegment|null} [sessionSegment] Segment sessionSegment
                         * @property {google.analytics.data.v1alpha.IEventSegment|null} [eventSegment] Segment eventSegment
                         */
    
                        /**
                         * Constructs a new Segment.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a Segment.
                         * @implements ISegment
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegment=} [properties] Properties to set
                         */
                        function Segment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Segment name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         */
                        Segment.prototype.name = "";
    
                        /**
                         * Segment userSegment.
                         * @member {google.analytics.data.v1alpha.IUserSegment|null|undefined} userSegment
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         */
                        Segment.prototype.userSegment = null;
    
                        /**
                         * Segment sessionSegment.
                         * @member {google.analytics.data.v1alpha.ISessionSegment|null|undefined} sessionSegment
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         */
                        Segment.prototype.sessionSegment = null;
    
                        /**
                         * Segment eventSegment.
                         * @member {google.analytics.data.v1alpha.IEventSegment|null|undefined} eventSegment
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         */
                        Segment.prototype.eventSegment = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Segment oneSegmentScope.
                         * @member {"userSegment"|"sessionSegment"|"eventSegment"|undefined} oneSegmentScope
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         */
                        Object.defineProperty(Segment.prototype, "oneSegmentScope", {
                            get: $util.oneOfGetter($oneOfFields = ["userSegment", "sessionSegment", "eventSegment"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Segment instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegment=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.Segment} Segment instance
                         */
                        Segment.create = function create(properties) {
                            return new Segment(properties);
                        };
    
                        /**
                         * Encodes the specified Segment message. Does not implicitly {@link google.analytics.data.v1alpha.Segment.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegment} message Segment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Segment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.userSegment != null && Object.hasOwnProperty.call(message, "userSegment"))
                                $root.google.analytics.data.v1alpha.UserSegment.encode(message.userSegment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.sessionSegment != null && Object.hasOwnProperty.call(message, "sessionSegment"))
                                $root.google.analytics.data.v1alpha.SessionSegment.encode(message.sessionSegment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.eventSegment != null && Object.hasOwnProperty.call(message, "eventSegment"))
                                $root.google.analytics.data.v1alpha.EventSegment.encode(message.eventSegment, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Segment message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.Segment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegment} message Segment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Segment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Segment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.Segment} Segment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Segment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.Segment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userSegment = $root.google.analytics.data.v1alpha.UserSegment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.sessionSegment = $root.google.analytics.data.v1alpha.SessionSegment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.eventSegment = $root.google.analytics.data.v1alpha.EventSegment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Segment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.Segment} Segment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Segment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Segment message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Segment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.userSegment != null && message.hasOwnProperty("userSegment")) {
                                properties.oneSegmentScope = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.UserSegment.verify(message.userSegment);
                                    if (error)
                                        return "userSegment." + error;
                                }
                            }
                            if (message.sessionSegment != null && message.hasOwnProperty("sessionSegment")) {
                                if (properties.oneSegmentScope === 1)
                                    return "oneSegmentScope: multiple values";
                                properties.oneSegmentScope = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SessionSegment.verify(message.sessionSegment);
                                    if (error)
                                        return "sessionSegment." + error;
                                }
                            }
                            if (message.eventSegment != null && message.hasOwnProperty("eventSegment")) {
                                if (properties.oneSegmentScope === 1)
                                    return "oneSegmentScope: multiple values";
                                properties.oneSegmentScope = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.EventSegment.verify(message.eventSegment);
                                    if (error)
                                        return "eventSegment." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Segment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.Segment} Segment
                         */
                        Segment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.Segment)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.Segment();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.userSegment != null) {
                                if (typeof object.userSegment !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Segment.userSegment: object expected");
                                message.userSegment = $root.google.analytics.data.v1alpha.UserSegment.fromObject(object.userSegment);
                            }
                            if (object.sessionSegment != null) {
                                if (typeof object.sessionSegment !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Segment.sessionSegment: object expected");
                                message.sessionSegment = $root.google.analytics.data.v1alpha.SessionSegment.fromObject(object.sessionSegment);
                            }
                            if (object.eventSegment != null) {
                                if (typeof object.eventSegment !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.Segment.eventSegment: object expected");
                                message.eventSegment = $root.google.analytics.data.v1alpha.EventSegment.fromObject(object.eventSegment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Segment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {google.analytics.data.v1alpha.Segment} message Segment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Segment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.userSegment != null && message.hasOwnProperty("userSegment")) {
                                object.userSegment = $root.google.analytics.data.v1alpha.UserSegment.toObject(message.userSegment, options);
                                if (options.oneofs)
                                    object.oneSegmentScope = "userSegment";
                            }
                            if (message.sessionSegment != null && message.hasOwnProperty("sessionSegment")) {
                                object.sessionSegment = $root.google.analytics.data.v1alpha.SessionSegment.toObject(message.sessionSegment, options);
                                if (options.oneofs)
                                    object.oneSegmentScope = "sessionSegment";
                            }
                            if (message.eventSegment != null && message.hasOwnProperty("eventSegment")) {
                                object.eventSegment = $root.google.analytics.data.v1alpha.EventSegment.toObject(message.eventSegment, options);
                                if (options.oneofs)
                                    object.oneSegmentScope = "eventSegment";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Segment to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Segment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Segment
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.Segment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Segment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.Segment";
                        };
    
                        return Segment;
                    })();
    
                    v1alpha.SegmentFilterExpression = (function() {
    
                        /**
                         * Properties of a SegmentFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentFilterExpression
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpressionList|null} [andGroup] SegmentFilterExpression andGroup
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpressionList|null} [orGroup] SegmentFilterExpression orGroup
                         * @property {google.analytics.data.v1alpha.ISegmentFilterExpression|null} [notExpression] SegmentFilterExpression notExpression
                         * @property {google.analytics.data.v1alpha.ISegmentFilter|null} [segmentFilter] SegmentFilterExpression segmentFilter
                         * @property {google.analytics.data.v1alpha.ISegmentEventFilter|null} [segmentEventFilter] SegmentFilterExpression segmentEventFilter
                         */
    
                        /**
                         * Constructs a new SegmentFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentFilterExpression.
                         * @implements ISegmentFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpression=} [properties] Properties to set
                         */
                        function SegmentFilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentFilterExpression andGroup.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        SegmentFilterExpression.prototype.andGroup = null;
    
                        /**
                         * SegmentFilterExpression orGroup.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        SegmentFilterExpression.prototype.orGroup = null;
    
                        /**
                         * SegmentFilterExpression notExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        SegmentFilterExpression.prototype.notExpression = null;
    
                        /**
                         * SegmentFilterExpression segmentFilter.
                         * @member {google.analytics.data.v1alpha.ISegmentFilter|null|undefined} segmentFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        SegmentFilterExpression.prototype.segmentFilter = null;
    
                        /**
                         * SegmentFilterExpression segmentEventFilter.
                         * @member {google.analytics.data.v1alpha.ISegmentEventFilter|null|undefined} segmentEventFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        SegmentFilterExpression.prototype.segmentEventFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentFilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"segmentFilter"|"segmentEventFilter"|undefined} expr
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         */
                        Object.defineProperty(SegmentFilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "segmentFilter", "segmentEventFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentFilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpression} SegmentFilterExpression instance
                         */
                        SegmentFilterExpression.create = function create(properties) {
                            return new SegmentFilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentFilterExpression message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpression} message SegmentFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.segmentFilter != null && Object.hasOwnProperty.call(message, "segmentFilter"))
                                $root.google.analytics.data.v1alpha.SegmentFilter.encode(message.segmentFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.segmentEventFilter != null && Object.hasOwnProperty.call(message, "segmentEventFilter"))
                                $root.google.analytics.data.v1alpha.SegmentEventFilter.encode(message.segmentEventFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentFilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpression} message SegmentFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentFilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpression} SegmentFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentFilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.segmentFilter = $root.google.analytics.data.v1alpha.SegmentFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.segmentEventFilter = $root.google.analytics.data.v1alpha.SegmentEventFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentFilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpression} SegmentFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentFilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentFilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.segmentFilter != null && message.hasOwnProperty("segmentFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentFilter.verify(message.segmentFilter);
                                    if (error)
                                        return "segmentFilter." + error;
                                }
                            }
                            if (message.segmentEventFilter != null && message.hasOwnProperty("segmentEventFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentEventFilter.verify(message.segmentEventFilter);
                                    if (error)
                                        return "segmentEventFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentFilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpression} SegmentFilterExpression
                         */
                        SegmentFilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentFilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentFilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.notExpression);
                            }
                            if (object.segmentFilter != null) {
                                if (typeof object.segmentFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpression.segmentFilter: object expected");
                                message.segmentFilter = $root.google.analytics.data.v1alpha.SegmentFilter.fromObject(object.segmentFilter);
                            }
                            if (object.segmentEventFilter != null) {
                                if (typeof object.segmentEventFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpression.segmentEventFilter: object expected");
                                message.segmentEventFilter = $root.google.analytics.data.v1alpha.SegmentEventFilter.fromObject(object.segmentEventFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentFilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentFilterExpression} message SegmentFilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentFilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1alpha.SegmentFilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.segmentFilter != null && message.hasOwnProperty("segmentFilter")) {
                                object.segmentFilter = $root.google.analytics.data.v1alpha.SegmentFilter.toObject(message.segmentFilter, options);
                                if (options.oneofs)
                                    object.expr = "segmentFilter";
                            }
                            if (message.segmentEventFilter != null && message.hasOwnProperty("segmentEventFilter")) {
                                object.segmentEventFilter = $root.google.analytics.data.v1alpha.SegmentEventFilter.toObject(message.segmentEventFilter, options);
                                if (options.oneofs)
                                    object.expr = "segmentEventFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentFilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentFilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentFilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentFilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentFilterExpression";
                        };
    
                        return SegmentFilterExpression;
                    })();
    
                    v1alpha.SegmentFilterExpressionList = (function() {
    
                        /**
                         * Properties of a SegmentFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentFilterExpressionList
                         * @property {Array.<google.analytics.data.v1alpha.ISegmentFilterExpression>|null} [expressions] SegmentFilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new SegmentFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentFilterExpressionList.
                         * @implements ISegmentFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpressionList=} [properties] Properties to set
                         */
                        function SegmentFilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentFilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1alpha.ISegmentFilterExpression>} expressions
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @instance
                         */
                        SegmentFilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new SegmentFilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpressionList} SegmentFilterExpressionList instance
                         */
                        SegmentFilterExpressionList.create = function create(properties) {
                            return new SegmentFilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentFilterExpressionList message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpressionList} message SegmentFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1alpha.SegmentFilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentFilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterExpressionList} message SegmentFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentFilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpressionList} SegmentFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentFilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1alpha.SegmentFilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentFilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpressionList} SegmentFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentFilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentFilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.SegmentFilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentFilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentFilterExpressionList} SegmentFilterExpressionList
                         */
                        SegmentFilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentFilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentFilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.SegmentFilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1alpha.SegmentFilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentFilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentFilterExpressionList} message SegmentFilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentFilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1alpha.SegmentFilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentFilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentFilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentFilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentFilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentFilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentFilterExpressionList";
                        };
    
                        return SegmentFilterExpressionList;
                    })();
    
                    v1alpha.SegmentFilter = (function() {
    
                        /**
                         * Properties of a SegmentFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentFilter
                         * @property {string|null} [fieldName] SegmentFilter fieldName
                         * @property {google.analytics.data.v1alpha.IStringFilter|null} [stringFilter] SegmentFilter stringFilter
                         * @property {google.analytics.data.v1alpha.IInListFilter|null} [inListFilter] SegmentFilter inListFilter
                         * @property {google.analytics.data.v1alpha.INumericFilter|null} [numericFilter] SegmentFilter numericFilter
                         * @property {google.analytics.data.v1alpha.IBetweenFilter|null} [betweenFilter] SegmentFilter betweenFilter
                         * @property {google.analytics.data.v1alpha.ISegmentFilterScoping|null} [filterScoping] SegmentFilter filterScoping
                         */
    
                        /**
                         * Constructs a new SegmentFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentFilter.
                         * @implements ISegmentFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentFilter=} [properties] Properties to set
                         */
                        function SegmentFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentFilter fieldName.
                         * @member {string} fieldName
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.fieldName = "";
    
                        /**
                         * SegmentFilter stringFilter.
                         * @member {google.analytics.data.v1alpha.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.stringFilter = null;
    
                        /**
                         * SegmentFilter inListFilter.
                         * @member {google.analytics.data.v1alpha.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.inListFilter = null;
    
                        /**
                         * SegmentFilter numericFilter.
                         * @member {google.analytics.data.v1alpha.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.numericFilter = null;
    
                        /**
                         * SegmentFilter betweenFilter.
                         * @member {google.analytics.data.v1alpha.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.betweenFilter = null;
    
                        /**
                         * SegmentFilter filterScoping.
                         * @member {google.analytics.data.v1alpha.ISegmentFilterScoping|null|undefined} filterScoping
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        SegmentFilter.prototype.filterScoping = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentFilter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         */
                        Object.defineProperty(SegmentFilter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentFilter} SegmentFilter instance
                         */
                        SegmentFilter.create = function create(properties) {
                            return new SegmentFilter(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentFilter message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilter} message SegmentFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1alpha.StringFilter.encode(message.stringFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1alpha.InListFilter.encode(message.inListFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1alpha.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1alpha.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.filterScoping != null && Object.hasOwnProperty.call(message, "filterScoping"))
                                $root.google.analytics.data.v1alpha.SegmentFilterScoping.encode(message.filterScoping, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilter} message SegmentFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentFilter} SegmentFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fieldName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.filterScoping = $root.google.analytics.data.v1alpha.SegmentFilterScoping.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentFilter} SegmentFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                if (!$util.isString(message.fieldName))
                                    return "fieldName: string expected";
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            if (message.filterScoping != null && message.hasOwnProperty("filterScoping")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentFilterScoping.verify(message.filterScoping);
                                if (error)
                                    return "filterScoping." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentFilter} SegmentFilter
                         */
                        SegmentFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentFilter();
                            if (object.fieldName != null)
                                message.fieldName = String(object.fieldName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            if (object.filterScoping != null) {
                                if (typeof object.filterScoping !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentFilter.filterScoping: object expected");
                                message.filterScoping = $root.google.analytics.data.v1alpha.SegmentFilterScoping.fromObject(object.filterScoping);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentFilter} message SegmentFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.fieldName = "";
                                object.filterScoping = null;
                            }
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                object.fieldName = message.fieldName;
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            if (message.filterScoping != null && message.hasOwnProperty("filterScoping"))
                                object.filterScoping = $root.google.analytics.data.v1alpha.SegmentFilterScoping.toObject(message.filterScoping, options);
                            return object;
                        };
    
                        /**
                         * Converts this SegmentFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentFilter";
                        };
    
                        return SegmentFilter;
                    })();
    
                    v1alpha.SegmentFilterScoping = (function() {
    
                        /**
                         * Properties of a SegmentFilterScoping.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentFilterScoping
                         * @property {boolean|null} [atAnyPointInTime] SegmentFilterScoping atAnyPointInTime
                         */
    
                        /**
                         * Constructs a new SegmentFilterScoping.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentFilterScoping.
                         * @implements ISegmentFilterScoping
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentFilterScoping=} [properties] Properties to set
                         */
                        function SegmentFilterScoping(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentFilterScoping atAnyPointInTime.
                         * @member {boolean|null|undefined} atAnyPointInTime
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @instance
                         */
                        SegmentFilterScoping.prototype.atAnyPointInTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentFilterScoping _atAnyPointInTime.
                         * @member {"atAnyPointInTime"|undefined} _atAnyPointInTime
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @instance
                         */
                        Object.defineProperty(SegmentFilterScoping.prototype, "_atAnyPointInTime", {
                            get: $util.oneOfGetter($oneOfFields = ["atAnyPointInTime"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentFilterScoping instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterScoping=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentFilterScoping} SegmentFilterScoping instance
                         */
                        SegmentFilterScoping.create = function create(properties) {
                            return new SegmentFilterScoping(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentFilterScoping message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterScoping.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterScoping} message SegmentFilterScoping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterScoping.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.atAnyPointInTime != null && Object.hasOwnProperty.call(message, "atAnyPointInTime"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.atAnyPointInTime);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentFilterScoping message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentFilterScoping.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentFilterScoping} message SegmentFilterScoping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentFilterScoping.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentFilterScoping message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentFilterScoping} SegmentFilterScoping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterScoping.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentFilterScoping();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.atAnyPointInTime = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentFilterScoping message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentFilterScoping} SegmentFilterScoping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentFilterScoping.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentFilterScoping message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentFilterScoping.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.atAnyPointInTime != null && message.hasOwnProperty("atAnyPointInTime")) {
                                properties._atAnyPointInTime = 1;
                                if (typeof message.atAnyPointInTime !== "boolean")
                                    return "atAnyPointInTime: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentFilterScoping message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentFilterScoping} SegmentFilterScoping
                         */
                        SegmentFilterScoping.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentFilterScoping)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentFilterScoping();
                            if (object.atAnyPointInTime != null)
                                message.atAnyPointInTime = Boolean(object.atAnyPointInTime);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentFilterScoping message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentFilterScoping} message SegmentFilterScoping
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentFilterScoping.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.atAnyPointInTime != null && message.hasOwnProperty("atAnyPointInTime")) {
                                object.atAnyPointInTime = message.atAnyPointInTime;
                                if (options.oneofs)
                                    object._atAnyPointInTime = "atAnyPointInTime";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentFilterScoping to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentFilterScoping.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentFilterScoping
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentFilterScoping
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentFilterScoping.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentFilterScoping";
                        };
    
                        return SegmentFilterScoping;
                    })();
    
                    v1alpha.SegmentEventFilter = (function() {
    
                        /**
                         * Properties of a SegmentEventFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentEventFilter
                         * @property {string|null} [eventName] SegmentEventFilter eventName
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilterExpression|null} [segmentParameterFilterExpression] SegmentEventFilter segmentParameterFilterExpression
                         */
    
                        /**
                         * Constructs a new SegmentEventFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentEventFilter.
                         * @implements ISegmentEventFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentEventFilter=} [properties] Properties to set
                         */
                        function SegmentEventFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentEventFilter eventName.
                         * @member {string|null|undefined} eventName
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @instance
                         */
                        SegmentEventFilter.prototype.eventName = null;
    
                        /**
                         * SegmentEventFilter segmentParameterFilterExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilterExpression|null|undefined} segmentParameterFilterExpression
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @instance
                         */
                        SegmentEventFilter.prototype.segmentParameterFilterExpression = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentEventFilter _eventName.
                         * @member {"eventName"|undefined} _eventName
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @instance
                         */
                        Object.defineProperty(SegmentEventFilter.prototype, "_eventName", {
                            get: $util.oneOfGetter($oneOfFields = ["eventName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * SegmentEventFilter _segmentParameterFilterExpression.
                         * @member {"segmentParameterFilterExpression"|undefined} _segmentParameterFilterExpression
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @instance
                         */
                        Object.defineProperty(SegmentEventFilter.prototype, "_segmentParameterFilterExpression", {
                            get: $util.oneOfGetter($oneOfFields = ["segmentParameterFilterExpression"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentEventFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentEventFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentEventFilter} SegmentEventFilter instance
                         */
                        SegmentEventFilter.create = function create(properties) {
                            return new SegmentEventFilter(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentEventFilter message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentEventFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentEventFilter} message SegmentEventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentEventFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventName != null && Object.hasOwnProperty.call(message, "eventName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventName);
                            if (message.segmentParameterFilterExpression != null && Object.hasOwnProperty.call(message, "segmentParameterFilterExpression"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.encode(message.segmentParameterFilterExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentEventFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentEventFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentEventFilter} message SegmentEventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentEventFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentEventFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentEventFilter} SegmentEventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentEventFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentEventFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.segmentParameterFilterExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentEventFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentEventFilter} SegmentEventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentEventFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentEventFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentEventFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.eventName != null && message.hasOwnProperty("eventName")) {
                                properties._eventName = 1;
                                if (!$util.isString(message.eventName))
                                    return "eventName: string expected";
                            }
                            if (message.segmentParameterFilterExpression != null && message.hasOwnProperty("segmentParameterFilterExpression")) {
                                properties._segmentParameterFilterExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.verify(message.segmentParameterFilterExpression);
                                    if (error)
                                        return "segmentParameterFilterExpression." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentEventFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentEventFilter} SegmentEventFilter
                         */
                        SegmentEventFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentEventFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentEventFilter();
                            if (object.eventName != null)
                                message.eventName = String(object.eventName);
                            if (object.segmentParameterFilterExpression != null) {
                                if (typeof object.segmentParameterFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentEventFilter.segmentParameterFilterExpression: object expected");
                                message.segmentParameterFilterExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.fromObject(object.segmentParameterFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentEventFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentEventFilter} message SegmentEventFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentEventFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.eventName != null && message.hasOwnProperty("eventName")) {
                                object.eventName = message.eventName;
                                if (options.oneofs)
                                    object._eventName = "eventName";
                            }
                            if (message.segmentParameterFilterExpression != null && message.hasOwnProperty("segmentParameterFilterExpression")) {
                                object.segmentParameterFilterExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.toObject(message.segmentParameterFilterExpression, options);
                                if (options.oneofs)
                                    object._segmentParameterFilterExpression = "segmentParameterFilterExpression";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentEventFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentEventFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentEventFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentEventFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentEventFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentEventFilter";
                        };
    
                        return SegmentEventFilter;
                    })();
    
                    v1alpha.SegmentParameterFilterExpression = (function() {
    
                        /**
                         * Properties of a SegmentParameterFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentParameterFilterExpression
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList|null} [andGroup] SegmentParameterFilterExpression andGroup
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList|null} [orGroup] SegmentParameterFilterExpression orGroup
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilterExpression|null} [notExpression] SegmentParameterFilterExpression notExpression
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilter|null} [segmentParameterFilter] SegmentParameterFilterExpression segmentParameterFilter
                         */
    
                        /**
                         * Constructs a new SegmentParameterFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentParameterFilterExpression.
                         * @implements ISegmentParameterFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpression=} [properties] Properties to set
                         */
                        function SegmentParameterFilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentParameterFilterExpression andGroup.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         */
                        SegmentParameterFilterExpression.prototype.andGroup = null;
    
                        /**
                         * SegmentParameterFilterExpression orGroup.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         */
                        SegmentParameterFilterExpression.prototype.orGroup = null;
    
                        /**
                         * SegmentParameterFilterExpression notExpression.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         */
                        SegmentParameterFilterExpression.prototype.notExpression = null;
    
                        /**
                         * SegmentParameterFilterExpression segmentParameterFilter.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilter|null|undefined} segmentParameterFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         */
                        SegmentParameterFilterExpression.prototype.segmentParameterFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentParameterFilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"segmentParameterFilter"|undefined} expr
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         */
                        Object.defineProperty(SegmentParameterFilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "segmentParameterFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentParameterFilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpression} SegmentParameterFilterExpression instance
                         */
                        SegmentParameterFilterExpression.create = function create(properties) {
                            return new SegmentParameterFilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterExpression message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpression} message SegmentParameterFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.segmentParameterFilter != null && Object.hasOwnProperty.call(message, "segmentParameterFilter"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilter.encode(message.segmentParameterFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpression} message SegmentParameterFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpression} SegmentParameterFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.segmentParameterFilter = $root.google.analytics.data.v1alpha.SegmentParameterFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpression} SegmentParameterFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentParameterFilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentParameterFilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.segmentParameterFilter != null && message.hasOwnProperty("segmentParameterFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilter.verify(message.segmentParameterFilter);
                                    if (error)
                                        return "segmentParameterFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentParameterFilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpression} SegmentParameterFilterExpression
                         */
                        SegmentParameterFilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.fromObject(object.notExpression);
                            }
                            if (object.segmentParameterFilter != null) {
                                if (typeof object.segmentParameterFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpression.segmentParameterFilter: object expected");
                                message.segmentParameterFilter = $root.google.analytics.data.v1alpha.SegmentParameterFilter.fromObject(object.segmentParameterFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentParameterFilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentParameterFilterExpression} message SegmentParameterFilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentParameterFilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.segmentParameterFilter != null && message.hasOwnProperty("segmentParameterFilter")) {
                                object.segmentParameterFilter = $root.google.analytics.data.v1alpha.SegmentParameterFilter.toObject(message.segmentParameterFilter, options);
                                if (options.oneofs)
                                    object.expr = "segmentParameterFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentParameterFilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentParameterFilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentParameterFilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentParameterFilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentParameterFilterExpression";
                        };
    
                        return SegmentParameterFilterExpression;
                    })();
    
                    v1alpha.SegmentParameterFilterExpressionList = (function() {
    
                        /**
                         * Properties of a SegmentParameterFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentParameterFilterExpressionList
                         * @property {Array.<google.analytics.data.v1alpha.ISegmentParameterFilterExpression>|null} [expressions] SegmentParameterFilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new SegmentParameterFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentParameterFilterExpressionList.
                         * @implements ISegmentParameterFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList=} [properties] Properties to set
                         */
                        function SegmentParameterFilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentParameterFilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1alpha.ISegmentParameterFilterExpression>} expressions
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @instance
                         */
                        SegmentParameterFilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new SegmentParameterFilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpressionList} SegmentParameterFilterExpressionList instance
                         */
                        SegmentParameterFilterExpressionList.create = function create(properties) {
                            return new SegmentParameterFilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterExpressionList message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList} message SegmentParameterFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterExpressionList} message SegmentParameterFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpressionList} SegmentParameterFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpressionList} SegmentParameterFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentParameterFilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentParameterFilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentParameterFilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterExpressionList} SegmentParameterFilterExpressionList
                         */
                        SegmentParameterFilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentParameterFilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentParameterFilterExpressionList} message SegmentParameterFilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentParameterFilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1alpha.SegmentParameterFilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentParameterFilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentParameterFilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentParameterFilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentParameterFilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentParameterFilterExpressionList";
                        };
    
                        return SegmentParameterFilterExpressionList;
                    })();
    
                    v1alpha.SegmentParameterFilter = (function() {
    
                        /**
                         * Properties of a SegmentParameterFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentParameterFilter
                         * @property {string|null} [eventParameterName] SegmentParameterFilter eventParameterName
                         * @property {string|null} [itemParameterName] SegmentParameterFilter itemParameterName
                         * @property {google.analytics.data.v1alpha.IStringFilter|null} [stringFilter] SegmentParameterFilter stringFilter
                         * @property {google.analytics.data.v1alpha.IInListFilter|null} [inListFilter] SegmentParameterFilter inListFilter
                         * @property {google.analytics.data.v1alpha.INumericFilter|null} [numericFilter] SegmentParameterFilter numericFilter
                         * @property {google.analytics.data.v1alpha.IBetweenFilter|null} [betweenFilter] SegmentParameterFilter betweenFilter
                         * @property {google.analytics.data.v1alpha.ISegmentParameterFilterScoping|null} [filterScoping] SegmentParameterFilter filterScoping
                         */
    
                        /**
                         * Constructs a new SegmentParameterFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentParameterFilter.
                         * @implements ISegmentParameterFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilter=} [properties] Properties to set
                         */
                        function SegmentParameterFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentParameterFilter eventParameterName.
                         * @member {string|null|undefined} eventParameterName
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.eventParameterName = null;
    
                        /**
                         * SegmentParameterFilter itemParameterName.
                         * @member {string|null|undefined} itemParameterName
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.itemParameterName = null;
    
                        /**
                         * SegmentParameterFilter stringFilter.
                         * @member {google.analytics.data.v1alpha.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.stringFilter = null;
    
                        /**
                         * SegmentParameterFilter inListFilter.
                         * @member {google.analytics.data.v1alpha.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.inListFilter = null;
    
                        /**
                         * SegmentParameterFilter numericFilter.
                         * @member {google.analytics.data.v1alpha.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.numericFilter = null;
    
                        /**
                         * SegmentParameterFilter betweenFilter.
                         * @member {google.analytics.data.v1alpha.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.betweenFilter = null;
    
                        /**
                         * SegmentParameterFilter filterScoping.
                         * @member {google.analytics.data.v1alpha.ISegmentParameterFilterScoping|null|undefined} filterScoping
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        SegmentParameterFilter.prototype.filterScoping = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentParameterFilter oneParameter.
                         * @member {"eventParameterName"|"itemParameterName"|undefined} oneParameter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        Object.defineProperty(SegmentParameterFilter.prototype, "oneParameter", {
                            get: $util.oneOfGetter($oneOfFields = ["eventParameterName", "itemParameterName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * SegmentParameterFilter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         */
                        Object.defineProperty(SegmentParameterFilter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentParameterFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilter} SegmentParameterFilter instance
                         */
                        SegmentParameterFilter.create = function create(properties) {
                            return new SegmentParameterFilter(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilter message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilter} message SegmentParameterFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventParameterName != null && Object.hasOwnProperty.call(message, "eventParameterName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventParameterName);
                            if (message.itemParameterName != null && Object.hasOwnProperty.call(message, "itemParameterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.itemParameterName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1alpha.StringFilter.encode(message.stringFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1alpha.InListFilter.encode(message.inListFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1alpha.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1alpha.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.filterScoping != null && Object.hasOwnProperty.call(message, "filterScoping"))
                                $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping.encode(message.filterScoping, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilter} message SegmentParameterFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentParameterFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilter} SegmentParameterFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentParameterFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventParameterName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.itemParameterName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.filterScoping = $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentParameterFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilter} SegmentParameterFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentParameterFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentParameterFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.eventParameterName != null && message.hasOwnProperty("eventParameterName")) {
                                properties.oneParameter = 1;
                                if (!$util.isString(message.eventParameterName))
                                    return "eventParameterName: string expected";
                            }
                            if (message.itemParameterName != null && message.hasOwnProperty("itemParameterName")) {
                                if (properties.oneParameter === 1)
                                    return "oneParameter: multiple values";
                                properties.oneParameter = 1;
                                if (!$util.isString(message.itemParameterName))
                                    return "itemParameterName: string expected";
                            }
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            if (message.filterScoping != null && message.hasOwnProperty("filterScoping")) {
                                var error = $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping.verify(message.filterScoping);
                                if (error)
                                    return "filterScoping." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentParameterFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilter} SegmentParameterFilter
                         */
                        SegmentParameterFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentParameterFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentParameterFilter();
                            if (object.eventParameterName != null)
                                message.eventParameterName = String(object.eventParameterName);
                            if (object.itemParameterName != null)
                                message.itemParameterName = String(object.itemParameterName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            if (object.filterScoping != null) {
                                if (typeof object.filterScoping !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.SegmentParameterFilter.filterScoping: object expected");
                                message.filterScoping = $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping.fromObject(object.filterScoping);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentParameterFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentParameterFilter} message SegmentParameterFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentParameterFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.filterScoping = null;
                            if (message.eventParameterName != null && message.hasOwnProperty("eventParameterName")) {
                                object.eventParameterName = message.eventParameterName;
                                if (options.oneofs)
                                    object.oneParameter = "eventParameterName";
                            }
                            if (message.itemParameterName != null && message.hasOwnProperty("itemParameterName")) {
                                object.itemParameterName = message.itemParameterName;
                                if (options.oneofs)
                                    object.oneParameter = "itemParameterName";
                            }
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            if (message.filterScoping != null && message.hasOwnProperty("filterScoping"))
                                object.filterScoping = $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping.toObject(message.filterScoping, options);
                            return object;
                        };
    
                        /**
                         * Converts this SegmentParameterFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentParameterFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentParameterFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentParameterFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentParameterFilter";
                        };
    
                        return SegmentParameterFilter;
                    })();
    
                    v1alpha.SegmentParameterFilterScoping = (function() {
    
                        /**
                         * Properties of a SegmentParameterFilterScoping.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISegmentParameterFilterScoping
                         * @property {number|Long|null} [inAnyNDayPeriod] SegmentParameterFilterScoping inAnyNDayPeriod
                         */
    
                        /**
                         * Constructs a new SegmentParameterFilterScoping.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SegmentParameterFilterScoping.
                         * @implements ISegmentParameterFilterScoping
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterScoping=} [properties] Properties to set
                         */
                        function SegmentParameterFilterScoping(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SegmentParameterFilterScoping inAnyNDayPeriod.
                         * @member {number|Long|null|undefined} inAnyNDayPeriod
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @instance
                         */
                        SegmentParameterFilterScoping.prototype.inAnyNDayPeriod = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SegmentParameterFilterScoping _inAnyNDayPeriod.
                         * @member {"inAnyNDayPeriod"|undefined} _inAnyNDayPeriod
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @instance
                         */
                        Object.defineProperty(SegmentParameterFilterScoping.prototype, "_inAnyNDayPeriod", {
                            get: $util.oneOfGetter($oneOfFields = ["inAnyNDayPeriod"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SegmentParameterFilterScoping instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterScoping=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterScoping} SegmentParameterFilterScoping instance
                         */
                        SegmentParameterFilterScoping.create = function create(properties) {
                            return new SegmentParameterFilterScoping(properties);
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterScoping message. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterScoping.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterScoping} message SegmentParameterFilterScoping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterScoping.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.inAnyNDayPeriod != null && Object.hasOwnProperty.call(message, "inAnyNDayPeriod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.inAnyNDayPeriod);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SegmentParameterFilterScoping message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SegmentParameterFilterScoping.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.ISegmentParameterFilterScoping} message SegmentParameterFilterScoping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SegmentParameterFilterScoping.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterScoping message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterScoping} SegmentParameterFilterScoping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterScoping.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.inAnyNDayPeriod = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SegmentParameterFilterScoping message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterScoping} SegmentParameterFilterScoping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SegmentParameterFilterScoping.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SegmentParameterFilterScoping message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SegmentParameterFilterScoping.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inAnyNDayPeriod != null && message.hasOwnProperty("inAnyNDayPeriod")) {
                                properties._inAnyNDayPeriod = 1;
                                if (!$util.isInteger(message.inAnyNDayPeriod) && !(message.inAnyNDayPeriod && $util.isInteger(message.inAnyNDayPeriod.low) && $util.isInteger(message.inAnyNDayPeriod.high)))
                                    return "inAnyNDayPeriod: integer|Long expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SegmentParameterFilterScoping message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SegmentParameterFilterScoping} SegmentParameterFilterScoping
                         */
                        SegmentParameterFilterScoping.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SegmentParameterFilterScoping();
                            if (object.inAnyNDayPeriod != null)
                                if ($util.Long)
                                    (message.inAnyNDayPeriod = $util.Long.fromValue(object.inAnyNDayPeriod)).unsigned = false;
                                else if (typeof object.inAnyNDayPeriod === "string")
                                    message.inAnyNDayPeriod = parseInt(object.inAnyNDayPeriod, 10);
                                else if (typeof object.inAnyNDayPeriod === "number")
                                    message.inAnyNDayPeriod = object.inAnyNDayPeriod;
                                else if (typeof object.inAnyNDayPeriod === "object")
                                    message.inAnyNDayPeriod = new $util.LongBits(object.inAnyNDayPeriod.low >>> 0, object.inAnyNDayPeriod.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SegmentParameterFilterScoping message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {google.analytics.data.v1alpha.SegmentParameterFilterScoping} message SegmentParameterFilterScoping
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SegmentParameterFilterScoping.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.inAnyNDayPeriod != null && message.hasOwnProperty("inAnyNDayPeriod")) {
                                if (typeof message.inAnyNDayPeriod === "number")
                                    object.inAnyNDayPeriod = options.longs === String ? String(message.inAnyNDayPeriod) : message.inAnyNDayPeriod;
                                else
                                    object.inAnyNDayPeriod = options.longs === String ? $util.Long.prototype.toString.call(message.inAnyNDayPeriod) : options.longs === Number ? new $util.LongBits(message.inAnyNDayPeriod.low >>> 0, message.inAnyNDayPeriod.high >>> 0).toNumber() : message.inAnyNDayPeriod;
                                if (options.oneofs)
                                    object._inAnyNDayPeriod = "inAnyNDayPeriod";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SegmentParameterFilterScoping to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SegmentParameterFilterScoping.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SegmentParameterFilterScoping
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SegmentParameterFilterScoping
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SegmentParameterFilterScoping.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SegmentParameterFilterScoping";
                        };
    
                        return SegmentParameterFilterScoping;
                    })();
    
                    v1alpha.FunnelFilterExpression = (function() {
    
                        /**
                         * Properties of a FunnelFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelFilterExpression
                         * @property {google.analytics.data.v1alpha.IFunnelFilterExpressionList|null} [andGroup] FunnelFilterExpression andGroup
                         * @property {google.analytics.data.v1alpha.IFunnelFilterExpressionList|null} [orGroup] FunnelFilterExpression orGroup
                         * @property {google.analytics.data.v1alpha.IFunnelFilterExpression|null} [notExpression] FunnelFilterExpression notExpression
                         * @property {google.analytics.data.v1alpha.IFunnelFieldFilter|null} [funnelFieldFilter] FunnelFilterExpression funnelFieldFilter
                         * @property {google.analytics.data.v1alpha.IFunnelEventFilter|null} [funnelEventFilter] FunnelFilterExpression funnelEventFilter
                         */
    
                        /**
                         * Constructs a new FunnelFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelFilterExpression.
                         * @implements IFunnelFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpression=} [properties] Properties to set
                         */
                        function FunnelFilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelFilterExpression andGroup.
                         * @member {google.analytics.data.v1alpha.IFunnelFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        FunnelFilterExpression.prototype.andGroup = null;
    
                        /**
                         * FunnelFilterExpression orGroup.
                         * @member {google.analytics.data.v1alpha.IFunnelFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        FunnelFilterExpression.prototype.orGroup = null;
    
                        /**
                         * FunnelFilterExpression notExpression.
                         * @member {google.analytics.data.v1alpha.IFunnelFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        FunnelFilterExpression.prototype.notExpression = null;
    
                        /**
                         * FunnelFilterExpression funnelFieldFilter.
                         * @member {google.analytics.data.v1alpha.IFunnelFieldFilter|null|undefined} funnelFieldFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        FunnelFilterExpression.prototype.funnelFieldFilter = null;
    
                        /**
                         * FunnelFilterExpression funnelEventFilter.
                         * @member {google.analytics.data.v1alpha.IFunnelEventFilter|null|undefined} funnelEventFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        FunnelFilterExpression.prototype.funnelEventFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelFilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"funnelFieldFilter"|"funnelEventFilter"|undefined} expr
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         */
                        Object.defineProperty(FunnelFilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "funnelFieldFilter", "funnelEventFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelFilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpression} FunnelFilterExpression instance
                         */
                        FunnelFilterExpression.create = function create(properties) {
                            return new FunnelFilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelFilterExpression message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpression} message FunnelFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1alpha.FunnelFilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.funnelFieldFilter != null && Object.hasOwnProperty.call(message, "funnelFieldFilter"))
                                $root.google.analytics.data.v1alpha.FunnelFieldFilter.encode(message.funnelFieldFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.funnelEventFilter != null && Object.hasOwnProperty.call(message, "funnelEventFilter"))
                                $root.google.analytics.data.v1alpha.FunnelEventFilter.encode(message.funnelEventFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelFilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpression} message FunnelFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelFilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpression} FunnelFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelFilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.funnelFieldFilter = $root.google.analytics.data.v1alpha.FunnelFieldFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.funnelEventFilter = $root.google.analytics.data.v1alpha.FunnelEventFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelFilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpression} FunnelFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelFilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelFilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelFilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.funnelFieldFilter != null && message.hasOwnProperty("funnelFieldFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelFieldFilter.verify(message.funnelFieldFilter);
                                    if (error)
                                        return "funnelFieldFilter." + error;
                                }
                            }
                            if (message.funnelEventFilter != null && message.hasOwnProperty("funnelEventFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelEventFilter.verify(message.funnelEventFilter);
                                    if (error)
                                        return "funnelEventFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelFilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpression} FunnelFilterExpression
                         */
                        FunnelFilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelFilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelFilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.fromObject(object.notExpression);
                            }
                            if (object.funnelFieldFilter != null) {
                                if (typeof object.funnelFieldFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpression.funnelFieldFilter: object expected");
                                message.funnelFieldFilter = $root.google.analytics.data.v1alpha.FunnelFieldFilter.fromObject(object.funnelFieldFilter);
                            }
                            if (object.funnelEventFilter != null) {
                                if (typeof object.funnelEventFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpression.funnelEventFilter: object expected");
                                message.funnelEventFilter = $root.google.analytics.data.v1alpha.FunnelEventFilter.fromObject(object.funnelEventFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelFilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelFilterExpression} message FunnelFilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelFilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1alpha.FunnelFilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1alpha.FunnelFilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.funnelFieldFilter != null && message.hasOwnProperty("funnelFieldFilter")) {
                                object.funnelFieldFilter = $root.google.analytics.data.v1alpha.FunnelFieldFilter.toObject(message.funnelFieldFilter, options);
                                if (options.oneofs)
                                    object.expr = "funnelFieldFilter";
                            }
                            if (message.funnelEventFilter != null && message.hasOwnProperty("funnelEventFilter")) {
                                object.funnelEventFilter = $root.google.analytics.data.v1alpha.FunnelEventFilter.toObject(message.funnelEventFilter, options);
                                if (options.oneofs)
                                    object.expr = "funnelEventFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelFilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelFilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelFilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelFilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelFilterExpression";
                        };
    
                        return FunnelFilterExpression;
                    })();
    
                    v1alpha.FunnelFilterExpressionList = (function() {
    
                        /**
                         * Properties of a FunnelFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelFilterExpressionList
                         * @property {Array.<google.analytics.data.v1alpha.IFunnelFilterExpression>|null} [expressions] FunnelFilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new FunnelFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelFilterExpressionList.
                         * @implements IFunnelFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpressionList=} [properties] Properties to set
                         */
                        function FunnelFilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelFilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1alpha.IFunnelFilterExpression>} expressions
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @instance
                         */
                        FunnelFilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new FunnelFilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpressionList} FunnelFilterExpressionList instance
                         */
                        FunnelFilterExpressionList.create = function create(properties) {
                            return new FunnelFilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelFilterExpressionList message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpressionList} message FunnelFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1alpha.FunnelFilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelFilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFilterExpressionList} message FunnelFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelFilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpressionList} FunnelFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelFilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1alpha.FunnelFilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelFilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpressionList} FunnelFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelFilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelFilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.FunnelFilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelFilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelFilterExpressionList} FunnelFilterExpressionList
                         */
                        FunnelFilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelFilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelFilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelFilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1alpha.FunnelFilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelFilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelFilterExpressionList} message FunnelFilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelFilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1alpha.FunnelFilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelFilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelFilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelFilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelFilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelFilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelFilterExpressionList";
                        };
    
                        return FunnelFilterExpressionList;
                    })();
    
                    v1alpha.FunnelFieldFilter = (function() {
    
                        /**
                         * Properties of a FunnelFieldFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelFieldFilter
                         * @property {string|null} [fieldName] FunnelFieldFilter fieldName
                         * @property {google.analytics.data.v1alpha.IStringFilter|null} [stringFilter] FunnelFieldFilter stringFilter
                         * @property {google.analytics.data.v1alpha.IInListFilter|null} [inListFilter] FunnelFieldFilter inListFilter
                         * @property {google.analytics.data.v1alpha.INumericFilter|null} [numericFilter] FunnelFieldFilter numericFilter
                         * @property {google.analytics.data.v1alpha.IBetweenFilter|null} [betweenFilter] FunnelFieldFilter betweenFilter
                         */
    
                        /**
                         * Constructs a new FunnelFieldFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelFieldFilter.
                         * @implements IFunnelFieldFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelFieldFilter=} [properties] Properties to set
                         */
                        function FunnelFieldFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelFieldFilter fieldName.
                         * @member {string} fieldName
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        FunnelFieldFilter.prototype.fieldName = "";
    
                        /**
                         * FunnelFieldFilter stringFilter.
                         * @member {google.analytics.data.v1alpha.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        FunnelFieldFilter.prototype.stringFilter = null;
    
                        /**
                         * FunnelFieldFilter inListFilter.
                         * @member {google.analytics.data.v1alpha.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        FunnelFieldFilter.prototype.inListFilter = null;
    
                        /**
                         * FunnelFieldFilter numericFilter.
                         * @member {google.analytics.data.v1alpha.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        FunnelFieldFilter.prototype.numericFilter = null;
    
                        /**
                         * FunnelFieldFilter betweenFilter.
                         * @member {google.analytics.data.v1alpha.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        FunnelFieldFilter.prototype.betweenFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelFieldFilter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         */
                        Object.defineProperty(FunnelFieldFilter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelFieldFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFieldFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelFieldFilter} FunnelFieldFilter instance
                         */
                        FunnelFieldFilter.create = function create(properties) {
                            return new FunnelFieldFilter(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelFieldFilter message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFieldFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFieldFilter} message FunnelFieldFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFieldFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1alpha.StringFilter.encode(message.stringFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1alpha.InListFilter.encode(message.inListFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1alpha.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1alpha.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelFieldFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelFieldFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelFieldFilter} message FunnelFieldFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelFieldFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelFieldFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelFieldFilter} FunnelFieldFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFieldFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelFieldFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fieldName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelFieldFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelFieldFilter} FunnelFieldFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelFieldFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelFieldFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelFieldFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                if (!$util.isString(message.fieldName))
                                    return "fieldName: string expected";
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelFieldFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelFieldFilter} FunnelFieldFilter
                         */
                        FunnelFieldFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelFieldFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelFieldFilter();
                            if (object.fieldName != null)
                                message.fieldName = String(object.fieldName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFieldFilter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFieldFilter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFieldFilter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelFieldFilter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelFieldFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelFieldFilter} message FunnelFieldFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelFieldFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.fieldName = "";
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                object.fieldName = message.fieldName;
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelFieldFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelFieldFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelFieldFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelFieldFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelFieldFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelFieldFilter";
                        };
    
                        return FunnelFieldFilter;
                    })();
    
                    v1alpha.FunnelEventFilter = (function() {
    
                        /**
                         * Properties of a FunnelEventFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelEventFilter
                         * @property {string|null} [eventName] FunnelEventFilter eventName
                         * @property {google.analytics.data.v1alpha.IFunnelParameterFilterExpression|null} [funnelParameterFilterExpression] FunnelEventFilter funnelParameterFilterExpression
                         */
    
                        /**
                         * Constructs a new FunnelEventFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelEventFilter.
                         * @implements IFunnelEventFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelEventFilter=} [properties] Properties to set
                         */
                        function FunnelEventFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelEventFilter eventName.
                         * @member {string|null|undefined} eventName
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @instance
                         */
                        FunnelEventFilter.prototype.eventName = null;
    
                        /**
                         * FunnelEventFilter funnelParameterFilterExpression.
                         * @member {google.analytics.data.v1alpha.IFunnelParameterFilterExpression|null|undefined} funnelParameterFilterExpression
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @instance
                         */
                        FunnelEventFilter.prototype.funnelParameterFilterExpression = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelEventFilter _eventName.
                         * @member {"eventName"|undefined} _eventName
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @instance
                         */
                        Object.defineProperty(FunnelEventFilter.prototype, "_eventName", {
                            get: $util.oneOfGetter($oneOfFields = ["eventName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * FunnelEventFilter _funnelParameterFilterExpression.
                         * @member {"funnelParameterFilterExpression"|undefined} _funnelParameterFilterExpression
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @instance
                         */
                        Object.defineProperty(FunnelEventFilter.prototype, "_funnelParameterFilterExpression", {
                            get: $util.oneOfGetter($oneOfFields = ["funnelParameterFilterExpression"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelEventFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelEventFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelEventFilter} FunnelEventFilter instance
                         */
                        FunnelEventFilter.create = function create(properties) {
                            return new FunnelEventFilter(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelEventFilter message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelEventFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelEventFilter} message FunnelEventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelEventFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventName != null && Object.hasOwnProperty.call(message, "eventName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventName);
                            if (message.funnelParameterFilterExpression != null && Object.hasOwnProperty.call(message, "funnelParameterFilterExpression"))
                                $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.encode(message.funnelParameterFilterExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelEventFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelEventFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelEventFilter} message FunnelEventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelEventFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelEventFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelEventFilter} FunnelEventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelEventFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelEventFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.funnelParameterFilterExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelEventFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelEventFilter} FunnelEventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelEventFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelEventFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelEventFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.eventName != null && message.hasOwnProperty("eventName")) {
                                properties._eventName = 1;
                                if (!$util.isString(message.eventName))
                                    return "eventName: string expected";
                            }
                            if (message.funnelParameterFilterExpression != null && message.hasOwnProperty("funnelParameterFilterExpression")) {
                                properties._funnelParameterFilterExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.verify(message.funnelParameterFilterExpression);
                                    if (error)
                                        return "funnelParameterFilterExpression." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelEventFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelEventFilter} FunnelEventFilter
                         */
                        FunnelEventFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelEventFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelEventFilter();
                            if (object.eventName != null)
                                message.eventName = String(object.eventName);
                            if (object.funnelParameterFilterExpression != null) {
                                if (typeof object.funnelParameterFilterExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelEventFilter.funnelParameterFilterExpression: object expected");
                                message.funnelParameterFilterExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.fromObject(object.funnelParameterFilterExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelEventFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelEventFilter} message FunnelEventFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelEventFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.eventName != null && message.hasOwnProperty("eventName")) {
                                object.eventName = message.eventName;
                                if (options.oneofs)
                                    object._eventName = "eventName";
                            }
                            if (message.funnelParameterFilterExpression != null && message.hasOwnProperty("funnelParameterFilterExpression")) {
                                object.funnelParameterFilterExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.toObject(message.funnelParameterFilterExpression, options);
                                if (options.oneofs)
                                    object._funnelParameterFilterExpression = "funnelParameterFilterExpression";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelEventFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelEventFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelEventFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelEventFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelEventFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelEventFilter";
                        };
    
                        return FunnelEventFilter;
                    })();
    
                    v1alpha.FunnelParameterFilterExpression = (function() {
    
                        /**
                         * Properties of a FunnelParameterFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelParameterFilterExpression
                         * @property {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList|null} [andGroup] FunnelParameterFilterExpression andGroup
                         * @property {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList|null} [orGroup] FunnelParameterFilterExpression orGroup
                         * @property {google.analytics.data.v1alpha.IFunnelParameterFilterExpression|null} [notExpression] FunnelParameterFilterExpression notExpression
                         * @property {google.analytics.data.v1alpha.IFunnelParameterFilter|null} [funnelParameterFilter] FunnelParameterFilterExpression funnelParameterFilter
                         */
    
                        /**
                         * Constructs a new FunnelParameterFilterExpression.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelParameterFilterExpression.
                         * @implements IFunnelParameterFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpression=} [properties] Properties to set
                         */
                        function FunnelParameterFilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelParameterFilterExpression andGroup.
                         * @member {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         */
                        FunnelParameterFilterExpression.prototype.andGroup = null;
    
                        /**
                         * FunnelParameterFilterExpression orGroup.
                         * @member {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         */
                        FunnelParameterFilterExpression.prototype.orGroup = null;
    
                        /**
                         * FunnelParameterFilterExpression notExpression.
                         * @member {google.analytics.data.v1alpha.IFunnelParameterFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         */
                        FunnelParameterFilterExpression.prototype.notExpression = null;
    
                        /**
                         * FunnelParameterFilterExpression funnelParameterFilter.
                         * @member {google.analytics.data.v1alpha.IFunnelParameterFilter|null|undefined} funnelParameterFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         */
                        FunnelParameterFilterExpression.prototype.funnelParameterFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelParameterFilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"funnelParameterFilter"|undefined} expr
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         */
                        Object.defineProperty(FunnelParameterFilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "funnelParameterFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelParameterFilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpression} FunnelParameterFilterExpression instance
                         */
                        FunnelParameterFilterExpression.create = function create(properties) {
                            return new FunnelParameterFilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilterExpression message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpression} message FunnelParameterFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.funnelParameterFilter != null && Object.hasOwnProperty.call(message, "funnelParameterFilter"))
                                $root.google.analytics.data.v1alpha.FunnelParameterFilter.encode(message.funnelParameterFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpression} message FunnelParameterFilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelParameterFilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpression} FunnelParameterFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.funnelParameterFilter = $root.google.analytics.data.v1alpha.FunnelParameterFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelParameterFilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpression} FunnelParameterFilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelParameterFilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelParameterFilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.funnelParameterFilter != null && message.hasOwnProperty("funnelParameterFilter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilter.verify(message.funnelParameterFilter);
                                    if (error)
                                        return "funnelParameterFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelParameterFilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpression} FunnelParameterFilterExpression
                         */
                        FunnelParameterFilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.fromObject(object.notExpression);
                            }
                            if (object.funnelParameterFilter != null) {
                                if (typeof object.funnelParameterFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpression.funnelParameterFilter: object expected");
                                message.funnelParameterFilter = $root.google.analytics.data.v1alpha.FunnelParameterFilter.fromObject(object.funnelParameterFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelParameterFilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelParameterFilterExpression} message FunnelParameterFilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelParameterFilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.funnelParameterFilter != null && message.hasOwnProperty("funnelParameterFilter")) {
                                object.funnelParameterFilter = $root.google.analytics.data.v1alpha.FunnelParameterFilter.toObject(message.funnelParameterFilter, options);
                                if (options.oneofs)
                                    object.expr = "funnelParameterFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelParameterFilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelParameterFilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelParameterFilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelParameterFilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelParameterFilterExpression";
                        };
    
                        return FunnelParameterFilterExpression;
                    })();
    
                    v1alpha.FunnelParameterFilterExpressionList = (function() {
    
                        /**
                         * Properties of a FunnelParameterFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelParameterFilterExpressionList
                         * @property {Array.<google.analytics.data.v1alpha.IFunnelParameterFilterExpression>|null} [expressions] FunnelParameterFilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new FunnelParameterFilterExpressionList.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelParameterFilterExpressionList.
                         * @implements IFunnelParameterFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList=} [properties] Properties to set
                         */
                        function FunnelParameterFilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelParameterFilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1alpha.IFunnelParameterFilterExpression>} expressions
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @instance
                         */
                        FunnelParameterFilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new FunnelParameterFilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpressionList} FunnelParameterFilterExpressionList instance
                         */
                        FunnelParameterFilterExpressionList.create = function create(properties) {
                            return new FunnelParameterFilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilterExpressionList message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList} message FunnelParameterFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilterExpressionList} message FunnelParameterFilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelParameterFilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpressionList} FunnelParameterFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelParameterFilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpressionList} FunnelParameterFilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelParameterFilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelParameterFilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelParameterFilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilterExpressionList} FunnelParameterFilterExpressionList
                         */
                        FunnelParameterFilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelParameterFilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelParameterFilterExpressionList} message FunnelParameterFilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelParameterFilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1alpha.FunnelParameterFilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelParameterFilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelParameterFilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelParameterFilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelParameterFilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelParameterFilterExpressionList";
                        };
    
                        return FunnelParameterFilterExpressionList;
                    })();
    
                    v1alpha.FunnelParameterFilter = (function() {
    
                        /**
                         * Properties of a FunnelParameterFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelParameterFilter
                         * @property {string|null} [eventParameterName] FunnelParameterFilter eventParameterName
                         * @property {string|null} [itemParameterName] FunnelParameterFilter itemParameterName
                         * @property {google.analytics.data.v1alpha.IStringFilter|null} [stringFilter] FunnelParameterFilter stringFilter
                         * @property {google.analytics.data.v1alpha.IInListFilter|null} [inListFilter] FunnelParameterFilter inListFilter
                         * @property {google.analytics.data.v1alpha.INumericFilter|null} [numericFilter] FunnelParameterFilter numericFilter
                         * @property {google.analytics.data.v1alpha.IBetweenFilter|null} [betweenFilter] FunnelParameterFilter betweenFilter
                         */
    
                        /**
                         * Constructs a new FunnelParameterFilter.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelParameterFilter.
                         * @implements IFunnelParameterFilter
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilter=} [properties] Properties to set
                         */
                        function FunnelParameterFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelParameterFilter eventParameterName.
                         * @member {string|null|undefined} eventParameterName
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.eventParameterName = null;
    
                        /**
                         * FunnelParameterFilter itemParameterName.
                         * @member {string|null|undefined} itemParameterName
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.itemParameterName = null;
    
                        /**
                         * FunnelParameterFilter stringFilter.
                         * @member {google.analytics.data.v1alpha.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.stringFilter = null;
    
                        /**
                         * FunnelParameterFilter inListFilter.
                         * @member {google.analytics.data.v1alpha.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.inListFilter = null;
    
                        /**
                         * FunnelParameterFilter numericFilter.
                         * @member {google.analytics.data.v1alpha.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.numericFilter = null;
    
                        /**
                         * FunnelParameterFilter betweenFilter.
                         * @member {google.analytics.data.v1alpha.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        FunnelParameterFilter.prototype.betweenFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FunnelParameterFilter oneParameter.
                         * @member {"eventParameterName"|"itemParameterName"|undefined} oneParameter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        Object.defineProperty(FunnelParameterFilter.prototype, "oneParameter", {
                            get: $util.oneOfGetter($oneOfFields = ["eventParameterName", "itemParameterName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * FunnelParameterFilter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         */
                        Object.defineProperty(FunnelParameterFilter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FunnelParameterFilter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilter} FunnelParameterFilter instance
                         */
                        FunnelParameterFilter.create = function create(properties) {
                            return new FunnelParameterFilter(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilter message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilter} message FunnelParameterFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventParameterName != null && Object.hasOwnProperty.call(message, "eventParameterName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventParameterName);
                            if (message.itemParameterName != null && Object.hasOwnProperty.call(message, "itemParameterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.itemParameterName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1alpha.StringFilter.encode(message.stringFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1alpha.InListFilter.encode(message.inListFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1alpha.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1alpha.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelParameterFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelParameterFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelParameterFilter} message FunnelParameterFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelParameterFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelParameterFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilter} FunnelParameterFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelParameterFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventParameterName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.itemParameterName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelParameterFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilter} FunnelParameterFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelParameterFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelParameterFilter message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelParameterFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.eventParameterName != null && message.hasOwnProperty("eventParameterName")) {
                                properties.oneParameter = 1;
                                if (!$util.isString(message.eventParameterName))
                                    return "eventParameterName: string expected";
                            }
                            if (message.itemParameterName != null && message.hasOwnProperty("itemParameterName")) {
                                if (properties.oneParameter === 1)
                                    return "oneParameter: multiple values";
                                properties.oneParameter = 1;
                                if (!$util.isString(message.itemParameterName))
                                    return "itemParameterName: string expected";
                            }
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1alpha.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelParameterFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelParameterFilter} FunnelParameterFilter
                         */
                        FunnelParameterFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelParameterFilter)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelParameterFilter();
                            if (object.eventParameterName != null)
                                message.eventParameterName = String(object.eventParameterName);
                            if (object.itemParameterName != null)
                                message.itemParameterName = String(object.itemParameterName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelParameterFilter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelParameterFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelParameterFilter} message FunnelParameterFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelParameterFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.eventParameterName != null && message.hasOwnProperty("eventParameterName")) {
                                object.eventParameterName = message.eventParameterName;
                                if (options.oneofs)
                                    object.oneParameter = "eventParameterName";
                            }
                            if (message.itemParameterName != null && message.hasOwnProperty("itemParameterName")) {
                                object.itemParameterName = message.itemParameterName;
                                if (options.oneofs)
                                    object.oneParameter = "itemParameterName";
                            }
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1alpha.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1alpha.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1alpha.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1alpha.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelParameterFilter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelParameterFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelParameterFilter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelParameterFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelParameterFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelParameterFilter";
                        };
    
                        return FunnelParameterFilter;
                    })();
    
                    v1alpha.FunnelResponseMetadata = (function() {
    
                        /**
                         * Properties of a FunnelResponseMetadata.
                         * @memberof google.analytics.data.v1alpha
                         * @interface IFunnelResponseMetadata
                         * @property {Array.<google.analytics.data.v1alpha.ISamplingMetadata>|null} [samplingMetadatas] FunnelResponseMetadata samplingMetadatas
                         */
    
                        /**
                         * Constructs a new FunnelResponseMetadata.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a FunnelResponseMetadata.
                         * @implements IFunnelResponseMetadata
                         * @constructor
                         * @param {google.analytics.data.v1alpha.IFunnelResponseMetadata=} [properties] Properties to set
                         */
                        function FunnelResponseMetadata(properties) {
                            this.samplingMetadatas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FunnelResponseMetadata samplingMetadatas.
                         * @member {Array.<google.analytics.data.v1alpha.ISamplingMetadata>} samplingMetadatas
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @instance
                         */
                        FunnelResponseMetadata.prototype.samplingMetadatas = $util.emptyArray;
    
                        /**
                         * Creates a new FunnelResponseMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelResponseMetadata=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.FunnelResponseMetadata} FunnelResponseMetadata instance
                         */
                        FunnelResponseMetadata.create = function create(properties) {
                            return new FunnelResponseMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified FunnelResponseMetadata message. Does not implicitly {@link google.analytics.data.v1alpha.FunnelResponseMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelResponseMetadata} message FunnelResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelResponseMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplingMetadatas != null && message.samplingMetadatas.length)
                                for (var i = 0; i < message.samplingMetadatas.length; ++i)
                                    $root.google.analytics.data.v1alpha.SamplingMetadata.encode(message.samplingMetadatas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FunnelResponseMetadata message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.FunnelResponseMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.IFunnelResponseMetadata} message FunnelResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FunnelResponseMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FunnelResponseMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.FunnelResponseMetadata} FunnelResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelResponseMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.FunnelResponseMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.samplingMetadatas && message.samplingMetadatas.length))
                                            message.samplingMetadatas = [];
                                        message.samplingMetadatas.push($root.google.analytics.data.v1alpha.SamplingMetadata.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FunnelResponseMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.FunnelResponseMetadata} FunnelResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FunnelResponseMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FunnelResponseMetadata message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FunnelResponseMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplingMetadatas != null && message.hasOwnProperty("samplingMetadatas")) {
                                if (!Array.isArray(message.samplingMetadatas))
                                    return "samplingMetadatas: array expected";
                                for (var i = 0; i < message.samplingMetadatas.length; ++i) {
                                    var error = $root.google.analytics.data.v1alpha.SamplingMetadata.verify(message.samplingMetadatas[i]);
                                    if (error)
                                        return "samplingMetadatas." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FunnelResponseMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.FunnelResponseMetadata} FunnelResponseMetadata
                         */
                        FunnelResponseMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.FunnelResponseMetadata)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.FunnelResponseMetadata();
                            if (object.samplingMetadatas) {
                                if (!Array.isArray(object.samplingMetadatas))
                                    throw TypeError(".google.analytics.data.v1alpha.FunnelResponseMetadata.samplingMetadatas: array expected");
                                message.samplingMetadatas = [];
                                for (var i = 0; i < object.samplingMetadatas.length; ++i) {
                                    if (typeof object.samplingMetadatas[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1alpha.FunnelResponseMetadata.samplingMetadatas: object expected");
                                    message.samplingMetadatas[i] = $root.google.analytics.data.v1alpha.SamplingMetadata.fromObject(object.samplingMetadatas[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FunnelResponseMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.FunnelResponseMetadata} message FunnelResponseMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FunnelResponseMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.samplingMetadatas = [];
                            if (message.samplingMetadatas && message.samplingMetadatas.length) {
                                object.samplingMetadatas = [];
                                for (var j = 0; j < message.samplingMetadatas.length; ++j)
                                    object.samplingMetadatas[j] = $root.google.analytics.data.v1alpha.SamplingMetadata.toObject(message.samplingMetadatas[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FunnelResponseMetadata to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FunnelResponseMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FunnelResponseMetadata
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.FunnelResponseMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FunnelResponseMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.FunnelResponseMetadata";
                        };
    
                        return FunnelResponseMetadata;
                    })();
    
                    v1alpha.SamplingMetadata = (function() {
    
                        /**
                         * Properties of a SamplingMetadata.
                         * @memberof google.analytics.data.v1alpha
                         * @interface ISamplingMetadata
                         * @property {number|Long|null} [samplesReadCount] SamplingMetadata samplesReadCount
                         * @property {number|Long|null} [samplingSpaceSize] SamplingMetadata samplingSpaceSize
                         */
    
                        /**
                         * Constructs a new SamplingMetadata.
                         * @memberof google.analytics.data.v1alpha
                         * @classdesc Represents a SamplingMetadata.
                         * @implements ISamplingMetadata
                         * @constructor
                         * @param {google.analytics.data.v1alpha.ISamplingMetadata=} [properties] Properties to set
                         */
                        function SamplingMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SamplingMetadata samplesReadCount.
                         * @member {number|Long} samplesReadCount
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @instance
                         */
                        SamplingMetadata.prototype.samplesReadCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * SamplingMetadata samplingSpaceSize.
                         * @member {number|Long} samplingSpaceSize
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @instance
                         */
                        SamplingMetadata.prototype.samplingSpaceSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new SamplingMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.ISamplingMetadata=} [properties] Properties to set
                         * @returns {google.analytics.data.v1alpha.SamplingMetadata} SamplingMetadata instance
                         */
                        SamplingMetadata.create = function create(properties) {
                            return new SamplingMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified SamplingMetadata message. Does not implicitly {@link google.analytics.data.v1alpha.SamplingMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.ISamplingMetadata} message SamplingMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SamplingMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplesReadCount != null && Object.hasOwnProperty.call(message, "samplesReadCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.samplesReadCount);
                            if (message.samplingSpaceSize != null && Object.hasOwnProperty.call(message, "samplingSpaceSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.samplingSpaceSize);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SamplingMetadata message, length delimited. Does not implicitly {@link google.analytics.data.v1alpha.SamplingMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.ISamplingMetadata} message SamplingMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SamplingMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SamplingMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1alpha.SamplingMetadata} SamplingMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SamplingMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1alpha.SamplingMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.samplesReadCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.samplingSpaceSize = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SamplingMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1alpha.SamplingMetadata} SamplingMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SamplingMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SamplingMetadata message.
                         * @function verify
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SamplingMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplesReadCount != null && message.hasOwnProperty("samplesReadCount"))
                                if (!$util.isInteger(message.samplesReadCount) && !(message.samplesReadCount && $util.isInteger(message.samplesReadCount.low) && $util.isInteger(message.samplesReadCount.high)))
                                    return "samplesReadCount: integer|Long expected";
                            if (message.samplingSpaceSize != null && message.hasOwnProperty("samplingSpaceSize"))
                                if (!$util.isInteger(message.samplingSpaceSize) && !(message.samplingSpaceSize && $util.isInteger(message.samplingSpaceSize.low) && $util.isInteger(message.samplingSpaceSize.high)))
                                    return "samplingSpaceSize: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a SamplingMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1alpha.SamplingMetadata} SamplingMetadata
                         */
                        SamplingMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1alpha.SamplingMetadata)
                                return object;
                            var message = new $root.google.analytics.data.v1alpha.SamplingMetadata();
                            if (object.samplesReadCount != null)
                                if ($util.Long)
                                    (message.samplesReadCount = $util.Long.fromValue(object.samplesReadCount)).unsigned = false;
                                else if (typeof object.samplesReadCount === "string")
                                    message.samplesReadCount = parseInt(object.samplesReadCount, 10);
                                else if (typeof object.samplesReadCount === "number")
                                    message.samplesReadCount = object.samplesReadCount;
                                else if (typeof object.samplesReadCount === "object")
                                    message.samplesReadCount = new $util.LongBits(object.samplesReadCount.low >>> 0, object.samplesReadCount.high >>> 0).toNumber();
                            if (object.samplingSpaceSize != null)
                                if ($util.Long)
                                    (message.samplingSpaceSize = $util.Long.fromValue(object.samplingSpaceSize)).unsigned = false;
                                else if (typeof object.samplingSpaceSize === "string")
                                    message.samplingSpaceSize = parseInt(object.samplingSpaceSize, 10);
                                else if (typeof object.samplingSpaceSize === "number")
                                    message.samplingSpaceSize = object.samplingSpaceSize;
                                else if (typeof object.samplingSpaceSize === "object")
                                    message.samplingSpaceSize = new $util.LongBits(object.samplingSpaceSize.low >>> 0, object.samplingSpaceSize.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SamplingMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {google.analytics.data.v1alpha.SamplingMetadata} message SamplingMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SamplingMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.samplesReadCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.samplesReadCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.samplingSpaceSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.samplingSpaceSize = options.longs === String ? "0" : 0;
                            }
                            if (message.samplesReadCount != null && message.hasOwnProperty("samplesReadCount"))
                                if (typeof message.samplesReadCount === "number")
                                    object.samplesReadCount = options.longs === String ? String(message.samplesReadCount) : message.samplesReadCount;
                                else
                                    object.samplesReadCount = options.longs === String ? $util.Long.prototype.toString.call(message.samplesReadCount) : options.longs === Number ? new $util.LongBits(message.samplesReadCount.low >>> 0, message.samplesReadCount.high >>> 0).toNumber() : message.samplesReadCount;
                            if (message.samplingSpaceSize != null && message.hasOwnProperty("samplingSpaceSize"))
                                if (typeof message.samplingSpaceSize === "number")
                                    object.samplingSpaceSize = options.longs === String ? String(message.samplingSpaceSize) : message.samplingSpaceSize;
                                else
                                    object.samplingSpaceSize = options.longs === String ? $util.Long.prototype.toString.call(message.samplingSpaceSize) : options.longs === Number ? new $util.LongBits(message.samplingSpaceSize.low >>> 0, message.samplingSpaceSize.high >>> 0).toNumber() : message.samplingSpaceSize;
                            return object;
                        };
    
                        /**
                         * Converts this SamplingMetadata to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SamplingMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SamplingMetadata
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1alpha.SamplingMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SamplingMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1alpha.SamplingMetadata";
                        };
    
                        return SamplingMetadata;
                    })();
    
                    /**
                     * MetricType enum.
                     * @name google.analytics.data.v1alpha.MetricType
                     * @enum {number}
                     * @property {number} METRIC_TYPE_UNSPECIFIED=0 METRIC_TYPE_UNSPECIFIED value
                     * @property {number} TYPE_INTEGER=1 TYPE_INTEGER value
                     * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                     * @property {number} TYPE_SECONDS=4 TYPE_SECONDS value
                     * @property {number} TYPE_MILLISECONDS=5 TYPE_MILLISECONDS value
                     * @property {number} TYPE_MINUTES=6 TYPE_MINUTES value
                     * @property {number} TYPE_HOURS=7 TYPE_HOURS value
                     * @property {number} TYPE_STANDARD=8 TYPE_STANDARD value
                     * @property {number} TYPE_CURRENCY=9 TYPE_CURRENCY value
                     * @property {number} TYPE_FEET=10 TYPE_FEET value
                     * @property {number} TYPE_MILES=11 TYPE_MILES value
                     * @property {number} TYPE_METERS=12 TYPE_METERS value
                     * @property {number} TYPE_KILOMETERS=13 TYPE_KILOMETERS value
                     */
                    v1alpha.MetricType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "METRIC_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TYPE_INTEGER"] = 1;
                        values[valuesById[2] = "TYPE_FLOAT"] = 2;
                        values[valuesById[4] = "TYPE_SECONDS"] = 4;
                        values[valuesById[5] = "TYPE_MILLISECONDS"] = 5;
                        values[valuesById[6] = "TYPE_MINUTES"] = 6;
                        values[valuesById[7] = "TYPE_HOURS"] = 7;
                        values[valuesById[8] = "TYPE_STANDARD"] = 8;
                        values[valuesById[9] = "TYPE_CURRENCY"] = 9;
                        values[valuesById[10] = "TYPE_FEET"] = 10;
                        values[valuesById[11] = "TYPE_MILES"] = 11;
                        values[valuesById[12] = "TYPE_METERS"] = 12;
                        values[valuesById[13] = "TYPE_KILOMETERS"] = 13;
                        return values;
                    })();
    
                    return v1alpha;
                })();
    
                data.v1beta = (function() {
    
                    /**
                     * Namespace v1beta.
                     * @memberof google.analytics.data
                     * @namespace
                     */
                    var v1beta = {};
    
                    v1beta.BetaAnalyticsData = (function() {
    
                        /**
                         * Constructs a new BetaAnalyticsData service.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a BetaAnalyticsData
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function BetaAnalyticsData(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (BetaAnalyticsData.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BetaAnalyticsData;
    
                        /**
                         * Creates new BetaAnalyticsData service using the specified rpc implementation.
                         * @function create
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {BetaAnalyticsData} RPC service. Useful where requests and/or responses are streamed.
                         */
                        BetaAnalyticsData.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|runReport}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef RunReportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.RunReportResponse} [response] RunReportResponse
                         */
    
                        /**
                         * Calls RunReport.
                         * @function runReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunReportRequest} request RunReportRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.RunReportCallback} callback Node-style callback called with the error, if any, and RunReportResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.runReport = function runReport(request, callback) {
                            return this.rpcCall(runReport, $root.google.analytics.data.v1beta.RunReportRequest, $root.google.analytics.data.v1beta.RunReportResponse, request, callback);
                        }, "name", { value: "RunReport" });
    
                        /**
                         * Calls RunReport.
                         * @function runReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunReportRequest} request RunReportRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.RunReportResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|runPivotReport}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef RunPivotReportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.RunPivotReportResponse} [response] RunPivotReportResponse
                         */
    
                        /**
                         * Calls RunPivotReport.
                         * @function runPivotReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest} request RunPivotReportRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.RunPivotReportCallback} callback Node-style callback called with the error, if any, and RunPivotReportResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.runPivotReport = function runPivotReport(request, callback) {
                            return this.rpcCall(runPivotReport, $root.google.analytics.data.v1beta.RunPivotReportRequest, $root.google.analytics.data.v1beta.RunPivotReportResponse, request, callback);
                        }, "name", { value: "RunPivotReport" });
    
                        /**
                         * Calls RunPivotReport.
                         * @function runPivotReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest} request RunPivotReportRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.RunPivotReportResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|batchRunReports}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef BatchRunReportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.BatchRunReportsResponse} [response] BatchRunReportsResponse
                         */
    
                        /**
                         * Calls BatchRunReports.
                         * @function batchRunReports
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest} request BatchRunReportsRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.BatchRunReportsCallback} callback Node-style callback called with the error, if any, and BatchRunReportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.batchRunReports = function batchRunReports(request, callback) {
                            return this.rpcCall(batchRunReports, $root.google.analytics.data.v1beta.BatchRunReportsRequest, $root.google.analytics.data.v1beta.BatchRunReportsResponse, request, callback);
                        }, "name", { value: "BatchRunReports" });
    
                        /**
                         * Calls BatchRunReports.
                         * @function batchRunReports
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest} request BatchRunReportsRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.BatchRunReportsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|batchRunPivotReports}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef BatchRunPivotReportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.BatchRunPivotReportsResponse} [response] BatchRunPivotReportsResponse
                         */
    
                        /**
                         * Calls BatchRunPivotReports.
                         * @function batchRunPivotReports
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest} request BatchRunPivotReportsRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.BatchRunPivotReportsCallback} callback Node-style callback called with the error, if any, and BatchRunPivotReportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.batchRunPivotReports = function batchRunPivotReports(request, callback) {
                            return this.rpcCall(batchRunPivotReports, $root.google.analytics.data.v1beta.BatchRunPivotReportsRequest, $root.google.analytics.data.v1beta.BatchRunPivotReportsResponse, request, callback);
                        }, "name", { value: "BatchRunPivotReports" });
    
                        /**
                         * Calls BatchRunPivotReports.
                         * @function batchRunPivotReports
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest} request BatchRunPivotReportsRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.BatchRunPivotReportsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|getMetadata}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef GetMetadataCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.Metadata} [response] Metadata
                         */
    
                        /**
                         * Calls GetMetadata.
                         * @function getMetadata
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest} request GetMetadataRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.GetMetadataCallback} callback Node-style callback called with the error, if any, and Metadata
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.getMetadata = function getMetadata(request, callback) {
                            return this.rpcCall(getMetadata, $root.google.analytics.data.v1beta.GetMetadataRequest, $root.google.analytics.data.v1beta.Metadata, request, callback);
                        }, "name", { value: "GetMetadata" });
    
                        /**
                         * Calls GetMetadata.
                         * @function getMetadata
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest} request GetMetadataRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.Metadata>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|runRealtimeReport}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef RunRealtimeReportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.RunRealtimeReportResponse} [response] RunRealtimeReportResponse
                         */
    
                        /**
                         * Calls RunRealtimeReport.
                         * @function runRealtimeReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest} request RunRealtimeReportRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.RunRealtimeReportCallback} callback Node-style callback called with the error, if any, and RunRealtimeReportResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.runRealtimeReport = function runRealtimeReport(request, callback) {
                            return this.rpcCall(runRealtimeReport, $root.google.analytics.data.v1beta.RunRealtimeReportRequest, $root.google.analytics.data.v1beta.RunRealtimeReportResponse, request, callback);
                        }, "name", { value: "RunRealtimeReport" });
    
                        /**
                         * Calls RunRealtimeReport.
                         * @function runRealtimeReport
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest} request RunRealtimeReportRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.RunRealtimeReportResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.analytics.data.v1beta.BetaAnalyticsData|checkCompatibility}.
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @typedef CheckCompatibilityCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.analytics.data.v1beta.CheckCompatibilityResponse} [response] CheckCompatibilityResponse
                         */
    
                        /**
                         * Calls CheckCompatibility.
                         * @function checkCompatibility
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest} request CheckCompatibilityRequest message or plain object
                         * @param {google.analytics.data.v1beta.BetaAnalyticsData.CheckCompatibilityCallback} callback Node-style callback called with the error, if any, and CheckCompatibilityResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BetaAnalyticsData.prototype.checkCompatibility = function checkCompatibility(request, callback) {
                            return this.rpcCall(checkCompatibility, $root.google.analytics.data.v1beta.CheckCompatibilityRequest, $root.google.analytics.data.v1beta.CheckCompatibilityResponse, request, callback);
                        }, "name", { value: "CheckCompatibility" });
    
                        /**
                         * Calls CheckCompatibility.
                         * @function checkCompatibility
                         * @memberof google.analytics.data.v1beta.BetaAnalyticsData
                         * @instance
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest} request CheckCompatibilityRequest message or plain object
                         * @returns {Promise<google.analytics.data.v1beta.CheckCompatibilityResponse>} Promise
                         * @variation 2
                         */
    
                        return BetaAnalyticsData;
                    })();
    
                    v1beta.CheckCompatibilityRequest = (function() {
    
                        /**
                         * Properties of a CheckCompatibilityRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICheckCompatibilityRequest
                         * @property {string|null} [property] CheckCompatibilityRequest property
                         * @property {Array.<google.analytics.data.v1beta.IDimension>|null} [dimensions] CheckCompatibilityRequest dimensions
                         * @property {Array.<google.analytics.data.v1beta.IMetric>|null} [metrics] CheckCompatibilityRequest metrics
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [dimensionFilter] CheckCompatibilityRequest dimensionFilter
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [metricFilter] CheckCompatibilityRequest metricFilter
                         * @property {google.analytics.data.v1beta.Compatibility|null} [compatibilityFilter] CheckCompatibilityRequest compatibilityFilter
                         */
    
                        /**
                         * Constructs a new CheckCompatibilityRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a CheckCompatibilityRequest.
                         * @implements ICheckCompatibilityRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest=} [properties] Properties to set
                         */
                        function CheckCompatibilityRequest(properties) {
                            this.dimensions = [];
                            this.metrics = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckCompatibilityRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.property = "";
    
                        /**
                         * CheckCompatibilityRequest dimensions.
                         * @member {Array.<google.analytics.data.v1beta.IDimension>} dimensions
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.dimensions = $util.emptyArray;
    
                        /**
                         * CheckCompatibilityRequest metrics.
                         * @member {Array.<google.analytics.data.v1beta.IMetric>} metrics
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.metrics = $util.emptyArray;
    
                        /**
                         * CheckCompatibilityRequest dimensionFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} dimensionFilter
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.dimensionFilter = null;
    
                        /**
                         * CheckCompatibilityRequest metricFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} metricFilter
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.metricFilter = null;
    
                        /**
                         * CheckCompatibilityRequest compatibilityFilter.
                         * @member {google.analytics.data.v1beta.Compatibility} compatibilityFilter
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         */
                        CheckCompatibilityRequest.prototype.compatibilityFilter = 0;
    
                        /**
                         * Creates a new CheckCompatibilityRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityRequest} CheckCompatibilityRequest instance
                         */
                        CheckCompatibilityRequest.create = function create(properties) {
                            return new CheckCompatibilityRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CheckCompatibilityRequest message. Does not implicitly {@link google.analytics.data.v1beta.CheckCompatibilityRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest} message CheckCompatibilityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCompatibilityRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.dimensions != null && message.dimensions.length)
                                for (var i = 0; i < message.dimensions.length; ++i)
                                    $root.google.analytics.data.v1beta.Dimension.encode(message.dimensions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.analytics.data.v1beta.Metric.encode(message.metrics[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dimensionFilter != null && Object.hasOwnProperty.call(message, "dimensionFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.dimensionFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.metricFilter != null && Object.hasOwnProperty.call(message, "metricFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.metricFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.compatibilityFilter != null && Object.hasOwnProperty.call(message, "compatibilityFilter"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.compatibilityFilter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckCompatibilityRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.CheckCompatibilityRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityRequest} message CheckCompatibilityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCompatibilityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckCompatibilityRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityRequest} CheckCompatibilityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCompatibilityRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.CheckCompatibilityRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dimensions && message.dimensions.length))
                                            message.dimensions = [];
                                        message.dimensions.push($root.google.analytics.data.v1beta.Dimension.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.analytics.data.v1beta.Metric.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.compatibilityFilter = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckCompatibilityRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityRequest} CheckCompatibilityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCompatibilityRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckCompatibilityRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckCompatibilityRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.dimensions != null && message.hasOwnProperty("dimensions")) {
                                if (!Array.isArray(message.dimensions))
                                    return "dimensions: array expected";
                                for (var i = 0; i < message.dimensions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Dimension.verify(message.dimensions[i]);
                                    if (error)
                                        return "dimensions." + error;
                                }
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Metric.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.dimensionFilter);
                                if (error)
                                    return "dimensionFilter." + error;
                            }
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.metricFilter);
                                if (error)
                                    return "metricFilter." + error;
                            }
                            if (message.compatibilityFilter != null && message.hasOwnProperty("compatibilityFilter"))
                                switch (message.compatibilityFilter) {
                                default:
                                    return "compatibilityFilter: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CheckCompatibilityRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityRequest} CheckCompatibilityRequest
                         */
                        CheckCompatibilityRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.CheckCompatibilityRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.CheckCompatibilityRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.dimensions) {
                                if (!Array.isArray(object.dimensions))
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.dimensions: array expected");
                                message.dimensions = [];
                                for (var i = 0; i < object.dimensions.length; ++i) {
                                    if (typeof object.dimensions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.dimensions: object expected");
                                    message.dimensions[i] = $root.google.analytics.data.v1beta.Dimension.fromObject(object.dimensions[i]);
                                }
                            }
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.metrics: object expected");
                                    message.metrics[i] = $root.google.analytics.data.v1beta.Metric.fromObject(object.metrics[i]);
                                }
                            }
                            if (object.dimensionFilter != null) {
                                if (typeof object.dimensionFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.dimensionFilter: object expected");
                                message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.dimensionFilter);
                            }
                            if (object.metricFilter != null) {
                                if (typeof object.metricFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityRequest.metricFilter: object expected");
                                message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.metricFilter);
                            }
                            switch (object.compatibilityFilter) {
                            default:
                                if (typeof object.compatibilityFilter === "number") {
                                    message.compatibilityFilter = object.compatibilityFilter;
                                    break;
                                }
                                break;
                            case "COMPATIBILITY_UNSPECIFIED":
                            case 0:
                                message.compatibilityFilter = 0;
                                break;
                            case "COMPATIBLE":
                            case 1:
                                message.compatibilityFilter = 1;
                                break;
                            case "INCOMPATIBLE":
                            case 2:
                                message.compatibilityFilter = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckCompatibilityRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {google.analytics.data.v1beta.CheckCompatibilityRequest} message CheckCompatibilityRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckCompatibilityRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensions = [];
                                object.metrics = [];
                            }
                            if (options.defaults) {
                                object.property = "";
                                object.dimensionFilter = null;
                                object.metricFilter = null;
                                object.compatibilityFilter = options.enums === String ? "COMPATIBILITY_UNSPECIFIED" : 0;
                            }
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.dimensions && message.dimensions.length) {
                                object.dimensions = [];
                                for (var j = 0; j < message.dimensions.length; ++j)
                                    object.dimensions[j] = $root.google.analytics.data.v1beta.Dimension.toObject(message.dimensions[j], options);
                            }
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.analytics.data.v1beta.Metric.toObject(message.metrics[j], options);
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter"))
                                object.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.dimensionFilter, options);
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter"))
                                object.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.metricFilter, options);
                            if (message.compatibilityFilter != null && message.hasOwnProperty("compatibilityFilter"))
                                object.compatibilityFilter = options.enums === String ? $root.google.analytics.data.v1beta.Compatibility[message.compatibilityFilter] === undefined ? message.compatibilityFilter : $root.google.analytics.data.v1beta.Compatibility[message.compatibilityFilter] : message.compatibilityFilter;
                            return object;
                        };
    
                        /**
                         * Converts this CheckCompatibilityRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckCompatibilityRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckCompatibilityRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckCompatibilityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.CheckCompatibilityRequest";
                        };
    
                        return CheckCompatibilityRequest;
                    })();
    
                    v1beta.CheckCompatibilityResponse = (function() {
    
                        /**
                         * Properties of a CheckCompatibilityResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICheckCompatibilityResponse
                         * @property {Array.<google.analytics.data.v1beta.IDimensionCompatibility>|null} [dimensionCompatibilities] CheckCompatibilityResponse dimensionCompatibilities
                         * @property {Array.<google.analytics.data.v1beta.IMetricCompatibility>|null} [metricCompatibilities] CheckCompatibilityResponse metricCompatibilities
                         */
    
                        /**
                         * Constructs a new CheckCompatibilityResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a CheckCompatibilityResponse.
                         * @implements ICheckCompatibilityResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityResponse=} [properties] Properties to set
                         */
                        function CheckCompatibilityResponse(properties) {
                            this.dimensionCompatibilities = [];
                            this.metricCompatibilities = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckCompatibilityResponse dimensionCompatibilities.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionCompatibility>} dimensionCompatibilities
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @instance
                         */
                        CheckCompatibilityResponse.prototype.dimensionCompatibilities = $util.emptyArray;
    
                        /**
                         * CheckCompatibilityResponse metricCompatibilities.
                         * @member {Array.<google.analytics.data.v1beta.IMetricCompatibility>} metricCompatibilities
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @instance
                         */
                        CheckCompatibilityResponse.prototype.metricCompatibilities = $util.emptyArray;
    
                        /**
                         * Creates a new CheckCompatibilityResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityResponse} CheckCompatibilityResponse instance
                         */
                        CheckCompatibilityResponse.create = function create(properties) {
                            return new CheckCompatibilityResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CheckCompatibilityResponse message. Does not implicitly {@link google.analytics.data.v1beta.CheckCompatibilityResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityResponse} message CheckCompatibilityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCompatibilityResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionCompatibilities != null && message.dimensionCompatibilities.length)
                                for (var i = 0; i < message.dimensionCompatibilities.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionCompatibility.encode(message.dimensionCompatibilities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricCompatibilities != null && message.metricCompatibilities.length)
                                for (var i = 0; i < message.metricCompatibilities.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricCompatibility.encode(message.metricCompatibilities[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckCompatibilityResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.CheckCompatibilityResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {google.analytics.data.v1beta.ICheckCompatibilityResponse} message CheckCompatibilityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCompatibilityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckCompatibilityResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityResponse} CheckCompatibilityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCompatibilityResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.CheckCompatibilityResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionCompatibilities && message.dimensionCompatibilities.length))
                                            message.dimensionCompatibilities = [];
                                        message.dimensionCompatibilities.push($root.google.analytics.data.v1beta.DimensionCompatibility.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricCompatibilities && message.metricCompatibilities.length))
                                            message.metricCompatibilities = [];
                                        message.metricCompatibilities.push($root.google.analytics.data.v1beta.MetricCompatibility.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckCompatibilityResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityResponse} CheckCompatibilityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCompatibilityResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckCompatibilityResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckCompatibilityResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionCompatibilities != null && message.hasOwnProperty("dimensionCompatibilities")) {
                                if (!Array.isArray(message.dimensionCompatibilities))
                                    return "dimensionCompatibilities: array expected";
                                for (var i = 0; i < message.dimensionCompatibilities.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionCompatibility.verify(message.dimensionCompatibilities[i]);
                                    if (error)
                                        return "dimensionCompatibilities." + error;
                                }
                            }
                            if (message.metricCompatibilities != null && message.hasOwnProperty("metricCompatibilities")) {
                                if (!Array.isArray(message.metricCompatibilities))
                                    return "metricCompatibilities: array expected";
                                for (var i = 0; i < message.metricCompatibilities.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricCompatibility.verify(message.metricCompatibilities[i]);
                                    if (error)
                                        return "metricCompatibilities." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CheckCompatibilityResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.CheckCompatibilityResponse} CheckCompatibilityResponse
                         */
                        CheckCompatibilityResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.CheckCompatibilityResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.CheckCompatibilityResponse();
                            if (object.dimensionCompatibilities) {
                                if (!Array.isArray(object.dimensionCompatibilities))
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityResponse.dimensionCompatibilities: array expected");
                                message.dimensionCompatibilities = [];
                                for (var i = 0; i < object.dimensionCompatibilities.length; ++i) {
                                    if (typeof object.dimensionCompatibilities[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityResponse.dimensionCompatibilities: object expected");
                                    message.dimensionCompatibilities[i] = $root.google.analytics.data.v1beta.DimensionCompatibility.fromObject(object.dimensionCompatibilities[i]);
                                }
                            }
                            if (object.metricCompatibilities) {
                                if (!Array.isArray(object.metricCompatibilities))
                                    throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityResponse.metricCompatibilities: array expected");
                                message.metricCompatibilities = [];
                                for (var i = 0; i < object.metricCompatibilities.length; ++i) {
                                    if (typeof object.metricCompatibilities[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.CheckCompatibilityResponse.metricCompatibilities: object expected");
                                    message.metricCompatibilities[i] = $root.google.analytics.data.v1beta.MetricCompatibility.fromObject(object.metricCompatibilities[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckCompatibilityResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {google.analytics.data.v1beta.CheckCompatibilityResponse} message CheckCompatibilityResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckCompatibilityResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionCompatibilities = [];
                                object.metricCompatibilities = [];
                            }
                            if (message.dimensionCompatibilities && message.dimensionCompatibilities.length) {
                                object.dimensionCompatibilities = [];
                                for (var j = 0; j < message.dimensionCompatibilities.length; ++j)
                                    object.dimensionCompatibilities[j] = $root.google.analytics.data.v1beta.DimensionCompatibility.toObject(message.dimensionCompatibilities[j], options);
                            }
                            if (message.metricCompatibilities && message.metricCompatibilities.length) {
                                object.metricCompatibilities = [];
                                for (var j = 0; j < message.metricCompatibilities.length; ++j)
                                    object.metricCompatibilities[j] = $root.google.analytics.data.v1beta.MetricCompatibility.toObject(message.metricCompatibilities[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CheckCompatibilityResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckCompatibilityResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckCompatibilityResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.CheckCompatibilityResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckCompatibilityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.CheckCompatibilityResponse";
                        };
    
                        return CheckCompatibilityResponse;
                    })();
    
                    v1beta.Metadata = (function() {
    
                        /**
                         * Properties of a Metadata.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetadata
                         * @property {string|null} [name] Metadata name
                         * @property {Array.<google.analytics.data.v1beta.IDimensionMetadata>|null} [dimensions] Metadata dimensions
                         * @property {Array.<google.analytics.data.v1beta.IMetricMetadata>|null} [metrics] Metadata metrics
                         */
    
                        /**
                         * Constructs a new Metadata.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Metadata.
                         * @implements IMetadata
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetadata=} [properties] Properties to set
                         */
                        function Metadata(properties) {
                            this.dimensions = [];
                            this.metrics = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Metadata name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @instance
                         */
                        Metadata.prototype.name = "";
    
                        /**
                         * Metadata dimensions.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionMetadata>} dimensions
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @instance
                         */
                        Metadata.prototype.dimensions = $util.emptyArray;
    
                        /**
                         * Metadata metrics.
                         * @member {Array.<google.analytics.data.v1beta.IMetricMetadata>} metrics
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @instance
                         */
                        Metadata.prototype.metrics = $util.emptyArray;
    
                        /**
                         * Creates a new Metadata instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetadata=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Metadata} Metadata instance
                         */
                        Metadata.create = function create(properties) {
                            return new Metadata(properties);
                        };
    
                        /**
                         * Encodes the specified Metadata message. Does not implicitly {@link google.analytics.data.v1beta.Metadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetadata} message Metadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensions != null && message.dimensions.length)
                                for (var i = 0; i < message.dimensions.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionMetadata.encode(message.dimensions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricMetadata.encode(message.metrics[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Metadata message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Metadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetadata} message Metadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Metadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Metadata} Metadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Metadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        if (!(message.dimensions && message.dimensions.length))
                                            message.dimensions = [];
                                        message.dimensions.push($root.google.analytics.data.v1beta.DimensionMetadata.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.analytics.data.v1beta.MetricMetadata.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Metadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Metadata} Metadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Metadata message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Metadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.dimensions != null && message.hasOwnProperty("dimensions")) {
                                if (!Array.isArray(message.dimensions))
                                    return "dimensions: array expected";
                                for (var i = 0; i < message.dimensions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionMetadata.verify(message.dimensions[i]);
                                    if (error)
                                        return "dimensions." + error;
                                }
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricMetadata.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Metadata} Metadata
                         */
                        Metadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Metadata)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Metadata();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.dimensions) {
                                if (!Array.isArray(object.dimensions))
                                    throw TypeError(".google.analytics.data.v1beta.Metadata.dimensions: array expected");
                                message.dimensions = [];
                                for (var i = 0; i < object.dimensions.length; ++i) {
                                    if (typeof object.dimensions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Metadata.dimensions: object expected");
                                    message.dimensions[i] = $root.google.analytics.data.v1beta.DimensionMetadata.fromObject(object.dimensions[i]);
                                }
                            }
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.analytics.data.v1beta.Metadata.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Metadata.metrics: object expected");
                                    message.metrics[i] = $root.google.analytics.data.v1beta.MetricMetadata.fromObject(object.metrics[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {google.analytics.data.v1beta.Metadata} message Metadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Metadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensions = [];
                                object.metrics = [];
                            }
                            if (options.defaults)
                                object.name = "";
                            if (message.dimensions && message.dimensions.length) {
                                object.dimensions = [];
                                for (var j = 0; j < message.dimensions.length; ++j)
                                    object.dimensions[j] = $root.google.analytics.data.v1beta.DimensionMetadata.toObject(message.dimensions[j], options);
                            }
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.analytics.data.v1beta.MetricMetadata.toObject(message.metrics[j], options);
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this Metadata to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Metadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Metadata
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Metadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Metadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Metadata";
                        };
    
                        return Metadata;
                    })();
    
                    v1beta.RunReportRequest = (function() {
    
                        /**
                         * Properties of a RunReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunReportRequest
                         * @property {string|null} [property] RunReportRequest property
                         * @property {Array.<google.analytics.data.v1beta.IDimension>|null} [dimensions] RunReportRequest dimensions
                         * @property {Array.<google.analytics.data.v1beta.IMetric>|null} [metrics] RunReportRequest metrics
                         * @property {Array.<google.analytics.data.v1beta.IDateRange>|null} [dateRanges] RunReportRequest dateRanges
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [dimensionFilter] RunReportRequest dimensionFilter
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [metricFilter] RunReportRequest metricFilter
                         * @property {number|Long|null} [offset] RunReportRequest offset
                         * @property {number|Long|null} [limit] RunReportRequest limit
                         * @property {Array.<google.analytics.data.v1beta.MetricAggregation>|null} [metricAggregations] RunReportRequest metricAggregations
                         * @property {Array.<google.analytics.data.v1beta.IOrderBy>|null} [orderBys] RunReportRequest orderBys
                         * @property {string|null} [currencyCode] RunReportRequest currencyCode
                         * @property {google.analytics.data.v1beta.ICohortSpec|null} [cohortSpec] RunReportRequest cohortSpec
                         * @property {boolean|null} [keepEmptyRows] RunReportRequest keepEmptyRows
                         * @property {boolean|null} [returnPropertyQuota] RunReportRequest returnPropertyQuota
                         */
    
                        /**
                         * Constructs a new RunReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunReportRequest.
                         * @implements IRunReportRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunReportRequest=} [properties] Properties to set
                         */
                        function RunReportRequest(properties) {
                            this.dimensions = [];
                            this.metrics = [];
                            this.dateRanges = [];
                            this.metricAggregations = [];
                            this.orderBys = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunReportRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.property = "";
    
                        /**
                         * RunReportRequest dimensions.
                         * @member {Array.<google.analytics.data.v1beta.IDimension>} dimensions
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.dimensions = $util.emptyArray;
    
                        /**
                         * RunReportRequest metrics.
                         * @member {Array.<google.analytics.data.v1beta.IMetric>} metrics
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.metrics = $util.emptyArray;
    
                        /**
                         * RunReportRequest dateRanges.
                         * @member {Array.<google.analytics.data.v1beta.IDateRange>} dateRanges
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.dateRanges = $util.emptyArray;
    
                        /**
                         * RunReportRequest dimensionFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} dimensionFilter
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.dimensionFilter = null;
    
                        /**
                         * RunReportRequest metricFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} metricFilter
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.metricFilter = null;
    
                        /**
                         * RunReportRequest offset.
                         * @member {number|Long} offset
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RunReportRequest limit.
                         * @member {number|Long} limit
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RunReportRequest metricAggregations.
                         * @member {Array.<google.analytics.data.v1beta.MetricAggregation>} metricAggregations
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.metricAggregations = $util.emptyArray;
    
                        /**
                         * RunReportRequest orderBys.
                         * @member {Array.<google.analytics.data.v1beta.IOrderBy>} orderBys
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.orderBys = $util.emptyArray;
    
                        /**
                         * RunReportRequest currencyCode.
                         * @member {string} currencyCode
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.currencyCode = "";
    
                        /**
                         * RunReportRequest cohortSpec.
                         * @member {google.analytics.data.v1beta.ICohortSpec|null|undefined} cohortSpec
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.cohortSpec = null;
    
                        /**
                         * RunReportRequest keepEmptyRows.
                         * @member {boolean} keepEmptyRows
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.keepEmptyRows = false;
    
                        /**
                         * RunReportRequest returnPropertyQuota.
                         * @member {boolean} returnPropertyQuota
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         */
                        RunReportRequest.prototype.returnPropertyQuota = false;
    
                        /**
                         * Creates a new RunReportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunReportRequest} RunReportRequest instance
                         */
                        RunReportRequest.create = function create(properties) {
                            return new RunReportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunReportRequest message. Does not implicitly {@link google.analytics.data.v1beta.RunReportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportRequest} message RunReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.dimensions != null && message.dimensions.length)
                                for (var i = 0; i < message.dimensions.length; ++i)
                                    $root.google.analytics.data.v1beta.Dimension.encode(message.dimensions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.analytics.data.v1beta.Metric.encode(message.metrics[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dateRanges != null && message.dateRanges.length)
                                for (var i = 0; i < message.dateRanges.length; ++i)
                                    $root.google.analytics.data.v1beta.DateRange.encode(message.dateRanges[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.dimensionFilter != null && Object.hasOwnProperty.call(message, "dimensionFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.dimensionFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.metricFilter != null && Object.hasOwnProperty.call(message, "metricFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.metricFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int64(message.offset);
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int64(message.limit);
                            if (message.metricAggregations != null && message.metricAggregations.length) {
                                writer.uint32(/* id 9, wireType 2 =*/74).fork();
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    writer.int32(message.metricAggregations[i]);
                                writer.ldelim();
                            }
                            if (message.orderBys != null && message.orderBys.length)
                                for (var i = 0; i < message.orderBys.length; ++i)
                                    $root.google.analytics.data.v1beta.OrderBy.encode(message.orderBys[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.currencyCode);
                            if (message.cohortSpec != null && Object.hasOwnProperty.call(message, "cohortSpec"))
                                $root.google.analytics.data.v1beta.CohortSpec.encode(message.cohortSpec, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.keepEmptyRows != null && Object.hasOwnProperty.call(message, "keepEmptyRows"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.keepEmptyRows);
                            if (message.returnPropertyQuota != null && Object.hasOwnProperty.call(message, "returnPropertyQuota"))
                                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.returnPropertyQuota);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunReportRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunReportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportRequest} message RunReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunReportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunReportRequest} RunReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunReportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dimensions && message.dimensions.length))
                                            message.dimensions = [];
                                        message.dimensions.push($root.google.analytics.data.v1beta.Dimension.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.analytics.data.v1beta.Metric.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.dateRanges && message.dateRanges.length))
                                            message.dateRanges = [];
                                        message.dateRanges.push($root.google.analytics.data.v1beta.DateRange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.offset = reader.int64();
                                        break;
                                    }
                                case 8: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                case 9: {
                                        if (!(message.metricAggregations && message.metricAggregations.length))
                                            message.metricAggregations = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.metricAggregations.push(reader.int32());
                                        } else
                                            message.metricAggregations.push(reader.int32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.orderBys && message.orderBys.length))
                                            message.orderBys = [];
                                        message.orderBys.push($root.google.analytics.data.v1beta.OrderBy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        message.currencyCode = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.keepEmptyRows = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        message.returnPropertyQuota = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunReportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunReportRequest} RunReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunReportRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunReportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.dimensions != null && message.hasOwnProperty("dimensions")) {
                                if (!Array.isArray(message.dimensions))
                                    return "dimensions: array expected";
                                for (var i = 0; i < message.dimensions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Dimension.verify(message.dimensions[i]);
                                    if (error)
                                        return "dimensions." + error;
                                }
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Metric.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            if (message.dateRanges != null && message.hasOwnProperty("dateRanges")) {
                                if (!Array.isArray(message.dateRanges))
                                    return "dateRanges: array expected";
                                for (var i = 0; i < message.dateRanges.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DateRange.verify(message.dateRanges[i]);
                                    if (error)
                                        return "dateRanges." + error;
                                }
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.dimensionFilter);
                                if (error)
                                    return "dimensionFilter." + error;
                            }
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.metricFilter);
                                if (error)
                                    return "metricFilter." + error;
                            }
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                    return "offset: integer|Long expected";
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            if (message.metricAggregations != null && message.hasOwnProperty("metricAggregations")) {
                                if (!Array.isArray(message.metricAggregations))
                                    return "metricAggregations: array expected";
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    switch (message.metricAggregations[i]) {
                                    default:
                                        return "metricAggregations: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 5:
                                    case 6:
                                    case 4:
                                        break;
                                    }
                            }
                            if (message.orderBys != null && message.hasOwnProperty("orderBys")) {
                                if (!Array.isArray(message.orderBys))
                                    return "orderBys: array expected";
                                for (var i = 0; i < message.orderBys.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.verify(message.orderBys[i]);
                                    if (error)
                                        return "orderBys." + error;
                                }
                            }
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                                if (!$util.isString(message.currencyCode))
                                    return "currencyCode: string expected";
                            if (message.cohortSpec != null && message.hasOwnProperty("cohortSpec")) {
                                var error = $root.google.analytics.data.v1beta.CohortSpec.verify(message.cohortSpec);
                                if (error)
                                    return "cohortSpec." + error;
                            }
                            if (message.keepEmptyRows != null && message.hasOwnProperty("keepEmptyRows"))
                                if (typeof message.keepEmptyRows !== "boolean")
                                    return "keepEmptyRows: boolean expected";
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                if (typeof message.returnPropertyQuota !== "boolean")
                                    return "returnPropertyQuota: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunReportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunReportRequest} RunReportRequest
                         */
                        RunReportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunReportRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunReportRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.dimensions) {
                                if (!Array.isArray(object.dimensions))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.dimensions: array expected");
                                message.dimensions = [];
                                for (var i = 0; i < object.dimensions.length; ++i) {
                                    if (typeof object.dimensions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportRequest.dimensions: object expected");
                                    message.dimensions[i] = $root.google.analytics.data.v1beta.Dimension.fromObject(object.dimensions[i]);
                                }
                            }
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportRequest.metrics: object expected");
                                    message.metrics[i] = $root.google.analytics.data.v1beta.Metric.fromObject(object.metrics[i]);
                                }
                            }
                            if (object.dateRanges) {
                                if (!Array.isArray(object.dateRanges))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.dateRanges: array expected");
                                message.dateRanges = [];
                                for (var i = 0; i < object.dateRanges.length; ++i) {
                                    if (typeof object.dateRanges[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportRequest.dateRanges: object expected");
                                    message.dateRanges[i] = $root.google.analytics.data.v1beta.DateRange.fromObject(object.dateRanges[i]);
                                }
                            }
                            if (object.dimensionFilter != null) {
                                if (typeof object.dimensionFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.dimensionFilter: object expected");
                                message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.dimensionFilter);
                            }
                            if (object.metricFilter != null) {
                                if (typeof object.metricFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.metricFilter: object expected");
                                message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.metricFilter);
                            }
                            if (object.offset != null)
                                if ($util.Long)
                                    (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                else if (typeof object.offset === "string")
                                    message.offset = parseInt(object.offset, 10);
                                else if (typeof object.offset === "number")
                                    message.offset = object.offset;
                                else if (typeof object.offset === "object")
                                    message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            if (object.metricAggregations) {
                                if (!Array.isArray(object.metricAggregations))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.metricAggregations: array expected");
                                message.metricAggregations = [];
                                for (var i = 0; i < object.metricAggregations.length; ++i)
                                    switch (object.metricAggregations[i]) {
                                    default:
                                        if (typeof object.metricAggregations[i] === "number") {
                                            message.metricAggregations[i] = object.metricAggregations[i];
                                            break;
                                        }
                                    case "METRIC_AGGREGATION_UNSPECIFIED":
                                    case 0:
                                        message.metricAggregations[i] = 0;
                                        break;
                                    case "TOTAL":
                                    case 1:
                                        message.metricAggregations[i] = 1;
                                        break;
                                    case "MINIMUM":
                                    case 5:
                                        message.metricAggregations[i] = 5;
                                        break;
                                    case "MAXIMUM":
                                    case 6:
                                        message.metricAggregations[i] = 6;
                                        break;
                                    case "COUNT":
                                    case 4:
                                        message.metricAggregations[i] = 4;
                                        break;
                                    }
                            }
                            if (object.orderBys) {
                                if (!Array.isArray(object.orderBys))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.orderBys: array expected");
                                message.orderBys = [];
                                for (var i = 0; i < object.orderBys.length; ++i) {
                                    if (typeof object.orderBys[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportRequest.orderBys: object expected");
                                    message.orderBys[i] = $root.google.analytics.data.v1beta.OrderBy.fromObject(object.orderBys[i]);
                                }
                            }
                            if (object.currencyCode != null)
                                message.currencyCode = String(object.currencyCode);
                            if (object.cohortSpec != null) {
                                if (typeof object.cohortSpec !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunReportRequest.cohortSpec: object expected");
                                message.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.fromObject(object.cohortSpec);
                            }
                            if (object.keepEmptyRows != null)
                                message.keepEmptyRows = Boolean(object.keepEmptyRows);
                            if (object.returnPropertyQuota != null)
                                message.returnPropertyQuota = Boolean(object.returnPropertyQuota);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunReportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.RunReportRequest} message RunReportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunReportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensions = [];
                                object.metrics = [];
                                object.dateRanges = [];
                                object.metricAggregations = [];
                                object.orderBys = [];
                            }
                            if (options.defaults) {
                                object.property = "";
                                object.dimensionFilter = null;
                                object.metricFilter = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.offset = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.limit = options.longs === String ? "0" : 0;
                                object.currencyCode = "";
                                object.cohortSpec = null;
                                object.keepEmptyRows = false;
                                object.returnPropertyQuota = false;
                            }
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.dimensions && message.dimensions.length) {
                                object.dimensions = [];
                                for (var j = 0; j < message.dimensions.length; ++j)
                                    object.dimensions[j] = $root.google.analytics.data.v1beta.Dimension.toObject(message.dimensions[j], options);
                            }
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.analytics.data.v1beta.Metric.toObject(message.metrics[j], options);
                            }
                            if (message.dateRanges && message.dateRanges.length) {
                                object.dateRanges = [];
                                for (var j = 0; j < message.dateRanges.length; ++j)
                                    object.dateRanges[j] = $root.google.analytics.data.v1beta.DateRange.toObject(message.dateRanges[j], options);
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter"))
                                object.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.dimensionFilter, options);
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter"))
                                object.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.metricFilter, options);
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (typeof message.offset === "number")
                                    object.offset = options.longs === String ? String(message.offset) : message.offset;
                                else
                                    object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                            if (message.metricAggregations && message.metricAggregations.length) {
                                object.metricAggregations = [];
                                for (var j = 0; j < message.metricAggregations.length; ++j)
                                    object.metricAggregations[j] = options.enums === String ? $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] === undefined ? message.metricAggregations[j] : $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] : message.metricAggregations[j];
                            }
                            if (message.orderBys && message.orderBys.length) {
                                object.orderBys = [];
                                for (var j = 0; j < message.orderBys.length; ++j)
                                    object.orderBys[j] = $root.google.analytics.data.v1beta.OrderBy.toObject(message.orderBys[j], options);
                            }
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                                object.currencyCode = message.currencyCode;
                            if (message.cohortSpec != null && message.hasOwnProperty("cohortSpec"))
                                object.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.toObject(message.cohortSpec, options);
                            if (message.keepEmptyRows != null && message.hasOwnProperty("keepEmptyRows"))
                                object.keepEmptyRows = message.keepEmptyRows;
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                object.returnPropertyQuota = message.returnPropertyQuota;
                            return object;
                        };
    
                        /**
                         * Converts this RunReportRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunReportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunReportRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunReportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunReportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunReportRequest";
                        };
    
                        return RunReportRequest;
                    })();
    
                    v1beta.RunReportResponse = (function() {
    
                        /**
                         * Properties of a RunReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunReportResponse
                         * @property {Array.<google.analytics.data.v1beta.IDimensionHeader>|null} [dimensionHeaders] RunReportResponse dimensionHeaders
                         * @property {Array.<google.analytics.data.v1beta.IMetricHeader>|null} [metricHeaders] RunReportResponse metricHeaders
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [rows] RunReportResponse rows
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [totals] RunReportResponse totals
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [maximums] RunReportResponse maximums
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [minimums] RunReportResponse minimums
                         * @property {number|null} [rowCount] RunReportResponse rowCount
                         * @property {google.analytics.data.v1beta.IResponseMetaData|null} [metadata] RunReportResponse metadata
                         * @property {google.analytics.data.v1beta.IPropertyQuota|null} [propertyQuota] RunReportResponse propertyQuota
                         * @property {string|null} [kind] RunReportResponse kind
                         */
    
                        /**
                         * Constructs a new RunReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunReportResponse.
                         * @implements IRunReportResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunReportResponse=} [properties] Properties to set
                         */
                        function RunReportResponse(properties) {
                            this.dimensionHeaders = [];
                            this.metricHeaders = [];
                            this.rows = [];
                            this.totals = [];
                            this.maximums = [];
                            this.minimums = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunReportResponse dimensionHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionHeader>} dimensionHeaders
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.dimensionHeaders = $util.emptyArray;
    
                        /**
                         * RunReportResponse metricHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IMetricHeader>} metricHeaders
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.metricHeaders = $util.emptyArray;
    
                        /**
                         * RunReportResponse rows.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} rows
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.rows = $util.emptyArray;
    
                        /**
                         * RunReportResponse totals.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} totals
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.totals = $util.emptyArray;
    
                        /**
                         * RunReportResponse maximums.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} maximums
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.maximums = $util.emptyArray;
    
                        /**
                         * RunReportResponse minimums.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} minimums
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.minimums = $util.emptyArray;
    
                        /**
                         * RunReportResponse rowCount.
                         * @member {number} rowCount
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.rowCount = 0;
    
                        /**
                         * RunReportResponse metadata.
                         * @member {google.analytics.data.v1beta.IResponseMetaData|null|undefined} metadata
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.metadata = null;
    
                        /**
                         * RunReportResponse propertyQuota.
                         * @member {google.analytics.data.v1beta.IPropertyQuota|null|undefined} propertyQuota
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.propertyQuota = null;
    
                        /**
                         * RunReportResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         */
                        RunReportResponse.prototype.kind = "";
    
                        /**
                         * Creates a new RunReportResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunReportResponse} RunReportResponse instance
                         */
                        RunReportResponse.create = function create(properties) {
                            return new RunReportResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RunReportResponse message. Does not implicitly {@link google.analytics.data.v1beta.RunReportResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportResponse} message RunReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionHeaders != null && message.dimensionHeaders.length)
                                for (var i = 0; i < message.dimensionHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionHeader.encode(message.dimensionHeaders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricHeaders != null && message.metricHeaders.length)
                                for (var i = 0; i < message.metricHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricHeader.encode(message.metricHeaders[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rows != null && message.rows.length)
                                for (var i = 0; i < message.rows.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.rows[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.totals != null && message.totals.length)
                                for (var i = 0; i < message.totals.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.totals[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maximums != null && message.maximums.length)
                                for (var i = 0; i < message.maximums.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.maximums[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.minimums != null && message.minimums.length)
                                for (var i = 0; i < message.minimums.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.minimums[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.rowCount);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.analytics.data.v1beta.ResponseMetaData.encode(message.metadata, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.propertyQuota != null && Object.hasOwnProperty.call(message, "propertyQuota"))
                                $root.google.analytics.data.v1beta.PropertyQuota.encode(message.propertyQuota, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunReportResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunReportResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunReportResponse} message RunReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunReportResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunReportResponse} RunReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunReportResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionHeaders && message.dimensionHeaders.length))
                                            message.dimensionHeaders = [];
                                        message.dimensionHeaders.push($root.google.analytics.data.v1beta.DimensionHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricHeaders && message.metricHeaders.length))
                                            message.metricHeaders = [];
                                        message.metricHeaders.push($root.google.analytics.data.v1beta.MetricHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.rows && message.rows.length))
                                            message.rows = [];
                                        message.rows.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.totals && message.totals.length))
                                            message.totals = [];
                                        message.totals.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.maximums && message.maximums.length))
                                            message.maximums = [];
                                        message.maximums.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.minimums && message.minimums.length))
                                            message.minimums = [];
                                        message.minimums.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.rowCount = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunReportResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunReportResponse} RunReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunReportResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunReportResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionHeaders != null && message.hasOwnProperty("dimensionHeaders")) {
                                if (!Array.isArray(message.dimensionHeaders))
                                    return "dimensionHeaders: array expected";
                                for (var i = 0; i < message.dimensionHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionHeader.verify(message.dimensionHeaders[i]);
                                    if (error)
                                        return "dimensionHeaders." + error;
                                }
                            }
                            if (message.metricHeaders != null && message.hasOwnProperty("metricHeaders")) {
                                if (!Array.isArray(message.metricHeaders))
                                    return "metricHeaders: array expected";
                                for (var i = 0; i < message.metricHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricHeader.verify(message.metricHeaders[i]);
                                    if (error)
                                        return "metricHeaders." + error;
                                }
                            }
                            if (message.rows != null && message.hasOwnProperty("rows")) {
                                if (!Array.isArray(message.rows))
                                    return "rows: array expected";
                                for (var i = 0; i < message.rows.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.rows[i]);
                                    if (error)
                                        return "rows." + error;
                                }
                            }
                            if (message.totals != null && message.hasOwnProperty("totals")) {
                                if (!Array.isArray(message.totals))
                                    return "totals: array expected";
                                for (var i = 0; i < message.totals.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.totals[i]);
                                    if (error)
                                        return "totals." + error;
                                }
                            }
                            if (message.maximums != null && message.hasOwnProperty("maximums")) {
                                if (!Array.isArray(message.maximums))
                                    return "maximums: array expected";
                                for (var i = 0; i < message.maximums.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.maximums[i]);
                                    if (error)
                                        return "maximums." + error;
                                }
                            }
                            if (message.minimums != null && message.hasOwnProperty("minimums")) {
                                if (!Array.isArray(message.minimums))
                                    return "minimums: array expected";
                                for (var i = 0; i < message.minimums.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.minimums[i]);
                                    if (error)
                                        return "minimums." + error;
                                }
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                if (!$util.isInteger(message.rowCount))
                                    return "rowCount: integer expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.analytics.data.v1beta.ResponseMetaData.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota")) {
                                var error = $root.google.analytics.data.v1beta.PropertyQuota.verify(message.propertyQuota);
                                if (error)
                                    return "propertyQuota." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunReportResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunReportResponse} RunReportResponse
                         */
                        RunReportResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunReportResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunReportResponse();
                            if (object.dimensionHeaders) {
                                if (!Array.isArray(object.dimensionHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.dimensionHeaders: array expected");
                                message.dimensionHeaders = [];
                                for (var i = 0; i < object.dimensionHeaders.length; ++i) {
                                    if (typeof object.dimensionHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.dimensionHeaders: object expected");
                                    message.dimensionHeaders[i] = $root.google.analytics.data.v1beta.DimensionHeader.fromObject(object.dimensionHeaders[i]);
                                }
                            }
                            if (object.metricHeaders) {
                                if (!Array.isArray(object.metricHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.metricHeaders: array expected");
                                message.metricHeaders = [];
                                for (var i = 0; i < object.metricHeaders.length; ++i) {
                                    if (typeof object.metricHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.metricHeaders: object expected");
                                    message.metricHeaders[i] = $root.google.analytics.data.v1beta.MetricHeader.fromObject(object.metricHeaders[i]);
                                }
                            }
                            if (object.rows) {
                                if (!Array.isArray(object.rows))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.rows: array expected");
                                message.rows = [];
                                for (var i = 0; i < object.rows.length; ++i) {
                                    if (typeof object.rows[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.rows: object expected");
                                    message.rows[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.rows[i]);
                                }
                            }
                            if (object.totals) {
                                if (!Array.isArray(object.totals))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.totals: array expected");
                                message.totals = [];
                                for (var i = 0; i < object.totals.length; ++i) {
                                    if (typeof object.totals[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.totals: object expected");
                                    message.totals[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.totals[i]);
                                }
                            }
                            if (object.maximums) {
                                if (!Array.isArray(object.maximums))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.maximums: array expected");
                                message.maximums = [];
                                for (var i = 0; i < object.maximums.length; ++i) {
                                    if (typeof object.maximums[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.maximums: object expected");
                                    message.maximums[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.maximums[i]);
                                }
                            }
                            if (object.minimums) {
                                if (!Array.isArray(object.minimums))
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.minimums: array expected");
                                message.minimums = [];
                                for (var i = 0; i < object.minimums.length; ++i) {
                                    if (typeof object.minimums[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunReportResponse.minimums: object expected");
                                    message.minimums[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.minimums[i]);
                                }
                            }
                            if (object.rowCount != null)
                                message.rowCount = object.rowCount | 0;
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.metadata: object expected");
                                message.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.fromObject(object.metadata);
                            }
                            if (object.propertyQuota != null) {
                                if (typeof object.propertyQuota !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunReportResponse.propertyQuota: object expected");
                                message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.fromObject(object.propertyQuota);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunReportResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.RunReportResponse} message RunReportResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunReportResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionHeaders = [];
                                object.metricHeaders = [];
                                object.rows = [];
                                object.totals = [];
                                object.maximums = [];
                                object.minimums = [];
                            }
                            if (options.defaults) {
                                object.rowCount = 0;
                                object.metadata = null;
                                object.propertyQuota = null;
                                object.kind = "";
                            }
                            if (message.dimensionHeaders && message.dimensionHeaders.length) {
                                object.dimensionHeaders = [];
                                for (var j = 0; j < message.dimensionHeaders.length; ++j)
                                    object.dimensionHeaders[j] = $root.google.analytics.data.v1beta.DimensionHeader.toObject(message.dimensionHeaders[j], options);
                            }
                            if (message.metricHeaders && message.metricHeaders.length) {
                                object.metricHeaders = [];
                                for (var j = 0; j < message.metricHeaders.length; ++j)
                                    object.metricHeaders[j] = $root.google.analytics.data.v1beta.MetricHeader.toObject(message.metricHeaders[j], options);
                            }
                            if (message.rows && message.rows.length) {
                                object.rows = [];
                                for (var j = 0; j < message.rows.length; ++j)
                                    object.rows[j] = $root.google.analytics.data.v1beta.Row.toObject(message.rows[j], options);
                            }
                            if (message.totals && message.totals.length) {
                                object.totals = [];
                                for (var j = 0; j < message.totals.length; ++j)
                                    object.totals[j] = $root.google.analytics.data.v1beta.Row.toObject(message.totals[j], options);
                            }
                            if (message.maximums && message.maximums.length) {
                                object.maximums = [];
                                for (var j = 0; j < message.maximums.length; ++j)
                                    object.maximums[j] = $root.google.analytics.data.v1beta.Row.toObject(message.maximums[j], options);
                            }
                            if (message.minimums && message.minimums.length) {
                                object.minimums = [];
                                for (var j = 0; j < message.minimums.length; ++j)
                                    object.minimums[j] = $root.google.analytics.data.v1beta.Row.toObject(message.minimums[j], options);
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                object.rowCount = message.rowCount;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.toObject(message.metadata, options);
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota"))
                                object.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.toObject(message.propertyQuota, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this RunReportResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunReportResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunReportResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunReportResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunReportResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunReportResponse";
                        };
    
                        return RunReportResponse;
                    })();
    
                    v1beta.RunPivotReportRequest = (function() {
    
                        /**
                         * Properties of a RunPivotReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunPivotReportRequest
                         * @property {string|null} [property] RunPivotReportRequest property
                         * @property {Array.<google.analytics.data.v1beta.IDimension>|null} [dimensions] RunPivotReportRequest dimensions
                         * @property {Array.<google.analytics.data.v1beta.IMetric>|null} [metrics] RunPivotReportRequest metrics
                         * @property {Array.<google.analytics.data.v1beta.IDateRange>|null} [dateRanges] RunPivotReportRequest dateRanges
                         * @property {Array.<google.analytics.data.v1beta.IPivot>|null} [pivots] RunPivotReportRequest pivots
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [dimensionFilter] RunPivotReportRequest dimensionFilter
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [metricFilter] RunPivotReportRequest metricFilter
                         * @property {string|null} [currencyCode] RunPivotReportRequest currencyCode
                         * @property {google.analytics.data.v1beta.ICohortSpec|null} [cohortSpec] RunPivotReportRequest cohortSpec
                         * @property {boolean|null} [keepEmptyRows] RunPivotReportRequest keepEmptyRows
                         * @property {boolean|null} [returnPropertyQuota] RunPivotReportRequest returnPropertyQuota
                         */
    
                        /**
                         * Constructs a new RunPivotReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunPivotReportRequest.
                         * @implements IRunPivotReportRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest=} [properties] Properties to set
                         */
                        function RunPivotReportRequest(properties) {
                            this.dimensions = [];
                            this.metrics = [];
                            this.dateRanges = [];
                            this.pivots = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunPivotReportRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.property = "";
    
                        /**
                         * RunPivotReportRequest dimensions.
                         * @member {Array.<google.analytics.data.v1beta.IDimension>} dimensions
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.dimensions = $util.emptyArray;
    
                        /**
                         * RunPivotReportRequest metrics.
                         * @member {Array.<google.analytics.data.v1beta.IMetric>} metrics
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.metrics = $util.emptyArray;
    
                        /**
                         * RunPivotReportRequest dateRanges.
                         * @member {Array.<google.analytics.data.v1beta.IDateRange>} dateRanges
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.dateRanges = $util.emptyArray;
    
                        /**
                         * RunPivotReportRequest pivots.
                         * @member {Array.<google.analytics.data.v1beta.IPivot>} pivots
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.pivots = $util.emptyArray;
    
                        /**
                         * RunPivotReportRequest dimensionFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} dimensionFilter
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.dimensionFilter = null;
    
                        /**
                         * RunPivotReportRequest metricFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} metricFilter
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.metricFilter = null;
    
                        /**
                         * RunPivotReportRequest currencyCode.
                         * @member {string} currencyCode
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.currencyCode = "";
    
                        /**
                         * RunPivotReportRequest cohortSpec.
                         * @member {google.analytics.data.v1beta.ICohortSpec|null|undefined} cohortSpec
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.cohortSpec = null;
    
                        /**
                         * RunPivotReportRequest keepEmptyRows.
                         * @member {boolean} keepEmptyRows
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.keepEmptyRows = false;
    
                        /**
                         * RunPivotReportRequest returnPropertyQuota.
                         * @member {boolean} returnPropertyQuota
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         */
                        RunPivotReportRequest.prototype.returnPropertyQuota = false;
    
                        /**
                         * Creates a new RunPivotReportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunPivotReportRequest} RunPivotReportRequest instance
                         */
                        RunPivotReportRequest.create = function create(properties) {
                            return new RunPivotReportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunPivotReportRequest message. Does not implicitly {@link google.analytics.data.v1beta.RunPivotReportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest} message RunPivotReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunPivotReportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.dimensions != null && message.dimensions.length)
                                for (var i = 0; i < message.dimensions.length; ++i)
                                    $root.google.analytics.data.v1beta.Dimension.encode(message.dimensions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.analytics.data.v1beta.Metric.encode(message.metrics[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dateRanges != null && message.dateRanges.length)
                                for (var i = 0; i < message.dateRanges.length; ++i)
                                    $root.google.analytics.data.v1beta.DateRange.encode(message.dateRanges[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pivots != null && message.pivots.length)
                                for (var i = 0; i < message.pivots.length; ++i)
                                    $root.google.analytics.data.v1beta.Pivot.encode(message.pivots[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dimensionFilter != null && Object.hasOwnProperty.call(message, "dimensionFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.dimensionFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.metricFilter != null && Object.hasOwnProperty.call(message, "metricFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.metricFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.currencyCode);
                            if (message.cohortSpec != null && Object.hasOwnProperty.call(message, "cohortSpec"))
                                $root.google.analytics.data.v1beta.CohortSpec.encode(message.cohortSpec, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.keepEmptyRows != null && Object.hasOwnProperty.call(message, "keepEmptyRows"))
                                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.keepEmptyRows);
                            if (message.returnPropertyQuota != null && Object.hasOwnProperty.call(message, "returnPropertyQuota"))
                                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.returnPropertyQuota);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunPivotReportRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunPivotReportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportRequest} message RunPivotReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunPivotReportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunPivotReportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunPivotReportRequest} RunPivotReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunPivotReportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunPivotReportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dimensions && message.dimensions.length))
                                            message.dimensions = [];
                                        message.dimensions.push($root.google.analytics.data.v1beta.Dimension.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.analytics.data.v1beta.Metric.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.dateRanges && message.dateRanges.length))
                                            message.dateRanges = [];
                                        message.dateRanges.push($root.google.analytics.data.v1beta.DateRange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.pivots && message.pivots.length))
                                            message.pivots = [];
                                        message.pivots.push($root.google.analytics.data.v1beta.Pivot.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.currencyCode = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.keepEmptyRows = reader.bool();
                                        break;
                                    }
                                case 11: {
                                        message.returnPropertyQuota = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunPivotReportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunPivotReportRequest} RunPivotReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunPivotReportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunPivotReportRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunPivotReportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.dimensions != null && message.hasOwnProperty("dimensions")) {
                                if (!Array.isArray(message.dimensions))
                                    return "dimensions: array expected";
                                for (var i = 0; i < message.dimensions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Dimension.verify(message.dimensions[i]);
                                    if (error)
                                        return "dimensions." + error;
                                }
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Metric.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            if (message.dateRanges != null && message.hasOwnProperty("dateRanges")) {
                                if (!Array.isArray(message.dateRanges))
                                    return "dateRanges: array expected";
                                for (var i = 0; i < message.dateRanges.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DateRange.verify(message.dateRanges[i]);
                                    if (error)
                                        return "dateRanges." + error;
                                }
                            }
                            if (message.pivots != null && message.hasOwnProperty("pivots")) {
                                if (!Array.isArray(message.pivots))
                                    return "pivots: array expected";
                                for (var i = 0; i < message.pivots.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Pivot.verify(message.pivots[i]);
                                    if (error)
                                        return "pivots." + error;
                                }
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.dimensionFilter);
                                if (error)
                                    return "dimensionFilter." + error;
                            }
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.metricFilter);
                                if (error)
                                    return "metricFilter." + error;
                            }
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                                if (!$util.isString(message.currencyCode))
                                    return "currencyCode: string expected";
                            if (message.cohortSpec != null && message.hasOwnProperty("cohortSpec")) {
                                var error = $root.google.analytics.data.v1beta.CohortSpec.verify(message.cohortSpec);
                                if (error)
                                    return "cohortSpec." + error;
                            }
                            if (message.keepEmptyRows != null && message.hasOwnProperty("keepEmptyRows"))
                                if (typeof message.keepEmptyRows !== "boolean")
                                    return "keepEmptyRows: boolean expected";
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                if (typeof message.returnPropertyQuota !== "boolean")
                                    return "returnPropertyQuota: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunPivotReportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunPivotReportRequest} RunPivotReportRequest
                         */
                        RunPivotReportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunPivotReportRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunPivotReportRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.dimensions) {
                                if (!Array.isArray(object.dimensions))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.dimensions: array expected");
                                message.dimensions = [];
                                for (var i = 0; i < object.dimensions.length; ++i) {
                                    if (typeof object.dimensions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.dimensions: object expected");
                                    message.dimensions[i] = $root.google.analytics.data.v1beta.Dimension.fromObject(object.dimensions[i]);
                                }
                            }
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.metrics: object expected");
                                    message.metrics[i] = $root.google.analytics.data.v1beta.Metric.fromObject(object.metrics[i]);
                                }
                            }
                            if (object.dateRanges) {
                                if (!Array.isArray(object.dateRanges))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.dateRanges: array expected");
                                message.dateRanges = [];
                                for (var i = 0; i < object.dateRanges.length; ++i) {
                                    if (typeof object.dateRanges[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.dateRanges: object expected");
                                    message.dateRanges[i] = $root.google.analytics.data.v1beta.DateRange.fromObject(object.dateRanges[i]);
                                }
                            }
                            if (object.pivots) {
                                if (!Array.isArray(object.pivots))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.pivots: array expected");
                                message.pivots = [];
                                for (var i = 0; i < object.pivots.length; ++i) {
                                    if (typeof object.pivots[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.pivots: object expected");
                                    message.pivots[i] = $root.google.analytics.data.v1beta.Pivot.fromObject(object.pivots[i]);
                                }
                            }
                            if (object.dimensionFilter != null) {
                                if (typeof object.dimensionFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.dimensionFilter: object expected");
                                message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.dimensionFilter);
                            }
                            if (object.metricFilter != null) {
                                if (typeof object.metricFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.metricFilter: object expected");
                                message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.metricFilter);
                            }
                            if (object.currencyCode != null)
                                message.currencyCode = String(object.currencyCode);
                            if (object.cohortSpec != null) {
                                if (typeof object.cohortSpec !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportRequest.cohortSpec: object expected");
                                message.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.fromObject(object.cohortSpec);
                            }
                            if (object.keepEmptyRows != null)
                                message.keepEmptyRows = Boolean(object.keepEmptyRows);
                            if (object.returnPropertyQuota != null)
                                message.returnPropertyQuota = Boolean(object.returnPropertyQuota);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunPivotReportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.RunPivotReportRequest} message RunPivotReportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunPivotReportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensions = [];
                                object.metrics = [];
                                object.dateRanges = [];
                                object.pivots = [];
                            }
                            if (options.defaults) {
                                object.property = "";
                                object.dimensionFilter = null;
                                object.metricFilter = null;
                                object.currencyCode = "";
                                object.cohortSpec = null;
                                object.keepEmptyRows = false;
                                object.returnPropertyQuota = false;
                            }
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.dimensions && message.dimensions.length) {
                                object.dimensions = [];
                                for (var j = 0; j < message.dimensions.length; ++j)
                                    object.dimensions[j] = $root.google.analytics.data.v1beta.Dimension.toObject(message.dimensions[j], options);
                            }
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.analytics.data.v1beta.Metric.toObject(message.metrics[j], options);
                            }
                            if (message.dateRanges && message.dateRanges.length) {
                                object.dateRanges = [];
                                for (var j = 0; j < message.dateRanges.length; ++j)
                                    object.dateRanges[j] = $root.google.analytics.data.v1beta.DateRange.toObject(message.dateRanges[j], options);
                            }
                            if (message.pivots && message.pivots.length) {
                                object.pivots = [];
                                for (var j = 0; j < message.pivots.length; ++j)
                                    object.pivots[j] = $root.google.analytics.data.v1beta.Pivot.toObject(message.pivots[j], options);
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter"))
                                object.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.dimensionFilter, options);
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter"))
                                object.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.metricFilter, options);
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                                object.currencyCode = message.currencyCode;
                            if (message.cohortSpec != null && message.hasOwnProperty("cohortSpec"))
                                object.cohortSpec = $root.google.analytics.data.v1beta.CohortSpec.toObject(message.cohortSpec, options);
                            if (message.keepEmptyRows != null && message.hasOwnProperty("keepEmptyRows"))
                                object.keepEmptyRows = message.keepEmptyRows;
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                object.returnPropertyQuota = message.returnPropertyQuota;
                            return object;
                        };
    
                        /**
                         * Converts this RunPivotReportRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunPivotReportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunPivotReportRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunPivotReportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunPivotReportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunPivotReportRequest";
                        };
    
                        return RunPivotReportRequest;
                    })();
    
                    v1beta.RunPivotReportResponse = (function() {
    
                        /**
                         * Properties of a RunPivotReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunPivotReportResponse
                         * @property {Array.<google.analytics.data.v1beta.IPivotHeader>|null} [pivotHeaders] RunPivotReportResponse pivotHeaders
                         * @property {Array.<google.analytics.data.v1beta.IDimensionHeader>|null} [dimensionHeaders] RunPivotReportResponse dimensionHeaders
                         * @property {Array.<google.analytics.data.v1beta.IMetricHeader>|null} [metricHeaders] RunPivotReportResponse metricHeaders
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [rows] RunPivotReportResponse rows
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [aggregates] RunPivotReportResponse aggregates
                         * @property {google.analytics.data.v1beta.IResponseMetaData|null} [metadata] RunPivotReportResponse metadata
                         * @property {google.analytics.data.v1beta.IPropertyQuota|null} [propertyQuota] RunPivotReportResponse propertyQuota
                         * @property {string|null} [kind] RunPivotReportResponse kind
                         */
    
                        /**
                         * Constructs a new RunPivotReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunPivotReportResponse.
                         * @implements IRunPivotReportResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunPivotReportResponse=} [properties] Properties to set
                         */
                        function RunPivotReportResponse(properties) {
                            this.pivotHeaders = [];
                            this.dimensionHeaders = [];
                            this.metricHeaders = [];
                            this.rows = [];
                            this.aggregates = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunPivotReportResponse pivotHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IPivotHeader>} pivotHeaders
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.pivotHeaders = $util.emptyArray;
    
                        /**
                         * RunPivotReportResponse dimensionHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionHeader>} dimensionHeaders
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.dimensionHeaders = $util.emptyArray;
    
                        /**
                         * RunPivotReportResponse metricHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IMetricHeader>} metricHeaders
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.metricHeaders = $util.emptyArray;
    
                        /**
                         * RunPivotReportResponse rows.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} rows
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.rows = $util.emptyArray;
    
                        /**
                         * RunPivotReportResponse aggregates.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} aggregates
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.aggregates = $util.emptyArray;
    
                        /**
                         * RunPivotReportResponse metadata.
                         * @member {google.analytics.data.v1beta.IResponseMetaData|null|undefined} metadata
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.metadata = null;
    
                        /**
                         * RunPivotReportResponse propertyQuota.
                         * @member {google.analytics.data.v1beta.IPropertyQuota|null|undefined} propertyQuota
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.propertyQuota = null;
    
                        /**
                         * RunPivotReportResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         */
                        RunPivotReportResponse.prototype.kind = "";
    
                        /**
                         * Creates a new RunPivotReportResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunPivotReportResponse} RunPivotReportResponse instance
                         */
                        RunPivotReportResponse.create = function create(properties) {
                            return new RunPivotReportResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RunPivotReportResponse message. Does not implicitly {@link google.analytics.data.v1beta.RunPivotReportResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportResponse} message RunPivotReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunPivotReportResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pivotHeaders != null && message.pivotHeaders.length)
                                for (var i = 0; i < message.pivotHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.PivotHeader.encode(message.pivotHeaders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dimensionHeaders != null && message.dimensionHeaders.length)
                                for (var i = 0; i < message.dimensionHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionHeader.encode(message.dimensionHeaders[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metricHeaders != null && message.metricHeaders.length)
                                for (var i = 0; i < message.metricHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricHeader.encode(message.metricHeaders[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.rows != null && message.rows.length)
                                for (var i = 0; i < message.rows.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.rows[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.aggregates != null && message.aggregates.length)
                                for (var i = 0; i < message.aggregates.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.aggregates[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.analytics.data.v1beta.ResponseMetaData.encode(message.metadata, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.propertyQuota != null && Object.hasOwnProperty.call(message, "propertyQuota"))
                                $root.google.analytics.data.v1beta.PropertyQuota.encode(message.propertyQuota, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunPivotReportResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunPivotReportResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunPivotReportResponse} message RunPivotReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunPivotReportResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunPivotReportResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunPivotReportResponse} RunPivotReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunPivotReportResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunPivotReportResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.pivotHeaders && message.pivotHeaders.length))
                                            message.pivotHeaders = [];
                                        message.pivotHeaders.push($root.google.analytics.data.v1beta.PivotHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dimensionHeaders && message.dimensionHeaders.length))
                                            message.dimensionHeaders = [];
                                        message.dimensionHeaders.push($root.google.analytics.data.v1beta.DimensionHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.metricHeaders && message.metricHeaders.length))
                                            message.metricHeaders = [];
                                        message.metricHeaders.push($root.google.analytics.data.v1beta.MetricHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.rows && message.rows.length))
                                            message.rows = [];
                                        message.rows.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.aggregates && message.aggregates.length))
                                            message.aggregates = [];
                                        message.aggregates.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunPivotReportResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunPivotReportResponse} RunPivotReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunPivotReportResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunPivotReportResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunPivotReportResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pivotHeaders != null && message.hasOwnProperty("pivotHeaders")) {
                                if (!Array.isArray(message.pivotHeaders))
                                    return "pivotHeaders: array expected";
                                for (var i = 0; i < message.pivotHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.PivotHeader.verify(message.pivotHeaders[i]);
                                    if (error)
                                        return "pivotHeaders." + error;
                                }
                            }
                            if (message.dimensionHeaders != null && message.hasOwnProperty("dimensionHeaders")) {
                                if (!Array.isArray(message.dimensionHeaders))
                                    return "dimensionHeaders: array expected";
                                for (var i = 0; i < message.dimensionHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionHeader.verify(message.dimensionHeaders[i]);
                                    if (error)
                                        return "dimensionHeaders." + error;
                                }
                            }
                            if (message.metricHeaders != null && message.hasOwnProperty("metricHeaders")) {
                                if (!Array.isArray(message.metricHeaders))
                                    return "metricHeaders: array expected";
                                for (var i = 0; i < message.metricHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricHeader.verify(message.metricHeaders[i]);
                                    if (error)
                                        return "metricHeaders." + error;
                                }
                            }
                            if (message.rows != null && message.hasOwnProperty("rows")) {
                                if (!Array.isArray(message.rows))
                                    return "rows: array expected";
                                for (var i = 0; i < message.rows.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.rows[i]);
                                    if (error)
                                        return "rows." + error;
                                }
                            }
                            if (message.aggregates != null && message.hasOwnProperty("aggregates")) {
                                if (!Array.isArray(message.aggregates))
                                    return "aggregates: array expected";
                                for (var i = 0; i < message.aggregates.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.aggregates[i]);
                                    if (error)
                                        return "aggregates." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.analytics.data.v1beta.ResponseMetaData.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota")) {
                                var error = $root.google.analytics.data.v1beta.PropertyQuota.verify(message.propertyQuota);
                                if (error)
                                    return "propertyQuota." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunPivotReportResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunPivotReportResponse} RunPivotReportResponse
                         */
                        RunPivotReportResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunPivotReportResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunPivotReportResponse();
                            if (object.pivotHeaders) {
                                if (!Array.isArray(object.pivotHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.pivotHeaders: array expected");
                                message.pivotHeaders = [];
                                for (var i = 0; i < object.pivotHeaders.length; ++i) {
                                    if (typeof object.pivotHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.pivotHeaders: object expected");
                                    message.pivotHeaders[i] = $root.google.analytics.data.v1beta.PivotHeader.fromObject(object.pivotHeaders[i]);
                                }
                            }
                            if (object.dimensionHeaders) {
                                if (!Array.isArray(object.dimensionHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.dimensionHeaders: array expected");
                                message.dimensionHeaders = [];
                                for (var i = 0; i < object.dimensionHeaders.length; ++i) {
                                    if (typeof object.dimensionHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.dimensionHeaders: object expected");
                                    message.dimensionHeaders[i] = $root.google.analytics.data.v1beta.DimensionHeader.fromObject(object.dimensionHeaders[i]);
                                }
                            }
                            if (object.metricHeaders) {
                                if (!Array.isArray(object.metricHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.metricHeaders: array expected");
                                message.metricHeaders = [];
                                for (var i = 0; i < object.metricHeaders.length; ++i) {
                                    if (typeof object.metricHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.metricHeaders: object expected");
                                    message.metricHeaders[i] = $root.google.analytics.data.v1beta.MetricHeader.fromObject(object.metricHeaders[i]);
                                }
                            }
                            if (object.rows) {
                                if (!Array.isArray(object.rows))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.rows: array expected");
                                message.rows = [];
                                for (var i = 0; i < object.rows.length; ++i) {
                                    if (typeof object.rows[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.rows: object expected");
                                    message.rows[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.rows[i]);
                                }
                            }
                            if (object.aggregates) {
                                if (!Array.isArray(object.aggregates))
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.aggregates: array expected");
                                message.aggregates = [];
                                for (var i = 0; i < object.aggregates.length; ++i) {
                                    if (typeof object.aggregates[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.aggregates: object expected");
                                    message.aggregates[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.aggregates[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.metadata: object expected");
                                message.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.fromObject(object.metadata);
                            }
                            if (object.propertyQuota != null) {
                                if (typeof object.propertyQuota !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunPivotReportResponse.propertyQuota: object expected");
                                message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.fromObject(object.propertyQuota);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunPivotReportResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.RunPivotReportResponse} message RunPivotReportResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunPivotReportResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.pivotHeaders = [];
                                object.dimensionHeaders = [];
                                object.metricHeaders = [];
                                object.rows = [];
                                object.aggregates = [];
                            }
                            if (options.defaults) {
                                object.metadata = null;
                                object.propertyQuota = null;
                                object.kind = "";
                            }
                            if (message.pivotHeaders && message.pivotHeaders.length) {
                                object.pivotHeaders = [];
                                for (var j = 0; j < message.pivotHeaders.length; ++j)
                                    object.pivotHeaders[j] = $root.google.analytics.data.v1beta.PivotHeader.toObject(message.pivotHeaders[j], options);
                            }
                            if (message.dimensionHeaders && message.dimensionHeaders.length) {
                                object.dimensionHeaders = [];
                                for (var j = 0; j < message.dimensionHeaders.length; ++j)
                                    object.dimensionHeaders[j] = $root.google.analytics.data.v1beta.DimensionHeader.toObject(message.dimensionHeaders[j], options);
                            }
                            if (message.metricHeaders && message.metricHeaders.length) {
                                object.metricHeaders = [];
                                for (var j = 0; j < message.metricHeaders.length; ++j)
                                    object.metricHeaders[j] = $root.google.analytics.data.v1beta.MetricHeader.toObject(message.metricHeaders[j], options);
                            }
                            if (message.rows && message.rows.length) {
                                object.rows = [];
                                for (var j = 0; j < message.rows.length; ++j)
                                    object.rows[j] = $root.google.analytics.data.v1beta.Row.toObject(message.rows[j], options);
                            }
                            if (message.aggregates && message.aggregates.length) {
                                object.aggregates = [];
                                for (var j = 0; j < message.aggregates.length; ++j)
                                    object.aggregates[j] = $root.google.analytics.data.v1beta.Row.toObject(message.aggregates[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.analytics.data.v1beta.ResponseMetaData.toObject(message.metadata, options);
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota"))
                                object.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.toObject(message.propertyQuota, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this RunPivotReportResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunPivotReportResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunPivotReportResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunPivotReportResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunPivotReportResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunPivotReportResponse";
                        };
    
                        return RunPivotReportResponse;
                    })();
    
                    v1beta.BatchRunReportsRequest = (function() {
    
                        /**
                         * Properties of a BatchRunReportsRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IBatchRunReportsRequest
                         * @property {string|null} [property] BatchRunReportsRequest property
                         * @property {Array.<google.analytics.data.v1beta.IRunReportRequest>|null} [requests] BatchRunReportsRequest requests
                         */
    
                        /**
                         * Constructs a new BatchRunReportsRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a BatchRunReportsRequest.
                         * @implements IBatchRunReportsRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest=} [properties] Properties to set
                         */
                        function BatchRunReportsRequest(properties) {
                            this.requests = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRunReportsRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @instance
                         */
                        BatchRunReportsRequest.prototype.property = "";
    
                        /**
                         * BatchRunReportsRequest requests.
                         * @member {Array.<google.analytics.data.v1beta.IRunReportRequest>} requests
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @instance
                         */
                        BatchRunReportsRequest.prototype.requests = $util.emptyArray;
    
                        /**
                         * Creates a new BatchRunReportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.BatchRunReportsRequest} BatchRunReportsRequest instance
                         */
                        BatchRunReportsRequest.create = function create(properties) {
                            return new BatchRunReportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRunReportsRequest message. Does not implicitly {@link google.analytics.data.v1beta.BatchRunReportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest} message BatchRunReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunReportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.requests != null && message.requests.length)
                                for (var i = 0; i < message.requests.length; ++i)
                                    $root.google.analytics.data.v1beta.RunReportRequest.encode(message.requests[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRunReportsRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.BatchRunReportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsRequest} message BatchRunReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunReportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRunReportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.BatchRunReportsRequest} BatchRunReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunReportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.BatchRunReportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.requests && message.requests.length))
                                            message.requests = [];
                                        message.requests.push($root.google.analytics.data.v1beta.RunReportRequest.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRunReportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.BatchRunReportsRequest} BatchRunReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunReportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRunReportsRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRunReportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.requests != null && message.hasOwnProperty("requests")) {
                                if (!Array.isArray(message.requests))
                                    return "requests: array expected";
                                for (var i = 0; i < message.requests.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.RunReportRequest.verify(message.requests[i]);
                                    if (error)
                                        return "requests." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRunReportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.BatchRunReportsRequest} BatchRunReportsRequest
                         */
                        BatchRunReportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.BatchRunReportsRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.BatchRunReportsRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.requests) {
                                if (!Array.isArray(object.requests))
                                    throw TypeError(".google.analytics.data.v1beta.BatchRunReportsRequest.requests: array expected");
                                message.requests = [];
                                for (var i = 0; i < object.requests.length; ++i) {
                                    if (typeof object.requests[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.BatchRunReportsRequest.requests: object expected");
                                    message.requests[i] = $root.google.analytics.data.v1beta.RunReportRequest.fromObject(object.requests[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRunReportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.BatchRunReportsRequest} message BatchRunReportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRunReportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.requests = [];
                            if (options.defaults)
                                object.property = "";
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.requests && message.requests.length) {
                                object.requests = [];
                                for (var j = 0; j < message.requests.length; ++j)
                                    object.requests[j] = $root.google.analytics.data.v1beta.RunReportRequest.toObject(message.requests[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchRunReportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRunReportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRunReportsRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.BatchRunReportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRunReportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.BatchRunReportsRequest";
                        };
    
                        return BatchRunReportsRequest;
                    })();
    
                    v1beta.BatchRunReportsResponse = (function() {
    
                        /**
                         * Properties of a BatchRunReportsResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface IBatchRunReportsResponse
                         * @property {Array.<google.analytics.data.v1beta.IRunReportResponse>|null} [reports] BatchRunReportsResponse reports
                         * @property {string|null} [kind] BatchRunReportsResponse kind
                         */
    
                        /**
                         * Constructs a new BatchRunReportsResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a BatchRunReportsResponse.
                         * @implements IBatchRunReportsResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.IBatchRunReportsResponse=} [properties] Properties to set
                         */
                        function BatchRunReportsResponse(properties) {
                            this.reports = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRunReportsResponse reports.
                         * @member {Array.<google.analytics.data.v1beta.IRunReportResponse>} reports
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @instance
                         */
                        BatchRunReportsResponse.prototype.reports = $util.emptyArray;
    
                        /**
                         * BatchRunReportsResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @instance
                         */
                        BatchRunReportsResponse.prototype.kind = "";
    
                        /**
                         * Creates a new BatchRunReportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.BatchRunReportsResponse} BatchRunReportsResponse instance
                         */
                        BatchRunReportsResponse.create = function create(properties) {
                            return new BatchRunReportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRunReportsResponse message. Does not implicitly {@link google.analytics.data.v1beta.BatchRunReportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsResponse} message BatchRunReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunReportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reports != null && message.reports.length)
                                for (var i = 0; i < message.reports.length; ++i)
                                    $root.google.analytics.data.v1beta.RunReportResponse.encode(message.reports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRunReportsResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.BatchRunReportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunReportsResponse} message BatchRunReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunReportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRunReportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.BatchRunReportsResponse} BatchRunReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunReportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.BatchRunReportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.reports && message.reports.length))
                                            message.reports = [];
                                        message.reports.push($root.google.analytics.data.v1beta.RunReportResponse.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRunReportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.BatchRunReportsResponse} BatchRunReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunReportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRunReportsResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRunReportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reports != null && message.hasOwnProperty("reports")) {
                                if (!Array.isArray(message.reports))
                                    return "reports: array expected";
                                for (var i = 0; i < message.reports.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.RunReportResponse.verify(message.reports[i]);
                                    if (error)
                                        return "reports." + error;
                                }
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchRunReportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.BatchRunReportsResponse} BatchRunReportsResponse
                         */
                        BatchRunReportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.BatchRunReportsResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.BatchRunReportsResponse();
                            if (object.reports) {
                                if (!Array.isArray(object.reports))
                                    throw TypeError(".google.analytics.data.v1beta.BatchRunReportsResponse.reports: array expected");
                                message.reports = [];
                                for (var i = 0; i < object.reports.length; ++i) {
                                    if (typeof object.reports[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.BatchRunReportsResponse.reports: object expected");
                                    message.reports[i] = $root.google.analytics.data.v1beta.RunReportResponse.fromObject(object.reports[i]);
                                }
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRunReportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.BatchRunReportsResponse} message BatchRunReportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRunReportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.reports = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.reports && message.reports.length) {
                                object.reports = [];
                                for (var j = 0; j < message.reports.length; ++j)
                                    object.reports[j] = $root.google.analytics.data.v1beta.RunReportResponse.toObject(message.reports[j], options);
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this BatchRunReportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRunReportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRunReportsResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.BatchRunReportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRunReportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.BatchRunReportsResponse";
                        };
    
                        return BatchRunReportsResponse;
                    })();
    
                    v1beta.BatchRunPivotReportsRequest = (function() {
    
                        /**
                         * Properties of a BatchRunPivotReportsRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IBatchRunPivotReportsRequest
                         * @property {string|null} [property] BatchRunPivotReportsRequest property
                         * @property {Array.<google.analytics.data.v1beta.IRunPivotReportRequest>|null} [requests] BatchRunPivotReportsRequest requests
                         */
    
                        /**
                         * Constructs a new BatchRunPivotReportsRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a BatchRunPivotReportsRequest.
                         * @implements IBatchRunPivotReportsRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest=} [properties] Properties to set
                         */
                        function BatchRunPivotReportsRequest(properties) {
                            this.requests = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRunPivotReportsRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @instance
                         */
                        BatchRunPivotReportsRequest.prototype.property = "";
    
                        /**
                         * BatchRunPivotReportsRequest requests.
                         * @member {Array.<google.analytics.data.v1beta.IRunPivotReportRequest>} requests
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @instance
                         */
                        BatchRunPivotReportsRequest.prototype.requests = $util.emptyArray;
    
                        /**
                         * Creates a new BatchRunPivotReportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsRequest} BatchRunPivotReportsRequest instance
                         */
                        BatchRunPivotReportsRequest.create = function create(properties) {
                            return new BatchRunPivotReportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRunPivotReportsRequest message. Does not implicitly {@link google.analytics.data.v1beta.BatchRunPivotReportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest} message BatchRunPivotReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunPivotReportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.requests != null && message.requests.length)
                                for (var i = 0; i < message.requests.length; ++i)
                                    $root.google.analytics.data.v1beta.RunPivotReportRequest.encode(message.requests[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRunPivotReportsRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.BatchRunPivotReportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsRequest} message BatchRunPivotReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunPivotReportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRunPivotReportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsRequest} BatchRunPivotReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunPivotReportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.BatchRunPivotReportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.requests && message.requests.length))
                                            message.requests = [];
                                        message.requests.push($root.google.analytics.data.v1beta.RunPivotReportRequest.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRunPivotReportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsRequest} BatchRunPivotReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunPivotReportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRunPivotReportsRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRunPivotReportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.requests != null && message.hasOwnProperty("requests")) {
                                if (!Array.isArray(message.requests))
                                    return "requests: array expected";
                                for (var i = 0; i < message.requests.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.RunPivotReportRequest.verify(message.requests[i]);
                                    if (error)
                                        return "requests." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRunPivotReportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsRequest} BatchRunPivotReportsRequest
                         */
                        BatchRunPivotReportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.BatchRunPivotReportsRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.BatchRunPivotReportsRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.requests) {
                                if (!Array.isArray(object.requests))
                                    throw TypeError(".google.analytics.data.v1beta.BatchRunPivotReportsRequest.requests: array expected");
                                message.requests = [];
                                for (var i = 0; i < object.requests.length; ++i) {
                                    if (typeof object.requests[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.BatchRunPivotReportsRequest.requests: object expected");
                                    message.requests[i] = $root.google.analytics.data.v1beta.RunPivotReportRequest.fromObject(object.requests[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRunPivotReportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {google.analytics.data.v1beta.BatchRunPivotReportsRequest} message BatchRunPivotReportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRunPivotReportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.requests = [];
                            if (options.defaults)
                                object.property = "";
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.requests && message.requests.length) {
                                object.requests = [];
                                for (var j = 0; j < message.requests.length; ++j)
                                    object.requests[j] = $root.google.analytics.data.v1beta.RunPivotReportRequest.toObject(message.requests[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchRunPivotReportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRunPivotReportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRunPivotReportsRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRunPivotReportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.BatchRunPivotReportsRequest";
                        };
    
                        return BatchRunPivotReportsRequest;
                    })();
    
                    v1beta.BatchRunPivotReportsResponse = (function() {
    
                        /**
                         * Properties of a BatchRunPivotReportsResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface IBatchRunPivotReportsResponse
                         * @property {Array.<google.analytics.data.v1beta.IRunPivotReportResponse>|null} [pivotReports] BatchRunPivotReportsResponse pivotReports
                         * @property {string|null} [kind] BatchRunPivotReportsResponse kind
                         */
    
                        /**
                         * Constructs a new BatchRunPivotReportsResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a BatchRunPivotReportsResponse.
                         * @implements IBatchRunPivotReportsResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsResponse=} [properties] Properties to set
                         */
                        function BatchRunPivotReportsResponse(properties) {
                            this.pivotReports = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRunPivotReportsResponse pivotReports.
                         * @member {Array.<google.analytics.data.v1beta.IRunPivotReportResponse>} pivotReports
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @instance
                         */
                        BatchRunPivotReportsResponse.prototype.pivotReports = $util.emptyArray;
    
                        /**
                         * BatchRunPivotReportsResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @instance
                         */
                        BatchRunPivotReportsResponse.prototype.kind = "";
    
                        /**
                         * Creates a new BatchRunPivotReportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsResponse} BatchRunPivotReportsResponse instance
                         */
                        BatchRunPivotReportsResponse.create = function create(properties) {
                            return new BatchRunPivotReportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRunPivotReportsResponse message. Does not implicitly {@link google.analytics.data.v1beta.BatchRunPivotReportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsResponse} message BatchRunPivotReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunPivotReportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pivotReports != null && message.pivotReports.length)
                                for (var i = 0; i < message.pivotReports.length; ++i)
                                    $root.google.analytics.data.v1beta.RunPivotReportResponse.encode(message.pivotReports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRunPivotReportsResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.BatchRunPivotReportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IBatchRunPivotReportsResponse} message BatchRunPivotReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRunPivotReportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRunPivotReportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsResponse} BatchRunPivotReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunPivotReportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.BatchRunPivotReportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.pivotReports && message.pivotReports.length))
                                            message.pivotReports = [];
                                        message.pivotReports.push($root.google.analytics.data.v1beta.RunPivotReportResponse.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRunPivotReportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsResponse} BatchRunPivotReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRunPivotReportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRunPivotReportsResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRunPivotReportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pivotReports != null && message.hasOwnProperty("pivotReports")) {
                                if (!Array.isArray(message.pivotReports))
                                    return "pivotReports: array expected";
                                for (var i = 0; i < message.pivotReports.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.RunPivotReportResponse.verify(message.pivotReports[i]);
                                    if (error)
                                        return "pivotReports." + error;
                                }
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchRunPivotReportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.BatchRunPivotReportsResponse} BatchRunPivotReportsResponse
                         */
                        BatchRunPivotReportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.BatchRunPivotReportsResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.BatchRunPivotReportsResponse();
                            if (object.pivotReports) {
                                if (!Array.isArray(object.pivotReports))
                                    throw TypeError(".google.analytics.data.v1beta.BatchRunPivotReportsResponse.pivotReports: array expected");
                                message.pivotReports = [];
                                for (var i = 0; i < object.pivotReports.length; ++i) {
                                    if (typeof object.pivotReports[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.BatchRunPivotReportsResponse.pivotReports: object expected");
                                    message.pivotReports[i] = $root.google.analytics.data.v1beta.RunPivotReportResponse.fromObject(object.pivotReports[i]);
                                }
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRunPivotReportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {google.analytics.data.v1beta.BatchRunPivotReportsResponse} message BatchRunPivotReportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRunPivotReportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.pivotReports = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.pivotReports && message.pivotReports.length) {
                                object.pivotReports = [];
                                for (var j = 0; j < message.pivotReports.length; ++j)
                                    object.pivotReports[j] = $root.google.analytics.data.v1beta.RunPivotReportResponse.toObject(message.pivotReports[j], options);
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this BatchRunPivotReportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRunPivotReportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRunPivotReportsResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.BatchRunPivotReportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRunPivotReportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.BatchRunPivotReportsResponse";
                        };
    
                        return BatchRunPivotReportsResponse;
                    })();
    
                    v1beta.GetMetadataRequest = (function() {
    
                        /**
                         * Properties of a GetMetadataRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IGetMetadataRequest
                         * @property {string|null} [name] GetMetadataRequest name
                         */
    
                        /**
                         * Constructs a new GetMetadataRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a GetMetadataRequest.
                         * @implements IGetMetadataRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest=} [properties] Properties to set
                         */
                        function GetMetadataRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMetadataRequest name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @instance
                         */
                        GetMetadataRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMetadataRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.GetMetadataRequest} GetMetadataRequest instance
                         */
                        GetMetadataRequest.create = function create(properties) {
                            return new GetMetadataRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMetadataRequest message. Does not implicitly {@link google.analytics.data.v1beta.GetMetadataRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest} message GetMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMetadataRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.GetMetadataRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IGetMetadataRequest} message GetMetadataRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMetadataRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMetadataRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.GetMetadataRequest} GetMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.GetMetadataRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMetadataRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.GetMetadataRequest} GetMetadataRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMetadataRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMetadataRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMetadataRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMetadataRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.GetMetadataRequest} GetMetadataRequest
                         */
                        GetMetadataRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.GetMetadataRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.GetMetadataRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMetadataRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {google.analytics.data.v1beta.GetMetadataRequest} message GetMetadataRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMetadataRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMetadataRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMetadataRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetMetadataRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.GetMetadataRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetMetadataRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.GetMetadataRequest";
                        };
    
                        return GetMetadataRequest;
                    })();
    
                    v1beta.RunRealtimeReportRequest = (function() {
    
                        /**
                         * Properties of a RunRealtimeReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunRealtimeReportRequest
                         * @property {string|null} [property] RunRealtimeReportRequest property
                         * @property {Array.<google.analytics.data.v1beta.IDimension>|null} [dimensions] RunRealtimeReportRequest dimensions
                         * @property {Array.<google.analytics.data.v1beta.IMetric>|null} [metrics] RunRealtimeReportRequest metrics
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [dimensionFilter] RunRealtimeReportRequest dimensionFilter
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [metricFilter] RunRealtimeReportRequest metricFilter
                         * @property {number|Long|null} [limit] RunRealtimeReportRequest limit
                         * @property {Array.<google.analytics.data.v1beta.MetricAggregation>|null} [metricAggregations] RunRealtimeReportRequest metricAggregations
                         * @property {Array.<google.analytics.data.v1beta.IOrderBy>|null} [orderBys] RunRealtimeReportRequest orderBys
                         * @property {boolean|null} [returnPropertyQuota] RunRealtimeReportRequest returnPropertyQuota
                         * @property {Array.<google.analytics.data.v1beta.IMinuteRange>|null} [minuteRanges] RunRealtimeReportRequest minuteRanges
                         */
    
                        /**
                         * Constructs a new RunRealtimeReportRequest.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunRealtimeReportRequest.
                         * @implements IRunRealtimeReportRequest
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest=} [properties] Properties to set
                         */
                        function RunRealtimeReportRequest(properties) {
                            this.dimensions = [];
                            this.metrics = [];
                            this.metricAggregations = [];
                            this.orderBys = [];
                            this.minuteRanges = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunRealtimeReportRequest property.
                         * @member {string} property
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.property = "";
    
                        /**
                         * RunRealtimeReportRequest dimensions.
                         * @member {Array.<google.analytics.data.v1beta.IDimension>} dimensions
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.dimensions = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportRequest metrics.
                         * @member {Array.<google.analytics.data.v1beta.IMetric>} metrics
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.metrics = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportRequest dimensionFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} dimensionFilter
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.dimensionFilter = null;
    
                        /**
                         * RunRealtimeReportRequest metricFilter.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} metricFilter
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.metricFilter = null;
    
                        /**
                         * RunRealtimeReportRequest limit.
                         * @member {number|Long} limit
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RunRealtimeReportRequest metricAggregations.
                         * @member {Array.<google.analytics.data.v1beta.MetricAggregation>} metricAggregations
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.metricAggregations = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportRequest orderBys.
                         * @member {Array.<google.analytics.data.v1beta.IOrderBy>} orderBys
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.orderBys = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportRequest returnPropertyQuota.
                         * @member {boolean} returnPropertyQuota
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.returnPropertyQuota = false;
    
                        /**
                         * RunRealtimeReportRequest minuteRanges.
                         * @member {Array.<google.analytics.data.v1beta.IMinuteRange>} minuteRanges
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         */
                        RunRealtimeReportRequest.prototype.minuteRanges = $util.emptyArray;
    
                        /**
                         * Creates a new RunRealtimeReportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportRequest} RunRealtimeReportRequest instance
                         */
                        RunRealtimeReportRequest.create = function create(properties) {
                            return new RunRealtimeReportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunRealtimeReportRequest message. Does not implicitly {@link google.analytics.data.v1beta.RunRealtimeReportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest} message RunRealtimeReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunRealtimeReportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.property != null && Object.hasOwnProperty.call(message, "property"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.property);
                            if (message.dimensions != null && message.dimensions.length)
                                for (var i = 0; i < message.dimensions.length; ++i)
                                    $root.google.analytics.data.v1beta.Dimension.encode(message.dimensions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.analytics.data.v1beta.Metric.encode(message.metrics[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dimensionFilter != null && Object.hasOwnProperty.call(message, "dimensionFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.dimensionFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.metricFilter != null && Object.hasOwnProperty.call(message, "metricFilter"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.metricFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.limit);
                            if (message.metricAggregations != null && message.metricAggregations.length) {
                                writer.uint32(/* id 7, wireType 2 =*/58).fork();
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    writer.int32(message.metricAggregations[i]);
                                writer.ldelim();
                            }
                            if (message.orderBys != null && message.orderBys.length)
                                for (var i = 0; i < message.orderBys.length; ++i)
                                    $root.google.analytics.data.v1beta.OrderBy.encode(message.orderBys[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.returnPropertyQuota != null && Object.hasOwnProperty.call(message, "returnPropertyQuota"))
                                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.returnPropertyQuota);
                            if (message.minuteRanges != null && message.minuteRanges.length)
                                for (var i = 0; i < message.minuteRanges.length; ++i)
                                    $root.google.analytics.data.v1beta.MinuteRange.encode(message.minuteRanges[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunRealtimeReportRequest message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunRealtimeReportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportRequest} message RunRealtimeReportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunRealtimeReportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunRealtimeReportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportRequest} RunRealtimeReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunRealtimeReportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunRealtimeReportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.property = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.dimensions && message.dimensions.length))
                                            message.dimensions = [];
                                        message.dimensions.push($root.google.analytics.data.v1beta.Dimension.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.analytics.data.v1beta.Metric.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.metricAggregations && message.metricAggregations.length))
                                            message.metricAggregations = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.metricAggregations.push(reader.int32());
                                        } else
                                            message.metricAggregations.push(reader.int32());
                                        break;
                                    }
                                case 8: {
                                        if (!(message.orderBys && message.orderBys.length))
                                            message.orderBys = [];
                                        message.orderBys.push($root.google.analytics.data.v1beta.OrderBy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.returnPropertyQuota = reader.bool();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.minuteRanges && message.minuteRanges.length))
                                            message.minuteRanges = [];
                                        message.minuteRanges.push($root.google.analytics.data.v1beta.MinuteRange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunRealtimeReportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportRequest} RunRealtimeReportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunRealtimeReportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunRealtimeReportRequest message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunRealtimeReportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.property != null && message.hasOwnProperty("property"))
                                if (!$util.isString(message.property))
                                    return "property: string expected";
                            if (message.dimensions != null && message.hasOwnProperty("dimensions")) {
                                if (!Array.isArray(message.dimensions))
                                    return "dimensions: array expected";
                                for (var i = 0; i < message.dimensions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Dimension.verify(message.dimensions[i]);
                                    if (error)
                                        return "dimensions." + error;
                                }
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Metric.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.dimensionFilter);
                                if (error)
                                    return "dimensionFilter." + error;
                            }
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter")) {
                                var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.metricFilter);
                                if (error)
                                    return "metricFilter." + error;
                            }
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            if (message.metricAggregations != null && message.hasOwnProperty("metricAggregations")) {
                                if (!Array.isArray(message.metricAggregations))
                                    return "metricAggregations: array expected";
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    switch (message.metricAggregations[i]) {
                                    default:
                                        return "metricAggregations: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 5:
                                    case 6:
                                    case 4:
                                        break;
                                    }
                            }
                            if (message.orderBys != null && message.hasOwnProperty("orderBys")) {
                                if (!Array.isArray(message.orderBys))
                                    return "orderBys: array expected";
                                for (var i = 0; i < message.orderBys.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.verify(message.orderBys[i]);
                                    if (error)
                                        return "orderBys." + error;
                                }
                            }
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                if (typeof message.returnPropertyQuota !== "boolean")
                                    return "returnPropertyQuota: boolean expected";
                            if (message.minuteRanges != null && message.hasOwnProperty("minuteRanges")) {
                                if (!Array.isArray(message.minuteRanges))
                                    return "minuteRanges: array expected";
                                for (var i = 0; i < message.minuteRanges.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MinuteRange.verify(message.minuteRanges[i]);
                                    if (error)
                                        return "minuteRanges." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RunRealtimeReportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportRequest} RunRealtimeReportRequest
                         */
                        RunRealtimeReportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunRealtimeReportRequest)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunRealtimeReportRequest();
                            if (object.property != null)
                                message.property = String(object.property);
                            if (object.dimensions) {
                                if (!Array.isArray(object.dimensions))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.dimensions: array expected");
                                message.dimensions = [];
                                for (var i = 0; i < object.dimensions.length; ++i) {
                                    if (typeof object.dimensions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.dimensions: object expected");
                                    message.dimensions[i] = $root.google.analytics.data.v1beta.Dimension.fromObject(object.dimensions[i]);
                                }
                            }
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.metrics: object expected");
                                    message.metrics[i] = $root.google.analytics.data.v1beta.Metric.fromObject(object.metrics[i]);
                                }
                            }
                            if (object.dimensionFilter != null) {
                                if (typeof object.dimensionFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.dimensionFilter: object expected");
                                message.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.dimensionFilter);
                            }
                            if (object.metricFilter != null) {
                                if (typeof object.metricFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.metricFilter: object expected");
                                message.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.metricFilter);
                            }
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            if (object.metricAggregations) {
                                if (!Array.isArray(object.metricAggregations))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.metricAggregations: array expected");
                                message.metricAggregations = [];
                                for (var i = 0; i < object.metricAggregations.length; ++i)
                                    switch (object.metricAggregations[i]) {
                                    default:
                                        if (typeof object.metricAggregations[i] === "number") {
                                            message.metricAggregations[i] = object.metricAggregations[i];
                                            break;
                                        }
                                    case "METRIC_AGGREGATION_UNSPECIFIED":
                                    case 0:
                                        message.metricAggregations[i] = 0;
                                        break;
                                    case "TOTAL":
                                    case 1:
                                        message.metricAggregations[i] = 1;
                                        break;
                                    case "MINIMUM":
                                    case 5:
                                        message.metricAggregations[i] = 5;
                                        break;
                                    case "MAXIMUM":
                                    case 6:
                                        message.metricAggregations[i] = 6;
                                        break;
                                    case "COUNT":
                                    case 4:
                                        message.metricAggregations[i] = 4;
                                        break;
                                    }
                            }
                            if (object.orderBys) {
                                if (!Array.isArray(object.orderBys))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.orderBys: array expected");
                                message.orderBys = [];
                                for (var i = 0; i < object.orderBys.length; ++i) {
                                    if (typeof object.orderBys[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.orderBys: object expected");
                                    message.orderBys[i] = $root.google.analytics.data.v1beta.OrderBy.fromObject(object.orderBys[i]);
                                }
                            }
                            if (object.returnPropertyQuota != null)
                                message.returnPropertyQuota = Boolean(object.returnPropertyQuota);
                            if (object.minuteRanges) {
                                if (!Array.isArray(object.minuteRanges))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.minuteRanges: array expected");
                                message.minuteRanges = [];
                                for (var i = 0; i < object.minuteRanges.length; ++i) {
                                    if (typeof object.minuteRanges[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportRequest.minuteRanges: object expected");
                                    message.minuteRanges[i] = $root.google.analytics.data.v1beta.MinuteRange.fromObject(object.minuteRanges[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunRealtimeReportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {google.analytics.data.v1beta.RunRealtimeReportRequest} message RunRealtimeReportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunRealtimeReportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensions = [];
                                object.metrics = [];
                                object.metricAggregations = [];
                                object.orderBys = [];
                                object.minuteRanges = [];
                            }
                            if (options.defaults) {
                                object.property = "";
                                object.dimensionFilter = null;
                                object.metricFilter = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.limit = options.longs === String ? "0" : 0;
                                object.returnPropertyQuota = false;
                            }
                            if (message.property != null && message.hasOwnProperty("property"))
                                object.property = message.property;
                            if (message.dimensions && message.dimensions.length) {
                                object.dimensions = [];
                                for (var j = 0; j < message.dimensions.length; ++j)
                                    object.dimensions[j] = $root.google.analytics.data.v1beta.Dimension.toObject(message.dimensions[j], options);
                            }
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.analytics.data.v1beta.Metric.toObject(message.metrics[j], options);
                            }
                            if (message.dimensionFilter != null && message.hasOwnProperty("dimensionFilter"))
                                object.dimensionFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.dimensionFilter, options);
                            if (message.metricFilter != null && message.hasOwnProperty("metricFilter"))
                                object.metricFilter = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.metricFilter, options);
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                            if (message.metricAggregations && message.metricAggregations.length) {
                                object.metricAggregations = [];
                                for (var j = 0; j < message.metricAggregations.length; ++j)
                                    object.metricAggregations[j] = options.enums === String ? $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] === undefined ? message.metricAggregations[j] : $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] : message.metricAggregations[j];
                            }
                            if (message.orderBys && message.orderBys.length) {
                                object.orderBys = [];
                                for (var j = 0; j < message.orderBys.length; ++j)
                                    object.orderBys[j] = $root.google.analytics.data.v1beta.OrderBy.toObject(message.orderBys[j], options);
                            }
                            if (message.returnPropertyQuota != null && message.hasOwnProperty("returnPropertyQuota"))
                                object.returnPropertyQuota = message.returnPropertyQuota;
                            if (message.minuteRanges && message.minuteRanges.length) {
                                object.minuteRanges = [];
                                for (var j = 0; j < message.minuteRanges.length; ++j)
                                    object.minuteRanges[j] = $root.google.analytics.data.v1beta.MinuteRange.toObject(message.minuteRanges[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RunRealtimeReportRequest to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunRealtimeReportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunRealtimeReportRequest
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunRealtimeReportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunRealtimeReportRequest";
                        };
    
                        return RunRealtimeReportRequest;
                    })();
    
                    v1beta.RunRealtimeReportResponse = (function() {
    
                        /**
                         * Properties of a RunRealtimeReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRunRealtimeReportResponse
                         * @property {Array.<google.analytics.data.v1beta.IDimensionHeader>|null} [dimensionHeaders] RunRealtimeReportResponse dimensionHeaders
                         * @property {Array.<google.analytics.data.v1beta.IMetricHeader>|null} [metricHeaders] RunRealtimeReportResponse metricHeaders
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [rows] RunRealtimeReportResponse rows
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [totals] RunRealtimeReportResponse totals
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [maximums] RunRealtimeReportResponse maximums
                         * @property {Array.<google.analytics.data.v1beta.IRow>|null} [minimums] RunRealtimeReportResponse minimums
                         * @property {number|null} [rowCount] RunRealtimeReportResponse rowCount
                         * @property {google.analytics.data.v1beta.IPropertyQuota|null} [propertyQuota] RunRealtimeReportResponse propertyQuota
                         * @property {string|null} [kind] RunRealtimeReportResponse kind
                         */
    
                        /**
                         * Constructs a new RunRealtimeReportResponse.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a RunRealtimeReportResponse.
                         * @implements IRunRealtimeReportResponse
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportResponse=} [properties] Properties to set
                         */
                        function RunRealtimeReportResponse(properties) {
                            this.dimensionHeaders = [];
                            this.metricHeaders = [];
                            this.rows = [];
                            this.totals = [];
                            this.maximums = [];
                            this.minimums = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunRealtimeReportResponse dimensionHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionHeader>} dimensionHeaders
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.dimensionHeaders = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse metricHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IMetricHeader>} metricHeaders
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.metricHeaders = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse rows.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} rows
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.rows = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse totals.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} totals
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.totals = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse maximums.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} maximums
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.maximums = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse minimums.
                         * @member {Array.<google.analytics.data.v1beta.IRow>} minimums
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.minimums = $util.emptyArray;
    
                        /**
                         * RunRealtimeReportResponse rowCount.
                         * @member {number} rowCount
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.rowCount = 0;
    
                        /**
                         * RunRealtimeReportResponse propertyQuota.
                         * @member {google.analytics.data.v1beta.IPropertyQuota|null|undefined} propertyQuota
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.propertyQuota = null;
    
                        /**
                         * RunRealtimeReportResponse kind.
                         * @member {string} kind
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         */
                        RunRealtimeReportResponse.prototype.kind = "";
    
                        /**
                         * Creates a new RunRealtimeReportResponse instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportResponse=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportResponse} RunRealtimeReportResponse instance
                         */
                        RunRealtimeReportResponse.create = function create(properties) {
                            return new RunRealtimeReportResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RunRealtimeReportResponse message. Does not implicitly {@link google.analytics.data.v1beta.RunRealtimeReportResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportResponse} message RunRealtimeReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunRealtimeReportResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionHeaders != null && message.dimensionHeaders.length)
                                for (var i = 0; i < message.dimensionHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionHeader.encode(message.dimensionHeaders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricHeaders != null && message.metricHeaders.length)
                                for (var i = 0; i < message.metricHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricHeader.encode(message.metricHeaders[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rows != null && message.rows.length)
                                for (var i = 0; i < message.rows.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.rows[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.totals != null && message.totals.length)
                                for (var i = 0; i < message.totals.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.totals[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maximums != null && message.maximums.length)
                                for (var i = 0; i < message.maximums.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.maximums[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.minimums != null && message.minimums.length)
                                for (var i = 0; i < message.minimums.length; ++i)
                                    $root.google.analytics.data.v1beta.Row.encode(message.minimums[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.rowCount);
                            if (message.propertyQuota != null && Object.hasOwnProperty.call(message, "propertyQuota"))
                                $root.google.analytics.data.v1beta.PropertyQuota.encode(message.propertyQuota, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunRealtimeReportResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.RunRealtimeReportResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.IRunRealtimeReportResponse} message RunRealtimeReportResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunRealtimeReportResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunRealtimeReportResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportResponse} RunRealtimeReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunRealtimeReportResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.RunRealtimeReportResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionHeaders && message.dimensionHeaders.length))
                                            message.dimensionHeaders = [];
                                        message.dimensionHeaders.push($root.google.analytics.data.v1beta.DimensionHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricHeaders && message.metricHeaders.length))
                                            message.metricHeaders = [];
                                        message.metricHeaders.push($root.google.analytics.data.v1beta.MetricHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.rows && message.rows.length))
                                            message.rows = [];
                                        message.rows.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.totals && message.totals.length))
                                            message.totals = [];
                                        message.totals.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.maximums && message.maximums.length))
                                            message.maximums = [];
                                        message.maximums.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.minimums && message.minimums.length))
                                            message.minimums = [];
                                        message.minimums.push($root.google.analytics.data.v1beta.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.rowCount = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunRealtimeReportResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportResponse} RunRealtimeReportResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunRealtimeReportResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunRealtimeReportResponse message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunRealtimeReportResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionHeaders != null && message.hasOwnProperty("dimensionHeaders")) {
                                if (!Array.isArray(message.dimensionHeaders))
                                    return "dimensionHeaders: array expected";
                                for (var i = 0; i < message.dimensionHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionHeader.verify(message.dimensionHeaders[i]);
                                    if (error)
                                        return "dimensionHeaders." + error;
                                }
                            }
                            if (message.metricHeaders != null && message.hasOwnProperty("metricHeaders")) {
                                if (!Array.isArray(message.metricHeaders))
                                    return "metricHeaders: array expected";
                                for (var i = 0; i < message.metricHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricHeader.verify(message.metricHeaders[i]);
                                    if (error)
                                        return "metricHeaders." + error;
                                }
                            }
                            if (message.rows != null && message.hasOwnProperty("rows")) {
                                if (!Array.isArray(message.rows))
                                    return "rows: array expected";
                                for (var i = 0; i < message.rows.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.rows[i]);
                                    if (error)
                                        return "rows." + error;
                                }
                            }
                            if (message.totals != null && message.hasOwnProperty("totals")) {
                                if (!Array.isArray(message.totals))
                                    return "totals: array expected";
                                for (var i = 0; i < message.totals.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.totals[i]);
                                    if (error)
                                        return "totals." + error;
                                }
                            }
                            if (message.maximums != null && message.hasOwnProperty("maximums")) {
                                if (!Array.isArray(message.maximums))
                                    return "maximums: array expected";
                                for (var i = 0; i < message.maximums.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.maximums[i]);
                                    if (error)
                                        return "maximums." + error;
                                }
                            }
                            if (message.minimums != null && message.hasOwnProperty("minimums")) {
                                if (!Array.isArray(message.minimums))
                                    return "minimums: array expected";
                                for (var i = 0; i < message.minimums.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Row.verify(message.minimums[i]);
                                    if (error)
                                        return "minimums." + error;
                                }
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                if (!$util.isInteger(message.rowCount))
                                    return "rowCount: integer expected";
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota")) {
                                var error = $root.google.analytics.data.v1beta.PropertyQuota.verify(message.propertyQuota);
                                if (error)
                                    return "propertyQuota." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunRealtimeReportResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.RunRealtimeReportResponse} RunRealtimeReportResponse
                         */
                        RunRealtimeReportResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.RunRealtimeReportResponse)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.RunRealtimeReportResponse();
                            if (object.dimensionHeaders) {
                                if (!Array.isArray(object.dimensionHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.dimensionHeaders: array expected");
                                message.dimensionHeaders = [];
                                for (var i = 0; i < object.dimensionHeaders.length; ++i) {
                                    if (typeof object.dimensionHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.dimensionHeaders: object expected");
                                    message.dimensionHeaders[i] = $root.google.analytics.data.v1beta.DimensionHeader.fromObject(object.dimensionHeaders[i]);
                                }
                            }
                            if (object.metricHeaders) {
                                if (!Array.isArray(object.metricHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.metricHeaders: array expected");
                                message.metricHeaders = [];
                                for (var i = 0; i < object.metricHeaders.length; ++i) {
                                    if (typeof object.metricHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.metricHeaders: object expected");
                                    message.metricHeaders[i] = $root.google.analytics.data.v1beta.MetricHeader.fromObject(object.metricHeaders[i]);
                                }
                            }
                            if (object.rows) {
                                if (!Array.isArray(object.rows))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.rows: array expected");
                                message.rows = [];
                                for (var i = 0; i < object.rows.length; ++i) {
                                    if (typeof object.rows[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.rows: object expected");
                                    message.rows[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.rows[i]);
                                }
                            }
                            if (object.totals) {
                                if (!Array.isArray(object.totals))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.totals: array expected");
                                message.totals = [];
                                for (var i = 0; i < object.totals.length; ++i) {
                                    if (typeof object.totals[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.totals: object expected");
                                    message.totals[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.totals[i]);
                                }
                            }
                            if (object.maximums) {
                                if (!Array.isArray(object.maximums))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.maximums: array expected");
                                message.maximums = [];
                                for (var i = 0; i < object.maximums.length; ++i) {
                                    if (typeof object.maximums[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.maximums: object expected");
                                    message.maximums[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.maximums[i]);
                                }
                            }
                            if (object.minimums) {
                                if (!Array.isArray(object.minimums))
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.minimums: array expected");
                                message.minimums = [];
                                for (var i = 0; i < object.minimums.length; ++i) {
                                    if (typeof object.minimums[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.minimums: object expected");
                                    message.minimums[i] = $root.google.analytics.data.v1beta.Row.fromObject(object.minimums[i]);
                                }
                            }
                            if (object.rowCount != null)
                                message.rowCount = object.rowCount | 0;
                            if (object.propertyQuota != null) {
                                if (typeof object.propertyQuota !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.RunRealtimeReportResponse.propertyQuota: object expected");
                                message.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.fromObject(object.propertyQuota);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunRealtimeReportResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {google.analytics.data.v1beta.RunRealtimeReportResponse} message RunRealtimeReportResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunRealtimeReportResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionHeaders = [];
                                object.metricHeaders = [];
                                object.rows = [];
                                object.totals = [];
                                object.maximums = [];
                                object.minimums = [];
                            }
                            if (options.defaults) {
                                object.rowCount = 0;
                                object.propertyQuota = null;
                                object.kind = "";
                            }
                            if (message.dimensionHeaders && message.dimensionHeaders.length) {
                                object.dimensionHeaders = [];
                                for (var j = 0; j < message.dimensionHeaders.length; ++j)
                                    object.dimensionHeaders[j] = $root.google.analytics.data.v1beta.DimensionHeader.toObject(message.dimensionHeaders[j], options);
                            }
                            if (message.metricHeaders && message.metricHeaders.length) {
                                object.metricHeaders = [];
                                for (var j = 0; j < message.metricHeaders.length; ++j)
                                    object.metricHeaders[j] = $root.google.analytics.data.v1beta.MetricHeader.toObject(message.metricHeaders[j], options);
                            }
                            if (message.rows && message.rows.length) {
                                object.rows = [];
                                for (var j = 0; j < message.rows.length; ++j)
                                    object.rows[j] = $root.google.analytics.data.v1beta.Row.toObject(message.rows[j], options);
                            }
                            if (message.totals && message.totals.length) {
                                object.totals = [];
                                for (var j = 0; j < message.totals.length; ++j)
                                    object.totals[j] = $root.google.analytics.data.v1beta.Row.toObject(message.totals[j], options);
                            }
                            if (message.maximums && message.maximums.length) {
                                object.maximums = [];
                                for (var j = 0; j < message.maximums.length; ++j)
                                    object.maximums[j] = $root.google.analytics.data.v1beta.Row.toObject(message.maximums[j], options);
                            }
                            if (message.minimums && message.minimums.length) {
                                object.minimums = [];
                                for (var j = 0; j < message.minimums.length; ++j)
                                    object.minimums[j] = $root.google.analytics.data.v1beta.Row.toObject(message.minimums[j], options);
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                object.rowCount = message.rowCount;
                            if (message.propertyQuota != null && message.hasOwnProperty("propertyQuota"))
                                object.propertyQuota = $root.google.analytics.data.v1beta.PropertyQuota.toObject(message.propertyQuota, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this RunRealtimeReportResponse to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunRealtimeReportResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunRealtimeReportResponse
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.RunRealtimeReportResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunRealtimeReportResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.RunRealtimeReportResponse";
                        };
    
                        return RunRealtimeReportResponse;
                    })();
    
                    v1beta.DateRange = (function() {
    
                        /**
                         * Properties of a DateRange.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDateRange
                         * @property {string|null} [startDate] DateRange startDate
                         * @property {string|null} [endDate] DateRange endDate
                         * @property {string|null} [name] DateRange name
                         */
    
                        /**
                         * Constructs a new DateRange.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DateRange.
                         * @implements IDateRange
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDateRange=} [properties] Properties to set
                         */
                        function DateRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DateRange startDate.
                         * @member {string} startDate
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @instance
                         */
                        DateRange.prototype.startDate = "";
    
                        /**
                         * DateRange endDate.
                         * @member {string} endDate
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @instance
                         */
                        DateRange.prototype.endDate = "";
    
                        /**
                         * DateRange name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @instance
                         */
                        DateRange.prototype.name = "";
    
                        /**
                         * Creates a new DateRange instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {google.analytics.data.v1beta.IDateRange=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DateRange} DateRange instance
                         */
                        DateRange.create = function create(properties) {
                            return new DateRange(properties);
                        };
    
                        /**
                         * Encodes the specified DateRange message. Does not implicitly {@link google.analytics.data.v1beta.DateRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {google.analytics.data.v1beta.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && Object.hasOwnProperty.call(message, "startDate"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.startDate);
                            if (message.endDate != null && Object.hasOwnProperty.call(message, "endDate"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.endDate);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DateRange message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DateRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {google.analytics.data.v1beta.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DateRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startDate = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.endDate = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DateRange message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DateRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                if (!$util.isString(message.startDate))
                                    return "startDate: string expected";
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                if (!$util.isString(message.endDate))
                                    return "endDate: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DateRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DateRange} DateRange
                         */
                        DateRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DateRange)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DateRange();
                            if (object.startDate != null)
                                message.startDate = String(object.startDate);
                            if (object.endDate != null)
                                message.endDate = String(object.endDate);
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DateRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {google.analytics.data.v1beta.DateRange} message DateRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DateRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = "";
                                object.endDate = "";
                                object.name = "";
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = message.startDate;
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = message.endDate;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DateRange to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DateRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DateRange
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DateRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DateRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DateRange";
                        };
    
                        return DateRange;
                    })();
    
                    v1beta.MinuteRange = (function() {
    
                        /**
                         * Properties of a MinuteRange.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMinuteRange
                         * @property {number|null} [startMinutesAgo] MinuteRange startMinutesAgo
                         * @property {number|null} [endMinutesAgo] MinuteRange endMinutesAgo
                         * @property {string|null} [name] MinuteRange name
                         */
    
                        /**
                         * Constructs a new MinuteRange.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a MinuteRange.
                         * @implements IMinuteRange
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMinuteRange=} [properties] Properties to set
                         */
                        function MinuteRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MinuteRange startMinutesAgo.
                         * @member {number|null|undefined} startMinutesAgo
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         */
                        MinuteRange.prototype.startMinutesAgo = null;
    
                        /**
                         * MinuteRange endMinutesAgo.
                         * @member {number|null|undefined} endMinutesAgo
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         */
                        MinuteRange.prototype.endMinutesAgo = null;
    
                        /**
                         * MinuteRange name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         */
                        MinuteRange.prototype.name = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MinuteRange _startMinutesAgo.
                         * @member {"startMinutesAgo"|undefined} _startMinutesAgo
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         */
                        Object.defineProperty(MinuteRange.prototype, "_startMinutesAgo", {
                            get: $util.oneOfGetter($oneOfFields = ["startMinutesAgo"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * MinuteRange _endMinutesAgo.
                         * @member {"endMinutesAgo"|undefined} _endMinutesAgo
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         */
                        Object.defineProperty(MinuteRange.prototype, "_endMinutesAgo", {
                            get: $util.oneOfGetter($oneOfFields = ["endMinutesAgo"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MinuteRange instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {google.analytics.data.v1beta.IMinuteRange=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.MinuteRange} MinuteRange instance
                         */
                        MinuteRange.create = function create(properties) {
                            return new MinuteRange(properties);
                        };
    
                        /**
                         * Encodes the specified MinuteRange message. Does not implicitly {@link google.analytics.data.v1beta.MinuteRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {google.analytics.data.v1beta.IMinuteRange} message MinuteRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MinuteRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startMinutesAgo != null && Object.hasOwnProperty.call(message, "startMinutesAgo"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startMinutesAgo);
                            if (message.endMinutesAgo != null && Object.hasOwnProperty.call(message, "endMinutesAgo"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endMinutesAgo);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MinuteRange message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.MinuteRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {google.analytics.data.v1beta.IMinuteRange} message MinuteRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MinuteRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MinuteRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.MinuteRange} MinuteRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MinuteRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.MinuteRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startMinutesAgo = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.endMinutesAgo = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MinuteRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.MinuteRange} MinuteRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MinuteRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MinuteRange message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MinuteRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.startMinutesAgo != null && message.hasOwnProperty("startMinutesAgo")) {
                                properties._startMinutesAgo = 1;
                                if (!$util.isInteger(message.startMinutesAgo))
                                    return "startMinutesAgo: integer expected";
                            }
                            if (message.endMinutesAgo != null && message.hasOwnProperty("endMinutesAgo")) {
                                properties._endMinutesAgo = 1;
                                if (!$util.isInteger(message.endMinutesAgo))
                                    return "endMinutesAgo: integer expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MinuteRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.MinuteRange} MinuteRange
                         */
                        MinuteRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.MinuteRange)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.MinuteRange();
                            if (object.startMinutesAgo != null)
                                message.startMinutesAgo = object.startMinutesAgo | 0;
                            if (object.endMinutesAgo != null)
                                message.endMinutesAgo = object.endMinutesAgo | 0;
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MinuteRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {google.analytics.data.v1beta.MinuteRange} message MinuteRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MinuteRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.startMinutesAgo != null && message.hasOwnProperty("startMinutesAgo")) {
                                object.startMinutesAgo = message.startMinutesAgo;
                                if (options.oneofs)
                                    object._startMinutesAgo = "startMinutesAgo";
                            }
                            if (message.endMinutesAgo != null && message.hasOwnProperty("endMinutesAgo")) {
                                object.endMinutesAgo = message.endMinutesAgo;
                                if (options.oneofs)
                                    object._endMinutesAgo = "endMinutesAgo";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this MinuteRange to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MinuteRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MinuteRange
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.MinuteRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MinuteRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.MinuteRange";
                        };
    
                        return MinuteRange;
                    })();
    
                    v1beta.Dimension = (function() {
    
                        /**
                         * Properties of a Dimension.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimension
                         * @property {string|null} [name] Dimension name
                         * @property {google.analytics.data.v1beta.IDimensionExpression|null} [dimensionExpression] Dimension dimensionExpression
                         */
    
                        /**
                         * Constructs a new Dimension.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Dimension.
                         * @implements IDimension
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimension=} [properties] Properties to set
                         */
                        function Dimension(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Dimension name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @instance
                         */
                        Dimension.prototype.name = "";
    
                        /**
                         * Dimension dimensionExpression.
                         * @member {google.analytics.data.v1beta.IDimensionExpression|null|undefined} dimensionExpression
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @instance
                         */
                        Dimension.prototype.dimensionExpression = null;
    
                        /**
                         * Creates a new Dimension instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {google.analytics.data.v1beta.IDimension=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Dimension} Dimension instance
                         */
                        Dimension.create = function create(properties) {
                            return new Dimension(properties);
                        };
    
                        /**
                         * Encodes the specified Dimension message. Does not implicitly {@link google.analytics.data.v1beta.Dimension.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {google.analytics.data.v1beta.IDimension} message Dimension message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dimension.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.dimensionExpression != null && Object.hasOwnProperty.call(message, "dimensionExpression"))
                                $root.google.analytics.data.v1beta.DimensionExpression.encode(message.dimensionExpression, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Dimension message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Dimension.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {google.analytics.data.v1beta.IDimension} message Dimension message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dimension.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Dimension message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Dimension} Dimension
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dimension.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Dimension();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dimensionExpression = $root.google.analytics.data.v1beta.DimensionExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Dimension message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Dimension} Dimension
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dimension.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Dimension message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Dimension.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.dimensionExpression != null && message.hasOwnProperty("dimensionExpression")) {
                                var error = $root.google.analytics.data.v1beta.DimensionExpression.verify(message.dimensionExpression);
                                if (error)
                                    return "dimensionExpression." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Dimension message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Dimension} Dimension
                         */
                        Dimension.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Dimension)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Dimension();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.dimensionExpression != null) {
                                if (typeof object.dimensionExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Dimension.dimensionExpression: object expected");
                                message.dimensionExpression = $root.google.analytics.data.v1beta.DimensionExpression.fromObject(object.dimensionExpression);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Dimension message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {google.analytics.data.v1beta.Dimension} message Dimension
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Dimension.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.dimensionExpression = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.dimensionExpression != null && message.hasOwnProperty("dimensionExpression"))
                                object.dimensionExpression = $root.google.analytics.data.v1beta.DimensionExpression.toObject(message.dimensionExpression, options);
                            return object;
                        };
    
                        /**
                         * Converts this Dimension to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Dimension.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Dimension
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Dimension
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Dimension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Dimension";
                        };
    
                        return Dimension;
                    })();
    
                    v1beta.DimensionExpression = (function() {
    
                        /**
                         * Properties of a DimensionExpression.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimensionExpression
                         * @property {google.analytics.data.v1beta.DimensionExpression.ICaseExpression|null} [lowerCase] DimensionExpression lowerCase
                         * @property {google.analytics.data.v1beta.DimensionExpression.ICaseExpression|null} [upperCase] DimensionExpression upperCase
                         * @property {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression|null} [concatenate] DimensionExpression concatenate
                         */
    
                        /**
                         * Constructs a new DimensionExpression.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DimensionExpression.
                         * @implements IDimensionExpression
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimensionExpression=} [properties] Properties to set
                         */
                        function DimensionExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionExpression lowerCase.
                         * @member {google.analytics.data.v1beta.DimensionExpression.ICaseExpression|null|undefined} lowerCase
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.lowerCase = null;
    
                        /**
                         * DimensionExpression upperCase.
                         * @member {google.analytics.data.v1beta.DimensionExpression.ICaseExpression|null|undefined} upperCase
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.upperCase = null;
    
                        /**
                         * DimensionExpression concatenate.
                         * @member {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression|null|undefined} concatenate
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @instance
                         */
                        DimensionExpression.prototype.concatenate = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DimensionExpression oneExpression.
                         * @member {"lowerCase"|"upperCase"|"concatenate"|undefined} oneExpression
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @instance
                         */
                        Object.defineProperty(DimensionExpression.prototype, "oneExpression", {
                            get: $util.oneOfGetter($oneOfFields = ["lowerCase", "upperCase", "concatenate"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DimensionExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DimensionExpression} DimensionExpression instance
                         */
                        DimensionExpression.create = function create(properties) {
                            return new DimensionExpression(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionExpression message. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionExpression} message DimensionExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.lowerCase != null && Object.hasOwnProperty.call(message, "lowerCase"))
                                $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.encode(message.lowerCase, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.upperCase != null && Object.hasOwnProperty.call(message, "upperCase"))
                                $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.encode(message.upperCase, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.concatenate != null && Object.hasOwnProperty.call(message, "concatenate"))
                                $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.encode(message.concatenate, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionExpression} message DimensionExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DimensionExpression} DimensionExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.lowerCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.upperCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.concatenate = $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DimensionExpression} DimensionExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.lowerCase != null && message.hasOwnProperty("lowerCase")) {
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.verify(message.lowerCase);
                                    if (error)
                                        return "lowerCase." + error;
                                }
                            }
                            if (message.upperCase != null && message.hasOwnProperty("upperCase")) {
                                if (properties.oneExpression === 1)
                                    return "oneExpression: multiple values";
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.verify(message.upperCase);
                                    if (error)
                                        return "upperCase." + error;
                                }
                            }
                            if (message.concatenate != null && message.hasOwnProperty("concatenate")) {
                                if (properties.oneExpression === 1)
                                    return "oneExpression: multiple values";
                                properties.oneExpression = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.verify(message.concatenate);
                                    if (error)
                                        return "concatenate." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DimensionExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DimensionExpression} DimensionExpression
                         */
                        DimensionExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DimensionExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DimensionExpression();
                            if (object.lowerCase != null) {
                                if (typeof object.lowerCase !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.DimensionExpression.lowerCase: object expected");
                                message.lowerCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.fromObject(object.lowerCase);
                            }
                            if (object.upperCase != null) {
                                if (typeof object.upperCase !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.DimensionExpression.upperCase: object expected");
                                message.upperCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.fromObject(object.upperCase);
                            }
                            if (object.concatenate != null) {
                                if (typeof object.concatenate !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.DimensionExpression.concatenate: object expected");
                                message.concatenate = $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.fromObject(object.concatenate);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {google.analytics.data.v1beta.DimensionExpression} message DimensionExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.lowerCase != null && message.hasOwnProperty("lowerCase")) {
                                object.lowerCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.toObject(message.lowerCase, options);
                                if (options.oneofs)
                                    object.oneExpression = "lowerCase";
                            }
                            if (message.upperCase != null && message.hasOwnProperty("upperCase")) {
                                object.upperCase = $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression.toObject(message.upperCase, options);
                                if (options.oneofs)
                                    object.oneExpression = "upperCase";
                            }
                            if (message.concatenate != null && message.hasOwnProperty("concatenate")) {
                                object.concatenate = $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.toObject(message.concatenate, options);
                                if (options.oneofs)
                                    object.oneExpression = "concatenate";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DimensionExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DimensionExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionExpression";
                        };
    
                        DimensionExpression.CaseExpression = (function() {
    
                            /**
                             * Properties of a CaseExpression.
                             * @memberof google.analytics.data.v1beta.DimensionExpression
                             * @interface ICaseExpression
                             * @property {string|null} [dimensionName] CaseExpression dimensionName
                             */
    
                            /**
                             * Constructs a new CaseExpression.
                             * @memberof google.analytics.data.v1beta.DimensionExpression
                             * @classdesc Represents a CaseExpression.
                             * @implements ICaseExpression
                             * @constructor
                             * @param {google.analytics.data.v1beta.DimensionExpression.ICaseExpression=} [properties] Properties to set
                             */
                            function CaseExpression(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CaseExpression dimensionName.
                             * @member {string} dimensionName
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @instance
                             */
                            CaseExpression.prototype.dimensionName = "";
    
                            /**
                             * Creates a new CaseExpression instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.ICaseExpression=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.DimensionExpression.CaseExpression} CaseExpression instance
                             */
                            CaseExpression.create = function create(properties) {
                                return new CaseExpression(properties);
                            };
    
                            /**
                             * Encodes the specified CaseExpression message. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.CaseExpression.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.ICaseExpression} message CaseExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaseExpression.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dimensionName != null && Object.hasOwnProperty.call(message, "dimensionName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CaseExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.CaseExpression.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.ICaseExpression} message CaseExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaseExpression.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CaseExpression message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.DimensionExpression.CaseExpression} CaseExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaseExpression.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.dimensionName = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CaseExpression message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.DimensionExpression.CaseExpression} CaseExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaseExpression.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CaseExpression message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CaseExpression.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    if (!$util.isString(message.dimensionName))
                                        return "dimensionName: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CaseExpression message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.DimensionExpression.CaseExpression} CaseExpression
                             */
                            CaseExpression.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.DimensionExpression.CaseExpression();
                                if (object.dimensionName != null)
                                    message.dimensionName = String(object.dimensionName);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CaseExpression message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.CaseExpression} message CaseExpression
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CaseExpression.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.dimensionName = "";
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    object.dimensionName = message.dimensionName;
                                return object;
                            };
    
                            /**
                             * Converts this CaseExpression to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CaseExpression.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CaseExpression
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.DimensionExpression.CaseExpression
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CaseExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionExpression.CaseExpression";
                            };
    
                            return CaseExpression;
                        })();
    
                        DimensionExpression.ConcatenateExpression = (function() {
    
                            /**
                             * Properties of a ConcatenateExpression.
                             * @memberof google.analytics.data.v1beta.DimensionExpression
                             * @interface IConcatenateExpression
                             * @property {Array.<string>|null} [dimensionNames] ConcatenateExpression dimensionNames
                             * @property {string|null} [delimiter] ConcatenateExpression delimiter
                             */
    
                            /**
                             * Constructs a new ConcatenateExpression.
                             * @memberof google.analytics.data.v1beta.DimensionExpression
                             * @classdesc Represents a ConcatenateExpression.
                             * @implements IConcatenateExpression
                             * @constructor
                             * @param {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression=} [properties] Properties to set
                             */
                            function ConcatenateExpression(properties) {
                                this.dimensionNames = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConcatenateExpression dimensionNames.
                             * @member {Array.<string>} dimensionNames
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @instance
                             */
                            ConcatenateExpression.prototype.dimensionNames = $util.emptyArray;
    
                            /**
                             * ConcatenateExpression delimiter.
                             * @member {string} delimiter
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @instance
                             */
                            ConcatenateExpression.prototype.delimiter = "";
    
                            /**
                             * Creates a new ConcatenateExpression instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression} ConcatenateExpression instance
                             */
                            ConcatenateExpression.create = function create(properties) {
                                return new ConcatenateExpression(properties);
                            };
    
                            /**
                             * Encodes the specified ConcatenateExpression message. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression} message ConcatenateExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConcatenateExpression.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dimensionNames != null && message.dimensionNames.length)
                                    for (var i = 0; i < message.dimensionNames.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionNames[i]);
                                if (message.delimiter != null && Object.hasOwnProperty.call(message, "delimiter"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.delimiter);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConcatenateExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.IConcatenateExpression} message ConcatenateExpression message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConcatenateExpression.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConcatenateExpression message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConcatenateExpression.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.dimensionNames && message.dimensionNames.length))
                                                message.dimensionNames = [];
                                            message.dimensionNames.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.delimiter = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConcatenateExpression message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConcatenateExpression.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConcatenateExpression message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConcatenateExpression.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dimensionNames != null && message.hasOwnProperty("dimensionNames")) {
                                    if (!Array.isArray(message.dimensionNames))
                                        return "dimensionNames: array expected";
                                    for (var i = 0; i < message.dimensionNames.length; ++i)
                                        if (!$util.isString(message.dimensionNames[i]))
                                            return "dimensionNames: string[] expected";
                                }
                                if (message.delimiter != null && message.hasOwnProperty("delimiter"))
                                    if (!$util.isString(message.delimiter))
                                        return "delimiter: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConcatenateExpression message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression} ConcatenateExpression
                             */
                            ConcatenateExpression.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression();
                                if (object.dimensionNames) {
                                    if (!Array.isArray(object.dimensionNames))
                                        throw TypeError(".google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression.dimensionNames: array expected");
                                    message.dimensionNames = [];
                                    for (var i = 0; i < object.dimensionNames.length; ++i)
                                        message.dimensionNames[i] = String(object.dimensionNames[i]);
                                }
                                if (object.delimiter != null)
                                    message.delimiter = String(object.delimiter);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConcatenateExpression message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression} message ConcatenateExpression
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConcatenateExpression.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.dimensionNames = [];
                                if (options.defaults)
                                    object.delimiter = "";
                                if (message.dimensionNames && message.dimensionNames.length) {
                                    object.dimensionNames = [];
                                    for (var j = 0; j < message.dimensionNames.length; ++j)
                                        object.dimensionNames[j] = message.dimensionNames[j];
                                }
                                if (message.delimiter != null && message.hasOwnProperty("delimiter"))
                                    object.delimiter = message.delimiter;
                                return object;
                            };
    
                            /**
                             * Converts this ConcatenateExpression to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConcatenateExpression.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ConcatenateExpression
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ConcatenateExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression";
                            };
    
                            return ConcatenateExpression;
                        })();
    
                        return DimensionExpression;
                    })();
    
                    v1beta.Metric = (function() {
    
                        /**
                         * Properties of a Metric.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetric
                         * @property {string|null} [name] Metric name
                         * @property {string|null} [expression] Metric expression
                         * @property {boolean|null} [invisible] Metric invisible
                         */
    
                        /**
                         * Constructs a new Metric.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Metric.
                         * @implements IMetric
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetric=} [properties] Properties to set
                         */
                        function Metric(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Metric name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.Metric
                         * @instance
                         */
                        Metric.prototype.name = "";
    
                        /**
                         * Metric expression.
                         * @member {string} expression
                         * @memberof google.analytics.data.v1beta.Metric
                         * @instance
                         */
                        Metric.prototype.expression = "";
    
                        /**
                         * Metric invisible.
                         * @member {boolean} invisible
                         * @memberof google.analytics.data.v1beta.Metric
                         * @instance
                         */
                        Metric.prototype.invisible = false;
    
                        /**
                         * Creates a new Metric instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {google.analytics.data.v1beta.IMetric=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Metric} Metric instance
                         */
                        Metric.create = function create(properties) {
                            return new Metric(properties);
                        };
    
                        /**
                         * Encodes the specified Metric message. Does not implicitly {@link google.analytics.data.v1beta.Metric.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {google.analytics.data.v1beta.IMetric} message Metric message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metric.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.expression);
                            if (message.invisible != null && Object.hasOwnProperty.call(message, "invisible"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.invisible);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Metric message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Metric.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {google.analytics.data.v1beta.IMetric} message Metric message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metric.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Metric message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Metric} Metric
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metric.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Metric();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.expression = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.invisible = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Metric message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Metric} Metric
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metric.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Metric message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Metric.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.expression != null && message.hasOwnProperty("expression"))
                                if (!$util.isString(message.expression))
                                    return "expression: string expected";
                            if (message.invisible != null && message.hasOwnProperty("invisible"))
                                if (typeof message.invisible !== "boolean")
                                    return "invisible: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a Metric message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Metric} Metric
                         */
                        Metric.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Metric)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Metric();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.expression != null)
                                message.expression = String(object.expression);
                            if (object.invisible != null)
                                message.invisible = Boolean(object.invisible);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Metric message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {google.analytics.data.v1beta.Metric} message Metric
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Metric.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.expression = "";
                                object.invisible = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.expression != null && message.hasOwnProperty("expression"))
                                object.expression = message.expression;
                            if (message.invisible != null && message.hasOwnProperty("invisible"))
                                object.invisible = message.invisible;
                            return object;
                        };
    
                        /**
                         * Converts this Metric to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Metric
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Metric.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Metric
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Metric
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Metric.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Metric";
                        };
    
                        return Metric;
                    })();
    
                    v1beta.FilterExpression = (function() {
    
                        /**
                         * Properties of a FilterExpression.
                         * @memberof google.analytics.data.v1beta
                         * @interface IFilterExpression
                         * @property {google.analytics.data.v1beta.IFilterExpressionList|null} [andGroup] FilterExpression andGroup
                         * @property {google.analytics.data.v1beta.IFilterExpressionList|null} [orGroup] FilterExpression orGroup
                         * @property {google.analytics.data.v1beta.IFilterExpression|null} [notExpression] FilterExpression notExpression
                         * @property {google.analytics.data.v1beta.IFilter|null} [filter] FilterExpression filter
                         */
    
                        /**
                         * Constructs a new FilterExpression.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a FilterExpression.
                         * @implements IFilterExpression
                         * @constructor
                         * @param {google.analytics.data.v1beta.IFilterExpression=} [properties] Properties to set
                         */
                        function FilterExpression(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FilterExpression andGroup.
                         * @member {google.analytics.data.v1beta.IFilterExpressionList|null|undefined} andGroup
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.andGroup = null;
    
                        /**
                         * FilterExpression orGroup.
                         * @member {google.analytics.data.v1beta.IFilterExpressionList|null|undefined} orGroup
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.orGroup = null;
    
                        /**
                         * FilterExpression notExpression.
                         * @member {google.analytics.data.v1beta.IFilterExpression|null|undefined} notExpression
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.notExpression = null;
    
                        /**
                         * FilterExpression filter.
                         * @member {google.analytics.data.v1beta.IFilter|null|undefined} filter
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         */
                        FilterExpression.prototype.filter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FilterExpression expr.
                         * @member {"andGroup"|"orGroup"|"notExpression"|"filter"|undefined} expr
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         */
                        Object.defineProperty(FilterExpression.prototype, "expr", {
                            get: $util.oneOfGetter($oneOfFields = ["andGroup", "orGroup", "notExpression", "filter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FilterExpression instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpression=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.FilterExpression} FilterExpression instance
                         */
                        FilterExpression.create = function create(properties) {
                            return new FilterExpression(properties);
                        };
    
                        /**
                         * Encodes the specified FilterExpression message. Does not implicitly {@link google.analytics.data.v1beta.FilterExpression.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpression} message FilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpression.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.andGroup != null && Object.hasOwnProperty.call(message, "andGroup"))
                                $root.google.analytics.data.v1beta.FilterExpressionList.encode(message.andGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.orGroup != null && Object.hasOwnProperty.call(message, "orGroup"))
                                $root.google.analytics.data.v1beta.FilterExpressionList.encode(message.orGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notExpression != null && Object.hasOwnProperty.call(message, "notExpression"))
                                $root.google.analytics.data.v1beta.FilterExpression.encode(message.notExpression, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                $root.google.analytics.data.v1beta.Filter.encode(message.filter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FilterExpression message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.FilterExpression.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpression} message FilterExpression message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpression.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FilterExpression message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.FilterExpression} FilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpression.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.FilterExpression();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.andGroup = $root.google.analytics.data.v1beta.FilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.orGroup = $root.google.analytics.data.v1beta.FilterExpressionList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notExpression = $root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.filter = $root.google.analytics.data.v1beta.Filter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FilterExpression message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.FilterExpression} FilterExpression
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpression.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FilterExpression message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FilterExpression.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.FilterExpressionList.verify(message.andGroup);
                                    if (error)
                                        return "andGroup." + error;
                                }
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.FilterExpressionList.verify(message.orGroup);
                                    if (error)
                                        return "orGroup." + error;
                                }
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.notExpression);
                                    if (error)
                                        return "notExpression." + error;
                                }
                            }
                            if (message.filter != null && message.hasOwnProperty("filter")) {
                                if (properties.expr === 1)
                                    return "expr: multiple values";
                                properties.expr = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.Filter.verify(message.filter);
                                    if (error)
                                        return "filter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FilterExpression message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.FilterExpression} FilterExpression
                         */
                        FilterExpression.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.FilterExpression)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.FilterExpression();
                            if (object.andGroup != null) {
                                if (typeof object.andGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.FilterExpression.andGroup: object expected");
                                message.andGroup = $root.google.analytics.data.v1beta.FilterExpressionList.fromObject(object.andGroup);
                            }
                            if (object.orGroup != null) {
                                if (typeof object.orGroup !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.FilterExpression.orGroup: object expected");
                                message.orGroup = $root.google.analytics.data.v1beta.FilterExpressionList.fromObject(object.orGroup);
                            }
                            if (object.notExpression != null) {
                                if (typeof object.notExpression !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.FilterExpression.notExpression: object expected");
                                message.notExpression = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.notExpression);
                            }
                            if (object.filter != null) {
                                if (typeof object.filter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.FilterExpression.filter: object expected");
                                message.filter = $root.google.analytics.data.v1beta.Filter.fromObject(object.filter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FilterExpression message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {google.analytics.data.v1beta.FilterExpression} message FilterExpression
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FilterExpression.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.andGroup != null && message.hasOwnProperty("andGroup")) {
                                object.andGroup = $root.google.analytics.data.v1beta.FilterExpressionList.toObject(message.andGroup, options);
                                if (options.oneofs)
                                    object.expr = "andGroup";
                            }
                            if (message.orGroup != null && message.hasOwnProperty("orGroup")) {
                                object.orGroup = $root.google.analytics.data.v1beta.FilterExpressionList.toObject(message.orGroup, options);
                                if (options.oneofs)
                                    object.expr = "orGroup";
                            }
                            if (message.notExpression != null && message.hasOwnProperty("notExpression")) {
                                object.notExpression = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.notExpression, options);
                                if (options.oneofs)
                                    object.expr = "notExpression";
                            }
                            if (message.filter != null && message.hasOwnProperty("filter")) {
                                object.filter = $root.google.analytics.data.v1beta.Filter.toObject(message.filter, options);
                                if (options.oneofs)
                                    object.expr = "filter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FilterExpression to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FilterExpression.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FilterExpression
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.FilterExpression
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FilterExpression.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.FilterExpression";
                        };
    
                        return FilterExpression;
                    })();
    
                    v1beta.FilterExpressionList = (function() {
    
                        /**
                         * Properties of a FilterExpressionList.
                         * @memberof google.analytics.data.v1beta
                         * @interface IFilterExpressionList
                         * @property {Array.<google.analytics.data.v1beta.IFilterExpression>|null} [expressions] FilterExpressionList expressions
                         */
    
                        /**
                         * Constructs a new FilterExpressionList.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a FilterExpressionList.
                         * @implements IFilterExpressionList
                         * @constructor
                         * @param {google.analytics.data.v1beta.IFilterExpressionList=} [properties] Properties to set
                         */
                        function FilterExpressionList(properties) {
                            this.expressions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FilterExpressionList expressions.
                         * @member {Array.<google.analytics.data.v1beta.IFilterExpression>} expressions
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @instance
                         */
                        FilterExpressionList.prototype.expressions = $util.emptyArray;
    
                        /**
                         * Creates a new FilterExpressionList instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpressionList=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.FilterExpressionList} FilterExpressionList instance
                         */
                        FilterExpressionList.create = function create(properties) {
                            return new FilterExpressionList(properties);
                        };
    
                        /**
                         * Encodes the specified FilterExpressionList message. Does not implicitly {@link google.analytics.data.v1beta.FilterExpressionList.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpressionList} message FilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpressionList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.expressions != null && message.expressions.length)
                                for (var i = 0; i < message.expressions.length; ++i)
                                    $root.google.analytics.data.v1beta.FilterExpression.encode(message.expressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FilterExpressionList message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.FilterExpressionList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1beta.IFilterExpressionList} message FilterExpressionList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FilterExpressionList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FilterExpressionList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.FilterExpressionList} FilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpressionList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.FilterExpressionList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.expressions && message.expressions.length))
                                            message.expressions = [];
                                        message.expressions.push($root.google.analytics.data.v1beta.FilterExpression.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FilterExpressionList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.FilterExpressionList} FilterExpressionList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FilterExpressionList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FilterExpressionList message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FilterExpressionList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.expressions != null && message.hasOwnProperty("expressions")) {
                                if (!Array.isArray(message.expressions))
                                    return "expressions: array expected";
                                for (var i = 0; i < message.expressions.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.FilterExpression.verify(message.expressions[i]);
                                    if (error)
                                        return "expressions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FilterExpressionList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.FilterExpressionList} FilterExpressionList
                         */
                        FilterExpressionList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.FilterExpressionList)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.FilterExpressionList();
                            if (object.expressions) {
                                if (!Array.isArray(object.expressions))
                                    throw TypeError(".google.analytics.data.v1beta.FilterExpressionList.expressions: array expected");
                                message.expressions = [];
                                for (var i = 0; i < object.expressions.length; ++i) {
                                    if (typeof object.expressions[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.FilterExpressionList.expressions: object expected");
                                    message.expressions[i] = $root.google.analytics.data.v1beta.FilterExpression.fromObject(object.expressions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FilterExpressionList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {google.analytics.data.v1beta.FilterExpressionList} message FilterExpressionList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FilterExpressionList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.expressions = [];
                            if (message.expressions && message.expressions.length) {
                                object.expressions = [];
                                for (var j = 0; j < message.expressions.length; ++j)
                                    object.expressions[j] = $root.google.analytics.data.v1beta.FilterExpression.toObject(message.expressions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FilterExpressionList to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FilterExpressionList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FilterExpressionList
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.FilterExpressionList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FilterExpressionList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.FilterExpressionList";
                        };
    
                        return FilterExpressionList;
                    })();
    
                    v1beta.Filter = (function() {
    
                        /**
                         * Properties of a Filter.
                         * @memberof google.analytics.data.v1beta
                         * @interface IFilter
                         * @property {string|null} [fieldName] Filter fieldName
                         * @property {google.analytics.data.v1beta.Filter.IStringFilter|null} [stringFilter] Filter stringFilter
                         * @property {google.analytics.data.v1beta.Filter.IInListFilter|null} [inListFilter] Filter inListFilter
                         * @property {google.analytics.data.v1beta.Filter.INumericFilter|null} [numericFilter] Filter numericFilter
                         * @property {google.analytics.data.v1beta.Filter.IBetweenFilter|null} [betweenFilter] Filter betweenFilter
                         */
    
                        /**
                         * Constructs a new Filter.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Filter.
                         * @implements IFilter
                         * @constructor
                         * @param {google.analytics.data.v1beta.IFilter=} [properties] Properties to set
                         */
                        function Filter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Filter fieldName.
                         * @member {string} fieldName
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Filter.prototype.fieldName = "";
    
                        /**
                         * Filter stringFilter.
                         * @member {google.analytics.data.v1beta.Filter.IStringFilter|null|undefined} stringFilter
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Filter.prototype.stringFilter = null;
    
                        /**
                         * Filter inListFilter.
                         * @member {google.analytics.data.v1beta.Filter.IInListFilter|null|undefined} inListFilter
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Filter.prototype.inListFilter = null;
    
                        /**
                         * Filter numericFilter.
                         * @member {google.analytics.data.v1beta.Filter.INumericFilter|null|undefined} numericFilter
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Filter.prototype.numericFilter = null;
    
                        /**
                         * Filter betweenFilter.
                         * @member {google.analytics.data.v1beta.Filter.IBetweenFilter|null|undefined} betweenFilter
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Filter.prototype.betweenFilter = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Filter oneFilter.
                         * @member {"stringFilter"|"inListFilter"|"numericFilter"|"betweenFilter"|undefined} oneFilter
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         */
                        Object.defineProperty(Filter.prototype, "oneFilter", {
                            get: $util.oneOfGetter($oneOfFields = ["stringFilter", "inListFilter", "numericFilter", "betweenFilter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Filter instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {google.analytics.data.v1beta.IFilter=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Filter} Filter instance
                         */
                        Filter.create = function create(properties) {
                            return new Filter(properties);
                        };
    
                        /**
                         * Encodes the specified Filter message. Does not implicitly {@link google.analytics.data.v1beta.Filter.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {google.analytics.data.v1beta.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldName);
                            if (message.stringFilter != null && Object.hasOwnProperty.call(message, "stringFilter"))
                                $root.google.analytics.data.v1beta.Filter.StringFilter.encode(message.stringFilter, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.inListFilter != null && Object.hasOwnProperty.call(message, "inListFilter"))
                                $root.google.analytics.data.v1beta.Filter.InListFilter.encode(message.inListFilter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.numericFilter != null && Object.hasOwnProperty.call(message, "numericFilter"))
                                $root.google.analytics.data.v1beta.Filter.NumericFilter.encode(message.numericFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.betweenFilter != null && Object.hasOwnProperty.call(message, "betweenFilter"))
                                $root.google.analytics.data.v1beta.Filter.BetweenFilter.encode(message.betweenFilter, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Filter message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Filter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {google.analytics.data.v1beta.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Filter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fieldName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.stringFilter = $root.google.analytics.data.v1beta.Filter.StringFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.inListFilter = $root.google.analytics.data.v1beta.Filter.InListFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.numericFilter = $root.google.analytics.data.v1beta.Filter.NumericFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.betweenFilter = $root.google.analytics.data.v1beta.Filter.BetweenFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Filter message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Filter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                if (!$util.isString(message.fieldName))
                                    return "fieldName: string expected";
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.Filter.StringFilter.verify(message.stringFilter);
                                    if (error)
                                        return "stringFilter." + error;
                                }
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.Filter.InListFilter.verify(message.inListFilter);
                                    if (error)
                                        return "inListFilter." + error;
                                }
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.Filter.NumericFilter.verify(message.numericFilter);
                                    if (error)
                                        return "numericFilter." + error;
                                }
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                if (properties.oneFilter === 1)
                                    return "oneFilter: multiple values";
                                properties.oneFilter = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.Filter.BetweenFilter.verify(message.betweenFilter);
                                    if (error)
                                        return "betweenFilter." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Filter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Filter} Filter
                         */
                        Filter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Filter)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Filter();
                            if (object.fieldName != null)
                                message.fieldName = String(object.fieldName);
                            if (object.stringFilter != null) {
                                if (typeof object.stringFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Filter.stringFilter: object expected");
                                message.stringFilter = $root.google.analytics.data.v1beta.Filter.StringFilter.fromObject(object.stringFilter);
                            }
                            if (object.inListFilter != null) {
                                if (typeof object.inListFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Filter.inListFilter: object expected");
                                message.inListFilter = $root.google.analytics.data.v1beta.Filter.InListFilter.fromObject(object.inListFilter);
                            }
                            if (object.numericFilter != null) {
                                if (typeof object.numericFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Filter.numericFilter: object expected");
                                message.numericFilter = $root.google.analytics.data.v1beta.Filter.NumericFilter.fromObject(object.numericFilter);
                            }
                            if (object.betweenFilter != null) {
                                if (typeof object.betweenFilter !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Filter.betweenFilter: object expected");
                                message.betweenFilter = $root.google.analytics.data.v1beta.Filter.BetweenFilter.fromObject(object.betweenFilter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Filter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {google.analytics.data.v1beta.Filter} message Filter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Filter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.fieldName = "";
                            if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                object.fieldName = message.fieldName;
                            if (message.stringFilter != null && message.hasOwnProperty("stringFilter")) {
                                object.stringFilter = $root.google.analytics.data.v1beta.Filter.StringFilter.toObject(message.stringFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "stringFilter";
                            }
                            if (message.inListFilter != null && message.hasOwnProperty("inListFilter")) {
                                object.inListFilter = $root.google.analytics.data.v1beta.Filter.InListFilter.toObject(message.inListFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "inListFilter";
                            }
                            if (message.numericFilter != null && message.hasOwnProperty("numericFilter")) {
                                object.numericFilter = $root.google.analytics.data.v1beta.Filter.NumericFilter.toObject(message.numericFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "numericFilter";
                            }
                            if (message.betweenFilter != null && message.hasOwnProperty("betweenFilter")) {
                                object.betweenFilter = $root.google.analytics.data.v1beta.Filter.BetweenFilter.toObject(message.betweenFilter, options);
                                if (options.oneofs)
                                    object.oneFilter = "betweenFilter";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Filter to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Filter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Filter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Filter
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Filter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Filter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Filter";
                        };
    
                        Filter.StringFilter = (function() {
    
                            /**
                             * Properties of a StringFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @interface IStringFilter
                             * @property {google.analytics.data.v1beta.Filter.StringFilter.MatchType|null} [matchType] StringFilter matchType
                             * @property {string|null} [value] StringFilter value
                             * @property {boolean|null} [caseSensitive] StringFilter caseSensitive
                             */
    
                            /**
                             * Constructs a new StringFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @classdesc Represents a StringFilter.
                             * @implements IStringFilter
                             * @constructor
                             * @param {google.analytics.data.v1beta.Filter.IStringFilter=} [properties] Properties to set
                             */
                            function StringFilter(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StringFilter matchType.
                             * @member {google.analytics.data.v1beta.Filter.StringFilter.MatchType} matchType
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @instance
                             */
                            StringFilter.prototype.matchType = 0;
    
                            /**
                             * StringFilter value.
                             * @member {string} value
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @instance
                             */
                            StringFilter.prototype.value = "";
    
                            /**
                             * StringFilter caseSensitive.
                             * @member {boolean} caseSensitive
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @instance
                             */
                            StringFilter.prototype.caseSensitive = false;
    
                            /**
                             * Creates a new StringFilter instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IStringFilter=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.Filter.StringFilter} StringFilter instance
                             */
                            StringFilter.create = function create(properties) {
                                return new StringFilter(properties);
                            };
    
                            /**
                             * Encodes the specified StringFilter message. Does not implicitly {@link google.analytics.data.v1beta.Filter.StringFilter.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IStringFilter} message StringFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StringFilter.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.matchType != null && Object.hasOwnProperty.call(message, "matchType"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.matchType);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                                if (message.caseSensitive != null && Object.hasOwnProperty.call(message, "caseSensitive"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.caseSensitive);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StringFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Filter.StringFilter.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IStringFilter} message StringFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StringFilter.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StringFilter message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.Filter.StringFilter} StringFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StringFilter.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Filter.StringFilter();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.matchType = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.caseSensitive = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StringFilter message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.Filter.StringFilter} StringFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StringFilter.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StringFilter message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StringFilter.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.matchType != null && message.hasOwnProperty("matchType"))
                                    switch (message.matchType) {
                                    default:
                                        return "matchType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    if (typeof message.caseSensitive !== "boolean")
                                        return "caseSensitive: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a StringFilter message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.Filter.StringFilter} StringFilter
                             */
                            StringFilter.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.Filter.StringFilter)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.Filter.StringFilter();
                                switch (object.matchType) {
                                default:
                                    if (typeof object.matchType === "number") {
                                        message.matchType = object.matchType;
                                        break;
                                    }
                                    break;
                                case "MATCH_TYPE_UNSPECIFIED":
                                case 0:
                                    message.matchType = 0;
                                    break;
                                case "EXACT":
                                case 1:
                                    message.matchType = 1;
                                    break;
                                case "BEGINS_WITH":
                                case 2:
                                    message.matchType = 2;
                                    break;
                                case "ENDS_WITH":
                                case 3:
                                    message.matchType = 3;
                                    break;
                                case "CONTAINS":
                                case 4:
                                    message.matchType = 4;
                                    break;
                                case "FULL_REGEXP":
                                case 5:
                                    message.matchType = 5;
                                    break;
                                case "PARTIAL_REGEXP":
                                case 6:
                                    message.matchType = 6;
                                    break;
                                }
                                if (object.value != null)
                                    message.value = String(object.value);
                                if (object.caseSensitive != null)
                                    message.caseSensitive = Boolean(object.caseSensitive);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StringFilter message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.StringFilter} message StringFilter
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StringFilter.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.matchType = options.enums === String ? "MATCH_TYPE_UNSPECIFIED" : 0;
                                    object.value = "";
                                    object.caseSensitive = false;
                                }
                                if (message.matchType != null && message.hasOwnProperty("matchType"))
                                    object.matchType = options.enums === String ? $root.google.analytics.data.v1beta.Filter.StringFilter.MatchType[message.matchType] === undefined ? message.matchType : $root.google.analytics.data.v1beta.Filter.StringFilter.MatchType[message.matchType] : message.matchType;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    object.caseSensitive = message.caseSensitive;
                                return object;
                            };
    
                            /**
                             * Converts this StringFilter to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StringFilter.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StringFilter
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.Filter.StringFilter
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StringFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.Filter.StringFilter";
                            };
    
                            /**
                             * MatchType enum.
                             * @name google.analytics.data.v1beta.Filter.StringFilter.MatchType
                             * @enum {number}
                             * @property {number} MATCH_TYPE_UNSPECIFIED=0 MATCH_TYPE_UNSPECIFIED value
                             * @property {number} EXACT=1 EXACT value
                             * @property {number} BEGINS_WITH=2 BEGINS_WITH value
                             * @property {number} ENDS_WITH=3 ENDS_WITH value
                             * @property {number} CONTAINS=4 CONTAINS value
                             * @property {number} FULL_REGEXP=5 FULL_REGEXP value
                             * @property {number} PARTIAL_REGEXP=6 PARTIAL_REGEXP value
                             */
                            StringFilter.MatchType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MATCH_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "EXACT"] = 1;
                                values[valuesById[2] = "BEGINS_WITH"] = 2;
                                values[valuesById[3] = "ENDS_WITH"] = 3;
                                values[valuesById[4] = "CONTAINS"] = 4;
                                values[valuesById[5] = "FULL_REGEXP"] = 5;
                                values[valuesById[6] = "PARTIAL_REGEXP"] = 6;
                                return values;
                            })();
    
                            return StringFilter;
                        })();
    
                        Filter.InListFilter = (function() {
    
                            /**
                             * Properties of an InListFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @interface IInListFilter
                             * @property {Array.<string>|null} [values] InListFilter values
                             * @property {boolean|null} [caseSensitive] InListFilter caseSensitive
                             */
    
                            /**
                             * Constructs a new InListFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @classdesc Represents an InListFilter.
                             * @implements IInListFilter
                             * @constructor
                             * @param {google.analytics.data.v1beta.Filter.IInListFilter=} [properties] Properties to set
                             */
                            function InListFilter(properties) {
                                this.values = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InListFilter values.
                             * @member {Array.<string>} values
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @instance
                             */
                            InListFilter.prototype.values = $util.emptyArray;
    
                            /**
                             * InListFilter caseSensitive.
                             * @member {boolean} caseSensitive
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @instance
                             */
                            InListFilter.prototype.caseSensitive = false;
    
                            /**
                             * Creates a new InListFilter instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IInListFilter=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.Filter.InListFilter} InListFilter instance
                             */
                            InListFilter.create = function create(properties) {
                                return new InListFilter(properties);
                            };
    
                            /**
                             * Encodes the specified InListFilter message. Does not implicitly {@link google.analytics.data.v1beta.Filter.InListFilter.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IInListFilter} message InListFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InListFilter.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.values != null && message.values.length)
                                    for (var i = 0; i < message.values.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                                if (message.caseSensitive != null && Object.hasOwnProperty.call(message, "caseSensitive"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.caseSensitive);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InListFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Filter.InListFilter.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IInListFilter} message InListFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InListFilter.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InListFilter message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.Filter.InListFilter} InListFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InListFilter.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Filter.InListFilter();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.values && message.values.length))
                                                message.values = [];
                                            message.values.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            message.caseSensitive = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InListFilter message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.Filter.InListFilter} InListFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InListFilter.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InListFilter message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InListFilter.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.values != null && message.hasOwnProperty("values")) {
                                    if (!Array.isArray(message.values))
                                        return "values: array expected";
                                    for (var i = 0; i < message.values.length; ++i)
                                        if (!$util.isString(message.values[i]))
                                            return "values: string[] expected";
                                }
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    if (typeof message.caseSensitive !== "boolean")
                                        return "caseSensitive: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates an InListFilter message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.Filter.InListFilter} InListFilter
                             */
                            InListFilter.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.Filter.InListFilter)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.Filter.InListFilter();
                                if (object.values) {
                                    if (!Array.isArray(object.values))
                                        throw TypeError(".google.analytics.data.v1beta.Filter.InListFilter.values: array expected");
                                    message.values = [];
                                    for (var i = 0; i < object.values.length; ++i)
                                        message.values[i] = String(object.values[i]);
                                }
                                if (object.caseSensitive != null)
                                    message.caseSensitive = Boolean(object.caseSensitive);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InListFilter message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.InListFilter} message InListFilter
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InListFilter.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.values = [];
                                if (options.defaults)
                                    object.caseSensitive = false;
                                if (message.values && message.values.length) {
                                    object.values = [];
                                    for (var j = 0; j < message.values.length; ++j)
                                        object.values[j] = message.values[j];
                                }
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    object.caseSensitive = message.caseSensitive;
                                return object;
                            };
    
                            /**
                             * Converts this InListFilter to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InListFilter.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InListFilter
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.Filter.InListFilter
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InListFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.Filter.InListFilter";
                            };
    
                            return InListFilter;
                        })();
    
                        Filter.NumericFilter = (function() {
    
                            /**
                             * Properties of a NumericFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @interface INumericFilter
                             * @property {google.analytics.data.v1beta.Filter.NumericFilter.Operation|null} [operation] NumericFilter operation
                             * @property {google.analytics.data.v1beta.INumericValue|null} [value] NumericFilter value
                             */
    
                            /**
                             * Constructs a new NumericFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @classdesc Represents a NumericFilter.
                             * @implements INumericFilter
                             * @constructor
                             * @param {google.analytics.data.v1beta.Filter.INumericFilter=} [properties] Properties to set
                             */
                            function NumericFilter(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NumericFilter operation.
                             * @member {google.analytics.data.v1beta.Filter.NumericFilter.Operation} operation
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @instance
                             */
                            NumericFilter.prototype.operation = 0;
    
                            /**
                             * NumericFilter value.
                             * @member {google.analytics.data.v1beta.INumericValue|null|undefined} value
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @instance
                             */
                            NumericFilter.prototype.value = null;
    
                            /**
                             * Creates a new NumericFilter instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.INumericFilter=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.Filter.NumericFilter} NumericFilter instance
                             */
                            NumericFilter.create = function create(properties) {
                                return new NumericFilter(properties);
                            };
    
                            /**
                             * Encodes the specified NumericFilter message. Does not implicitly {@link google.analytics.data.v1beta.Filter.NumericFilter.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.INumericFilter} message NumericFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NumericFilter.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.operation);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    $root.google.analytics.data.v1beta.NumericValue.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NumericFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Filter.NumericFilter.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.INumericFilter} message NumericFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NumericFilter.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NumericFilter message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.Filter.NumericFilter} NumericFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NumericFilter.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Filter.NumericFilter();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.operation = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.value = $root.google.analytics.data.v1beta.NumericValue.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NumericFilter message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.Filter.NumericFilter} NumericFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NumericFilter.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a NumericFilter message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            NumericFilter.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.operation != null && message.hasOwnProperty("operation"))
                                    switch (message.operation) {
                                    default:
                                        return "operation: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                                if (message.value != null && message.hasOwnProperty("value")) {
                                    var error = $root.google.analytics.data.v1beta.NumericValue.verify(message.value);
                                    if (error)
                                        return "value." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a NumericFilter message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.Filter.NumericFilter} NumericFilter
                             */
                            NumericFilter.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.Filter.NumericFilter)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.Filter.NumericFilter();
                                switch (object.operation) {
                                default:
                                    if (typeof object.operation === "number") {
                                        message.operation = object.operation;
                                        break;
                                    }
                                    break;
                                case "OPERATION_UNSPECIFIED":
                                case 0:
                                    message.operation = 0;
                                    break;
                                case "EQUAL":
                                case 1:
                                    message.operation = 1;
                                    break;
                                case "LESS_THAN":
                                case 2:
                                    message.operation = 2;
                                    break;
                                case "LESS_THAN_OR_EQUAL":
                                case 3:
                                    message.operation = 3;
                                    break;
                                case "GREATER_THAN":
                                case 4:
                                    message.operation = 4;
                                    break;
                                case "GREATER_THAN_OR_EQUAL":
                                case 5:
                                    message.operation = 5;
                                    break;
                                }
                                if (object.value != null) {
                                    if (typeof object.value !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Filter.NumericFilter.value: object expected");
                                    message.value = $root.google.analytics.data.v1beta.NumericValue.fromObject(object.value);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a NumericFilter message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.NumericFilter} message NumericFilter
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            NumericFilter.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.operation = options.enums === String ? "OPERATION_UNSPECIFIED" : 0;
                                    object.value = null;
                                }
                                if (message.operation != null && message.hasOwnProperty("operation"))
                                    object.operation = options.enums === String ? $root.google.analytics.data.v1beta.Filter.NumericFilter.Operation[message.operation] === undefined ? message.operation : $root.google.analytics.data.v1beta.Filter.NumericFilter.Operation[message.operation] : message.operation;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = $root.google.analytics.data.v1beta.NumericValue.toObject(message.value, options);
                                return object;
                            };
    
                            /**
                             * Converts this NumericFilter to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            NumericFilter.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for NumericFilter
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.Filter.NumericFilter
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            NumericFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.Filter.NumericFilter";
                            };
    
                            /**
                             * Operation enum.
                             * @name google.analytics.data.v1beta.Filter.NumericFilter.Operation
                             * @enum {number}
                             * @property {number} OPERATION_UNSPECIFIED=0 OPERATION_UNSPECIFIED value
                             * @property {number} EQUAL=1 EQUAL value
                             * @property {number} LESS_THAN=2 LESS_THAN value
                             * @property {number} LESS_THAN_OR_EQUAL=3 LESS_THAN_OR_EQUAL value
                             * @property {number} GREATER_THAN=4 GREATER_THAN value
                             * @property {number} GREATER_THAN_OR_EQUAL=5 GREATER_THAN_OR_EQUAL value
                             */
                            NumericFilter.Operation = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "OPERATION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "EQUAL"] = 1;
                                values[valuesById[2] = "LESS_THAN"] = 2;
                                values[valuesById[3] = "LESS_THAN_OR_EQUAL"] = 3;
                                values[valuesById[4] = "GREATER_THAN"] = 4;
                                values[valuesById[5] = "GREATER_THAN_OR_EQUAL"] = 5;
                                return values;
                            })();
    
                            return NumericFilter;
                        })();
    
                        Filter.BetweenFilter = (function() {
    
                            /**
                             * Properties of a BetweenFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @interface IBetweenFilter
                             * @property {google.analytics.data.v1beta.INumericValue|null} [fromValue] BetweenFilter fromValue
                             * @property {google.analytics.data.v1beta.INumericValue|null} [toValue] BetweenFilter toValue
                             */
    
                            /**
                             * Constructs a new BetweenFilter.
                             * @memberof google.analytics.data.v1beta.Filter
                             * @classdesc Represents a BetweenFilter.
                             * @implements IBetweenFilter
                             * @constructor
                             * @param {google.analytics.data.v1beta.Filter.IBetweenFilter=} [properties] Properties to set
                             */
                            function BetweenFilter(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BetweenFilter fromValue.
                             * @member {google.analytics.data.v1beta.INumericValue|null|undefined} fromValue
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @instance
                             */
                            BetweenFilter.prototype.fromValue = null;
    
                            /**
                             * BetweenFilter toValue.
                             * @member {google.analytics.data.v1beta.INumericValue|null|undefined} toValue
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @instance
                             */
                            BetweenFilter.prototype.toValue = null;
    
                            /**
                             * Creates a new BetweenFilter instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IBetweenFilter=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.Filter.BetweenFilter} BetweenFilter instance
                             */
                            BetweenFilter.create = function create(properties) {
                                return new BetweenFilter(properties);
                            };
    
                            /**
                             * Encodes the specified BetweenFilter message. Does not implicitly {@link google.analytics.data.v1beta.Filter.BetweenFilter.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IBetweenFilter} message BetweenFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BetweenFilter.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.fromValue != null && Object.hasOwnProperty.call(message, "fromValue"))
                                    $root.google.analytics.data.v1beta.NumericValue.encode(message.fromValue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.toValue != null && Object.hasOwnProperty.call(message, "toValue"))
                                    $root.google.analytics.data.v1beta.NumericValue.encode(message.toValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BetweenFilter message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Filter.BetweenFilter.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.IBetweenFilter} message BetweenFilter message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BetweenFilter.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BetweenFilter message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.Filter.BetweenFilter} BetweenFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BetweenFilter.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Filter.BetweenFilter();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.fromValue = $root.google.analytics.data.v1beta.NumericValue.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.toValue = $root.google.analytics.data.v1beta.NumericValue.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BetweenFilter message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.Filter.BetweenFilter} BetweenFilter
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BetweenFilter.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BetweenFilter message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BetweenFilter.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.fromValue != null && message.hasOwnProperty("fromValue")) {
                                    var error = $root.google.analytics.data.v1beta.NumericValue.verify(message.fromValue);
                                    if (error)
                                        return "fromValue." + error;
                                }
                                if (message.toValue != null && message.hasOwnProperty("toValue")) {
                                    var error = $root.google.analytics.data.v1beta.NumericValue.verify(message.toValue);
                                    if (error)
                                        return "toValue." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BetweenFilter message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.Filter.BetweenFilter} BetweenFilter
                             */
                            BetweenFilter.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.Filter.BetweenFilter)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.Filter.BetweenFilter();
                                if (object.fromValue != null) {
                                    if (typeof object.fromValue !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Filter.BetweenFilter.fromValue: object expected");
                                    message.fromValue = $root.google.analytics.data.v1beta.NumericValue.fromObject(object.fromValue);
                                }
                                if (object.toValue != null) {
                                    if (typeof object.toValue !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Filter.BetweenFilter.toValue: object expected");
                                    message.toValue = $root.google.analytics.data.v1beta.NumericValue.fromObject(object.toValue);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BetweenFilter message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {google.analytics.data.v1beta.Filter.BetweenFilter} message BetweenFilter
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BetweenFilter.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.fromValue = null;
                                    object.toValue = null;
                                }
                                if (message.fromValue != null && message.hasOwnProperty("fromValue"))
                                    object.fromValue = $root.google.analytics.data.v1beta.NumericValue.toObject(message.fromValue, options);
                                if (message.toValue != null && message.hasOwnProperty("toValue"))
                                    object.toValue = $root.google.analytics.data.v1beta.NumericValue.toObject(message.toValue, options);
                                return object;
                            };
    
                            /**
                             * Converts this BetweenFilter to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BetweenFilter.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BetweenFilter
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.Filter.BetweenFilter
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BetweenFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.Filter.BetweenFilter";
                            };
    
                            return BetweenFilter;
                        })();
    
                        return Filter;
                    })();
    
                    v1beta.OrderBy = (function() {
    
                        /**
                         * Properties of an OrderBy.
                         * @memberof google.analytics.data.v1beta
                         * @interface IOrderBy
                         * @property {google.analytics.data.v1beta.OrderBy.IMetricOrderBy|null} [metric] OrderBy metric
                         * @property {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy|null} [dimension] OrderBy dimension
                         * @property {google.analytics.data.v1beta.OrderBy.IPivotOrderBy|null} [pivot] OrderBy pivot
                         * @property {boolean|null} [desc] OrderBy desc
                         */
    
                        /**
                         * Constructs a new OrderBy.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents an OrderBy.
                         * @implements IOrderBy
                         * @constructor
                         * @param {google.analytics.data.v1beta.IOrderBy=} [properties] Properties to set
                         */
                        function OrderBy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OrderBy metric.
                         * @member {google.analytics.data.v1beta.OrderBy.IMetricOrderBy|null|undefined} metric
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         */
                        OrderBy.prototype.metric = null;
    
                        /**
                         * OrderBy dimension.
                         * @member {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy|null|undefined} dimension
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         */
                        OrderBy.prototype.dimension = null;
    
                        /**
                         * OrderBy pivot.
                         * @member {google.analytics.data.v1beta.OrderBy.IPivotOrderBy|null|undefined} pivot
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         */
                        OrderBy.prototype.pivot = null;
    
                        /**
                         * OrderBy desc.
                         * @member {boolean} desc
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         */
                        OrderBy.prototype.desc = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * OrderBy oneOrderBy.
                         * @member {"metric"|"dimension"|"pivot"|undefined} oneOrderBy
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         */
                        Object.defineProperty(OrderBy.prototype, "oneOrderBy", {
                            get: $util.oneOfGetter($oneOfFields = ["metric", "dimension", "pivot"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new OrderBy instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {google.analytics.data.v1beta.IOrderBy=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.OrderBy} OrderBy instance
                         */
                        OrderBy.create = function create(properties) {
                            return new OrderBy(properties);
                        };
    
                        /**
                         * Encodes the specified OrderBy message. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {google.analytics.data.v1beta.IOrderBy} message OrderBy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OrderBy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metric != null && Object.hasOwnProperty.call(message, "metric"))
                                $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy.encode(message.metric, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dimension != null && Object.hasOwnProperty.call(message, "dimension"))
                                $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.encode(message.dimension, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pivot != null && Object.hasOwnProperty.call(message, "pivot"))
                                $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.encode(message.pivot, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.desc != null && Object.hasOwnProperty.call(message, "desc"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.desc);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OrderBy message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {google.analytics.data.v1beta.IOrderBy} message OrderBy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OrderBy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OrderBy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.OrderBy} OrderBy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OrderBy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.OrderBy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.metric = $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dimension = $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pivot = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.desc = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OrderBy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.OrderBy} OrderBy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OrderBy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OrderBy message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OrderBy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.metric != null && message.hasOwnProperty("metric")) {
                                properties.oneOrderBy = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy.verify(message.metric);
                                    if (error)
                                        return "metric." + error;
                                }
                            }
                            if (message.dimension != null && message.hasOwnProperty("dimension")) {
                                if (properties.oneOrderBy === 1)
                                    return "oneOrderBy: multiple values";
                                properties.oneOrderBy = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.verify(message.dimension);
                                    if (error)
                                        return "dimension." + error;
                                }
                            }
                            if (message.pivot != null && message.hasOwnProperty("pivot")) {
                                if (properties.oneOrderBy === 1)
                                    return "oneOrderBy: multiple values";
                                properties.oneOrderBy = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.verify(message.pivot);
                                    if (error)
                                        return "pivot." + error;
                                }
                            }
                            if (message.desc != null && message.hasOwnProperty("desc"))
                                if (typeof message.desc !== "boolean")
                                    return "desc: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an OrderBy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.OrderBy} OrderBy
                         */
                        OrderBy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.OrderBy)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.OrderBy();
                            if (object.metric != null) {
                                if (typeof object.metric !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.OrderBy.metric: object expected");
                                message.metric = $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy.fromObject(object.metric);
                            }
                            if (object.dimension != null) {
                                if (typeof object.dimension !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.OrderBy.dimension: object expected");
                                message.dimension = $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.fromObject(object.dimension);
                            }
                            if (object.pivot != null) {
                                if (typeof object.pivot !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.OrderBy.pivot: object expected");
                                message.pivot = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.fromObject(object.pivot);
                            }
                            if (object.desc != null)
                                message.desc = Boolean(object.desc);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OrderBy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {google.analytics.data.v1beta.OrderBy} message OrderBy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OrderBy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.desc = false;
                            if (message.metric != null && message.hasOwnProperty("metric")) {
                                object.metric = $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy.toObject(message.metric, options);
                                if (options.oneofs)
                                    object.oneOrderBy = "metric";
                            }
                            if (message.dimension != null && message.hasOwnProperty("dimension")) {
                                object.dimension = $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.toObject(message.dimension, options);
                                if (options.oneofs)
                                    object.oneOrderBy = "dimension";
                            }
                            if (message.pivot != null && message.hasOwnProperty("pivot")) {
                                object.pivot = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.toObject(message.pivot, options);
                                if (options.oneofs)
                                    object.oneOrderBy = "pivot";
                            }
                            if (message.desc != null && message.hasOwnProperty("desc"))
                                object.desc = message.desc;
                            return object;
                        };
    
                        /**
                         * Converts this OrderBy to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OrderBy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OrderBy
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.OrderBy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OrderBy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.OrderBy";
                        };
    
                        OrderBy.MetricOrderBy = (function() {
    
                            /**
                             * Properties of a MetricOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @interface IMetricOrderBy
                             * @property {string|null} [metricName] MetricOrderBy metricName
                             */
    
                            /**
                             * Constructs a new MetricOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @classdesc Represents a MetricOrderBy.
                             * @implements IMetricOrderBy
                             * @constructor
                             * @param {google.analytics.data.v1beta.OrderBy.IMetricOrderBy=} [properties] Properties to set
                             */
                            function MetricOrderBy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MetricOrderBy metricName.
                             * @member {string} metricName
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @instance
                             */
                            MetricOrderBy.prototype.metricName = "";
    
                            /**
                             * Creates a new MetricOrderBy instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IMetricOrderBy=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.OrderBy.MetricOrderBy} MetricOrderBy instance
                             */
                            MetricOrderBy.create = function create(properties) {
                                return new MetricOrderBy(properties);
                            };
    
                            /**
                             * Encodes the specified MetricOrderBy message. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.MetricOrderBy.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IMetricOrderBy} message MetricOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricOrderBy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.metricName != null && Object.hasOwnProperty.call(message, "metricName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.metricName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MetricOrderBy message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.MetricOrderBy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IMetricOrderBy} message MetricOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MetricOrderBy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MetricOrderBy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.OrderBy.MetricOrderBy} MetricOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricOrderBy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.metricName = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MetricOrderBy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.OrderBy.MetricOrderBy} MetricOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MetricOrderBy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MetricOrderBy message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MetricOrderBy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.metricName != null && message.hasOwnProperty("metricName"))
                                    if (!$util.isString(message.metricName))
                                        return "metricName: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MetricOrderBy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.OrderBy.MetricOrderBy} MetricOrderBy
                             */
                            MetricOrderBy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.OrderBy.MetricOrderBy();
                                if (object.metricName != null)
                                    message.metricName = String(object.metricName);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MetricOrderBy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.MetricOrderBy} message MetricOrderBy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MetricOrderBy.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.metricName = "";
                                if (message.metricName != null && message.hasOwnProperty("metricName"))
                                    object.metricName = message.metricName;
                                return object;
                            };
    
                            /**
                             * Converts this MetricOrderBy to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MetricOrderBy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MetricOrderBy
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.OrderBy.MetricOrderBy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MetricOrderBy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.OrderBy.MetricOrderBy";
                            };
    
                            return MetricOrderBy;
                        })();
    
                        OrderBy.DimensionOrderBy = (function() {
    
                            /**
                             * Properties of a DimensionOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @interface IDimensionOrderBy
                             * @property {string|null} [dimensionName] DimensionOrderBy dimensionName
                             * @property {google.analytics.data.v1beta.OrderBy.DimensionOrderBy.OrderType|null} [orderType] DimensionOrderBy orderType
                             */
    
                            /**
                             * Constructs a new DimensionOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @classdesc Represents a DimensionOrderBy.
                             * @implements IDimensionOrderBy
                             * @constructor
                             * @param {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy=} [properties] Properties to set
                             */
                            function DimensionOrderBy(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DimensionOrderBy dimensionName.
                             * @member {string} dimensionName
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @instance
                             */
                            DimensionOrderBy.prototype.dimensionName = "";
    
                            /**
                             * DimensionOrderBy orderType.
                             * @member {google.analytics.data.v1beta.OrderBy.DimensionOrderBy.OrderType} orderType
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @instance
                             */
                            DimensionOrderBy.prototype.orderType = 0;
    
                            /**
                             * Creates a new DimensionOrderBy instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.OrderBy.DimensionOrderBy} DimensionOrderBy instance
                             */
                            DimensionOrderBy.create = function create(properties) {
                                return new DimensionOrderBy(properties);
                            };
    
                            /**
                             * Encodes the specified DimensionOrderBy message. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.DimensionOrderBy.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy} message DimensionOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DimensionOrderBy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dimensionName != null && Object.hasOwnProperty.call(message, "dimensionName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionName);
                                if (message.orderType != null && Object.hasOwnProperty.call(message, "orderType"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.orderType);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DimensionOrderBy message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.DimensionOrderBy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IDimensionOrderBy} message DimensionOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DimensionOrderBy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DimensionOrderBy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.OrderBy.DimensionOrderBy} DimensionOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DimensionOrderBy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.dimensionName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.orderType = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DimensionOrderBy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.OrderBy.DimensionOrderBy} DimensionOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DimensionOrderBy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DimensionOrderBy message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DimensionOrderBy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    if (!$util.isString(message.dimensionName))
                                        return "dimensionName: string expected";
                                if (message.orderType != null && message.hasOwnProperty("orderType"))
                                    switch (message.orderType) {
                                    default:
                                        return "orderType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a DimensionOrderBy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.OrderBy.DimensionOrderBy} DimensionOrderBy
                             */
                            DimensionOrderBy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy();
                                if (object.dimensionName != null)
                                    message.dimensionName = String(object.dimensionName);
                                switch (object.orderType) {
                                default:
                                    if (typeof object.orderType === "number") {
                                        message.orderType = object.orderType;
                                        break;
                                    }
                                    break;
                                case "ORDER_TYPE_UNSPECIFIED":
                                case 0:
                                    message.orderType = 0;
                                    break;
                                case "ALPHANUMERIC":
                                case 1:
                                    message.orderType = 1;
                                    break;
                                case "CASE_INSENSITIVE_ALPHANUMERIC":
                                case 2:
                                    message.orderType = 2;
                                    break;
                                case "NUMERIC":
                                case 3:
                                    message.orderType = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DimensionOrderBy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.DimensionOrderBy} message DimensionOrderBy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DimensionOrderBy.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.dimensionName = "";
                                    object.orderType = options.enums === String ? "ORDER_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                    object.dimensionName = message.dimensionName;
                                if (message.orderType != null && message.hasOwnProperty("orderType"))
                                    object.orderType = options.enums === String ? $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.OrderType[message.orderType] === undefined ? message.orderType : $root.google.analytics.data.v1beta.OrderBy.DimensionOrderBy.OrderType[message.orderType] : message.orderType;
                                return object;
                            };
    
                            /**
                             * Converts this DimensionOrderBy to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DimensionOrderBy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DimensionOrderBy
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.OrderBy.DimensionOrderBy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DimensionOrderBy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.OrderBy.DimensionOrderBy";
                            };
    
                            /**
                             * OrderType enum.
                             * @name google.analytics.data.v1beta.OrderBy.DimensionOrderBy.OrderType
                             * @enum {number}
                             * @property {number} ORDER_TYPE_UNSPECIFIED=0 ORDER_TYPE_UNSPECIFIED value
                             * @property {number} ALPHANUMERIC=1 ALPHANUMERIC value
                             * @property {number} CASE_INSENSITIVE_ALPHANUMERIC=2 CASE_INSENSITIVE_ALPHANUMERIC value
                             * @property {number} NUMERIC=3 NUMERIC value
                             */
                            DimensionOrderBy.OrderType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ORDER_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ALPHANUMERIC"] = 1;
                                values[valuesById[2] = "CASE_INSENSITIVE_ALPHANUMERIC"] = 2;
                                values[valuesById[3] = "NUMERIC"] = 3;
                                return values;
                            })();
    
                            return DimensionOrderBy;
                        })();
    
                        OrderBy.PivotOrderBy = (function() {
    
                            /**
                             * Properties of a PivotOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @interface IPivotOrderBy
                             * @property {string|null} [metricName] PivotOrderBy metricName
                             * @property {Array.<google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection>|null} [pivotSelections] PivotOrderBy pivotSelections
                             */
    
                            /**
                             * Constructs a new PivotOrderBy.
                             * @memberof google.analytics.data.v1beta.OrderBy
                             * @classdesc Represents a PivotOrderBy.
                             * @implements IPivotOrderBy
                             * @constructor
                             * @param {google.analytics.data.v1beta.OrderBy.IPivotOrderBy=} [properties] Properties to set
                             */
                            function PivotOrderBy(properties) {
                                this.pivotSelections = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PivotOrderBy metricName.
                             * @member {string} metricName
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @instance
                             */
                            PivotOrderBy.prototype.metricName = "";
    
                            /**
                             * PivotOrderBy pivotSelections.
                             * @member {Array.<google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection>} pivotSelections
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @instance
                             */
                            PivotOrderBy.prototype.pivotSelections = $util.emptyArray;
    
                            /**
                             * Creates a new PivotOrderBy instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IPivotOrderBy=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy} PivotOrderBy instance
                             */
                            PivotOrderBy.create = function create(properties) {
                                return new PivotOrderBy(properties);
                            };
    
                            /**
                             * Encodes the specified PivotOrderBy message. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.PivotOrderBy.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IPivotOrderBy} message PivotOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PivotOrderBy.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.metricName != null && Object.hasOwnProperty.call(message, "metricName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.metricName);
                                if (message.pivotSelections != null && message.pivotSelections.length)
                                    for (var i = 0; i < message.pivotSelections.length; ++i)
                                        $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.encode(message.pivotSelections[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PivotOrderBy message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.PivotOrderBy.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.IPivotOrderBy} message PivotOrderBy message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PivotOrderBy.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PivotOrderBy message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy} PivotOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PivotOrderBy.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.metricName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.pivotSelections && message.pivotSelections.length))
                                                message.pivotSelections = [];
                                            message.pivotSelections.push($root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PivotOrderBy message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy} PivotOrderBy
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PivotOrderBy.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PivotOrderBy message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PivotOrderBy.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.metricName != null && message.hasOwnProperty("metricName"))
                                    if (!$util.isString(message.metricName))
                                        return "metricName: string expected";
                                if (message.pivotSelections != null && message.hasOwnProperty("pivotSelections")) {
                                    if (!Array.isArray(message.pivotSelections))
                                        return "pivotSelections: array expected";
                                    for (var i = 0; i < message.pivotSelections.length; ++i) {
                                        var error = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.verify(message.pivotSelections[i]);
                                        if (error)
                                            return "pivotSelections." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PivotOrderBy message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy} PivotOrderBy
                             */
                            PivotOrderBy.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy();
                                if (object.metricName != null)
                                    message.metricName = String(object.metricName);
                                if (object.pivotSelections) {
                                    if (!Array.isArray(object.pivotSelections))
                                        throw TypeError(".google.analytics.data.v1beta.OrderBy.PivotOrderBy.pivotSelections: array expected");
                                    message.pivotSelections = [];
                                    for (var i = 0; i < object.pivotSelections.length; ++i) {
                                        if (typeof object.pivotSelections[i] !== "object")
                                            throw TypeError(".google.analytics.data.v1beta.OrderBy.PivotOrderBy.pivotSelections: object expected");
                                        message.pivotSelections[i] = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.fromObject(object.pivotSelections[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PivotOrderBy message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy} message PivotOrderBy
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PivotOrderBy.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pivotSelections = [];
                                if (options.defaults)
                                    object.metricName = "";
                                if (message.metricName != null && message.hasOwnProperty("metricName"))
                                    object.metricName = message.metricName;
                                if (message.pivotSelections && message.pivotSelections.length) {
                                    object.pivotSelections = [];
                                    for (var j = 0; j < message.pivotSelections.length; ++j)
                                        object.pivotSelections[j] = $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.toObject(message.pivotSelections[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PivotOrderBy to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PivotOrderBy.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PivotOrderBy
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PivotOrderBy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.OrderBy.PivotOrderBy";
                            };
    
                            PivotOrderBy.PivotSelection = (function() {
    
                                /**
                                 * Properties of a PivotSelection.
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                                 * @interface IPivotSelection
                                 * @property {string|null} [dimensionName] PivotSelection dimensionName
                                 * @property {string|null} [dimensionValue] PivotSelection dimensionValue
                                 */
    
                                /**
                                 * Constructs a new PivotSelection.
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy
                                 * @classdesc Represents a PivotSelection.
                                 * @implements IPivotSelection
                                 * @constructor
                                 * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection=} [properties] Properties to set
                                 */
                                function PivotSelection(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PivotSelection dimensionName.
                                 * @member {string} dimensionName
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @instance
                                 */
                                PivotSelection.prototype.dimensionName = "";
    
                                /**
                                 * PivotSelection dimensionValue.
                                 * @member {string} dimensionValue
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @instance
                                 */
                                PivotSelection.prototype.dimensionValue = "";
    
                                /**
                                 * Creates a new PivotSelection instance using the specified properties.
                                 * @function create
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection=} [properties] Properties to set
                                 * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection} PivotSelection instance
                                 */
                                PivotSelection.create = function create(properties) {
                                    return new PivotSelection(properties);
                                };
    
                                /**
                                 * Encodes the specified PivotSelection message. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection} message PivotSelection message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PivotSelection.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.dimensionName != null && Object.hasOwnProperty.call(message, "dimensionName"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dimensionName);
                                    if (message.dimensionValue != null && Object.hasOwnProperty.call(message, "dimensionValue"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimensionValue);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PivotSelection message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy.IPivotSelection} message PivotSelection message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PivotSelection.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PivotSelection message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection} PivotSelection
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PivotSelection.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.dimensionName = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.dimensionValue = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PivotSelection message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection} PivotSelection
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PivotSelection.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PivotSelection message.
                                 * @function verify
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PivotSelection.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                        if (!$util.isString(message.dimensionName))
                                            return "dimensionName: string expected";
                                    if (message.dimensionValue != null && message.hasOwnProperty("dimensionValue"))
                                        if (!$util.isString(message.dimensionValue))
                                            return "dimensionValue: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PivotSelection message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection} PivotSelection
                                 */
                                PivotSelection.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection)
                                        return object;
                                    var message = new $root.google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection();
                                    if (object.dimensionName != null)
                                        message.dimensionName = String(object.dimensionName);
                                    if (object.dimensionValue != null)
                                        message.dimensionValue = String(object.dimensionValue);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PivotSelection message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection} message PivotSelection
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PivotSelection.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.dimensionName = "";
                                        object.dimensionValue = "";
                                    }
                                    if (message.dimensionName != null && message.hasOwnProperty("dimensionName"))
                                        object.dimensionName = message.dimensionName;
                                    if (message.dimensionValue != null && message.hasOwnProperty("dimensionValue"))
                                        object.dimensionValue = message.dimensionValue;
                                    return object;
                                };
    
                                /**
                                 * Converts this PivotSelection to JSON.
                                 * @function toJSON
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PivotSelection.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PivotSelection
                                 * @function getTypeUrl
                                 * @memberof google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PivotSelection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.analytics.data.v1beta.OrderBy.PivotOrderBy.PivotSelection";
                                };
    
                                return PivotSelection;
                            })();
    
                            return PivotOrderBy;
                        })();
    
                        return OrderBy;
                    })();
    
                    v1beta.Pivot = (function() {
    
                        /**
                         * Properties of a Pivot.
                         * @memberof google.analytics.data.v1beta
                         * @interface IPivot
                         * @property {Array.<string>|null} [fieldNames] Pivot fieldNames
                         * @property {Array.<google.analytics.data.v1beta.IOrderBy>|null} [orderBys] Pivot orderBys
                         * @property {number|Long|null} [offset] Pivot offset
                         * @property {number|Long|null} [limit] Pivot limit
                         * @property {Array.<google.analytics.data.v1beta.MetricAggregation>|null} [metricAggregations] Pivot metricAggregations
                         */
    
                        /**
                         * Constructs a new Pivot.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Pivot.
                         * @implements IPivot
                         * @constructor
                         * @param {google.analytics.data.v1beta.IPivot=} [properties] Properties to set
                         */
                        function Pivot(properties) {
                            this.fieldNames = [];
                            this.orderBys = [];
                            this.metricAggregations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Pivot fieldNames.
                         * @member {Array.<string>} fieldNames
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         */
                        Pivot.prototype.fieldNames = $util.emptyArray;
    
                        /**
                         * Pivot orderBys.
                         * @member {Array.<google.analytics.data.v1beta.IOrderBy>} orderBys
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         */
                        Pivot.prototype.orderBys = $util.emptyArray;
    
                        /**
                         * Pivot offset.
                         * @member {number|Long} offset
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         */
                        Pivot.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Pivot limit.
                         * @member {number|Long} limit
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         */
                        Pivot.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Pivot metricAggregations.
                         * @member {Array.<google.analytics.data.v1beta.MetricAggregation>} metricAggregations
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         */
                        Pivot.prototype.metricAggregations = $util.emptyArray;
    
                        /**
                         * Creates a new Pivot instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {google.analytics.data.v1beta.IPivot=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Pivot} Pivot instance
                         */
                        Pivot.create = function create(properties) {
                            return new Pivot(properties);
                        };
    
                        /**
                         * Encodes the specified Pivot message. Does not implicitly {@link google.analytics.data.v1beta.Pivot.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {google.analytics.data.v1beta.IPivot} message Pivot message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Pivot.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fieldNames != null && message.fieldNames.length)
                                for (var i = 0; i < message.fieldNames.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldNames[i]);
                            if (message.orderBys != null && message.orderBys.length)
                                for (var i = 0; i < message.orderBys.length; ++i)
                                    $root.google.analytics.data.v1beta.OrderBy.encode(message.orderBys[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.offset);
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.limit);
                            if (message.metricAggregations != null && message.metricAggregations.length) {
                                writer.uint32(/* id 5, wireType 2 =*/42).fork();
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    writer.int32(message.metricAggregations[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Pivot message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Pivot.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {google.analytics.data.v1beta.IPivot} message Pivot message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Pivot.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Pivot message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Pivot} Pivot
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Pivot.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Pivot();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.fieldNames && message.fieldNames.length))
                                            message.fieldNames = [];
                                        message.fieldNames.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.orderBys && message.orderBys.length))
                                            message.orderBys = [];
                                        message.orderBys.push($root.google.analytics.data.v1beta.OrderBy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.offset = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.limit = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.metricAggregations && message.metricAggregations.length))
                                            message.metricAggregations = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.metricAggregations.push(reader.int32());
                                        } else
                                            message.metricAggregations.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Pivot message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Pivot} Pivot
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Pivot.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Pivot message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Pivot.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.fieldNames != null && message.hasOwnProperty("fieldNames")) {
                                if (!Array.isArray(message.fieldNames))
                                    return "fieldNames: array expected";
                                for (var i = 0; i < message.fieldNames.length; ++i)
                                    if (!$util.isString(message.fieldNames[i]))
                                        return "fieldNames: string[] expected";
                            }
                            if (message.orderBys != null && message.hasOwnProperty("orderBys")) {
                                if (!Array.isArray(message.orderBys))
                                    return "orderBys: array expected";
                                for (var i = 0; i < message.orderBys.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.OrderBy.verify(message.orderBys[i]);
                                    if (error)
                                        return "orderBys." + error;
                                }
                            }
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                    return "offset: integer|Long expected";
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            if (message.metricAggregations != null && message.hasOwnProperty("metricAggregations")) {
                                if (!Array.isArray(message.metricAggregations))
                                    return "metricAggregations: array expected";
                                for (var i = 0; i < message.metricAggregations.length; ++i)
                                    switch (message.metricAggregations[i]) {
                                    default:
                                        return "metricAggregations: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 5:
                                    case 6:
                                    case 4:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Pivot message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Pivot} Pivot
                         */
                        Pivot.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Pivot)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Pivot();
                            if (object.fieldNames) {
                                if (!Array.isArray(object.fieldNames))
                                    throw TypeError(".google.analytics.data.v1beta.Pivot.fieldNames: array expected");
                                message.fieldNames = [];
                                for (var i = 0; i < object.fieldNames.length; ++i)
                                    message.fieldNames[i] = String(object.fieldNames[i]);
                            }
                            if (object.orderBys) {
                                if (!Array.isArray(object.orderBys))
                                    throw TypeError(".google.analytics.data.v1beta.Pivot.orderBys: array expected");
                                message.orderBys = [];
                                for (var i = 0; i < object.orderBys.length; ++i) {
                                    if (typeof object.orderBys[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Pivot.orderBys: object expected");
                                    message.orderBys[i] = $root.google.analytics.data.v1beta.OrderBy.fromObject(object.orderBys[i]);
                                }
                            }
                            if (object.offset != null)
                                if ($util.Long)
                                    (message.offset = $util.Long.fromValue(object.offset)).unsigned = false;
                                else if (typeof object.offset === "string")
                                    message.offset = parseInt(object.offset, 10);
                                else if (typeof object.offset === "number")
                                    message.offset = object.offset;
                                else if (typeof object.offset === "object")
                                    message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber();
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = false;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber();
                            if (object.metricAggregations) {
                                if (!Array.isArray(object.metricAggregations))
                                    throw TypeError(".google.analytics.data.v1beta.Pivot.metricAggregations: array expected");
                                message.metricAggregations = [];
                                for (var i = 0; i < object.metricAggregations.length; ++i)
                                    switch (object.metricAggregations[i]) {
                                    default:
                                        if (typeof object.metricAggregations[i] === "number") {
                                            message.metricAggregations[i] = object.metricAggregations[i];
                                            break;
                                        }
                                    case "METRIC_AGGREGATION_UNSPECIFIED":
                                    case 0:
                                        message.metricAggregations[i] = 0;
                                        break;
                                    case "TOTAL":
                                    case 1:
                                        message.metricAggregations[i] = 1;
                                        break;
                                    case "MINIMUM":
                                    case 5:
                                        message.metricAggregations[i] = 5;
                                        break;
                                    case "MAXIMUM":
                                    case 6:
                                        message.metricAggregations[i] = 6;
                                        break;
                                    case "COUNT":
                                    case 4:
                                        message.metricAggregations[i] = 4;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Pivot message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {google.analytics.data.v1beta.Pivot} message Pivot
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Pivot.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.fieldNames = [];
                                object.orderBys = [];
                                object.metricAggregations = [];
                            }
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.offset = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.limit = options.longs === String ? "0" : 0;
                            }
                            if (message.fieldNames && message.fieldNames.length) {
                                object.fieldNames = [];
                                for (var j = 0; j < message.fieldNames.length; ++j)
                                    object.fieldNames[j] = message.fieldNames[j];
                            }
                            if (message.orderBys && message.orderBys.length) {
                                object.orderBys = [];
                                for (var j = 0; j < message.orderBys.length; ++j)
                                    object.orderBys[j] = $root.google.analytics.data.v1beta.OrderBy.toObject(message.orderBys[j], options);
                            }
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (typeof message.offset === "number")
                                    object.offset = options.longs === String ? String(message.offset) : message.offset;
                                else
                                    object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber() : message.offset;
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber() : message.limit;
                            if (message.metricAggregations && message.metricAggregations.length) {
                                object.metricAggregations = [];
                                for (var j = 0; j < message.metricAggregations.length; ++j)
                                    object.metricAggregations[j] = options.enums === String ? $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] === undefined ? message.metricAggregations[j] : $root.google.analytics.data.v1beta.MetricAggregation[message.metricAggregations[j]] : message.metricAggregations[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Pivot to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Pivot.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Pivot
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Pivot
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Pivot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Pivot";
                        };
    
                        return Pivot;
                    })();
    
                    v1beta.CohortSpec = (function() {
    
                        /**
                         * Properties of a CohortSpec.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICohortSpec
                         * @property {Array.<google.analytics.data.v1beta.ICohort>|null} [cohorts] CohortSpec cohorts
                         * @property {google.analytics.data.v1beta.ICohortsRange|null} [cohortsRange] CohortSpec cohortsRange
                         * @property {google.analytics.data.v1beta.ICohortReportSettings|null} [cohortReportSettings] CohortSpec cohortReportSettings
                         */
    
                        /**
                         * Constructs a new CohortSpec.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a CohortSpec.
                         * @implements ICohortSpec
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICohortSpec=} [properties] Properties to set
                         */
                        function CohortSpec(properties) {
                            this.cohorts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CohortSpec cohorts.
                         * @member {Array.<google.analytics.data.v1beta.ICohort>} cohorts
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @instance
                         */
                        CohortSpec.prototype.cohorts = $util.emptyArray;
    
                        /**
                         * CohortSpec cohortsRange.
                         * @member {google.analytics.data.v1beta.ICohortsRange|null|undefined} cohortsRange
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @instance
                         */
                        CohortSpec.prototype.cohortsRange = null;
    
                        /**
                         * CohortSpec cohortReportSettings.
                         * @member {google.analytics.data.v1beta.ICohortReportSettings|null|undefined} cohortReportSettings
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @instance
                         */
                        CohortSpec.prototype.cohortReportSettings = null;
    
                        /**
                         * Creates a new CohortSpec instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortSpec=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.CohortSpec} CohortSpec instance
                         */
                        CohortSpec.create = function create(properties) {
                            return new CohortSpec(properties);
                        };
    
                        /**
                         * Encodes the specified CohortSpec message. Does not implicitly {@link google.analytics.data.v1beta.CohortSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortSpec} message CohortSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cohorts != null && message.cohorts.length)
                                for (var i = 0; i < message.cohorts.length; ++i)
                                    $root.google.analytics.data.v1beta.Cohort.encode(message.cohorts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.cohortsRange != null && Object.hasOwnProperty.call(message, "cohortsRange"))
                                $root.google.analytics.data.v1beta.CohortsRange.encode(message.cohortsRange, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.cohortReportSettings != null && Object.hasOwnProperty.call(message, "cohortReportSettings"))
                                $root.google.analytics.data.v1beta.CohortReportSettings.encode(message.cohortReportSettings, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CohortSpec message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.CohortSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortSpec} message CohortSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CohortSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.CohortSpec} CohortSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.CohortSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.cohorts && message.cohorts.length))
                                            message.cohorts = [];
                                        message.cohorts.push($root.google.analytics.data.v1beta.Cohort.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.cohortsRange = $root.google.analytics.data.v1beta.CohortsRange.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.cohortReportSettings = $root.google.analytics.data.v1beta.CohortReportSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CohortSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.CohortSpec} CohortSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CohortSpec message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CohortSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cohorts != null && message.hasOwnProperty("cohorts")) {
                                if (!Array.isArray(message.cohorts))
                                    return "cohorts: array expected";
                                for (var i = 0; i < message.cohorts.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.Cohort.verify(message.cohorts[i]);
                                    if (error)
                                        return "cohorts." + error;
                                }
                            }
                            if (message.cohortsRange != null && message.hasOwnProperty("cohortsRange")) {
                                var error = $root.google.analytics.data.v1beta.CohortsRange.verify(message.cohortsRange);
                                if (error)
                                    return "cohortsRange." + error;
                            }
                            if (message.cohortReportSettings != null && message.hasOwnProperty("cohortReportSettings")) {
                                var error = $root.google.analytics.data.v1beta.CohortReportSettings.verify(message.cohortReportSettings);
                                if (error)
                                    return "cohortReportSettings." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CohortSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.CohortSpec} CohortSpec
                         */
                        CohortSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.CohortSpec)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.CohortSpec();
                            if (object.cohorts) {
                                if (!Array.isArray(object.cohorts))
                                    throw TypeError(".google.analytics.data.v1beta.CohortSpec.cohorts: array expected");
                                message.cohorts = [];
                                for (var i = 0; i < object.cohorts.length; ++i) {
                                    if (typeof object.cohorts[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.CohortSpec.cohorts: object expected");
                                    message.cohorts[i] = $root.google.analytics.data.v1beta.Cohort.fromObject(object.cohorts[i]);
                                }
                            }
                            if (object.cohortsRange != null) {
                                if (typeof object.cohortsRange !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.CohortSpec.cohortsRange: object expected");
                                message.cohortsRange = $root.google.analytics.data.v1beta.CohortsRange.fromObject(object.cohortsRange);
                            }
                            if (object.cohortReportSettings != null) {
                                if (typeof object.cohortReportSettings !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.CohortSpec.cohortReportSettings: object expected");
                                message.cohortReportSettings = $root.google.analytics.data.v1beta.CohortReportSettings.fromObject(object.cohortReportSettings);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CohortSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {google.analytics.data.v1beta.CohortSpec} message CohortSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CohortSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.cohorts = [];
                            if (options.defaults) {
                                object.cohortsRange = null;
                                object.cohortReportSettings = null;
                            }
                            if (message.cohorts && message.cohorts.length) {
                                object.cohorts = [];
                                for (var j = 0; j < message.cohorts.length; ++j)
                                    object.cohorts[j] = $root.google.analytics.data.v1beta.Cohort.toObject(message.cohorts[j], options);
                            }
                            if (message.cohortsRange != null && message.hasOwnProperty("cohortsRange"))
                                object.cohortsRange = $root.google.analytics.data.v1beta.CohortsRange.toObject(message.cohortsRange, options);
                            if (message.cohortReportSettings != null && message.hasOwnProperty("cohortReportSettings"))
                                object.cohortReportSettings = $root.google.analytics.data.v1beta.CohortReportSettings.toObject(message.cohortReportSettings, options);
                            return object;
                        };
    
                        /**
                         * Converts this CohortSpec to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CohortSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CohortSpec
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.CohortSpec
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CohortSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.CohortSpec";
                        };
    
                        return CohortSpec;
                    })();
    
                    v1beta.Cohort = (function() {
    
                        /**
                         * Properties of a Cohort.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICohort
                         * @property {string|null} [name] Cohort name
                         * @property {string|null} [dimension] Cohort dimension
                         * @property {google.analytics.data.v1beta.IDateRange|null} [dateRange] Cohort dateRange
                         */
    
                        /**
                         * Constructs a new Cohort.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Cohort.
                         * @implements ICohort
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICohort=} [properties] Properties to set
                         */
                        function Cohort(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Cohort name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @instance
                         */
                        Cohort.prototype.name = "";
    
                        /**
                         * Cohort dimension.
                         * @member {string} dimension
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @instance
                         */
                        Cohort.prototype.dimension = "";
    
                        /**
                         * Cohort dateRange.
                         * @member {google.analytics.data.v1beta.IDateRange|null|undefined} dateRange
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @instance
                         */
                        Cohort.prototype.dateRange = null;
    
                        /**
                         * Creates a new Cohort instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {google.analytics.data.v1beta.ICohort=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Cohort} Cohort instance
                         */
                        Cohort.create = function create(properties) {
                            return new Cohort(properties);
                        };
    
                        /**
                         * Encodes the specified Cohort message. Does not implicitly {@link google.analytics.data.v1beta.Cohort.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {google.analytics.data.v1beta.ICohort} message Cohort message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cohort.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.dimension != null && Object.hasOwnProperty.call(message, "dimension"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimension);
                            if (message.dateRange != null && Object.hasOwnProperty.call(message, "dateRange"))
                                $root.google.analytics.data.v1beta.DateRange.encode(message.dateRange, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Cohort message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Cohort.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {google.analytics.data.v1beta.ICohort} message Cohort message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cohort.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Cohort message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Cohort} Cohort
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cohort.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Cohort();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dimension = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.dateRange = $root.google.analytics.data.v1beta.DateRange.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Cohort message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Cohort} Cohort
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cohort.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Cohort message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Cohort.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.dimension != null && message.hasOwnProperty("dimension"))
                                if (!$util.isString(message.dimension))
                                    return "dimension: string expected";
                            if (message.dateRange != null && message.hasOwnProperty("dateRange")) {
                                var error = $root.google.analytics.data.v1beta.DateRange.verify(message.dateRange);
                                if (error)
                                    return "dateRange." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Cohort message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Cohort} Cohort
                         */
                        Cohort.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Cohort)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Cohort();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.dimension != null)
                                message.dimension = String(object.dimension);
                            if (object.dateRange != null) {
                                if (typeof object.dateRange !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.Cohort.dateRange: object expected");
                                message.dateRange = $root.google.analytics.data.v1beta.DateRange.fromObject(object.dateRange);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Cohort message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {google.analytics.data.v1beta.Cohort} message Cohort
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Cohort.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.dimension = "";
                                object.dateRange = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.dimension != null && message.hasOwnProperty("dimension"))
                                object.dimension = message.dimension;
                            if (message.dateRange != null && message.hasOwnProperty("dateRange"))
                                object.dateRange = $root.google.analytics.data.v1beta.DateRange.toObject(message.dateRange, options);
                            return object;
                        };
    
                        /**
                         * Converts this Cohort to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Cohort.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Cohort
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Cohort
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Cohort.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Cohort";
                        };
    
                        return Cohort;
                    })();
    
                    v1beta.CohortsRange = (function() {
    
                        /**
                         * Properties of a CohortsRange.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICohortsRange
                         * @property {google.analytics.data.v1beta.CohortsRange.Granularity|null} [granularity] CohortsRange granularity
                         * @property {number|null} [startOffset] CohortsRange startOffset
                         * @property {number|null} [endOffset] CohortsRange endOffset
                         */
    
                        /**
                         * Constructs a new CohortsRange.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a CohortsRange.
                         * @implements ICohortsRange
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICohortsRange=} [properties] Properties to set
                         */
                        function CohortsRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CohortsRange granularity.
                         * @member {google.analytics.data.v1beta.CohortsRange.Granularity} granularity
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @instance
                         */
                        CohortsRange.prototype.granularity = 0;
    
                        /**
                         * CohortsRange startOffset.
                         * @member {number} startOffset
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @instance
                         */
                        CohortsRange.prototype.startOffset = 0;
    
                        /**
                         * CohortsRange endOffset.
                         * @member {number} endOffset
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @instance
                         */
                        CohortsRange.prototype.endOffset = 0;
    
                        /**
                         * Creates a new CohortsRange instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortsRange=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.CohortsRange} CohortsRange instance
                         */
                        CohortsRange.create = function create(properties) {
                            return new CohortsRange(properties);
                        };
    
                        /**
                         * Encodes the specified CohortsRange message. Does not implicitly {@link google.analytics.data.v1beta.CohortsRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortsRange} message CohortsRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortsRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.granularity != null && Object.hasOwnProperty.call(message, "granularity"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.granularity);
                            if (message.startOffset != null && Object.hasOwnProperty.call(message, "startOffset"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.startOffset);
                            if (message.endOffset != null && Object.hasOwnProperty.call(message, "endOffset"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.endOffset);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CohortsRange message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.CohortsRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortsRange} message CohortsRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortsRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CohortsRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.CohortsRange} CohortsRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortsRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.CohortsRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.granularity = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.startOffset = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.endOffset = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CohortsRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.CohortsRange} CohortsRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortsRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CohortsRange message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CohortsRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.granularity != null && message.hasOwnProperty("granularity"))
                                switch (message.granularity) {
                                default:
                                    return "granularity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.startOffset != null && message.hasOwnProperty("startOffset"))
                                if (!$util.isInteger(message.startOffset))
                                    return "startOffset: integer expected";
                            if (message.endOffset != null && message.hasOwnProperty("endOffset"))
                                if (!$util.isInteger(message.endOffset))
                                    return "endOffset: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a CohortsRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.CohortsRange} CohortsRange
                         */
                        CohortsRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.CohortsRange)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.CohortsRange();
                            switch (object.granularity) {
                            default:
                                if (typeof object.granularity === "number") {
                                    message.granularity = object.granularity;
                                    break;
                                }
                                break;
                            case "GRANULARITY_UNSPECIFIED":
                            case 0:
                                message.granularity = 0;
                                break;
                            case "DAILY":
                            case 1:
                                message.granularity = 1;
                                break;
                            case "WEEKLY":
                            case 2:
                                message.granularity = 2;
                                break;
                            case "MONTHLY":
                            case 3:
                                message.granularity = 3;
                                break;
                            }
                            if (object.startOffset != null)
                                message.startOffset = object.startOffset | 0;
                            if (object.endOffset != null)
                                message.endOffset = object.endOffset | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CohortsRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {google.analytics.data.v1beta.CohortsRange} message CohortsRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CohortsRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.granularity = options.enums === String ? "GRANULARITY_UNSPECIFIED" : 0;
                                object.startOffset = 0;
                                object.endOffset = 0;
                            }
                            if (message.granularity != null && message.hasOwnProperty("granularity"))
                                object.granularity = options.enums === String ? $root.google.analytics.data.v1beta.CohortsRange.Granularity[message.granularity] === undefined ? message.granularity : $root.google.analytics.data.v1beta.CohortsRange.Granularity[message.granularity] : message.granularity;
                            if (message.startOffset != null && message.hasOwnProperty("startOffset"))
                                object.startOffset = message.startOffset;
                            if (message.endOffset != null && message.hasOwnProperty("endOffset"))
                                object.endOffset = message.endOffset;
                            return object;
                        };
    
                        /**
                         * Converts this CohortsRange to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CohortsRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CohortsRange
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.CohortsRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CohortsRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.CohortsRange";
                        };
    
                        /**
                         * Granularity enum.
                         * @name google.analytics.data.v1beta.CohortsRange.Granularity
                         * @enum {number}
                         * @property {number} GRANULARITY_UNSPECIFIED=0 GRANULARITY_UNSPECIFIED value
                         * @property {number} DAILY=1 DAILY value
                         * @property {number} WEEKLY=2 WEEKLY value
                         * @property {number} MONTHLY=3 MONTHLY value
                         */
                        CohortsRange.Granularity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "GRANULARITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DAILY"] = 1;
                            values[valuesById[2] = "WEEKLY"] = 2;
                            values[valuesById[3] = "MONTHLY"] = 3;
                            return values;
                        })();
    
                        return CohortsRange;
                    })();
    
                    v1beta.CohortReportSettings = (function() {
    
                        /**
                         * Properties of a CohortReportSettings.
                         * @memberof google.analytics.data.v1beta
                         * @interface ICohortReportSettings
                         * @property {boolean|null} [accumulate] CohortReportSettings accumulate
                         */
    
                        /**
                         * Constructs a new CohortReportSettings.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a CohortReportSettings.
                         * @implements ICohortReportSettings
                         * @constructor
                         * @param {google.analytics.data.v1beta.ICohortReportSettings=} [properties] Properties to set
                         */
                        function CohortReportSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CohortReportSettings accumulate.
                         * @member {boolean} accumulate
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @instance
                         */
                        CohortReportSettings.prototype.accumulate = false;
    
                        /**
                         * Creates a new CohortReportSettings instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortReportSettings=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.CohortReportSettings} CohortReportSettings instance
                         */
                        CohortReportSettings.create = function create(properties) {
                            return new CohortReportSettings(properties);
                        };
    
                        /**
                         * Encodes the specified CohortReportSettings message. Does not implicitly {@link google.analytics.data.v1beta.CohortReportSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortReportSettings} message CohortReportSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortReportSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.accumulate != null && Object.hasOwnProperty.call(message, "accumulate"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.accumulate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CohortReportSettings message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.CohortReportSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {google.analytics.data.v1beta.ICohortReportSettings} message CohortReportSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CohortReportSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CohortReportSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.CohortReportSettings} CohortReportSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortReportSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.CohortReportSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.accumulate = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CohortReportSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.CohortReportSettings} CohortReportSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CohortReportSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CohortReportSettings message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CohortReportSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.accumulate != null && message.hasOwnProperty("accumulate"))
                                if (typeof message.accumulate !== "boolean")
                                    return "accumulate: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CohortReportSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.CohortReportSettings} CohortReportSettings
                         */
                        CohortReportSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.CohortReportSettings)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.CohortReportSettings();
                            if (object.accumulate != null)
                                message.accumulate = Boolean(object.accumulate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CohortReportSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {google.analytics.data.v1beta.CohortReportSettings} message CohortReportSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CohortReportSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.accumulate = false;
                            if (message.accumulate != null && message.hasOwnProperty("accumulate"))
                                object.accumulate = message.accumulate;
                            return object;
                        };
    
                        /**
                         * Converts this CohortReportSettings to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CohortReportSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CohortReportSettings
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.CohortReportSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CohortReportSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.CohortReportSettings";
                        };
    
                        return CohortReportSettings;
                    })();
    
                    v1beta.ResponseMetaData = (function() {
    
                        /**
                         * Properties of a ResponseMetaData.
                         * @memberof google.analytics.data.v1beta
                         * @interface IResponseMetaData
                         * @property {boolean|null} [dataLossFromOtherRow] ResponseMetaData dataLossFromOtherRow
                         * @property {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse|null} [schemaRestrictionResponse] ResponseMetaData schemaRestrictionResponse
                         * @property {string|null} [currencyCode] ResponseMetaData currencyCode
                         * @property {string|null} [timeZone] ResponseMetaData timeZone
                         * @property {string|null} [emptyReason] ResponseMetaData emptyReason
                         * @property {boolean|null} [subjectToThresholding] ResponseMetaData subjectToThresholding
                         */
    
                        /**
                         * Constructs a new ResponseMetaData.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a ResponseMetaData.
                         * @implements IResponseMetaData
                         * @constructor
                         * @param {google.analytics.data.v1beta.IResponseMetaData=} [properties] Properties to set
                         */
                        function ResponseMetaData(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResponseMetaData dataLossFromOtherRow.
                         * @member {boolean} dataLossFromOtherRow
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.dataLossFromOtherRow = false;
    
                        /**
                         * ResponseMetaData schemaRestrictionResponse.
                         * @member {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse|null|undefined} schemaRestrictionResponse
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.schemaRestrictionResponse = null;
    
                        /**
                         * ResponseMetaData currencyCode.
                         * @member {string|null|undefined} currencyCode
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.currencyCode = null;
    
                        /**
                         * ResponseMetaData timeZone.
                         * @member {string|null|undefined} timeZone
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.timeZone = null;
    
                        /**
                         * ResponseMetaData emptyReason.
                         * @member {string|null|undefined} emptyReason
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.emptyReason = null;
    
                        /**
                         * ResponseMetaData subjectToThresholding.
                         * @member {boolean|null|undefined} subjectToThresholding
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        ResponseMetaData.prototype.subjectToThresholding = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ResponseMetaData _schemaRestrictionResponse.
                         * @member {"schemaRestrictionResponse"|undefined} _schemaRestrictionResponse
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        Object.defineProperty(ResponseMetaData.prototype, "_schemaRestrictionResponse", {
                            get: $util.oneOfGetter($oneOfFields = ["schemaRestrictionResponse"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ResponseMetaData _currencyCode.
                         * @member {"currencyCode"|undefined} _currencyCode
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        Object.defineProperty(ResponseMetaData.prototype, "_currencyCode", {
                            get: $util.oneOfGetter($oneOfFields = ["currencyCode"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ResponseMetaData _timeZone.
                         * @member {"timeZone"|undefined} _timeZone
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        Object.defineProperty(ResponseMetaData.prototype, "_timeZone", {
                            get: $util.oneOfGetter($oneOfFields = ["timeZone"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ResponseMetaData _emptyReason.
                         * @member {"emptyReason"|undefined} _emptyReason
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        Object.defineProperty(ResponseMetaData.prototype, "_emptyReason", {
                            get: $util.oneOfGetter($oneOfFields = ["emptyReason"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * ResponseMetaData _subjectToThresholding.
                         * @member {"subjectToThresholding"|undefined} _subjectToThresholding
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         */
                        Object.defineProperty(ResponseMetaData.prototype, "_subjectToThresholding", {
                            get: $util.oneOfGetter($oneOfFields = ["subjectToThresholding"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ResponseMetaData instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {google.analytics.data.v1beta.IResponseMetaData=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.ResponseMetaData} ResponseMetaData instance
                         */
                        ResponseMetaData.create = function create(properties) {
                            return new ResponseMetaData(properties);
                        };
    
                        /**
                         * Encodes the specified ResponseMetaData message. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {google.analytics.data.v1beta.IResponseMetaData} message ResponseMetaData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetaData.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataLossFromOtherRow != null && Object.hasOwnProperty.call(message, "dataLossFromOtherRow"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.dataLossFromOtherRow);
                            if (message.schemaRestrictionResponse != null && Object.hasOwnProperty.call(message, "schemaRestrictionResponse"))
                                $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.encode(message.schemaRestrictionResponse, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.currencyCode);
                            if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.timeZone);
                            if (message.emptyReason != null && Object.hasOwnProperty.call(message, "emptyReason"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.emptyReason);
                            if (message.subjectToThresholding != null && Object.hasOwnProperty.call(message, "subjectToThresholding"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.subjectToThresholding);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResponseMetaData message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {google.analytics.data.v1beta.IResponseMetaData} message ResponseMetaData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetaData.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResponseMetaData message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.ResponseMetaData} ResponseMetaData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetaData.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.ResponseMetaData();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.dataLossFromOtherRow = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.schemaRestrictionResponse = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.currencyCode = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.timeZone = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.emptyReason = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.subjectToThresholding = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResponseMetaData message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.ResponseMetaData} ResponseMetaData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetaData.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResponseMetaData message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResponseMetaData.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.dataLossFromOtherRow != null && message.hasOwnProperty("dataLossFromOtherRow"))
                                if (typeof message.dataLossFromOtherRow !== "boolean")
                                    return "dataLossFromOtherRow: boolean expected";
                            if (message.schemaRestrictionResponse != null && message.hasOwnProperty("schemaRestrictionResponse")) {
                                properties._schemaRestrictionResponse = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.verify(message.schemaRestrictionResponse);
                                    if (error)
                                        return "schemaRestrictionResponse." + error;
                                }
                            }
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode")) {
                                properties._currencyCode = 1;
                                if (!$util.isString(message.currencyCode))
                                    return "currencyCode: string expected";
                            }
                            if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                                properties._timeZone = 1;
                                if (!$util.isString(message.timeZone))
                                    return "timeZone: string expected";
                            }
                            if (message.emptyReason != null && message.hasOwnProperty("emptyReason")) {
                                properties._emptyReason = 1;
                                if (!$util.isString(message.emptyReason))
                                    return "emptyReason: string expected";
                            }
                            if (message.subjectToThresholding != null && message.hasOwnProperty("subjectToThresholding")) {
                                properties._subjectToThresholding = 1;
                                if (typeof message.subjectToThresholding !== "boolean")
                                    return "subjectToThresholding: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ResponseMetaData message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.ResponseMetaData} ResponseMetaData
                         */
                        ResponseMetaData.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.ResponseMetaData)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.ResponseMetaData();
                            if (object.dataLossFromOtherRow != null)
                                message.dataLossFromOtherRow = Boolean(object.dataLossFromOtherRow);
                            if (object.schemaRestrictionResponse != null) {
                                if (typeof object.schemaRestrictionResponse !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.ResponseMetaData.schemaRestrictionResponse: object expected");
                                message.schemaRestrictionResponse = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.fromObject(object.schemaRestrictionResponse);
                            }
                            if (object.currencyCode != null)
                                message.currencyCode = String(object.currencyCode);
                            if (object.timeZone != null)
                                message.timeZone = String(object.timeZone);
                            if (object.emptyReason != null)
                                message.emptyReason = String(object.emptyReason);
                            if (object.subjectToThresholding != null)
                                message.subjectToThresholding = Boolean(object.subjectToThresholding);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResponseMetaData message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {google.analytics.data.v1beta.ResponseMetaData} message ResponseMetaData
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResponseMetaData.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.dataLossFromOtherRow = false;
                            if (message.dataLossFromOtherRow != null && message.hasOwnProperty("dataLossFromOtherRow"))
                                object.dataLossFromOtherRow = message.dataLossFromOtherRow;
                            if (message.schemaRestrictionResponse != null && message.hasOwnProperty("schemaRestrictionResponse")) {
                                object.schemaRestrictionResponse = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.toObject(message.schemaRestrictionResponse, options);
                                if (options.oneofs)
                                    object._schemaRestrictionResponse = "schemaRestrictionResponse";
                            }
                            if (message.currencyCode != null && message.hasOwnProperty("currencyCode")) {
                                object.currencyCode = message.currencyCode;
                                if (options.oneofs)
                                    object._currencyCode = "currencyCode";
                            }
                            if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                                object.timeZone = message.timeZone;
                                if (options.oneofs)
                                    object._timeZone = "timeZone";
                            }
                            if (message.emptyReason != null && message.hasOwnProperty("emptyReason")) {
                                object.emptyReason = message.emptyReason;
                                if (options.oneofs)
                                    object._emptyReason = "emptyReason";
                            }
                            if (message.subjectToThresholding != null && message.hasOwnProperty("subjectToThresholding")) {
                                object.subjectToThresholding = message.subjectToThresholding;
                                if (options.oneofs)
                                    object._subjectToThresholding = "subjectToThresholding";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ResponseMetaData to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResponseMetaData.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResponseMetaData
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.ResponseMetaData
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResponseMetaData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.ResponseMetaData";
                        };
    
                        ResponseMetaData.SchemaRestrictionResponse = (function() {
    
                            /**
                             * Properties of a SchemaRestrictionResponse.
                             * @memberof google.analytics.data.v1beta.ResponseMetaData
                             * @interface ISchemaRestrictionResponse
                             * @property {Array.<google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction>|null} [activeMetricRestrictions] SchemaRestrictionResponse activeMetricRestrictions
                             */
    
                            /**
                             * Constructs a new SchemaRestrictionResponse.
                             * @memberof google.analytics.data.v1beta.ResponseMetaData
                             * @classdesc Represents a SchemaRestrictionResponse.
                             * @implements ISchemaRestrictionResponse
                             * @constructor
                             * @param {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse=} [properties] Properties to set
                             */
                            function SchemaRestrictionResponse(properties) {
                                this.activeMetricRestrictions = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SchemaRestrictionResponse activeMetricRestrictions.
                             * @member {Array.<google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction>} activeMetricRestrictions
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @instance
                             */
                            SchemaRestrictionResponse.prototype.activeMetricRestrictions = $util.emptyArray;
    
                            /**
                             * Creates a new SchemaRestrictionResponse instance using the specified properties.
                             * @function create
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse=} [properties] Properties to set
                             * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse} SchemaRestrictionResponse instance
                             */
                            SchemaRestrictionResponse.create = function create(properties) {
                                return new SchemaRestrictionResponse(properties);
                            };
    
                            /**
                             * Encodes the specified SchemaRestrictionResponse message. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse} message SchemaRestrictionResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SchemaRestrictionResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.activeMetricRestrictions != null && message.activeMetricRestrictions.length)
                                    for (var i = 0; i < message.activeMetricRestrictions.length; ++i)
                                        $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.encode(message.activeMetricRestrictions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SchemaRestrictionResponse message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {google.analytics.data.v1beta.ResponseMetaData.ISchemaRestrictionResponse} message SchemaRestrictionResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SchemaRestrictionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SchemaRestrictionResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse} SchemaRestrictionResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SchemaRestrictionResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.activeMetricRestrictions && message.activeMetricRestrictions.length))
                                                message.activeMetricRestrictions = [];
                                            message.activeMetricRestrictions.push($root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SchemaRestrictionResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse} SchemaRestrictionResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SchemaRestrictionResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SchemaRestrictionResponse message.
                             * @function verify
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SchemaRestrictionResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.activeMetricRestrictions != null && message.hasOwnProperty("activeMetricRestrictions")) {
                                    if (!Array.isArray(message.activeMetricRestrictions))
                                        return "activeMetricRestrictions: array expected";
                                    for (var i = 0; i < message.activeMetricRestrictions.length; ++i) {
                                        var error = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.verify(message.activeMetricRestrictions[i]);
                                        if (error)
                                            return "activeMetricRestrictions." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SchemaRestrictionResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse} SchemaRestrictionResponse
                             */
                            SchemaRestrictionResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse)
                                    return object;
                                var message = new $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse();
                                if (object.activeMetricRestrictions) {
                                    if (!Array.isArray(object.activeMetricRestrictions))
                                        throw TypeError(".google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.activeMetricRestrictions: array expected");
                                    message.activeMetricRestrictions = [];
                                    for (var i = 0; i < object.activeMetricRestrictions.length; ++i) {
                                        if (typeof object.activeMetricRestrictions[i] !== "object")
                                            throw TypeError(".google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.activeMetricRestrictions: object expected");
                                        message.activeMetricRestrictions[i] = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.fromObject(object.activeMetricRestrictions[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SchemaRestrictionResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse} message SchemaRestrictionResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SchemaRestrictionResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.activeMetricRestrictions = [];
                                if (message.activeMetricRestrictions && message.activeMetricRestrictions.length) {
                                    object.activeMetricRestrictions = [];
                                    for (var j = 0; j < message.activeMetricRestrictions.length; ++j)
                                        object.activeMetricRestrictions[j] = $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.toObject(message.activeMetricRestrictions[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SchemaRestrictionResponse to JSON.
                             * @function toJSON
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SchemaRestrictionResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SchemaRestrictionResponse
                             * @function getTypeUrl
                             * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SchemaRestrictionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse";
                            };
    
                            SchemaRestrictionResponse.ActiveMetricRestriction = (function() {
    
                                /**
                                 * Properties of an ActiveMetricRestriction.
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                                 * @interface IActiveMetricRestriction
                                 * @property {string|null} [metricName] ActiveMetricRestriction metricName
                                 * @property {Array.<google.analytics.data.v1beta.RestrictedMetricType>|null} [restrictedMetricTypes] ActiveMetricRestriction restrictedMetricTypes
                                 */
    
                                /**
                                 * Constructs a new ActiveMetricRestriction.
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse
                                 * @classdesc Represents an ActiveMetricRestriction.
                                 * @implements IActiveMetricRestriction
                                 * @constructor
                                 * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction=} [properties] Properties to set
                                 */
                                function ActiveMetricRestriction(properties) {
                                    this.restrictedMetricTypes = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ActiveMetricRestriction metricName.
                                 * @member {string|null|undefined} metricName
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @instance
                                 */
                                ActiveMetricRestriction.prototype.metricName = null;
    
                                /**
                                 * ActiveMetricRestriction restrictedMetricTypes.
                                 * @member {Array.<google.analytics.data.v1beta.RestrictedMetricType>} restrictedMetricTypes
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @instance
                                 */
                                ActiveMetricRestriction.prototype.restrictedMetricTypes = $util.emptyArray;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * ActiveMetricRestriction _metricName.
                                 * @member {"metricName"|undefined} _metricName
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @instance
                                 */
                                Object.defineProperty(ActiveMetricRestriction.prototype, "_metricName", {
                                    get: $util.oneOfGetter($oneOfFields = ["metricName"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new ActiveMetricRestriction instance using the specified properties.
                                 * @function create
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction=} [properties] Properties to set
                                 * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction} ActiveMetricRestriction instance
                                 */
                                ActiveMetricRestriction.create = function create(properties) {
                                    return new ActiveMetricRestriction(properties);
                                };
    
                                /**
                                 * Encodes the specified ActiveMetricRestriction message. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction} message ActiveMetricRestriction message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ActiveMetricRestriction.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.metricName != null && Object.hasOwnProperty.call(message, "metricName"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.metricName);
                                    if (message.restrictedMetricTypes != null && message.restrictedMetricTypes.length) {
                                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                        for (var i = 0; i < message.restrictedMetricTypes.length; ++i)
                                            writer.int32(message.restrictedMetricTypes[i]);
                                        writer.ldelim();
                                    }
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ActiveMetricRestriction message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.IActiveMetricRestriction} message ActiveMetricRestriction message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ActiveMetricRestriction.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ActiveMetricRestriction message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction} ActiveMetricRestriction
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ActiveMetricRestriction.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.metricName = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.restrictedMetricTypes && message.restrictedMetricTypes.length))
                                                    message.restrictedMetricTypes = [];
                                                if ((tag & 7) === 2) {
                                                    var end2 = reader.uint32() + reader.pos;
                                                    while (reader.pos < end2)
                                                        message.restrictedMetricTypes.push(reader.int32());
                                                } else
                                                    message.restrictedMetricTypes.push(reader.int32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ActiveMetricRestriction message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction} ActiveMetricRestriction
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ActiveMetricRestriction.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ActiveMetricRestriction message.
                                 * @function verify
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ActiveMetricRestriction.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.metricName != null && message.hasOwnProperty("metricName")) {
                                        properties._metricName = 1;
                                        if (!$util.isString(message.metricName))
                                            return "metricName: string expected";
                                    }
                                    if (message.restrictedMetricTypes != null && message.hasOwnProperty("restrictedMetricTypes")) {
                                        if (!Array.isArray(message.restrictedMetricTypes))
                                            return "restrictedMetricTypes: array expected";
                                        for (var i = 0; i < message.restrictedMetricTypes.length; ++i)
                                            switch (message.restrictedMetricTypes[i]) {
                                            default:
                                                return "restrictedMetricTypes: enum value[] expected";
                                            case 0:
                                            case 1:
                                            case 2:
                                                break;
                                            }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an ActiveMetricRestriction message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction} ActiveMetricRestriction
                                 */
                                ActiveMetricRestriction.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction)
                                        return object;
                                    var message = new $root.google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction();
                                    if (object.metricName != null)
                                        message.metricName = String(object.metricName);
                                    if (object.restrictedMetricTypes) {
                                        if (!Array.isArray(object.restrictedMetricTypes))
                                            throw TypeError(".google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction.restrictedMetricTypes: array expected");
                                        message.restrictedMetricTypes = [];
                                        for (var i = 0; i < object.restrictedMetricTypes.length; ++i)
                                            switch (object.restrictedMetricTypes[i]) {
                                            default:
                                                if (typeof object.restrictedMetricTypes[i] === "number") {
                                                    message.restrictedMetricTypes[i] = object.restrictedMetricTypes[i];
                                                    break;
                                                }
                                            case "RESTRICTED_METRIC_TYPE_UNSPECIFIED":
                                            case 0:
                                                message.restrictedMetricTypes[i] = 0;
                                                break;
                                            case "COST_DATA":
                                            case 1:
                                                message.restrictedMetricTypes[i] = 1;
                                                break;
                                            case "REVENUE_DATA":
                                            case 2:
                                                message.restrictedMetricTypes[i] = 2;
                                                break;
                                            }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ActiveMetricRestriction message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction} message ActiveMetricRestriction
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ActiveMetricRestriction.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.restrictedMetricTypes = [];
                                    if (message.metricName != null && message.hasOwnProperty("metricName")) {
                                        object.metricName = message.metricName;
                                        if (options.oneofs)
                                            object._metricName = "metricName";
                                    }
                                    if (message.restrictedMetricTypes && message.restrictedMetricTypes.length) {
                                        object.restrictedMetricTypes = [];
                                        for (var j = 0; j < message.restrictedMetricTypes.length; ++j)
                                            object.restrictedMetricTypes[j] = options.enums === String ? $root.google.analytics.data.v1beta.RestrictedMetricType[message.restrictedMetricTypes[j]] === undefined ? message.restrictedMetricTypes[j] : $root.google.analytics.data.v1beta.RestrictedMetricType[message.restrictedMetricTypes[j]] : message.restrictedMetricTypes[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this ActiveMetricRestriction to JSON.
                                 * @function toJSON
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ActiveMetricRestriction.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ActiveMetricRestriction
                                 * @function getTypeUrl
                                 * @memberof google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ActiveMetricRestriction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.analytics.data.v1beta.ResponseMetaData.SchemaRestrictionResponse.ActiveMetricRestriction";
                                };
    
                                return ActiveMetricRestriction;
                            })();
    
                            return SchemaRestrictionResponse;
                        })();
    
                        return ResponseMetaData;
                    })();
    
                    v1beta.DimensionHeader = (function() {
    
                        /**
                         * Properties of a DimensionHeader.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimensionHeader
                         * @property {string|null} [name] DimensionHeader name
                         */
    
                        /**
                         * Constructs a new DimensionHeader.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DimensionHeader.
                         * @implements IDimensionHeader
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimensionHeader=} [properties] Properties to set
                         */
                        function DimensionHeader(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionHeader name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @instance
                         */
                        DimensionHeader.prototype.name = "";
    
                        /**
                         * Creates a new DimensionHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DimensionHeader} DimensionHeader instance
                         */
                        DimensionHeader.create = function create(properties) {
                            return new DimensionHeader(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionHeader message. Does not implicitly {@link google.analytics.data.v1beta.DimensionHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionHeader} message DimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionHeader} message DimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DimensionHeader} DimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DimensionHeader} DimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DimensionHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DimensionHeader} DimensionHeader
                         */
                        DimensionHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DimensionHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DimensionHeader();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.DimensionHeader} message DimensionHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DimensionHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DimensionHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionHeader";
                        };
    
                        return DimensionHeader;
                    })();
    
                    v1beta.MetricHeader = (function() {
    
                        /**
                         * Properties of a MetricHeader.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetricHeader
                         * @property {string|null} [name] MetricHeader name
                         * @property {google.analytics.data.v1beta.MetricType|null} [type] MetricHeader type
                         */
    
                        /**
                         * Constructs a new MetricHeader.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a MetricHeader.
                         * @implements IMetricHeader
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetricHeader=} [properties] Properties to set
                         */
                        function MetricHeader(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricHeader name.
                         * @member {string} name
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @instance
                         */
                        MetricHeader.prototype.name = "";
    
                        /**
                         * MetricHeader type.
                         * @member {google.analytics.data.v1beta.MetricType} type
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @instance
                         */
                        MetricHeader.prototype.type = 0;
    
                        /**
                         * Creates a new MetricHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.MetricHeader} MetricHeader instance
                         */
                        MetricHeader.create = function create(properties) {
                            return new MetricHeader(properties);
                        };
    
                        /**
                         * Encodes the specified MetricHeader message. Does not implicitly {@link google.analytics.data.v1beta.MetricHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricHeader} message MetricHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.MetricHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricHeader} message MetricHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.MetricHeader} MetricHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.MetricHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.MetricHeader} MetricHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MetricHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.MetricHeader} MetricHeader
                         */
                        MetricHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.MetricHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.MetricHeader();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "METRIC_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_INTEGER":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_FLOAT":
                            case 2:
                                message.type = 2;
                                break;
                            case "TYPE_SECONDS":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_MILLISECONDS":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_MINUTES":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_HOURS":
                            case 7:
                                message.type = 7;
                                break;
                            case "TYPE_STANDARD":
                            case 8:
                                message.type = 8;
                                break;
                            case "TYPE_CURRENCY":
                            case 9:
                                message.type = 9;
                                break;
                            case "TYPE_FEET":
                            case 10:
                                message.type = 10;
                                break;
                            case "TYPE_MILES":
                            case 11:
                                message.type = 11;
                                break;
                            case "TYPE_METERS":
                            case 12:
                                message.type = 12;
                                break;
                            case "TYPE_KILOMETERS":
                            case 13:
                                message.type = 13;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {google.analytics.data.v1beta.MetricHeader} message MetricHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "METRIC_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.analytics.data.v1beta.MetricType[message.type] === undefined ? message.type : $root.google.analytics.data.v1beta.MetricType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this MetricHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.MetricHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.MetricHeader";
                        };
    
                        return MetricHeader;
                    })();
    
                    v1beta.PivotHeader = (function() {
    
                        /**
                         * Properties of a PivotHeader.
                         * @memberof google.analytics.data.v1beta
                         * @interface IPivotHeader
                         * @property {Array.<google.analytics.data.v1beta.IPivotDimensionHeader>|null} [pivotDimensionHeaders] PivotHeader pivotDimensionHeaders
                         * @property {number|null} [rowCount] PivotHeader rowCount
                         */
    
                        /**
                         * Constructs a new PivotHeader.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a PivotHeader.
                         * @implements IPivotHeader
                         * @constructor
                         * @param {google.analytics.data.v1beta.IPivotHeader=} [properties] Properties to set
                         */
                        function PivotHeader(properties) {
                            this.pivotDimensionHeaders = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PivotHeader pivotDimensionHeaders.
                         * @member {Array.<google.analytics.data.v1beta.IPivotDimensionHeader>} pivotDimensionHeaders
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @instance
                         */
                        PivotHeader.prototype.pivotDimensionHeaders = $util.emptyArray;
    
                        /**
                         * PivotHeader rowCount.
                         * @member {number} rowCount
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @instance
                         */
                        PivotHeader.prototype.rowCount = 0;
    
                        /**
                         * Creates a new PivotHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.PivotHeader} PivotHeader instance
                         */
                        PivotHeader.create = function create(properties) {
                            return new PivotHeader(properties);
                        };
    
                        /**
                         * Encodes the specified PivotHeader message. Does not implicitly {@link google.analytics.data.v1beta.PivotHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotHeader} message PivotHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PivotHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pivotDimensionHeaders != null && message.pivotDimensionHeaders.length)
                                for (var i = 0; i < message.pivotDimensionHeaders.length; ++i)
                                    $root.google.analytics.data.v1beta.PivotDimensionHeader.encode(message.pivotDimensionHeaders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.rowCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PivotHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.PivotHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotHeader} message PivotHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PivotHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PivotHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.PivotHeader} PivotHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PivotHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.PivotHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.pivotDimensionHeaders && message.pivotDimensionHeaders.length))
                                            message.pivotDimensionHeaders = [];
                                        message.pivotDimensionHeaders.push($root.google.analytics.data.v1beta.PivotDimensionHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.rowCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PivotHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.PivotHeader} PivotHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PivotHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PivotHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PivotHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pivotDimensionHeaders != null && message.hasOwnProperty("pivotDimensionHeaders")) {
                                if (!Array.isArray(message.pivotDimensionHeaders))
                                    return "pivotDimensionHeaders: array expected";
                                for (var i = 0; i < message.pivotDimensionHeaders.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.PivotDimensionHeader.verify(message.pivotDimensionHeaders[i]);
                                    if (error)
                                        return "pivotDimensionHeaders." + error;
                                }
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                if (!$util.isInteger(message.rowCount))
                                    return "rowCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a PivotHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.PivotHeader} PivotHeader
                         */
                        PivotHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.PivotHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.PivotHeader();
                            if (object.pivotDimensionHeaders) {
                                if (!Array.isArray(object.pivotDimensionHeaders))
                                    throw TypeError(".google.analytics.data.v1beta.PivotHeader.pivotDimensionHeaders: array expected");
                                message.pivotDimensionHeaders = [];
                                for (var i = 0; i < object.pivotDimensionHeaders.length; ++i) {
                                    if (typeof object.pivotDimensionHeaders[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.PivotHeader.pivotDimensionHeaders: object expected");
                                    message.pivotDimensionHeaders[i] = $root.google.analytics.data.v1beta.PivotDimensionHeader.fromObject(object.pivotDimensionHeaders[i]);
                                }
                            }
                            if (object.rowCount != null)
                                message.rowCount = object.rowCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PivotHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {google.analytics.data.v1beta.PivotHeader} message PivotHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PivotHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.pivotDimensionHeaders = [];
                            if (options.defaults)
                                object.rowCount = 0;
                            if (message.pivotDimensionHeaders && message.pivotDimensionHeaders.length) {
                                object.pivotDimensionHeaders = [];
                                for (var j = 0; j < message.pivotDimensionHeaders.length; ++j)
                                    object.pivotDimensionHeaders[j] = $root.google.analytics.data.v1beta.PivotDimensionHeader.toObject(message.pivotDimensionHeaders[j], options);
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                object.rowCount = message.rowCount;
                            return object;
                        };
    
                        /**
                         * Converts this PivotHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PivotHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PivotHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.PivotHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PivotHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.PivotHeader";
                        };
    
                        return PivotHeader;
                    })();
    
                    v1beta.PivotDimensionHeader = (function() {
    
                        /**
                         * Properties of a PivotDimensionHeader.
                         * @memberof google.analytics.data.v1beta
                         * @interface IPivotDimensionHeader
                         * @property {Array.<google.analytics.data.v1beta.IDimensionValue>|null} [dimensionValues] PivotDimensionHeader dimensionValues
                         */
    
                        /**
                         * Constructs a new PivotDimensionHeader.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a PivotDimensionHeader.
                         * @implements IPivotDimensionHeader
                         * @constructor
                         * @param {google.analytics.data.v1beta.IPivotDimensionHeader=} [properties] Properties to set
                         */
                        function PivotDimensionHeader(properties) {
                            this.dimensionValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PivotDimensionHeader dimensionValues.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionValue>} dimensionValues
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @instance
                         */
                        PivotDimensionHeader.prototype.dimensionValues = $util.emptyArray;
    
                        /**
                         * Creates a new PivotDimensionHeader instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotDimensionHeader=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.PivotDimensionHeader} PivotDimensionHeader instance
                         */
                        PivotDimensionHeader.create = function create(properties) {
                            return new PivotDimensionHeader(properties);
                        };
    
                        /**
                         * Encodes the specified PivotDimensionHeader message. Does not implicitly {@link google.analytics.data.v1beta.PivotDimensionHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotDimensionHeader} message PivotDimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PivotDimensionHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionValues != null && message.dimensionValues.length)
                                for (var i = 0; i < message.dimensionValues.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionValue.encode(message.dimensionValues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PivotDimensionHeader message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.PivotDimensionHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.IPivotDimensionHeader} message PivotDimensionHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PivotDimensionHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PivotDimensionHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.PivotDimensionHeader} PivotDimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PivotDimensionHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.PivotDimensionHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionValues && message.dimensionValues.length))
                                            message.dimensionValues = [];
                                        message.dimensionValues.push($root.google.analytics.data.v1beta.DimensionValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PivotDimensionHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.PivotDimensionHeader} PivotDimensionHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PivotDimensionHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PivotDimensionHeader message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PivotDimensionHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionValues != null && message.hasOwnProperty("dimensionValues")) {
                                if (!Array.isArray(message.dimensionValues))
                                    return "dimensionValues: array expected";
                                for (var i = 0; i < message.dimensionValues.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionValue.verify(message.dimensionValues[i]);
                                    if (error)
                                        return "dimensionValues." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PivotDimensionHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.PivotDimensionHeader} PivotDimensionHeader
                         */
                        PivotDimensionHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.PivotDimensionHeader)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.PivotDimensionHeader();
                            if (object.dimensionValues) {
                                if (!Array.isArray(object.dimensionValues))
                                    throw TypeError(".google.analytics.data.v1beta.PivotDimensionHeader.dimensionValues: array expected");
                                message.dimensionValues = [];
                                for (var i = 0; i < object.dimensionValues.length; ++i) {
                                    if (typeof object.dimensionValues[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.PivotDimensionHeader.dimensionValues: object expected");
                                    message.dimensionValues[i] = $root.google.analytics.data.v1beta.DimensionValue.fromObject(object.dimensionValues[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PivotDimensionHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {google.analytics.data.v1beta.PivotDimensionHeader} message PivotDimensionHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PivotDimensionHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.dimensionValues = [];
                            if (message.dimensionValues && message.dimensionValues.length) {
                                object.dimensionValues = [];
                                for (var j = 0; j < message.dimensionValues.length; ++j)
                                    object.dimensionValues[j] = $root.google.analytics.data.v1beta.DimensionValue.toObject(message.dimensionValues[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PivotDimensionHeader to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PivotDimensionHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PivotDimensionHeader
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.PivotDimensionHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PivotDimensionHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.PivotDimensionHeader";
                        };
    
                        return PivotDimensionHeader;
                    })();
    
                    v1beta.Row = (function() {
    
                        /**
                         * Properties of a Row.
                         * @memberof google.analytics.data.v1beta
                         * @interface IRow
                         * @property {Array.<google.analytics.data.v1beta.IDimensionValue>|null} [dimensionValues] Row dimensionValues
                         * @property {Array.<google.analytics.data.v1beta.IMetricValue>|null} [metricValues] Row metricValues
                         */
    
                        /**
                         * Constructs a new Row.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a Row.
                         * @implements IRow
                         * @constructor
                         * @param {google.analytics.data.v1beta.IRow=} [properties] Properties to set
                         */
                        function Row(properties) {
                            this.dimensionValues = [];
                            this.metricValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Row dimensionValues.
                         * @member {Array.<google.analytics.data.v1beta.IDimensionValue>} dimensionValues
                         * @memberof google.analytics.data.v1beta.Row
                         * @instance
                         */
                        Row.prototype.dimensionValues = $util.emptyArray;
    
                        /**
                         * Row metricValues.
                         * @member {Array.<google.analytics.data.v1beta.IMetricValue>} metricValues
                         * @memberof google.analytics.data.v1beta.Row
                         * @instance
                         */
                        Row.prototype.metricValues = $util.emptyArray;
    
                        /**
                         * Creates a new Row instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {google.analytics.data.v1beta.IRow=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.Row} Row instance
                         */
                        Row.create = function create(properties) {
                            return new Row(properties);
                        };
    
                        /**
                         * Encodes the specified Row message. Does not implicitly {@link google.analytics.data.v1beta.Row.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {google.analytics.data.v1beta.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionValues != null && message.dimensionValues.length)
                                for (var i = 0; i < message.dimensionValues.length; ++i)
                                    $root.google.analytics.data.v1beta.DimensionValue.encode(message.dimensionValues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metricValues != null && message.metricValues.length)
                                for (var i = 0; i < message.metricValues.length; ++i)
                                    $root.google.analytics.data.v1beta.MetricValue.encode(message.metricValues[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Row message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.Row.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {google.analytics.data.v1beta.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.Row();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dimensionValues && message.dimensionValues.length))
                                            message.dimensionValues = [];
                                        message.dimensionValues.push($root.google.analytics.data.v1beta.DimensionValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.metricValues && message.metricValues.length))
                                            message.metricValues = [];
                                        message.metricValues.push($root.google.analytics.data.v1beta.MetricValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Row message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Row.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dimensionValues != null && message.hasOwnProperty("dimensionValues")) {
                                if (!Array.isArray(message.dimensionValues))
                                    return "dimensionValues: array expected";
                                for (var i = 0; i < message.dimensionValues.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.DimensionValue.verify(message.dimensionValues[i]);
                                    if (error)
                                        return "dimensionValues." + error;
                                }
                            }
                            if (message.metricValues != null && message.hasOwnProperty("metricValues")) {
                                if (!Array.isArray(message.metricValues))
                                    return "metricValues: array expected";
                                for (var i = 0; i < message.metricValues.length; ++i) {
                                    var error = $root.google.analytics.data.v1beta.MetricValue.verify(message.metricValues[i]);
                                    if (error)
                                        return "metricValues." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Row message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.Row} Row
                         */
                        Row.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.Row)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.Row();
                            if (object.dimensionValues) {
                                if (!Array.isArray(object.dimensionValues))
                                    throw TypeError(".google.analytics.data.v1beta.Row.dimensionValues: array expected");
                                message.dimensionValues = [];
                                for (var i = 0; i < object.dimensionValues.length; ++i) {
                                    if (typeof object.dimensionValues[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Row.dimensionValues: object expected");
                                    message.dimensionValues[i] = $root.google.analytics.data.v1beta.DimensionValue.fromObject(object.dimensionValues[i]);
                                }
                            }
                            if (object.metricValues) {
                                if (!Array.isArray(object.metricValues))
                                    throw TypeError(".google.analytics.data.v1beta.Row.metricValues: array expected");
                                message.metricValues = [];
                                for (var i = 0; i < object.metricValues.length; ++i) {
                                    if (typeof object.metricValues[i] !== "object")
                                        throw TypeError(".google.analytics.data.v1beta.Row.metricValues: object expected");
                                    message.metricValues[i] = $root.google.analytics.data.v1beta.MetricValue.fromObject(object.metricValues[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Row message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {google.analytics.data.v1beta.Row} message Row
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Row.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.dimensionValues = [];
                                object.metricValues = [];
                            }
                            if (message.dimensionValues && message.dimensionValues.length) {
                                object.dimensionValues = [];
                                for (var j = 0; j < message.dimensionValues.length; ++j)
                                    object.dimensionValues[j] = $root.google.analytics.data.v1beta.DimensionValue.toObject(message.dimensionValues[j], options);
                            }
                            if (message.metricValues && message.metricValues.length) {
                                object.metricValues = [];
                                for (var j = 0; j < message.metricValues.length; ++j)
                                    object.metricValues[j] = $root.google.analytics.data.v1beta.MetricValue.toObject(message.metricValues[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Row to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.Row
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Row.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Row
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.Row
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Row.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.Row";
                        };
    
                        return Row;
                    })();
    
                    v1beta.DimensionValue = (function() {
    
                        /**
                         * Properties of a DimensionValue.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimensionValue
                         * @property {string|null} [value] DimensionValue value
                         */
    
                        /**
                         * Constructs a new DimensionValue.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DimensionValue.
                         * @implements IDimensionValue
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimensionValue=} [properties] Properties to set
                         */
                        function DimensionValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionValue value.
                         * @member {string|null|undefined} value
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @instance
                         */
                        DimensionValue.prototype.value = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DimensionValue oneValue.
                         * @member {"value"|undefined} oneValue
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @instance
                         */
                        Object.defineProperty(DimensionValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DimensionValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DimensionValue} DimensionValue instance
                         */
                        DimensionValue.create = function create(properties) {
                            return new DimensionValue(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionValue message. Does not implicitly {@link google.analytics.data.v1beta.DimensionValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionValue} message DimensionValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionValue message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionValue} message DimensionValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DimensionValue} DimensionValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DimensionValue} DimensionValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties.oneValue = 1;
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DimensionValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DimensionValue} DimensionValue
                         */
                        DimensionValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DimensionValue)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DimensionValue();
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {google.analytics.data.v1beta.DimensionValue} message DimensionValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = message.value;
                                if (options.oneofs)
                                    object.oneValue = "value";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DimensionValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DimensionValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionValue";
                        };
    
                        return DimensionValue;
                    })();
    
                    v1beta.MetricValue = (function() {
    
                        /**
                         * Properties of a MetricValue.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetricValue
                         * @property {string|null} [value] MetricValue value
                         */
    
                        /**
                         * Constructs a new MetricValue.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a MetricValue.
                         * @implements IMetricValue
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetricValue=} [properties] Properties to set
                         */
                        function MetricValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricValue value.
                         * @member {string|null|undefined} value
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @instance
                         */
                        MetricValue.prototype.value = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetricValue oneValue.
                         * @member {"value"|undefined} oneValue
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @instance
                         */
                        Object.defineProperty(MetricValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetricValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.MetricValue} MetricValue instance
                         */
                        MetricValue.create = function create(properties) {
                            return new MetricValue(properties);
                        };
    
                        /**
                         * Encodes the specified MetricValue message. Does not implicitly {@link google.analytics.data.v1beta.MetricValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricValue} message MetricValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricValue message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.MetricValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricValue} message MetricValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.MetricValue} MetricValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.MetricValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.MetricValue} MetricValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties.oneValue = 1;
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetricValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.MetricValue} MetricValue
                         */
                        MetricValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.MetricValue)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.MetricValue();
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {google.analytics.data.v1beta.MetricValue} message MetricValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = message.value;
                                if (options.oneofs)
                                    object.oneValue = "value";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetricValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.MetricValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.MetricValue";
                        };
    
                        return MetricValue;
                    })();
    
                    v1beta.NumericValue = (function() {
    
                        /**
                         * Properties of a NumericValue.
                         * @memberof google.analytics.data.v1beta
                         * @interface INumericValue
                         * @property {number|Long|null} [int64Value] NumericValue int64Value
                         * @property {number|null} [doubleValue] NumericValue doubleValue
                         */
    
                        /**
                         * Constructs a new NumericValue.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a NumericValue.
                         * @implements INumericValue
                         * @constructor
                         * @param {google.analytics.data.v1beta.INumericValue=} [properties] Properties to set
                         */
                        function NumericValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NumericValue int64Value.
                         * @member {number|Long|null|undefined} int64Value
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @instance
                         */
                        NumericValue.prototype.int64Value = null;
    
                        /**
                         * NumericValue doubleValue.
                         * @member {number|null|undefined} doubleValue
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @instance
                         */
                        NumericValue.prototype.doubleValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * NumericValue oneValue.
                         * @member {"int64Value"|"doubleValue"|undefined} oneValue
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @instance
                         */
                        Object.defineProperty(NumericValue.prototype, "oneValue", {
                            get: $util.oneOfGetter($oneOfFields = ["int64Value", "doubleValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new NumericValue instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {google.analytics.data.v1beta.INumericValue=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.NumericValue} NumericValue instance
                         */
                        NumericValue.create = function create(properties) {
                            return new NumericValue(properties);
                        };
    
                        /**
                         * Encodes the specified NumericValue message. Does not implicitly {@link google.analytics.data.v1beta.NumericValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {google.analytics.data.v1beta.INumericValue} message NumericValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.int64Value != null && Object.hasOwnProperty.call(message, "int64Value"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.int64Value);
                            if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.doubleValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NumericValue message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.NumericValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {google.analytics.data.v1beta.INumericValue} message NumericValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NumericValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NumericValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.NumericValue} NumericValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.NumericValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.int64Value = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.doubleValue = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NumericValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.NumericValue} NumericValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NumericValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NumericValue message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NumericValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                properties.oneValue = 1;
                                if (!$util.isInteger(message.int64Value) && !(message.int64Value && $util.isInteger(message.int64Value.low) && $util.isInteger(message.int64Value.high)))
                                    return "int64Value: integer|Long expected";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                if (properties.oneValue === 1)
                                    return "oneValue: multiple values";
                                properties.oneValue = 1;
                                if (typeof message.doubleValue !== "number")
                                    return "doubleValue: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NumericValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.NumericValue} NumericValue
                         */
                        NumericValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.NumericValue)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.NumericValue();
                            if (object.int64Value != null)
                                if ($util.Long)
                                    (message.int64Value = $util.Long.fromValue(object.int64Value)).unsigned = false;
                                else if (typeof object.int64Value === "string")
                                    message.int64Value = parseInt(object.int64Value, 10);
                                else if (typeof object.int64Value === "number")
                                    message.int64Value = object.int64Value;
                                else if (typeof object.int64Value === "object")
                                    message.int64Value = new $util.LongBits(object.int64Value.low >>> 0, object.int64Value.high >>> 0).toNumber();
                            if (object.doubleValue != null)
                                message.doubleValue = Number(object.doubleValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NumericValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {google.analytics.data.v1beta.NumericValue} message NumericValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NumericValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                if (typeof message.int64Value === "number")
                                    object.int64Value = options.longs === String ? String(message.int64Value) : message.int64Value;
                                else
                                    object.int64Value = options.longs === String ? $util.Long.prototype.toString.call(message.int64Value) : options.longs === Number ? new $util.LongBits(message.int64Value.low >>> 0, message.int64Value.high >>> 0).toNumber() : message.int64Value;
                                if (options.oneofs)
                                    object.oneValue = "int64Value";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                                if (options.oneofs)
                                    object.oneValue = "doubleValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NumericValue to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NumericValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NumericValue
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.NumericValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NumericValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.NumericValue";
                        };
    
                        return NumericValue;
                    })();
    
                    v1beta.PropertyQuota = (function() {
    
                        /**
                         * Properties of a PropertyQuota.
                         * @memberof google.analytics.data.v1beta
                         * @interface IPropertyQuota
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [tokensPerDay] PropertyQuota tokensPerDay
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [tokensPerHour] PropertyQuota tokensPerHour
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [concurrentRequests] PropertyQuota concurrentRequests
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [serverErrorsPerProjectPerHour] PropertyQuota serverErrorsPerProjectPerHour
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [potentiallyThresholdedRequestsPerHour] PropertyQuota potentiallyThresholdedRequestsPerHour
                         * @property {google.analytics.data.v1beta.IQuotaStatus|null} [tokensPerProjectPerHour] PropertyQuota tokensPerProjectPerHour
                         */
    
                        /**
                         * Constructs a new PropertyQuota.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a PropertyQuota.
                         * @implements IPropertyQuota
                         * @constructor
                         * @param {google.analytics.data.v1beta.IPropertyQuota=} [properties] Properties to set
                         */
                        function PropertyQuota(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyQuota tokensPerDay.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} tokensPerDay
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.tokensPerDay = null;
    
                        /**
                         * PropertyQuota tokensPerHour.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} tokensPerHour
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.tokensPerHour = null;
    
                        /**
                         * PropertyQuota concurrentRequests.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} concurrentRequests
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.concurrentRequests = null;
    
                        /**
                         * PropertyQuota serverErrorsPerProjectPerHour.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} serverErrorsPerProjectPerHour
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.serverErrorsPerProjectPerHour = null;
    
                        /**
                         * PropertyQuota potentiallyThresholdedRequestsPerHour.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} potentiallyThresholdedRequestsPerHour
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.potentiallyThresholdedRequestsPerHour = null;
    
                        /**
                         * PropertyQuota tokensPerProjectPerHour.
                         * @member {google.analytics.data.v1beta.IQuotaStatus|null|undefined} tokensPerProjectPerHour
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         */
                        PropertyQuota.prototype.tokensPerProjectPerHour = null;
    
                        /**
                         * Creates a new PropertyQuota instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1beta.IPropertyQuota=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.PropertyQuota} PropertyQuota instance
                         */
                        PropertyQuota.create = function create(properties) {
                            return new PropertyQuota(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyQuota message. Does not implicitly {@link google.analytics.data.v1beta.PropertyQuota.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1beta.IPropertyQuota} message PropertyQuota message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyQuota.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tokensPerDay != null && Object.hasOwnProperty.call(message, "tokensPerDay"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.tokensPerDay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.tokensPerHour != null && Object.hasOwnProperty.call(message, "tokensPerHour"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.tokensPerHour, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.concurrentRequests != null && Object.hasOwnProperty.call(message, "concurrentRequests"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.concurrentRequests, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.serverErrorsPerProjectPerHour != null && Object.hasOwnProperty.call(message, "serverErrorsPerProjectPerHour"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.serverErrorsPerProjectPerHour, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.potentiallyThresholdedRequestsPerHour != null && Object.hasOwnProperty.call(message, "potentiallyThresholdedRequestsPerHour"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.potentiallyThresholdedRequestsPerHour, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.tokensPerProjectPerHour != null && Object.hasOwnProperty.call(message, "tokensPerProjectPerHour"))
                                $root.google.analytics.data.v1beta.QuotaStatus.encode(message.tokensPerProjectPerHour, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyQuota message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.PropertyQuota.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1beta.IPropertyQuota} message PropertyQuota message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyQuota.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyQuota message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.PropertyQuota} PropertyQuota
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyQuota.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.PropertyQuota();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tokensPerDay = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.tokensPerHour = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.concurrentRequests = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.tokensPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyQuota message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.PropertyQuota} PropertyQuota
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyQuota.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyQuota message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyQuota.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tokensPerDay != null && message.hasOwnProperty("tokensPerDay")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.tokensPerDay);
                                if (error)
                                    return "tokensPerDay." + error;
                            }
                            if (message.tokensPerHour != null && message.hasOwnProperty("tokensPerHour")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.tokensPerHour);
                                if (error)
                                    return "tokensPerHour." + error;
                            }
                            if (message.concurrentRequests != null && message.hasOwnProperty("concurrentRequests")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.concurrentRequests);
                                if (error)
                                    return "concurrentRequests." + error;
                            }
                            if (message.serverErrorsPerProjectPerHour != null && message.hasOwnProperty("serverErrorsPerProjectPerHour")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.serverErrorsPerProjectPerHour);
                                if (error)
                                    return "serverErrorsPerProjectPerHour." + error;
                            }
                            if (message.potentiallyThresholdedRequestsPerHour != null && message.hasOwnProperty("potentiallyThresholdedRequestsPerHour")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.potentiallyThresholdedRequestsPerHour);
                                if (error)
                                    return "potentiallyThresholdedRequestsPerHour." + error;
                            }
                            if (message.tokensPerProjectPerHour != null && message.hasOwnProperty("tokensPerProjectPerHour")) {
                                var error = $root.google.analytics.data.v1beta.QuotaStatus.verify(message.tokensPerProjectPerHour);
                                if (error)
                                    return "tokensPerProjectPerHour." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PropertyQuota message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.PropertyQuota} PropertyQuota
                         */
                        PropertyQuota.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.PropertyQuota)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.PropertyQuota();
                            if (object.tokensPerDay != null) {
                                if (typeof object.tokensPerDay !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.tokensPerDay: object expected");
                                message.tokensPerDay = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.tokensPerDay);
                            }
                            if (object.tokensPerHour != null) {
                                if (typeof object.tokensPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.tokensPerHour: object expected");
                                message.tokensPerHour = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.tokensPerHour);
                            }
                            if (object.concurrentRequests != null) {
                                if (typeof object.concurrentRequests !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.concurrentRequests: object expected");
                                message.concurrentRequests = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.concurrentRequests);
                            }
                            if (object.serverErrorsPerProjectPerHour != null) {
                                if (typeof object.serverErrorsPerProjectPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.serverErrorsPerProjectPerHour: object expected");
                                message.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.serverErrorsPerProjectPerHour);
                            }
                            if (object.potentiallyThresholdedRequestsPerHour != null) {
                                if (typeof object.potentiallyThresholdedRequestsPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.potentiallyThresholdedRequestsPerHour: object expected");
                                message.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.potentiallyThresholdedRequestsPerHour);
                            }
                            if (object.tokensPerProjectPerHour != null) {
                                if (typeof object.tokensPerProjectPerHour !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.PropertyQuota.tokensPerProjectPerHour: object expected");
                                message.tokensPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.fromObject(object.tokensPerProjectPerHour);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyQuota message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {google.analytics.data.v1beta.PropertyQuota} message PropertyQuota
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyQuota.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.tokensPerDay = null;
                                object.tokensPerHour = null;
                                object.concurrentRequests = null;
                                object.serverErrorsPerProjectPerHour = null;
                                object.potentiallyThresholdedRequestsPerHour = null;
                                object.tokensPerProjectPerHour = null;
                            }
                            if (message.tokensPerDay != null && message.hasOwnProperty("tokensPerDay"))
                                object.tokensPerDay = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.tokensPerDay, options);
                            if (message.tokensPerHour != null && message.hasOwnProperty("tokensPerHour"))
                                object.tokensPerHour = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.tokensPerHour, options);
                            if (message.concurrentRequests != null && message.hasOwnProperty("concurrentRequests"))
                                object.concurrentRequests = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.concurrentRequests, options);
                            if (message.serverErrorsPerProjectPerHour != null && message.hasOwnProperty("serverErrorsPerProjectPerHour"))
                                object.serverErrorsPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.serverErrorsPerProjectPerHour, options);
                            if (message.potentiallyThresholdedRequestsPerHour != null && message.hasOwnProperty("potentiallyThresholdedRequestsPerHour"))
                                object.potentiallyThresholdedRequestsPerHour = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.potentiallyThresholdedRequestsPerHour, options);
                            if (message.tokensPerProjectPerHour != null && message.hasOwnProperty("tokensPerProjectPerHour"))
                                object.tokensPerProjectPerHour = $root.google.analytics.data.v1beta.QuotaStatus.toObject(message.tokensPerProjectPerHour, options);
                            return object;
                        };
    
                        /**
                         * Converts this PropertyQuota to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyQuota.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyQuota
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.PropertyQuota
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyQuota.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.PropertyQuota";
                        };
    
                        return PropertyQuota;
                    })();
    
                    v1beta.QuotaStatus = (function() {
    
                        /**
                         * Properties of a QuotaStatus.
                         * @memberof google.analytics.data.v1beta
                         * @interface IQuotaStatus
                         * @property {number|null} [consumed] QuotaStatus consumed
                         * @property {number|null} [remaining] QuotaStatus remaining
                         */
    
                        /**
                         * Constructs a new QuotaStatus.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a QuotaStatus.
                         * @implements IQuotaStatus
                         * @constructor
                         * @param {google.analytics.data.v1beta.IQuotaStatus=} [properties] Properties to set
                         */
                        function QuotaStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QuotaStatus consumed.
                         * @member {number} consumed
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @instance
                         */
                        QuotaStatus.prototype.consumed = 0;
    
                        /**
                         * QuotaStatus remaining.
                         * @member {number} remaining
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @instance
                         */
                        QuotaStatus.prototype.remaining = 0;
    
                        /**
                         * Creates a new QuotaStatus instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1beta.IQuotaStatus=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.QuotaStatus} QuotaStatus instance
                         */
                        QuotaStatus.create = function create(properties) {
                            return new QuotaStatus(properties);
                        };
    
                        /**
                         * Encodes the specified QuotaStatus message. Does not implicitly {@link google.analytics.data.v1beta.QuotaStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1beta.IQuotaStatus} message QuotaStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QuotaStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumed != null && Object.hasOwnProperty.call(message, "consumed"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumed);
                            if (message.remaining != null && Object.hasOwnProperty.call(message, "remaining"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.remaining);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QuotaStatus message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.QuotaStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1beta.IQuotaStatus} message QuotaStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QuotaStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QuotaStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.QuotaStatus} QuotaStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QuotaStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.QuotaStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.consumed = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.remaining = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QuotaStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.QuotaStatus} QuotaStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QuotaStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QuotaStatus message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QuotaStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumed != null && message.hasOwnProperty("consumed"))
                                if (!$util.isInteger(message.consumed))
                                    return "consumed: integer expected";
                            if (message.remaining != null && message.hasOwnProperty("remaining"))
                                if (!$util.isInteger(message.remaining))
                                    return "remaining: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a QuotaStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.QuotaStatus} QuotaStatus
                         */
                        QuotaStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.QuotaStatus)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.QuotaStatus();
                            if (object.consumed != null)
                                message.consumed = object.consumed | 0;
                            if (object.remaining != null)
                                message.remaining = object.remaining | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QuotaStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {google.analytics.data.v1beta.QuotaStatus} message QuotaStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QuotaStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.consumed = 0;
                                object.remaining = 0;
                            }
                            if (message.consumed != null && message.hasOwnProperty("consumed"))
                                object.consumed = message.consumed;
                            if (message.remaining != null && message.hasOwnProperty("remaining"))
                                object.remaining = message.remaining;
                            return object;
                        };
    
                        /**
                         * Converts this QuotaStatus to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QuotaStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QuotaStatus
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.QuotaStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QuotaStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.QuotaStatus";
                        };
    
                        return QuotaStatus;
                    })();
    
                    v1beta.DimensionMetadata = (function() {
    
                        /**
                         * Properties of a DimensionMetadata.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimensionMetadata
                         * @property {string|null} [apiName] DimensionMetadata apiName
                         * @property {string|null} [uiName] DimensionMetadata uiName
                         * @property {string|null} [description] DimensionMetadata description
                         * @property {Array.<string>|null} [deprecatedApiNames] DimensionMetadata deprecatedApiNames
                         * @property {boolean|null} [customDefinition] DimensionMetadata customDefinition
                         * @property {string|null} [category] DimensionMetadata category
                         */
    
                        /**
                         * Constructs a new DimensionMetadata.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DimensionMetadata.
                         * @implements IDimensionMetadata
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimensionMetadata=} [properties] Properties to set
                         */
                        function DimensionMetadata(properties) {
                            this.deprecatedApiNames = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionMetadata apiName.
                         * @member {string} apiName
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.apiName = "";
    
                        /**
                         * DimensionMetadata uiName.
                         * @member {string} uiName
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.uiName = "";
    
                        /**
                         * DimensionMetadata description.
                         * @member {string} description
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.description = "";
    
                        /**
                         * DimensionMetadata deprecatedApiNames.
                         * @member {Array.<string>} deprecatedApiNames
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.deprecatedApiNames = $util.emptyArray;
    
                        /**
                         * DimensionMetadata customDefinition.
                         * @member {boolean} customDefinition
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.customDefinition = false;
    
                        /**
                         * DimensionMetadata category.
                         * @member {string} category
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         */
                        DimensionMetadata.prototype.category = "";
    
                        /**
                         * Creates a new DimensionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionMetadata=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DimensionMetadata} DimensionMetadata instance
                         */
                        DimensionMetadata.create = function create(properties) {
                            return new DimensionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionMetadata message. Does not implicitly {@link google.analytics.data.v1beta.DimensionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionMetadata} message DimensionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.apiName != null && Object.hasOwnProperty.call(message, "apiName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.apiName);
                            if (message.uiName != null && Object.hasOwnProperty.call(message, "uiName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uiName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.deprecatedApiNames != null && message.deprecatedApiNames.length)
                                for (var i = 0; i < message.deprecatedApiNames.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.deprecatedApiNames[i]);
                            if (message.customDefinition != null && Object.hasOwnProperty.call(message, "customDefinition"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.customDefinition);
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.category);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionMetadata message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionMetadata} message DimensionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DimensionMetadata} DimensionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.apiName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uiName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.deprecatedApiNames && message.deprecatedApiNames.length))
                                            message.deprecatedApiNames = [];
                                        message.deprecatedApiNames.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        message.customDefinition = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.category = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DimensionMetadata} DimensionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionMetadata message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.apiName != null && message.hasOwnProperty("apiName"))
                                if (!$util.isString(message.apiName))
                                    return "apiName: string expected";
                            if (message.uiName != null && message.hasOwnProperty("uiName"))
                                if (!$util.isString(message.uiName))
                                    return "uiName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.deprecatedApiNames != null && message.hasOwnProperty("deprecatedApiNames")) {
                                if (!Array.isArray(message.deprecatedApiNames))
                                    return "deprecatedApiNames: array expected";
                                for (var i = 0; i < message.deprecatedApiNames.length; ++i)
                                    if (!$util.isString(message.deprecatedApiNames[i]))
                                        return "deprecatedApiNames: string[] expected";
                            }
                            if (message.customDefinition != null && message.hasOwnProperty("customDefinition"))
                                if (typeof message.customDefinition !== "boolean")
                                    return "customDefinition: boolean expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                if (!$util.isString(message.category))
                                    return "category: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DimensionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DimensionMetadata} DimensionMetadata
                         */
                        DimensionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DimensionMetadata)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DimensionMetadata();
                            if (object.apiName != null)
                                message.apiName = String(object.apiName);
                            if (object.uiName != null)
                                message.uiName = String(object.uiName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.deprecatedApiNames) {
                                if (!Array.isArray(object.deprecatedApiNames))
                                    throw TypeError(".google.analytics.data.v1beta.DimensionMetadata.deprecatedApiNames: array expected");
                                message.deprecatedApiNames = [];
                                for (var i = 0; i < object.deprecatedApiNames.length; ++i)
                                    message.deprecatedApiNames[i] = String(object.deprecatedApiNames[i]);
                            }
                            if (object.customDefinition != null)
                                message.customDefinition = Boolean(object.customDefinition);
                            if (object.category != null)
                                message.category = String(object.category);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.DimensionMetadata} message DimensionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.deprecatedApiNames = [];
                            if (options.defaults) {
                                object.apiName = "";
                                object.uiName = "";
                                object.description = "";
                                object.customDefinition = false;
                                object.category = "";
                            }
                            if (message.apiName != null && message.hasOwnProperty("apiName"))
                                object.apiName = message.apiName;
                            if (message.uiName != null && message.hasOwnProperty("uiName"))
                                object.uiName = message.uiName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.deprecatedApiNames && message.deprecatedApiNames.length) {
                                object.deprecatedApiNames = [];
                                for (var j = 0; j < message.deprecatedApiNames.length; ++j)
                                    object.deprecatedApiNames[j] = message.deprecatedApiNames[j];
                            }
                            if (message.customDefinition != null && message.hasOwnProperty("customDefinition"))
                                object.customDefinition = message.customDefinition;
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = message.category;
                            return object;
                        };
    
                        /**
                         * Converts this DimensionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionMetadata
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DimensionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionMetadata";
                        };
    
                        return DimensionMetadata;
                    })();
    
                    v1beta.MetricMetadata = (function() {
    
                        /**
                         * Properties of a MetricMetadata.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetricMetadata
                         * @property {string|null} [apiName] MetricMetadata apiName
                         * @property {string|null} [uiName] MetricMetadata uiName
                         * @property {string|null} [description] MetricMetadata description
                         * @property {Array.<string>|null} [deprecatedApiNames] MetricMetadata deprecatedApiNames
                         * @property {google.analytics.data.v1beta.MetricType|null} [type] MetricMetadata type
                         * @property {string|null} [expression] MetricMetadata expression
                         * @property {boolean|null} [customDefinition] MetricMetadata customDefinition
                         * @property {Array.<google.analytics.data.v1beta.MetricMetadata.BlockedReason>|null} [blockedReasons] MetricMetadata blockedReasons
                         * @property {string|null} [category] MetricMetadata category
                         */
    
                        /**
                         * Constructs a new MetricMetadata.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a MetricMetadata.
                         * @implements IMetricMetadata
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetricMetadata=} [properties] Properties to set
                         */
                        function MetricMetadata(properties) {
                            this.deprecatedApiNames = [];
                            this.blockedReasons = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricMetadata apiName.
                         * @member {string} apiName
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.apiName = "";
    
                        /**
                         * MetricMetadata uiName.
                         * @member {string} uiName
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.uiName = "";
    
                        /**
                         * MetricMetadata description.
                         * @member {string} description
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.description = "";
    
                        /**
                         * MetricMetadata deprecatedApiNames.
                         * @member {Array.<string>} deprecatedApiNames
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.deprecatedApiNames = $util.emptyArray;
    
                        /**
                         * MetricMetadata type.
                         * @member {google.analytics.data.v1beta.MetricType} type
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.type = 0;
    
                        /**
                         * MetricMetadata expression.
                         * @member {string} expression
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.expression = "";
    
                        /**
                         * MetricMetadata customDefinition.
                         * @member {boolean} customDefinition
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.customDefinition = false;
    
                        /**
                         * MetricMetadata blockedReasons.
                         * @member {Array.<google.analytics.data.v1beta.MetricMetadata.BlockedReason>} blockedReasons
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.blockedReasons = $util.emptyArray;
    
                        /**
                         * MetricMetadata category.
                         * @member {string} category
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         */
                        MetricMetadata.prototype.category = "";
    
                        /**
                         * Creates a new MetricMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricMetadata=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.MetricMetadata} MetricMetadata instance
                         */
                        MetricMetadata.create = function create(properties) {
                            return new MetricMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified MetricMetadata message. Does not implicitly {@link google.analytics.data.v1beta.MetricMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricMetadata} message MetricMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.apiName != null && Object.hasOwnProperty.call(message, "apiName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.apiName);
                            if (message.uiName != null && Object.hasOwnProperty.call(message, "uiName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uiName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.deprecatedApiNames != null && message.deprecatedApiNames.length)
                                for (var i = 0; i < message.deprecatedApiNames.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.deprecatedApiNames[i]);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.expression);
                            if (message.customDefinition != null && Object.hasOwnProperty.call(message, "customDefinition"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.customDefinition);
                            if (message.blockedReasons != null && message.blockedReasons.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.blockedReasons.length; ++i)
                                    writer.int32(message.blockedReasons[i]);
                                writer.ldelim();
                            }
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.category);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricMetadata message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.MetricMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricMetadata} message MetricMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.MetricMetadata} MetricMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.MetricMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.apiName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uiName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.deprecatedApiNames && message.deprecatedApiNames.length))
                                            message.deprecatedApiNames = [];
                                        message.deprecatedApiNames.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.expression = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.customDefinition = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.blockedReasons && message.blockedReasons.length))
                                            message.blockedReasons = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.blockedReasons.push(reader.int32());
                                        } else
                                            message.blockedReasons.push(reader.int32());
                                        break;
                                    }
                                case 10: {
                                        message.category = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.MetricMetadata} MetricMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricMetadata message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.apiName != null && message.hasOwnProperty("apiName"))
                                if (!$util.isString(message.apiName))
                                    return "apiName: string expected";
                            if (message.uiName != null && message.hasOwnProperty("uiName"))
                                if (!$util.isString(message.uiName))
                                    return "uiName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.deprecatedApiNames != null && message.hasOwnProperty("deprecatedApiNames")) {
                                if (!Array.isArray(message.deprecatedApiNames))
                                    return "deprecatedApiNames: array expected";
                                for (var i = 0; i < message.deprecatedApiNames.length; ++i)
                                    if (!$util.isString(message.deprecatedApiNames[i]))
                                        return "deprecatedApiNames: string[] expected";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                    break;
                                }
                            if (message.expression != null && message.hasOwnProperty("expression"))
                                if (!$util.isString(message.expression))
                                    return "expression: string expected";
                            if (message.customDefinition != null && message.hasOwnProperty("customDefinition"))
                                if (typeof message.customDefinition !== "boolean")
                                    return "customDefinition: boolean expected";
                            if (message.blockedReasons != null && message.hasOwnProperty("blockedReasons")) {
                                if (!Array.isArray(message.blockedReasons))
                                    return "blockedReasons: array expected";
                                for (var i = 0; i < message.blockedReasons.length; ++i)
                                    switch (message.blockedReasons[i]) {
                                    default:
                                        return "blockedReasons: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                if (!$util.isString(message.category))
                                    return "category: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MetricMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.MetricMetadata} MetricMetadata
                         */
                        MetricMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.MetricMetadata)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.MetricMetadata();
                            if (object.apiName != null)
                                message.apiName = String(object.apiName);
                            if (object.uiName != null)
                                message.uiName = String(object.uiName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.deprecatedApiNames) {
                                if (!Array.isArray(object.deprecatedApiNames))
                                    throw TypeError(".google.analytics.data.v1beta.MetricMetadata.deprecatedApiNames: array expected");
                                message.deprecatedApiNames = [];
                                for (var i = 0; i < object.deprecatedApiNames.length; ++i)
                                    message.deprecatedApiNames[i] = String(object.deprecatedApiNames[i]);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "METRIC_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_INTEGER":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_FLOAT":
                            case 2:
                                message.type = 2;
                                break;
                            case "TYPE_SECONDS":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_MILLISECONDS":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_MINUTES":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_HOURS":
                            case 7:
                                message.type = 7;
                                break;
                            case "TYPE_STANDARD":
                            case 8:
                                message.type = 8;
                                break;
                            case "TYPE_CURRENCY":
                            case 9:
                                message.type = 9;
                                break;
                            case "TYPE_FEET":
                            case 10:
                                message.type = 10;
                                break;
                            case "TYPE_MILES":
                            case 11:
                                message.type = 11;
                                break;
                            case "TYPE_METERS":
                            case 12:
                                message.type = 12;
                                break;
                            case "TYPE_KILOMETERS":
                            case 13:
                                message.type = 13;
                                break;
                            }
                            if (object.expression != null)
                                message.expression = String(object.expression);
                            if (object.customDefinition != null)
                                message.customDefinition = Boolean(object.customDefinition);
                            if (object.blockedReasons) {
                                if (!Array.isArray(object.blockedReasons))
                                    throw TypeError(".google.analytics.data.v1beta.MetricMetadata.blockedReasons: array expected");
                                message.blockedReasons = [];
                                for (var i = 0; i < object.blockedReasons.length; ++i)
                                    switch (object.blockedReasons[i]) {
                                    default:
                                        if (typeof object.blockedReasons[i] === "number") {
                                            message.blockedReasons[i] = object.blockedReasons[i];
                                            break;
                                        }
                                    case "BLOCKED_REASON_UNSPECIFIED":
                                    case 0:
                                        message.blockedReasons[i] = 0;
                                        break;
                                    case "NO_REVENUE_METRICS":
                                    case 1:
                                        message.blockedReasons[i] = 1;
                                        break;
                                    case "NO_COST_METRICS":
                                    case 2:
                                        message.blockedReasons[i] = 2;
                                        break;
                                    }
                            }
                            if (object.category != null)
                                message.category = String(object.category);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {google.analytics.data.v1beta.MetricMetadata} message MetricMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.deprecatedApiNames = [];
                                object.blockedReasons = [];
                            }
                            if (options.defaults) {
                                object.apiName = "";
                                object.uiName = "";
                                object.description = "";
                                object.type = options.enums === String ? "METRIC_TYPE_UNSPECIFIED" : 0;
                                object.expression = "";
                                object.customDefinition = false;
                                object.category = "";
                            }
                            if (message.apiName != null && message.hasOwnProperty("apiName"))
                                object.apiName = message.apiName;
                            if (message.uiName != null && message.hasOwnProperty("uiName"))
                                object.uiName = message.uiName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.deprecatedApiNames && message.deprecatedApiNames.length) {
                                object.deprecatedApiNames = [];
                                for (var j = 0; j < message.deprecatedApiNames.length; ++j)
                                    object.deprecatedApiNames[j] = message.deprecatedApiNames[j];
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.analytics.data.v1beta.MetricType[message.type] === undefined ? message.type : $root.google.analytics.data.v1beta.MetricType[message.type] : message.type;
                            if (message.expression != null && message.hasOwnProperty("expression"))
                                object.expression = message.expression;
                            if (message.customDefinition != null && message.hasOwnProperty("customDefinition"))
                                object.customDefinition = message.customDefinition;
                            if (message.blockedReasons && message.blockedReasons.length) {
                                object.blockedReasons = [];
                                for (var j = 0; j < message.blockedReasons.length; ++j)
                                    object.blockedReasons[j] = options.enums === String ? $root.google.analytics.data.v1beta.MetricMetadata.BlockedReason[message.blockedReasons[j]] === undefined ? message.blockedReasons[j] : $root.google.analytics.data.v1beta.MetricMetadata.BlockedReason[message.blockedReasons[j]] : message.blockedReasons[j];
                            }
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = message.category;
                            return object;
                        };
    
                        /**
                         * Converts this MetricMetadata to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricMetadata
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.MetricMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.MetricMetadata";
                        };
    
                        /**
                         * BlockedReason enum.
                         * @name google.analytics.data.v1beta.MetricMetadata.BlockedReason
                         * @enum {number}
                         * @property {number} BLOCKED_REASON_UNSPECIFIED=0 BLOCKED_REASON_UNSPECIFIED value
                         * @property {number} NO_REVENUE_METRICS=1 NO_REVENUE_METRICS value
                         * @property {number} NO_COST_METRICS=2 NO_COST_METRICS value
                         */
                        MetricMetadata.BlockedReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BLOCKED_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_REVENUE_METRICS"] = 1;
                            values[valuesById[2] = "NO_COST_METRICS"] = 2;
                            return values;
                        })();
    
                        return MetricMetadata;
                    })();
    
                    v1beta.DimensionCompatibility = (function() {
    
                        /**
                         * Properties of a DimensionCompatibility.
                         * @memberof google.analytics.data.v1beta
                         * @interface IDimensionCompatibility
                         * @property {google.analytics.data.v1beta.IDimensionMetadata|null} [dimensionMetadata] DimensionCompatibility dimensionMetadata
                         * @property {google.analytics.data.v1beta.Compatibility|null} [compatibility] DimensionCompatibility compatibility
                         */
    
                        /**
                         * Constructs a new DimensionCompatibility.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a DimensionCompatibility.
                         * @implements IDimensionCompatibility
                         * @constructor
                         * @param {google.analytics.data.v1beta.IDimensionCompatibility=} [properties] Properties to set
                         */
                        function DimensionCompatibility(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DimensionCompatibility dimensionMetadata.
                         * @member {google.analytics.data.v1beta.IDimensionMetadata|null|undefined} dimensionMetadata
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @instance
                         */
                        DimensionCompatibility.prototype.dimensionMetadata = null;
    
                        /**
                         * DimensionCompatibility compatibility.
                         * @member {google.analytics.data.v1beta.Compatibility|null|undefined} compatibility
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @instance
                         */
                        DimensionCompatibility.prototype.compatibility = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DimensionCompatibility _dimensionMetadata.
                         * @member {"dimensionMetadata"|undefined} _dimensionMetadata
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @instance
                         */
                        Object.defineProperty(DimensionCompatibility.prototype, "_dimensionMetadata", {
                            get: $util.oneOfGetter($oneOfFields = ["dimensionMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DimensionCompatibility _compatibility.
                         * @member {"compatibility"|undefined} _compatibility
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @instance
                         */
                        Object.defineProperty(DimensionCompatibility.prototype, "_compatibility", {
                            get: $util.oneOfGetter($oneOfFields = ["compatibility"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DimensionCompatibility instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionCompatibility=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.DimensionCompatibility} DimensionCompatibility instance
                         */
                        DimensionCompatibility.create = function create(properties) {
                            return new DimensionCompatibility(properties);
                        };
    
                        /**
                         * Encodes the specified DimensionCompatibility message. Does not implicitly {@link google.analytics.data.v1beta.DimensionCompatibility.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionCompatibility} message DimensionCompatibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionCompatibility.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dimensionMetadata != null && Object.hasOwnProperty.call(message, "dimensionMetadata"))
                                $root.google.analytics.data.v1beta.DimensionMetadata.encode(message.dimensionMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.compatibility != null && Object.hasOwnProperty.call(message, "compatibility"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.compatibility);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DimensionCompatibility message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.DimensionCompatibility.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IDimensionCompatibility} message DimensionCompatibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DimensionCompatibility.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DimensionCompatibility message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.DimensionCompatibility} DimensionCompatibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionCompatibility.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.DimensionCompatibility();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dimensionMetadata = $root.google.analytics.data.v1beta.DimensionMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.compatibility = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DimensionCompatibility message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.DimensionCompatibility} DimensionCompatibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DimensionCompatibility.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DimensionCompatibility message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DimensionCompatibility.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.dimensionMetadata != null && message.hasOwnProperty("dimensionMetadata")) {
                                properties._dimensionMetadata = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.DimensionMetadata.verify(message.dimensionMetadata);
                                    if (error)
                                        return "dimensionMetadata." + error;
                                }
                            }
                            if (message.compatibility != null && message.hasOwnProperty("compatibility")) {
                                properties._compatibility = 1;
                                switch (message.compatibility) {
                                default:
                                    return "compatibility: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DimensionCompatibility message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.DimensionCompatibility} DimensionCompatibility
                         */
                        DimensionCompatibility.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.DimensionCompatibility)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.DimensionCompatibility();
                            if (object.dimensionMetadata != null) {
                                if (typeof object.dimensionMetadata !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.DimensionCompatibility.dimensionMetadata: object expected");
                                message.dimensionMetadata = $root.google.analytics.data.v1beta.DimensionMetadata.fromObject(object.dimensionMetadata);
                            }
                            switch (object.compatibility) {
                            default:
                                if (typeof object.compatibility === "number") {
                                    message.compatibility = object.compatibility;
                                    break;
                                }
                                break;
                            case "COMPATIBILITY_UNSPECIFIED":
                            case 0:
                                message.compatibility = 0;
                                break;
                            case "COMPATIBLE":
                            case 1:
                                message.compatibility = 1;
                                break;
                            case "INCOMPATIBLE":
                            case 2:
                                message.compatibility = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DimensionCompatibility message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.DimensionCompatibility} message DimensionCompatibility
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DimensionCompatibility.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.dimensionMetadata != null && message.hasOwnProperty("dimensionMetadata")) {
                                object.dimensionMetadata = $root.google.analytics.data.v1beta.DimensionMetadata.toObject(message.dimensionMetadata, options);
                                if (options.oneofs)
                                    object._dimensionMetadata = "dimensionMetadata";
                            }
                            if (message.compatibility != null && message.hasOwnProperty("compatibility")) {
                                object.compatibility = options.enums === String ? $root.google.analytics.data.v1beta.Compatibility[message.compatibility] === undefined ? message.compatibility : $root.google.analytics.data.v1beta.Compatibility[message.compatibility] : message.compatibility;
                                if (options.oneofs)
                                    object._compatibility = "compatibility";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DimensionCompatibility to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DimensionCompatibility.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DimensionCompatibility
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.DimensionCompatibility
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DimensionCompatibility.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.DimensionCompatibility";
                        };
    
                        return DimensionCompatibility;
                    })();
    
                    v1beta.MetricCompatibility = (function() {
    
                        /**
                         * Properties of a MetricCompatibility.
                         * @memberof google.analytics.data.v1beta
                         * @interface IMetricCompatibility
                         * @property {google.analytics.data.v1beta.IMetricMetadata|null} [metricMetadata] MetricCompatibility metricMetadata
                         * @property {google.analytics.data.v1beta.Compatibility|null} [compatibility] MetricCompatibility compatibility
                         */
    
                        /**
                         * Constructs a new MetricCompatibility.
                         * @memberof google.analytics.data.v1beta
                         * @classdesc Represents a MetricCompatibility.
                         * @implements IMetricCompatibility
                         * @constructor
                         * @param {google.analytics.data.v1beta.IMetricCompatibility=} [properties] Properties to set
                         */
                        function MetricCompatibility(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetricCompatibility metricMetadata.
                         * @member {google.analytics.data.v1beta.IMetricMetadata|null|undefined} metricMetadata
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @instance
                         */
                        MetricCompatibility.prototype.metricMetadata = null;
    
                        /**
                         * MetricCompatibility compatibility.
                         * @member {google.analytics.data.v1beta.Compatibility|null|undefined} compatibility
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @instance
                         */
                        MetricCompatibility.prototype.compatibility = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MetricCompatibility _metricMetadata.
                         * @member {"metricMetadata"|undefined} _metricMetadata
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @instance
                         */
                        Object.defineProperty(MetricCompatibility.prototype, "_metricMetadata", {
                            get: $util.oneOfGetter($oneOfFields = ["metricMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * MetricCompatibility _compatibility.
                         * @member {"compatibility"|undefined} _compatibility
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @instance
                         */
                        Object.defineProperty(MetricCompatibility.prototype, "_compatibility", {
                            get: $util.oneOfGetter($oneOfFields = ["compatibility"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MetricCompatibility instance using the specified properties.
                         * @function create
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricCompatibility=} [properties] Properties to set
                         * @returns {google.analytics.data.v1beta.MetricCompatibility} MetricCompatibility instance
                         */
                        MetricCompatibility.create = function create(properties) {
                            return new MetricCompatibility(properties);
                        };
    
                        /**
                         * Encodes the specified MetricCompatibility message. Does not implicitly {@link google.analytics.data.v1beta.MetricCompatibility.verify|verify} messages.
                         * @function encode
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricCompatibility} message MetricCompatibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricCompatibility.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metricMetadata != null && Object.hasOwnProperty.call(message, "metricMetadata"))
                                $root.google.analytics.data.v1beta.MetricMetadata.encode(message.metricMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.compatibility != null && Object.hasOwnProperty.call(message, "compatibility"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.compatibility);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetricCompatibility message, length delimited. Does not implicitly {@link google.analytics.data.v1beta.MetricCompatibility.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.IMetricCompatibility} message MetricCompatibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetricCompatibility.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetricCompatibility message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.analytics.data.v1beta.MetricCompatibility} MetricCompatibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricCompatibility.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.analytics.data.v1beta.MetricCompatibility();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.metricMetadata = $root.google.analytics.data.v1beta.MetricMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.compatibility = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetricCompatibility message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.analytics.data.v1beta.MetricCompatibility} MetricCompatibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetricCompatibility.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetricCompatibility message.
                         * @function verify
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetricCompatibility.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.metricMetadata != null && message.hasOwnProperty("metricMetadata")) {
                                properties._metricMetadata = 1;
                                {
                                    var error = $root.google.analytics.data.v1beta.MetricMetadata.verify(message.metricMetadata);
                                    if (error)
                                        return "metricMetadata." + error;
                                }
                            }
                            if (message.compatibility != null && message.hasOwnProperty("compatibility")) {
                                properties._compatibility = 1;
                                switch (message.compatibility) {
                                default:
                                    return "compatibility: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MetricCompatibility message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.analytics.data.v1beta.MetricCompatibility} MetricCompatibility
                         */
                        MetricCompatibility.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.analytics.data.v1beta.MetricCompatibility)
                                return object;
                            var message = new $root.google.analytics.data.v1beta.MetricCompatibility();
                            if (object.metricMetadata != null) {
                                if (typeof object.metricMetadata !== "object")
                                    throw TypeError(".google.analytics.data.v1beta.MetricCompatibility.metricMetadata: object expected");
                                message.metricMetadata = $root.google.analytics.data.v1beta.MetricMetadata.fromObject(object.metricMetadata);
                            }
                            switch (object.compatibility) {
                            default:
                                if (typeof object.compatibility === "number") {
                                    message.compatibility = object.compatibility;
                                    break;
                                }
                                break;
                            case "COMPATIBILITY_UNSPECIFIED":
                            case 0:
                                message.compatibility = 0;
                                break;
                            case "COMPATIBLE":
                            case 1:
                                message.compatibility = 1;
                                break;
                            case "INCOMPATIBLE":
                            case 2:
                                message.compatibility = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetricCompatibility message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {google.analytics.data.v1beta.MetricCompatibility} message MetricCompatibility
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetricCompatibility.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.metricMetadata != null && message.hasOwnProperty("metricMetadata")) {
                                object.metricMetadata = $root.google.analytics.data.v1beta.MetricMetadata.toObject(message.metricMetadata, options);
                                if (options.oneofs)
                                    object._metricMetadata = "metricMetadata";
                            }
                            if (message.compatibility != null && message.hasOwnProperty("compatibility")) {
                                object.compatibility = options.enums === String ? $root.google.analytics.data.v1beta.Compatibility[message.compatibility] === undefined ? message.compatibility : $root.google.analytics.data.v1beta.Compatibility[message.compatibility] : message.compatibility;
                                if (options.oneofs)
                                    object._compatibility = "compatibility";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MetricCompatibility to JSON.
                         * @function toJSON
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetricCompatibility.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetricCompatibility
                         * @function getTypeUrl
                         * @memberof google.analytics.data.v1beta.MetricCompatibility
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetricCompatibility.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.analytics.data.v1beta.MetricCompatibility";
                        };
    
                        return MetricCompatibility;
                    })();
    
                    /**
                     * MetricAggregation enum.
                     * @name google.analytics.data.v1beta.MetricAggregation
                     * @enum {number}
                     * @property {number} METRIC_AGGREGATION_UNSPECIFIED=0 METRIC_AGGREGATION_UNSPECIFIED value
                     * @property {number} TOTAL=1 TOTAL value
                     * @property {number} MINIMUM=5 MINIMUM value
                     * @property {number} MAXIMUM=6 MAXIMUM value
                     * @property {number} COUNT=4 COUNT value
                     */
                    v1beta.MetricAggregation = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "METRIC_AGGREGATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TOTAL"] = 1;
                        values[valuesById[5] = "MINIMUM"] = 5;
                        values[valuesById[6] = "MAXIMUM"] = 6;
                        values[valuesById[4] = "COUNT"] = 4;
                        return values;
                    })();
    
                    /**
                     * MetricType enum.
                     * @name google.analytics.data.v1beta.MetricType
                     * @enum {number}
                     * @property {number} METRIC_TYPE_UNSPECIFIED=0 METRIC_TYPE_UNSPECIFIED value
                     * @property {number} TYPE_INTEGER=1 TYPE_INTEGER value
                     * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                     * @property {number} TYPE_SECONDS=4 TYPE_SECONDS value
                     * @property {number} TYPE_MILLISECONDS=5 TYPE_MILLISECONDS value
                     * @property {number} TYPE_MINUTES=6 TYPE_MINUTES value
                     * @property {number} TYPE_HOURS=7 TYPE_HOURS value
                     * @property {number} TYPE_STANDARD=8 TYPE_STANDARD value
                     * @property {number} TYPE_CURRENCY=9 TYPE_CURRENCY value
                     * @property {number} TYPE_FEET=10 TYPE_FEET value
                     * @property {number} TYPE_MILES=11 TYPE_MILES value
                     * @property {number} TYPE_METERS=12 TYPE_METERS value
                     * @property {number} TYPE_KILOMETERS=13 TYPE_KILOMETERS value
                     */
                    v1beta.MetricType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "METRIC_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TYPE_INTEGER"] = 1;
                        values[valuesById[2] = "TYPE_FLOAT"] = 2;
                        values[valuesById[4] = "TYPE_SECONDS"] = 4;
                        values[valuesById[5] = "TYPE_MILLISECONDS"] = 5;
                        values[valuesById[6] = "TYPE_MINUTES"] = 6;
                        values[valuesById[7] = "TYPE_HOURS"] = 7;
                        values[valuesById[8] = "TYPE_STANDARD"] = 8;
                        values[valuesById[9] = "TYPE_CURRENCY"] = 9;
                        values[valuesById[10] = "TYPE_FEET"] = 10;
                        values[valuesById[11] = "TYPE_MILES"] = 11;
                        values[valuesById[12] = "TYPE_METERS"] = 12;
                        values[valuesById[13] = "TYPE_KILOMETERS"] = 13;
                        return values;
                    })();
    
                    /**
                     * RestrictedMetricType enum.
                     * @name google.analytics.data.v1beta.RestrictedMetricType
                     * @enum {number}
                     * @property {number} RESTRICTED_METRIC_TYPE_UNSPECIFIED=0 RESTRICTED_METRIC_TYPE_UNSPECIFIED value
                     * @property {number} COST_DATA=1 COST_DATA value
                     * @property {number} REVENUE_DATA=2 REVENUE_DATA value
                     */
                    v1beta.RestrictedMetricType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "RESTRICTED_METRIC_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "COST_DATA"] = 1;
                        values[valuesById[2] = "REVENUE_DATA"] = 2;
                        return values;
                    })();
    
                    /**
                     * Compatibility enum.
                     * @name google.analytics.data.v1beta.Compatibility
                     * @enum {number}
                     * @property {number} COMPATIBILITY_UNSPECIFIED=0 COMPATIBILITY_UNSPECIFIED value
                     * @property {number} COMPATIBLE=1 COMPATIBLE value
                     * @property {number} INCOMPATIBLE=2 INCOMPATIBLE value
                     */
                    v1beta.Compatibility = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMPATIBILITY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "COMPATIBLE"] = 1;
                        values[valuesById[2] = "INCOMPATIBLE"] = 2;
                        return values;
                    })();
    
                    return v1beta;
                })();
    
                return data;
            })();
    
            return analytics;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        return google;
    })();

    return $root;
});
